pub const __builtin_bswap16 = @import("std").zig.c_builtins.__builtin_bswap16;
pub const __builtin_bswap32 = @import("std").zig.c_builtins.__builtin_bswap32;
pub const __builtin_bswap64 = @import("std").zig.c_builtins.__builtin_bswap64;
pub const __builtin_signbit = @import("std").zig.c_builtins.__builtin_signbit;
pub const __builtin_signbitf = @import("std").zig.c_builtins.__builtin_signbitf;
pub const __builtin_popcount = @import("std").zig.c_builtins.__builtin_popcount;
pub const __builtin_ctz = @import("std").zig.c_builtins.__builtin_ctz;
pub const __builtin_clz = @import("std").zig.c_builtins.__builtin_clz;
pub const __builtin_sqrt = @import("std").zig.c_builtins.__builtin_sqrt;
pub const __builtin_sqrtf = @import("std").zig.c_builtins.__builtin_sqrtf;
pub const __builtin_sin = @import("std").zig.c_builtins.__builtin_sin;
pub const __builtin_sinf = @import("std").zig.c_builtins.__builtin_sinf;
pub const __builtin_cos = @import("std").zig.c_builtins.__builtin_cos;
pub const __builtin_cosf = @import("std").zig.c_builtins.__builtin_cosf;
pub const __builtin_exp = @import("std").zig.c_builtins.__builtin_exp;
pub const __builtin_expf = @import("std").zig.c_builtins.__builtin_expf;
pub const __builtin_exp2 = @import("std").zig.c_builtins.__builtin_exp2;
pub const __builtin_exp2f = @import("std").zig.c_builtins.__builtin_exp2f;
pub const __builtin_log = @import("std").zig.c_builtins.__builtin_log;
pub const __builtin_logf = @import("std").zig.c_builtins.__builtin_logf;
pub const __builtin_log2 = @import("std").zig.c_builtins.__builtin_log2;
pub const __builtin_log2f = @import("std").zig.c_builtins.__builtin_log2f;
pub const __builtin_log10 = @import("std").zig.c_builtins.__builtin_log10;
pub const __builtin_log10f = @import("std").zig.c_builtins.__builtin_log10f;
pub const __builtin_abs = @import("std").zig.c_builtins.__builtin_abs;
pub const __builtin_labs = @import("std").zig.c_builtins.__builtin_labs;
pub const __builtin_llabs = @import("std").zig.c_builtins.__builtin_llabs;
pub const __builtin_fabs = @import("std").zig.c_builtins.__builtin_fabs;
pub const __builtin_fabsf = @import("std").zig.c_builtins.__builtin_fabsf;
pub const __builtin_floor = @import("std").zig.c_builtins.__builtin_floor;
pub const __builtin_floorf = @import("std").zig.c_builtins.__builtin_floorf;
pub const __builtin_ceil = @import("std").zig.c_builtins.__builtin_ceil;
pub const __builtin_ceilf = @import("std").zig.c_builtins.__builtin_ceilf;
pub const __builtin_trunc = @import("std").zig.c_builtins.__builtin_trunc;
pub const __builtin_truncf = @import("std").zig.c_builtins.__builtin_truncf;
pub const __builtin_round = @import("std").zig.c_builtins.__builtin_round;
pub const __builtin_roundf = @import("std").zig.c_builtins.__builtin_roundf;
pub const __builtin_strlen = @import("std").zig.c_builtins.__builtin_strlen;
pub const __builtin_strcmp = @import("std").zig.c_builtins.__builtin_strcmp;
pub const __builtin_object_size = @import("std").zig.c_builtins.__builtin_object_size;
pub const __builtin___memset_chk = @import("std").zig.c_builtins.__builtin___memset_chk;
pub const __builtin_memset = @import("std").zig.c_builtins.__builtin_memset;
pub const __builtin___memcpy_chk = @import("std").zig.c_builtins.__builtin___memcpy_chk;
pub const __builtin_memcpy = @import("std").zig.c_builtins.__builtin_memcpy;
pub const __builtin_expect = @import("std").zig.c_builtins.__builtin_expect;
pub const __builtin_nanf = @import("std").zig.c_builtins.__builtin_nanf;
pub const __builtin_huge_valf = @import("std").zig.c_builtins.__builtin_huge_valf;
pub const __builtin_inff = @import("std").zig.c_builtins.__builtin_inff;
pub const __builtin_isnan = @import("std").zig.c_builtins.__builtin_isnan;
pub const __builtin_isinf = @import("std").zig.c_builtins.__builtin_isinf;
pub const __builtin_isinf_sign = @import("std").zig.c_builtins.__builtin_isinf_sign;
pub const __has_builtin = @import("std").zig.c_builtins.__has_builtin;
pub const __builtin_assume = @import("std").zig.c_builtins.__builtin_assume;
pub const __builtin_unreachable = @import("std").zig.c_builtins.__builtin_unreachable;
pub const __builtin_constant_p = @import("std").zig.c_builtins.__builtin_constant_p;
pub const __builtin_mul_overflow = @import("std").zig.c_builtins.__builtin_mul_overflow;
pub const ptrdiff_t = c_long;
pub const wchar_t = c_int;
pub const max_align_t = c_longdouble;
pub const int_least8_t = i8;
pub const int_least16_t = i16;
pub const int_least32_t = i32;
pub const int_least64_t = i64;
pub const uint_least8_t = u8;
pub const uint_least16_t = u16;
pub const uint_least32_t = u32;
pub const uint_least64_t = u64;
pub const int_fast8_t = i8;
pub const int_fast16_t = i16;
pub const int_fast32_t = i32;
pub const int_fast64_t = i64;
pub const uint_fast8_t = u8;
pub const uint_fast16_t = u16;
pub const uint_fast32_t = u32;
pub const uint_fast64_t = u64;
pub const __int8_t = i8;
pub const __uint8_t = u8;
pub const __int16_t = c_short;
pub const __uint16_t = c_ushort;
pub const __int32_t = c_int;
pub const __uint32_t = c_uint;
pub const __int64_t = c_longlong;
pub const __uint64_t = c_ulonglong;
pub const __darwin_intptr_t = c_long;
pub const __darwin_natural_t = c_uint;
pub const __darwin_ct_rune_t = c_int;
pub const __mbstate_t = extern union {
    __mbstate8: [128]u8,
    _mbstateL: c_longlong,
};
pub const __darwin_mbstate_t = __mbstate_t;
pub const __darwin_ptrdiff_t = c_long;
pub const __darwin_size_t = c_ulong;
pub const __builtin_va_list = [*c]u8;
pub const __darwin_va_list = __builtin_va_list;
pub const __darwin_wchar_t = c_int;
pub const __darwin_rune_t = __darwin_wchar_t;
pub const __darwin_wint_t = c_int;
pub const __darwin_clock_t = c_ulong;
pub const __darwin_socklen_t = __uint32_t;
pub const __darwin_ssize_t = c_long;
pub const __darwin_time_t = c_long;
pub const __darwin_blkcnt_t = __int64_t;
pub const __darwin_blksize_t = __int32_t;
pub const __darwin_dev_t = __int32_t;
pub const __darwin_fsblkcnt_t = c_uint;
pub const __darwin_fsfilcnt_t = c_uint;
pub const __darwin_gid_t = __uint32_t;
pub const __darwin_id_t = __uint32_t;
pub const __darwin_ino64_t = __uint64_t;
pub const __darwin_ino_t = __darwin_ino64_t;
pub const __darwin_mach_port_name_t = __darwin_natural_t;
pub const __darwin_mach_port_t = __darwin_mach_port_name_t;
pub const __darwin_mode_t = __uint16_t;
pub const __darwin_off_t = __int64_t;
pub const __darwin_pid_t = __int32_t;
pub const __darwin_sigset_t = __uint32_t;
pub const __darwin_suseconds_t = __int32_t;
pub const __darwin_uid_t = __uint32_t;
pub const __darwin_useconds_t = __uint32_t;
pub const __darwin_uuid_t = [16]u8;
pub const __darwin_uuid_string_t = [37]u8;
pub const struct___darwin_pthread_handler_rec = extern struct {
    __routine: ?*const fn (?*anyopaque) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) void),
    __arg: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __next: [*c]struct___darwin_pthread_handler_rec = @import("std").mem.zeroes([*c]struct___darwin_pthread_handler_rec),
};
pub const struct__opaque_pthread_attr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [56]u8 = @import("std").mem.zeroes([56]u8),
};
pub const struct__opaque_pthread_cond_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [40]u8 = @import("std").mem.zeroes([40]u8),
};
pub const struct__opaque_pthread_condattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_mutex_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [56]u8 = @import("std").mem.zeroes([56]u8),
};
pub const struct__opaque_pthread_mutexattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_once_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_rwlock_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [192]u8 = @import("std").mem.zeroes([192]u8),
};
pub const struct__opaque_pthread_rwlockattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const struct__opaque_pthread_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __cleanup_stack: [*c]struct___darwin_pthread_handler_rec = @import("std").mem.zeroes([*c]struct___darwin_pthread_handler_rec),
    __opaque: [8176]u8 = @import("std").mem.zeroes([8176]u8),
};
pub const __darwin_pthread_attr_t = struct__opaque_pthread_attr_t;
pub const __darwin_pthread_cond_t = struct__opaque_pthread_cond_t;
pub const __darwin_pthread_condattr_t = struct__opaque_pthread_condattr_t;
pub const __darwin_pthread_key_t = c_ulong;
pub const __darwin_pthread_mutex_t = struct__opaque_pthread_mutex_t;
pub const __darwin_pthread_mutexattr_t = struct__opaque_pthread_mutexattr_t;
pub const __darwin_pthread_once_t = struct__opaque_pthread_once_t;
pub const __darwin_pthread_rwlock_t = struct__opaque_pthread_rwlock_t;
pub const __darwin_pthread_rwlockattr_t = struct__opaque_pthread_rwlockattr_t;
pub const __darwin_pthread_t = [*c]struct__opaque_pthread_t;
pub const u_int8_t = u8;
pub const u_int16_t = c_ushort;
pub const u_int32_t = c_uint;
pub const u_int64_t = c_ulonglong;
pub const register_t = i64;
pub const user_addr_t = u_int64_t;
pub const user_size_t = u_int64_t;
pub const user_ssize_t = i64;
pub const user_long_t = i64;
pub const user_ulong_t = u_int64_t;
pub const user_time_t = i64;
pub const user_off_t = i64;
pub const syscall_arg_t = u_int64_t;
pub const intmax_t = c_long;
pub const uintmax_t = c_ulong;
pub const VkBool32 = u32;
pub const VkDeviceAddress = u64;
pub const VkDeviceSize = u64;
pub const VkFlags = u32;
pub const VkSampleMask = u32;
pub const struct_VkBuffer_T = opaque {};
pub const VkBuffer = ?*struct_VkBuffer_T;
pub const struct_VkImage_T = opaque {};
pub const VkImage = ?*struct_VkImage_T;
pub const struct_VkInstance_T = opaque {};
pub const VkInstance = ?*struct_VkInstance_T;
pub const struct_VkPhysicalDevice_T = opaque {};
pub const VkPhysicalDevice = ?*struct_VkPhysicalDevice_T;
pub const struct_VkDevice_T = opaque {};
pub const VkDevice = ?*struct_VkDevice_T;
pub const struct_VkQueue_T = opaque {};
pub const VkQueue = ?*struct_VkQueue_T;
pub const struct_VkSemaphore_T = opaque {};
pub const VkSemaphore = ?*struct_VkSemaphore_T;
pub const struct_VkCommandBuffer_T = opaque {};
pub const VkCommandBuffer = ?*struct_VkCommandBuffer_T;
pub const struct_VkFence_T = opaque {};
pub const VkFence = ?*struct_VkFence_T;
pub const struct_VkDeviceMemory_T = opaque {};
pub const VkDeviceMemory = ?*struct_VkDeviceMemory_T;
pub const struct_VkEvent_T = opaque {};
pub const VkEvent = ?*struct_VkEvent_T;
pub const struct_VkQueryPool_T = opaque {};
pub const VkQueryPool = ?*struct_VkQueryPool_T;
pub const struct_VkBufferView_T = opaque {};
pub const VkBufferView = ?*struct_VkBufferView_T;
pub const struct_VkImageView_T = opaque {};
pub const VkImageView = ?*struct_VkImageView_T;
pub const struct_VkShaderModule_T = opaque {};
pub const VkShaderModule = ?*struct_VkShaderModule_T;
pub const struct_VkPipelineCache_T = opaque {};
pub const VkPipelineCache = ?*struct_VkPipelineCache_T;
pub const struct_VkPipelineLayout_T = opaque {};
pub const VkPipelineLayout = ?*struct_VkPipelineLayout_T;
pub const struct_VkPipeline_T = opaque {};
pub const VkPipeline = ?*struct_VkPipeline_T;
pub const struct_VkRenderPass_T = opaque {};
pub const VkRenderPass = ?*struct_VkRenderPass_T;
pub const struct_VkDescriptorSetLayout_T = opaque {};
pub const VkDescriptorSetLayout = ?*struct_VkDescriptorSetLayout_T;
pub const struct_VkSampler_T = opaque {};
pub const VkSampler = ?*struct_VkSampler_T;
pub const struct_VkDescriptorSet_T = opaque {};
pub const VkDescriptorSet = ?*struct_VkDescriptorSet_T;
pub const struct_VkDescriptorPool_T = opaque {};
pub const VkDescriptorPool = ?*struct_VkDescriptorPool_T;
pub const struct_VkFramebuffer_T = opaque {};
pub const VkFramebuffer = ?*struct_VkFramebuffer_T;
pub const struct_VkCommandPool_T = opaque {};
pub const VkCommandPool = ?*struct_VkCommandPool_T;
pub const VK_SUCCESS: c_int = 0;
pub const VK_NOT_READY: c_int = 1;
pub const VK_TIMEOUT: c_int = 2;
pub const VK_EVENT_SET: c_int = 3;
pub const VK_EVENT_RESET: c_int = 4;
pub const VK_INCOMPLETE: c_int = 5;
pub const VK_ERROR_OUT_OF_HOST_MEMORY: c_int = -1;
pub const VK_ERROR_OUT_OF_DEVICE_MEMORY: c_int = -2;
pub const VK_ERROR_INITIALIZATION_FAILED: c_int = -3;
pub const VK_ERROR_DEVICE_LOST: c_int = -4;
pub const VK_ERROR_MEMORY_MAP_FAILED: c_int = -5;
pub const VK_ERROR_LAYER_NOT_PRESENT: c_int = -6;
pub const VK_ERROR_EXTENSION_NOT_PRESENT: c_int = -7;
pub const VK_ERROR_FEATURE_NOT_PRESENT: c_int = -8;
pub const VK_ERROR_INCOMPATIBLE_DRIVER: c_int = -9;
pub const VK_ERROR_TOO_MANY_OBJECTS: c_int = -10;
pub const VK_ERROR_FORMAT_NOT_SUPPORTED: c_int = -11;
pub const VK_ERROR_FRAGMENTED_POOL: c_int = -12;
pub const VK_ERROR_UNKNOWN: c_int = -13;
pub const VK_ERROR_OUT_OF_POOL_MEMORY: c_int = -1000069000;
pub const VK_ERROR_INVALID_EXTERNAL_HANDLE: c_int = -1000072003;
pub const VK_ERROR_FRAGMENTATION: c_int = -1000161000;
pub const VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS: c_int = -1000257000;
pub const VK_PIPELINE_COMPILE_REQUIRED: c_int = 1000297000;
pub const VK_ERROR_SURFACE_LOST_KHR: c_int = -1000000000;
pub const VK_ERROR_NATIVE_WINDOW_IN_USE_KHR: c_int = -1000000001;
pub const VK_SUBOPTIMAL_KHR: c_int = 1000001003;
pub const VK_ERROR_OUT_OF_DATE_KHR: c_int = -1000001004;
pub const VK_ERROR_INCOMPATIBLE_DISPLAY_KHR: c_int = -1000003001;
pub const VK_ERROR_VALIDATION_FAILED_EXT: c_int = -1000011001;
pub const VK_ERROR_INVALID_SHADER_NV: c_int = -1000012000;
pub const VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR: c_int = -1000023000;
pub const VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR: c_int = -1000023001;
pub const VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR: c_int = -1000023002;
pub const VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR: c_int = -1000023003;
pub const VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR: c_int = -1000023004;
pub const VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR: c_int = -1000023005;
pub const VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT: c_int = -1000158000;
pub const VK_ERROR_NOT_PERMITTED_KHR: c_int = -1000174001;
pub const VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT: c_int = -1000255000;
pub const VK_THREAD_IDLE_KHR: c_int = 1000268000;
pub const VK_THREAD_DONE_KHR: c_int = 1000268001;
pub const VK_OPERATION_DEFERRED_KHR: c_int = 1000268002;
pub const VK_OPERATION_NOT_DEFERRED_KHR: c_int = 1000268003;
pub const VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR: c_int = -1000299000;
pub const VK_ERROR_COMPRESSION_EXHAUSTED_EXT: c_int = -1000338000;
pub const VK_INCOMPATIBLE_SHADER_BINARY_EXT: c_int = 1000482000;
pub const VK_ERROR_OUT_OF_POOL_MEMORY_KHR: c_int = -1000069000;
pub const VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR: c_int = -1000072003;
pub const VK_ERROR_FRAGMENTATION_EXT: c_int = -1000161000;
pub const VK_ERROR_NOT_PERMITTED_EXT: c_int = -1000174001;
pub const VK_ERROR_INVALID_DEVICE_ADDRESS_EXT: c_int = -1000257000;
pub const VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR: c_int = -1000257000;
pub const VK_PIPELINE_COMPILE_REQUIRED_EXT: c_int = 1000297000;
pub const VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT: c_int = 1000297000;
pub const VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT: c_int = 1000482000;
pub const VK_RESULT_MAX_ENUM: c_int = 2147483647;
pub const enum_VkResult = c_int;
pub const VkResult = enum_VkResult;
pub const VK_STRUCTURE_TYPE_APPLICATION_INFO: c_int = 0;
pub const VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO: c_int = 1;
pub const VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO: c_int = 2;
pub const VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO: c_int = 3;
pub const VK_STRUCTURE_TYPE_SUBMIT_INFO: c_int = 4;
pub const VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO: c_int = 5;
pub const VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE: c_int = 6;
pub const VK_STRUCTURE_TYPE_BIND_SPARSE_INFO: c_int = 7;
pub const VK_STRUCTURE_TYPE_FENCE_CREATE_INFO: c_int = 8;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO: c_int = 9;
pub const VK_STRUCTURE_TYPE_EVENT_CREATE_INFO: c_int = 10;
pub const VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO: c_int = 11;
pub const VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO: c_int = 12;
pub const VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO: c_int = 13;
pub const VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO: c_int = 14;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO: c_int = 15;
pub const VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO: c_int = 16;
pub const VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO: c_int = 17;
pub const VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO: c_int = 18;
pub const VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO: c_int = 19;
pub const VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO: c_int = 20;
pub const VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO: c_int = 21;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO: c_int = 22;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO: c_int = 23;
pub const VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO: c_int = 24;
pub const VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO: c_int = 25;
pub const VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO: c_int = 26;
pub const VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO: c_int = 27;
pub const VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO: c_int = 28;
pub const VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO: c_int = 29;
pub const VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO: c_int = 30;
pub const VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO: c_int = 31;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO: c_int = 32;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO: c_int = 33;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO: c_int = 34;
pub const VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET: c_int = 35;
pub const VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET: c_int = 36;
pub const VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO: c_int = 37;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO: c_int = 38;
pub const VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO: c_int = 39;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO: c_int = 40;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO: c_int = 41;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO: c_int = 42;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO: c_int = 43;
pub const VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER: c_int = 44;
pub const VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER: c_int = 45;
pub const VK_STRUCTURE_TYPE_MEMORY_BARRIER: c_int = 46;
pub const VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO: c_int = 47;
pub const VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO: c_int = 48;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES: c_int = 1000094000;
pub const VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO: c_int = 1000157000;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO: c_int = 1000157001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES: c_int = 1000083000;
pub const VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS: c_int = 1000127000;
pub const VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO: c_int = 1000127001;
pub const VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO: c_int = 1000060000;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO: c_int = 1000060003;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO: c_int = 1000060004;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO: c_int = 1000060005;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO: c_int = 1000060006;
pub const VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO: c_int = 1000060013;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO: c_int = 1000060014;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES: c_int = 1000070000;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO: c_int = 1000070001;
pub const VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2: c_int = 1000146000;
pub const VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2: c_int = 1000146001;
pub const VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2: c_int = 1000146002;
pub const VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2: c_int = 1000146003;
pub const VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2: c_int = 1000146004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2: c_int = 1000059000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2: c_int = 1000059001;
pub const VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2: c_int = 1000059002;
pub const VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2: c_int = 1000059003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2: c_int = 1000059004;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2: c_int = 1000059005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2: c_int = 1000059006;
pub const VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2: c_int = 1000059007;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2: c_int = 1000059008;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES: c_int = 1000117000;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO: c_int = 1000117001;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO: c_int = 1000117002;
pub const VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO: c_int = 1000117003;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO: c_int = 1000053000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES: c_int = 1000053001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES: c_int = 1000053002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES: c_int = 1000120000;
pub const VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO: c_int = 1000145000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES: c_int = 1000145001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES: c_int = 1000145002;
pub const VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2: c_int = 1000145003;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO: c_int = 1000156000;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO: c_int = 1000156001;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO: c_int = 1000156002;
pub const VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO: c_int = 1000156003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES: c_int = 1000156004;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES: c_int = 1000156005;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO: c_int = 1000085000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO: c_int = 1000071000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES: c_int = 1000071001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO: c_int = 1000071002;
pub const VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES: c_int = 1000071003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES: c_int = 1000071004;
pub const VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO: c_int = 1000072000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO: c_int = 1000072001;
pub const VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO: c_int = 1000072002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO: c_int = 1000112000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES: c_int = 1000112001;
pub const VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO: c_int = 1000113000;
pub const VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO: c_int = 1000077000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO: c_int = 1000076000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES: c_int = 1000076001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES: c_int = 1000168000;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT: c_int = 1000168001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES: c_int = 1000063000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES: c_int = 49;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES: c_int = 50;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES: c_int = 51;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES: c_int = 52;
pub const VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO: c_int = 1000147000;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2: c_int = 1000109000;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2: c_int = 1000109001;
pub const VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2: c_int = 1000109002;
pub const VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2: c_int = 1000109003;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2: c_int = 1000109004;
pub const VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO: c_int = 1000109005;
pub const VK_STRUCTURE_TYPE_SUBPASS_END_INFO: c_int = 1000109006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES: c_int = 1000177000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES: c_int = 1000196000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES: c_int = 1000180000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES: c_int = 1000082000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES: c_int = 1000197000;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO: c_int = 1000161000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES: c_int = 1000161001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES: c_int = 1000161002;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO: c_int = 1000161003;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT: c_int = 1000161004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES: c_int = 1000199000;
pub const VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE: c_int = 1000199001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES: c_int = 1000221000;
pub const VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO: c_int = 1000246000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES: c_int = 1000130000;
pub const VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO: c_int = 1000130001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES: c_int = 1000211000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES: c_int = 1000108000;
pub const VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO: c_int = 1000108001;
pub const VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO: c_int = 1000108002;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO: c_int = 1000108003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES: c_int = 1000253000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES: c_int = 1000175000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES: c_int = 1000241000;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT: c_int = 1000241001;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT: c_int = 1000241002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES: c_int = 1000261000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES: c_int = 1000207000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES: c_int = 1000207001;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO: c_int = 1000207002;
pub const VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO: c_int = 1000207003;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO: c_int = 1000207004;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO: c_int = 1000207005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES: c_int = 1000257000;
pub const VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO: c_int = 1000244001;
pub const VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO: c_int = 1000257002;
pub const VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO: c_int = 1000257003;
pub const VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO: c_int = 1000257004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES: c_int = 53;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES: c_int = 54;
pub const VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO: c_int = 1000192000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES: c_int = 1000215000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES: c_int = 1000245000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES: c_int = 1000276000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES: c_int = 1000295000;
pub const VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO: c_int = 1000295001;
pub const VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO: c_int = 1000295002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES: c_int = 1000297000;
pub const VK_STRUCTURE_TYPE_MEMORY_BARRIER_2: c_int = 1000314000;
pub const VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2: c_int = 1000314001;
pub const VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2: c_int = 1000314002;
pub const VK_STRUCTURE_TYPE_DEPENDENCY_INFO: c_int = 1000314003;
pub const VK_STRUCTURE_TYPE_SUBMIT_INFO_2: c_int = 1000314004;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO: c_int = 1000314005;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO: c_int = 1000314006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES: c_int = 1000314007;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES: c_int = 1000325000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES: c_int = 1000335000;
pub const VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2: c_int = 1000337000;
pub const VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2: c_int = 1000337001;
pub const VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2: c_int = 1000337002;
pub const VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2: c_int = 1000337003;
pub const VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2: c_int = 1000337004;
pub const VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2: c_int = 1000337005;
pub const VK_STRUCTURE_TYPE_BUFFER_COPY_2: c_int = 1000337006;
pub const VK_STRUCTURE_TYPE_IMAGE_COPY_2: c_int = 1000337007;
pub const VK_STRUCTURE_TYPE_IMAGE_BLIT_2: c_int = 1000337008;
pub const VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2: c_int = 1000337009;
pub const VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2: c_int = 1000337010;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES: c_int = 1000225000;
pub const VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO: c_int = 1000225001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES: c_int = 1000225002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES: c_int = 1000138000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES: c_int = 1000138001;
pub const VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK: c_int = 1000138002;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO: c_int = 1000138003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES: c_int = 1000066000;
pub const VK_STRUCTURE_TYPE_RENDERING_INFO: c_int = 1000044000;
pub const VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO: c_int = 1000044001;
pub const VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO: c_int = 1000044002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES: c_int = 1000044003;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO: c_int = 1000044004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES: c_int = 1000280000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES: c_int = 1000280001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES: c_int = 1000281001;
pub const VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3: c_int = 1000360000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES: c_int = 1000413000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES: c_int = 1000413001;
pub const VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS: c_int = 1000413002;
pub const VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS: c_int = 1000413003;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR: c_int = 1000001000;
pub const VK_STRUCTURE_TYPE_PRESENT_INFO_KHR: c_int = 1000001001;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR: c_int = 1000060007;
pub const VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR: c_int = 1000060008;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR: c_int = 1000060009;
pub const VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR: c_int = 1000060010;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR: c_int = 1000060011;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR: c_int = 1000060012;
pub const VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR: c_int = 1000002000;
pub const VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR: c_int = 1000002001;
pub const VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR: c_int = 1000003000;
pub const VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR: c_int = 1000004000;
pub const VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR: c_int = 1000005000;
pub const VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR: c_int = 1000006000;
pub const VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR: c_int = 1000008000;
pub const VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR: c_int = 1000009000;
pub const VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT: c_int = 1000011000;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD: c_int = 1000018000;
pub const VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT: c_int = 1000022000;
pub const VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT: c_int = 1000022001;
pub const VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT: c_int = 1000022002;
pub const VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR: c_int = 1000023000;
pub const VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR: c_int = 1000023001;
pub const VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR: c_int = 1000023002;
pub const VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR: c_int = 1000023003;
pub const VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR: c_int = 1000023004;
pub const VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR: c_int = 1000023005;
pub const VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR: c_int = 1000023006;
pub const VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR: c_int = 1000023007;
pub const VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR: c_int = 1000023008;
pub const VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR: c_int = 1000023009;
pub const VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR: c_int = 1000023010;
pub const VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR: c_int = 1000023011;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR: c_int = 1000023012;
pub const VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR: c_int = 1000023013;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR: c_int = 1000023014;
pub const VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR: c_int = 1000023015;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR: c_int = 1000023016;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR: c_int = 1000024000;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR: c_int = 1000024001;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR: c_int = 1000024002;
pub const VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV: c_int = 1000026000;
pub const VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV: c_int = 1000026001;
pub const VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV: c_int = 1000026002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT: c_int = 1000028000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT: c_int = 1000028001;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT: c_int = 1000028002;
pub const VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX: c_int = 1000029000;
pub const VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX: c_int = 1000029001;
pub const VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX: c_int = 1000029002;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX: c_int = 1000030000;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX: c_int = 1000030001;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR: c_int = 1000038000;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR: c_int = 1000038001;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR: c_int = 1000038002;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR: c_int = 1000038003;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR: c_int = 1000038004;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR: c_int = 1000038005;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR: c_int = 1000038006;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR: c_int = 1000038007;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR: c_int = 1000038008;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR: c_int = 1000038009;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR: c_int = 1000038010;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR: c_int = 1000038011;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR: c_int = 1000038012;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR: c_int = 1000038013;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR: c_int = 1000039000;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR: c_int = 1000039001;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR: c_int = 1000039002;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR: c_int = 1000039003;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR: c_int = 1000039004;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR: c_int = 1000039005;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR: c_int = 1000039006;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR: c_int = 1000039007;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR: c_int = 1000039009;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR: c_int = 1000039010;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR: c_int = 1000039011;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR: c_int = 1000039012;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR: c_int = 1000039013;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR: c_int = 1000039014;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR: c_int = 1000040000;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR: c_int = 1000040001;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR: c_int = 1000040003;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR: c_int = 1000040004;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR: c_int = 1000040005;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR: c_int = 1000040006;
pub const VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD: c_int = 1000041000;
pub const VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR: c_int = 1000044006;
pub const VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT: c_int = 1000044007;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD: c_int = 1000044008;
pub const VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX: c_int = 1000044009;
pub const VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP: c_int = 1000049000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV: c_int = 1000050000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV: c_int = 1000056000;
pub const VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV: c_int = 1000056001;
pub const VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV: c_int = 1000057000;
pub const VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV: c_int = 1000057001;
pub const VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV: c_int = 1000058000;
pub const VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT: c_int = 1000061000;
pub const VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN: c_int = 1000062000;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT: c_int = 1000067000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT: c_int = 1000067001;
pub const VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT: c_int = 1000068000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT: c_int = 1000068001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT: c_int = 1000068002;
pub const VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR: c_int = 1000073000;
pub const VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR: c_int = 1000073001;
pub const VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR: c_int = 1000073002;
pub const VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR: c_int = 1000073003;
pub const VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR: c_int = 1000074000;
pub const VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR: c_int = 1000074001;
pub const VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR: c_int = 1000074002;
pub const VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR: c_int = 1000075000;
pub const VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: c_int = 1000078000;
pub const VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: c_int = 1000078001;
pub const VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR: c_int = 1000078002;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR: c_int = 1000078003;
pub const VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR: c_int = 1000079000;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR: c_int = 1000079001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR: c_int = 1000080000;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT: c_int = 1000081000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT: c_int = 1000081001;
pub const VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT: c_int = 1000081002;
pub const VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR: c_int = 1000084000;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV: c_int = 1000087000;
pub const VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT: c_int = 1000090000;
pub const VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT: c_int = 1000091000;
pub const VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT: c_int = 1000091001;
pub const VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT: c_int = 1000091002;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT: c_int = 1000091003;
pub const VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE: c_int = 1000092000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX: c_int = 1000097000;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV: c_int = 1000098000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT: c_int = 1000099000;
pub const VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT: c_int = 1000099001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT: c_int = 1000101000;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT: c_int = 1000101001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT: c_int = 1000102000;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT: c_int = 1000102001;
pub const VK_STRUCTURE_TYPE_HDR_METADATA_EXT: c_int = 1000105000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG: c_int = 1000110000;
pub const VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR: c_int = 1000111000;
pub const VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR: c_int = 1000114000;
pub const VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR: c_int = 1000114001;
pub const VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR: c_int = 1000114002;
pub const VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR: c_int = 1000115000;
pub const VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR: c_int = 1000115001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR: c_int = 1000116000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR: c_int = 1000116001;
pub const VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR: c_int = 1000116002;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR: c_int = 1000116003;
pub const VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR: c_int = 1000116004;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR: c_int = 1000116005;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR: c_int = 1000116006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR: c_int = 1000119000;
pub const VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR: c_int = 1000119001;
pub const VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR: c_int = 1000119002;
pub const VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR: c_int = 1000121000;
pub const VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR: c_int = 1000121001;
pub const VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR: c_int = 1000121002;
pub const VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR: c_int = 1000121003;
pub const VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR: c_int = 1000121004;
pub const VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK: c_int = 1000122000;
pub const VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK: c_int = 1000123000;
pub const VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT: c_int = 1000128000;
pub const VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT: c_int = 1000128001;
pub const VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT: c_int = 1000128002;
pub const VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT: c_int = 1000128003;
pub const VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT: c_int = 1000128004;
pub const VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID: c_int = 1000129000;
pub const VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID: c_int = 1000129001;
pub const VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID: c_int = 1000129002;
pub const VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID: c_int = 1000129003;
pub const VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID: c_int = 1000129004;
pub const VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID: c_int = 1000129005;
pub const VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID: c_int = 1000129006;
pub const VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT: c_int = 1000143000;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT: c_int = 1000143001;
pub const VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT: c_int = 1000143002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT: c_int = 1000143003;
pub const VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT: c_int = 1000143004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT: c_int = 1000148000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT: c_int = 1000148001;
pub const VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT: c_int = 1000148002;
pub const VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV: c_int = 1000149000;
pub const VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR: c_int = 1000150007;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR: c_int = 1000150000;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR: c_int = 1000150002;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR: c_int = 1000150003;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR: c_int = 1000150004;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR: c_int = 1000150005;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR: c_int = 1000150006;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR: c_int = 1000150009;
pub const VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR: c_int = 1000150010;
pub const VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR: c_int = 1000150011;
pub const VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR: c_int = 1000150012;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR: c_int = 1000150013;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR: c_int = 1000150014;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR: c_int = 1000150017;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR: c_int = 1000150020;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR: c_int = 1000347000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR: c_int = 1000347001;
pub const VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR: c_int = 1000150015;
pub const VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR: c_int = 1000150016;
pub const VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR: c_int = 1000150018;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR: c_int = 1000348013;
pub const VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV: c_int = 1000152000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV: c_int = 1000154000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV: c_int = 1000154001;
pub const VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT: c_int = 1000158000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT: c_int = 1000158002;
pub const VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT: c_int = 1000158003;
pub const VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT: c_int = 1000158004;
pub const VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT: c_int = 1000158005;
pub const VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT: c_int = 1000158006;
pub const VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT: c_int = 1000160000;
pub const VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT: c_int = 1000160001;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV: c_int = 1000164000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV: c_int = 1000164001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV: c_int = 1000164002;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV: c_int = 1000164005;
pub const VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV: c_int = 1000165000;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV: c_int = 1000165001;
pub const VK_STRUCTURE_TYPE_GEOMETRY_NV: c_int = 1000165003;
pub const VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV: c_int = 1000165004;
pub const VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV: c_int = 1000165005;
pub const VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV: c_int = 1000165006;
pub const VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV: c_int = 1000165007;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV: c_int = 1000165008;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV: c_int = 1000165009;
pub const VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV: c_int = 1000165011;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV: c_int = 1000165012;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV: c_int = 1000166000;
pub const VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV: c_int = 1000166001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT: c_int = 1000170000;
pub const VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT: c_int = 1000170001;
pub const VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT: c_int = 1000178000;
pub const VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT: c_int = 1000178001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT: c_int = 1000178002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR: c_int = 1000181000;
pub const VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD: c_int = 1000183000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD: c_int = 1000185000;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR: c_int = 1000187000;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR: c_int = 1000187001;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR: c_int = 1000187002;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR: c_int = 1000187003;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR: c_int = 1000187004;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR: c_int = 1000187005;
pub const VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR: c_int = 1000174000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR: c_int = 1000388000;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR: c_int = 1000388001;
pub const VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD: c_int = 1000189000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT: c_int = 1000190000;
pub const VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP: c_int = 1000191000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV: c_int = 1000201000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV: c_int = 1000202000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV: c_int = 1000202001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV: c_int = 1000204000;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV: c_int = 1000205000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV: c_int = 1000205002;
pub const VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV: c_int = 1000206000;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV: c_int = 1000206001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL: c_int = 1000209000;
pub const VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL: c_int = 1000210000;
pub const VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL: c_int = 1000210001;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL: c_int = 1000210002;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL: c_int = 1000210003;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL: c_int = 1000210004;
pub const VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL: c_int = 1000210005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT: c_int = 1000212000;
pub const VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD: c_int = 1000213000;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD: c_int = 1000213001;
pub const VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA: c_int = 1000214000;
pub const VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT: c_int = 1000217000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT: c_int = 1000218000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT: c_int = 1000218001;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT: c_int = 1000218002;
pub const VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR: c_int = 1000226000;
pub const VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR: c_int = 1000226001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR: c_int = 1000226002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR: c_int = 1000226003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR: c_int = 1000226004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD: c_int = 1000227000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD: c_int = 1000229000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR: c_int = 1000232000;
pub const VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO_KHR: c_int = 1000232001;
pub const VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR: c_int = 1000232002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT: c_int = 1000234000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR: c_int = 1000235000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT: c_int = 1000237000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT: c_int = 1000238000;
pub const VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT: c_int = 1000238001;
pub const VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR: c_int = 1000239000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV: c_int = 1000240000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT: c_int = 1000244000;
pub const VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT: c_int = 1000244002;
pub const VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT: c_int = 1000247000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR: c_int = 1000248000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV: c_int = 1000249000;
pub const VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV: c_int = 1000249001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV: c_int = 1000249002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV: c_int = 1000250000;
pub const VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV: c_int = 1000250001;
pub const VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV: c_int = 1000250002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT: c_int = 1000251000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT: c_int = 1000252000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT: c_int = 1000254000;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT: c_int = 1000254001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT: c_int = 1000254002;
pub const VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT: c_int = 1000255000;
pub const VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT: c_int = 1000255002;
pub const VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT: c_int = 1000255001;
pub const VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT: c_int = 1000256000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT: c_int = 1000260000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT: c_int = 1000267000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR: c_int = 1000269000;
pub const VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR: c_int = 1000269001;
pub const VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR: c_int = 1000269002;
pub const VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR: c_int = 1000269003;
pub const VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR: c_int = 1000269004;
pub const VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR: c_int = 1000269005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT: c_int = 1000270000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT: c_int = 1000270001;
pub const VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT: c_int = 1000270002;
pub const VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT: c_int = 1000270003;
pub const VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT: c_int = 1000270004;
pub const VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT: c_int = 1000270005;
pub const VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT: c_int = 1000270006;
pub const VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT: c_int = 1000270007;
pub const VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT: c_int = 1000270008;
pub const VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT: c_int = 1000270009;
pub const VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR: c_int = 1000271000;
pub const VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR: c_int = 1000271001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT: c_int = 1000272000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT: c_int = 1000272001;
pub const VK_STRUCTURE_TYPE_MEMORY_MAP_PLACED_INFO_EXT: c_int = 1000272002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT: c_int = 1000273000;
pub const VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT: c_int = 1000274000;
pub const VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT: c_int = 1000274001;
pub const VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT: c_int = 1000274002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT: c_int = 1000275000;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT: c_int = 1000275001;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT: c_int = 1000275002;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT: c_int = 1000275003;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT: c_int = 1000275004;
pub const VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT: c_int = 1000275005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV: c_int = 1000277000;
pub const VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV: c_int = 1000277001;
pub const VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV: c_int = 1000277002;
pub const VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV: c_int = 1000277003;
pub const VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV: c_int = 1000277004;
pub const VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV: c_int = 1000277005;
pub const VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV: c_int = 1000277006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV: c_int = 1000277007;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV: c_int = 1000278000;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV: c_int = 1000278001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT: c_int = 1000281000;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM: c_int = 1000282000;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM: c_int = 1000282001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT: c_int = 1000283000;
pub const VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT: c_int = 1000283001;
pub const VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT: c_int = 1000283002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT: c_int = 1000284000;
pub const VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT: c_int = 1000284001;
pub const VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT: c_int = 1000284002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT: c_int = 1000286000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT: c_int = 1000286001;
pub const VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT: c_int = 1000287000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT: c_int = 1000287001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT: c_int = 1000287002;
pub const VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR: c_int = 1000290000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV: c_int = 1000292000;
pub const VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV: c_int = 1000292001;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV: c_int = 1000292002;
pub const VK_STRUCTURE_TYPE_PRESENT_ID_KHR: c_int = 1000294000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR: c_int = 1000294001;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR: c_int = 1000299000;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR: c_int = 1000299001;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR: c_int = 1000299002;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR: c_int = 1000299003;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR: c_int = 1000299004;
pub const VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR: c_int = 1000299005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR: c_int = 1000299006;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR: c_int = 1000299007;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR: c_int = 1000299008;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR: c_int = 1000299009;
pub const VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR: c_int = 1000299010;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV: c_int = 1000300000;
pub const VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV: c_int = 1000300001;
pub const VK_STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV: c_int = 1000307000;
pub const VK_STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV: c_int = 1000307001;
pub const VK_STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV: c_int = 1000307002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV: c_int = 1000307003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV: c_int = 1000307004;
pub const VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV: c_int = 1000310000;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT: c_int = 1000311000;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT: c_int = 1000311001;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT: c_int = 1000311002;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT: c_int = 1000311003;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT: c_int = 1000311004;
pub const VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT: c_int = 1000311005;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT: c_int = 1000311006;
pub const VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT: c_int = 1000311007;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT: c_int = 1000311008;
pub const VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT: c_int = 1000311009;
pub const VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT: c_int = 1000311010;
pub const VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT: c_int = 1000311011;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV: c_int = 1000314008;
pub const VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV: c_int = 1000314009;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT: c_int = 1000316000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT: c_int = 1000316001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT: c_int = 1000316002;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT: c_int = 1000316003;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT: c_int = 1000316004;
pub const VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT: c_int = 1000316005;
pub const VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT: c_int = 1000316006;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT: c_int = 1000316007;
pub const VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT: c_int = 1000316008;
pub const VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT: c_int = 1000316010;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT: c_int = 1000316011;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT: c_int = 1000316012;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT: c_int = 1000316009;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT: c_int = 1000320000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT: c_int = 1000320001;
pub const VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT: c_int = 1000320002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD: c_int = 1000321000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR: c_int = 1000203000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR: c_int = 1000322000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR: c_int = 1000323000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV: c_int = 1000326000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV: c_int = 1000326001;
pub const VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV: c_int = 1000326002;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV: c_int = 1000327000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV: c_int = 1000327001;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV: c_int = 1000327002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT: c_int = 1000328000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT: c_int = 1000328001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT: c_int = 1000330000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT: c_int = 1000332000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT: c_int = 1000332001;
pub const VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM: c_int = 1000333000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR: c_int = 1000336000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT: c_int = 1000338000;
pub const VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT: c_int = 1000338001;
pub const VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT: c_int = 1000338004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT: c_int = 1000339000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT: c_int = 1000340000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT: c_int = 1000341000;
pub const VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT: c_int = 1000341001;
pub const VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT: c_int = 1000341002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT: c_int = 1000344000;
pub const VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT: c_int = 1000346000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT: c_int = 1000352000;
pub const VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT: c_int = 1000352001;
pub const VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT: c_int = 1000352002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT: c_int = 1000353000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT: c_int = 1000354000;
pub const VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT: c_int = 1000354001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT: c_int = 1000355000;
pub const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT: c_int = 1000355001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT: c_int = 1000356000;
pub const VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA: c_int = 1000364000;
pub const VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA: c_int = 1000364001;
pub const VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA: c_int = 1000364002;
pub const VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA: c_int = 1000365000;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA: c_int = 1000365001;
pub const VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA: c_int = 1000366000;
pub const VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA: c_int = 1000366001;
pub const VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA: c_int = 1000366002;
pub const VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA: c_int = 1000366003;
pub const VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA: c_int = 1000366004;
pub const VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA: c_int = 1000366005;
pub const VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA: c_int = 1000366006;
pub const VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA: c_int = 1000366007;
pub const VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA: c_int = 1000366008;
pub const VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA: c_int = 1000366009;
pub const VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI: c_int = 1000369000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI: c_int = 1000369001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI: c_int = 1000369002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI: c_int = 1000370000;
pub const VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV: c_int = 1000371000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV: c_int = 1000371001;
pub const VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT: c_int = 1000372000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT: c_int = 1000372001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT: c_int = 1000375000;
pub const VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT: c_int = 1000375001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT: c_int = 1000376000;
pub const VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT: c_int = 1000376001;
pub const VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT: c_int = 1000376002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT: c_int = 1000377000;
pub const VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX: c_int = 1000378000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT: c_int = 1000381000;
pub const VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT: c_int = 1000381001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT: c_int = 1000382000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR: c_int = 1000386000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT: c_int = 1000391000;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT: c_int = 1000391001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT: c_int = 1000392000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT: c_int = 1000392001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT: c_int = 1000393000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT: c_int = 1000395000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT: c_int = 1000395001;
pub const VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT: c_int = 1000396000;
pub const VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT: c_int = 1000396001;
pub const VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT: c_int = 1000396002;
pub const VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT: c_int = 1000396003;
pub const VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT: c_int = 1000396004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT: c_int = 1000396005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT: c_int = 1000396006;
pub const VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT: c_int = 1000396007;
pub const VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT: c_int = 1000396008;
pub const VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT: c_int = 1000396009;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI: c_int = 1000404000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI: c_int = 1000404001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI: c_int = 1000404002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT: c_int = 1000411000;
pub const VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT: c_int = 1000411001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT: c_int = 1000412000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM: c_int = 1000415000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR: c_int = 1000416000;
pub const VK_STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM: c_int = 1000417000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM: c_int = 1000417001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM: c_int = 1000417002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT: c_int = 1000418000;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT: c_int = 1000418001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE: c_int = 1000420000;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE: c_int = 1000420001;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE: c_int = 1000420002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT: c_int = 1000421000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT: c_int = 1000422000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM: c_int = 1000424000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM: c_int = 1000424001;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM: c_int = 1000424002;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM: c_int = 1000424003;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM: c_int = 1000424004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM: c_int = 1000425000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM: c_int = 1000425001;
pub const VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM: c_int = 1000425002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV: c_int = 1000426000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV: c_int = 1000426001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV: c_int = 1000427000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV: c_int = 1000427001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV: c_int = 1000428000;
pub const VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV: c_int = 1000428001;
pub const VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV: c_int = 1000428002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV: c_int = 1000430000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR: c_int = 1000434000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT: c_int = 1000437000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM: c_int = 1000440000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM: c_int = 1000440001;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM: c_int = 1000440002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT: c_int = 1000451000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT: c_int = 1000451001;
pub const VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT: c_int = 1000453000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT: c_int = 1000455000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT: c_int = 1000455001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT: c_int = 1000458000;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT: c_int = 1000458001;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT: c_int = 1000458002;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT: c_int = 1000458003;
pub const VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG: c_int = 1000459000;
pub const VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG: c_int = 1000459001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT: c_int = 1000462000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT: c_int = 1000462001;
pub const VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT: c_int = 1000462002;
pub const VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT: c_int = 1000462003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT: c_int = 1000342000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV: c_int = 1000464000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV: c_int = 1000464001;
pub const VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV: c_int = 1000464002;
pub const VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV: c_int = 1000464003;
pub const VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV: c_int = 1000464004;
pub const VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV: c_int = 1000464005;
pub const VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV: c_int = 1000464010;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT: c_int = 1000465000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT: c_int = 1000466000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID: c_int = 1000468000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID: c_int = 1000468001;
pub const VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID: c_int = 1000468002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR: c_int = 1000470000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR: c_int = 1000470001;
pub const VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR: c_int = 1000470003;
pub const VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR: c_int = 1000470004;
pub const VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR: c_int = 1000338002;
pub const VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR: c_int = 1000338003;
pub const VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR: c_int = 1000470005;
pub const VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR: c_int = 1000470006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR: c_int = 1000481000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT: c_int = 1000482000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT: c_int = 1000482001;
pub const VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT: c_int = 1000482002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM: c_int = 1000484000;
pub const VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM: c_int = 1000484001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC: c_int = 1000485000;
pub const VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC: c_int = 1000485001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM: c_int = 1000488000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV: c_int = 1000490000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV: c_int = 1000490001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV: c_int = 1000492000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV: c_int = 1000492001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT: c_int = 1000351000;
pub const VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT: c_int = 1000351002;
pub const VK_STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT: c_int = 1000496000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM: c_int = 1000497000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM: c_int = 1000497001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT: c_int = 1000498000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT: c_int = 1000499000;
pub const VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV: c_int = 1000505000;
pub const VK_STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV: c_int = 1000505001;
pub const VK_STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV: c_int = 1000505002;
pub const VK_STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV: c_int = 1000505003;
pub const VK_STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV: c_int = 1000505004;
pub const VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV: c_int = 1000505005;
pub const VK_STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV: c_int = 1000505006;
pub const VK_STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV: c_int = 1000505007;
pub const VK_STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV: c_int = 1000505008;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR: c_int = 1000506000;
pub const VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR: c_int = 1000506001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR: c_int = 1000506002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM: c_int = 1000510000;
pub const VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM: c_int = 1000510001;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_CAPABILITIES_KHR: c_int = 1000512000;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PICTURE_INFO_KHR: c_int = 1000512001;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PROFILE_INFO_KHR: c_int = 1000512003;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR: c_int = 1000512004;
pub const VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR: c_int = 1000512005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR: c_int = 1000515000;
pub const VK_STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR: c_int = 1000515001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV: c_int = 1000516000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM: c_int = 1000518000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM: c_int = 1000518001;
pub const VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM: c_int = 1000518002;
pub const VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM: c_int = 1000519000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM: c_int = 1000519001;
pub const VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM: c_int = 1000519002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM: c_int = 1000520000;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM: c_int = 1000520001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM: c_int = 1000521000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT: c_int = 1000524000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR: c_int = 1000525000;
pub const VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR: c_int = 1000190001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR: c_int = 1000190002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR: c_int = 1000528000;
pub const VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX: c_int = 1000529000;
pub const VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX: c_int = 1000529001;
pub const VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX: c_int = 1000529002;
pub const VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX: c_int = 1000529003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX: c_int = 1000529004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT: c_int = 1000530000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR: c_int = 1000265000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR: c_int = 1000259000;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR: c_int = 1000259001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR: c_int = 1000259002;
pub const VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR: c_int = 1000184000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR: c_int = 1000544000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR: c_int = 1000545000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR: c_int = 1000545001;
pub const VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR: c_int = 1000545002;
pub const VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR: c_int = 1000545003;
pub const VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR: c_int = 1000545004;
pub const VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR: c_int = 1000545005;
pub const VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR: c_int = 1000545006;
pub const VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT: c_int = 1000545007;
pub const VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT: c_int = 1000545008;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV: c_int = 1000546000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV: c_int = 1000555000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV: c_int = 1000563000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV: c_int = 1000568000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES: c_int = 1000120000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES: c_int = 1000063000;
pub const VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT: c_int = 1000011000;
pub const VK_STRUCTURE_TYPE_RENDERING_INFO_KHR: c_int = 1000044000;
pub const VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR: c_int = 1000044001;
pub const VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR: c_int = 1000044002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR: c_int = 1000044003;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR: c_int = 1000044004;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV: c_int = 1000044008;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR: c_int = 1000053000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR: c_int = 1000053001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR: c_int = 1000053002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR: c_int = 1000059000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR: c_int = 1000059001;
pub const VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR: c_int = 1000059002;
pub const VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR: c_int = 1000059003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR: c_int = 1000059004;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR: c_int = 1000059005;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR: c_int = 1000059006;
pub const VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR: c_int = 1000059007;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR: c_int = 1000059008;
pub const VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR: c_int = 1000060000;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR: c_int = 1000060003;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR: c_int = 1000060004;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR: c_int = 1000060005;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR: c_int = 1000060006;
pub const VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR: c_int = 1000060013;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR: c_int = 1000060014;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT: c_int = 1000066000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR: c_int = 1000070000;
pub const VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR: c_int = 1000070001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR: c_int = 1000071000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR: c_int = 1000071001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR: c_int = 1000071002;
pub const VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR: c_int = 1000071003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR: c_int = 1000071004;
pub const VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR: c_int = 1000072000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR: c_int = 1000072001;
pub const VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR: c_int = 1000072002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR: c_int = 1000076000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR: c_int = 1000076001;
pub const VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR: c_int = 1000077000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR: c_int = 1000082000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR: c_int = 1000082000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR: c_int = 1000083000;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR: c_int = 1000085000;
pub const VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT: c_int = 1000090000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR: c_int = 1000108000;
pub const VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR: c_int = 1000108001;
pub const VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR: c_int = 1000108002;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR: c_int = 1000108003;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR: c_int = 1000109000;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR: c_int = 1000109001;
pub const VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR: c_int = 1000109002;
pub const VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR: c_int = 1000109003;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR: c_int = 1000109004;
pub const VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR: c_int = 1000109005;
pub const VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR: c_int = 1000109006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR: c_int = 1000112000;
pub const VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR: c_int = 1000112001;
pub const VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR: c_int = 1000113000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR: c_int = 1000117000;
pub const VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR: c_int = 1000117001;
pub const VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR: c_int = 1000117002;
pub const VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR: c_int = 1000117003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR: c_int = 1000120000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR: c_int = 1000120000;
pub const VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR: c_int = 1000127000;
pub const VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR: c_int = 1000127001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT: c_int = 1000130000;
pub const VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT: c_int = 1000130001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT: c_int = 1000138000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT: c_int = 1000138001;
pub const VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT: c_int = 1000138002;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT: c_int = 1000138003;
pub const VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR: c_int = 1000146000;
pub const VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR: c_int = 1000146001;
pub const VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR: c_int = 1000146002;
pub const VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR: c_int = 1000146003;
pub const VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR: c_int = 1000146004;
pub const VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR: c_int = 1000147000;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR: c_int = 1000156000;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR: c_int = 1000156001;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR: c_int = 1000156002;
pub const VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR: c_int = 1000156003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR: c_int = 1000156004;
pub const VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR: c_int = 1000156005;
pub const VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR: c_int = 1000157000;
pub const VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR: c_int = 1000157001;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT: c_int = 1000161000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT: c_int = 1000161001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT: c_int = 1000161002;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT: c_int = 1000161003;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT: c_int = 1000161004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR: c_int = 1000168000;
pub const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR: c_int = 1000168001;
pub const VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT: c_int = 1000174000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR: c_int = 1000175000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR: c_int = 1000177000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR: c_int = 1000180000;
pub const VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT: c_int = 1000184000;
pub const VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT: c_int = 1000190001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT: c_int = 1000190002;
pub const VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT: c_int = 1000192000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR: c_int = 1000196000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR: c_int = 1000197000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR: c_int = 1000199000;
pub const VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR: c_int = 1000199001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV: c_int = 1000203000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR: c_int = 1000207000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR: c_int = 1000207001;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR: c_int = 1000207002;
pub const VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR: c_int = 1000207003;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR: c_int = 1000207004;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR: c_int = 1000207005;
pub const VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL: c_int = 1000210000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR: c_int = 1000211000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR: c_int = 1000215000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT: c_int = 1000221000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT: c_int = 1000225000;
pub const VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT: c_int = 1000225001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT: c_int = 1000225002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR: c_int = 1000241000;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR: c_int = 1000241001;
pub const VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR: c_int = 1000241002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT: c_int = 1000244000;
pub const VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT: c_int = 1000244001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT: c_int = 1000245000;
pub const VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT: c_int = 1000246000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR: c_int = 1000253000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR: c_int = 1000257000;
pub const VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR: c_int = 1000244001;
pub const VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR: c_int = 1000257002;
pub const VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR: c_int = 1000257003;
pub const VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR: c_int = 1000257004;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT: c_int = 1000259000;
pub const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT: c_int = 1000259001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT: c_int = 1000259002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT: c_int = 1000261000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT: c_int = 1000265000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT: c_int = 1000276000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR: c_int = 1000280000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR: c_int = 1000280001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT: c_int = 1000281001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT: c_int = 1000295000;
pub const VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT: c_int = 1000295001;
pub const VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT: c_int = 1000295002;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT: c_int = 1000297000;
pub const VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR: c_int = 1000314000;
pub const VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR: c_int = 1000314001;
pub const VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR: c_int = 1000314002;
pub const VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR: c_int = 1000314003;
pub const VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR: c_int = 1000314004;
pub const VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR: c_int = 1000314005;
pub const VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR: c_int = 1000314006;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR: c_int = 1000314007;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR: c_int = 1000325000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT: c_int = 1000335000;
pub const VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR: c_int = 1000337000;
pub const VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR: c_int = 1000337001;
pub const VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR: c_int = 1000337002;
pub const VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR: c_int = 1000337003;
pub const VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR: c_int = 1000337004;
pub const VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR: c_int = 1000337005;
pub const VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR: c_int = 1000337006;
pub const VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR: c_int = 1000337007;
pub const VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR: c_int = 1000337008;
pub const VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR: c_int = 1000337009;
pub const VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR: c_int = 1000337010;
pub const VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT: c_int = 1000338002;
pub const VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT: c_int = 1000338003;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM: c_int = 1000342000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE: c_int = 1000351000;
pub const VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE: c_int = 1000351002;
pub const VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR: c_int = 1000360000;
pub const VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT: c_int = 1000269001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT: c_int = 1000388000;
pub const VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT: c_int = 1000388001;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR: c_int = 1000413000;
pub const VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR: c_int = 1000413001;
pub const VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR: c_int = 1000413002;
pub const VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR: c_int = 1000413003;
pub const VK_STRUCTURE_TYPE_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT: c_int = 1000225001;
pub const VK_STRUCTURE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkStructureType = c_uint;
pub const VkStructureType = enum_VkStructureType;
pub const VK_PIPELINE_CACHE_HEADER_VERSION_ONE: c_int = 1;
pub const VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineCacheHeaderVersion = c_uint;
pub const VkPipelineCacheHeaderVersion = enum_VkPipelineCacheHeaderVersion;
pub const VK_IMAGE_LAYOUT_UNDEFINED: c_int = 0;
pub const VK_IMAGE_LAYOUT_GENERAL: c_int = 1;
pub const VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL: c_int = 2;
pub const VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL: c_int = 3;
pub const VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL: c_int = 4;
pub const VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL: c_int = 5;
pub const VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL: c_int = 6;
pub const VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL: c_int = 7;
pub const VK_IMAGE_LAYOUT_PREINITIALIZED: c_int = 8;
pub const VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL: c_int = 1000117000;
pub const VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL: c_int = 1000117001;
pub const VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL: c_int = 1000241000;
pub const VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL: c_int = 1000241001;
pub const VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL: c_int = 1000241002;
pub const VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL: c_int = 1000241003;
pub const VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL: c_int = 1000314000;
pub const VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL: c_int = 1000314001;
pub const VK_IMAGE_LAYOUT_PRESENT_SRC_KHR: c_int = 1000001002;
pub const VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR: c_int = 1000024000;
pub const VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR: c_int = 1000024001;
pub const VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR: c_int = 1000024002;
pub const VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR: c_int = 1000111000;
pub const VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT: c_int = 1000218000;
pub const VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR: c_int = 1000164003;
pub const VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ_KHR: c_int = 1000232000;
pub const VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR: c_int = 1000299000;
pub const VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR: c_int = 1000299001;
pub const VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR: c_int = 1000299002;
pub const VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT: c_int = 1000339000;
pub const VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR: c_int = 1000117000;
pub const VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR: c_int = 1000117001;
pub const VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV: c_int = 1000164003;
pub const VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR: c_int = 1000241000;
pub const VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR: c_int = 1000241001;
pub const VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR: c_int = 1000241002;
pub const VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR: c_int = 1000241003;
pub const VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR: c_int = 1000314000;
pub const VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR: c_int = 1000314001;
pub const VK_IMAGE_LAYOUT_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageLayout = c_uint;
pub const VkImageLayout = enum_VkImageLayout;
pub const VK_OBJECT_TYPE_UNKNOWN: c_int = 0;
pub const VK_OBJECT_TYPE_INSTANCE: c_int = 1;
pub const VK_OBJECT_TYPE_PHYSICAL_DEVICE: c_int = 2;
pub const VK_OBJECT_TYPE_DEVICE: c_int = 3;
pub const VK_OBJECT_TYPE_QUEUE: c_int = 4;
pub const VK_OBJECT_TYPE_SEMAPHORE: c_int = 5;
pub const VK_OBJECT_TYPE_COMMAND_BUFFER: c_int = 6;
pub const VK_OBJECT_TYPE_FENCE: c_int = 7;
pub const VK_OBJECT_TYPE_DEVICE_MEMORY: c_int = 8;
pub const VK_OBJECT_TYPE_BUFFER: c_int = 9;
pub const VK_OBJECT_TYPE_IMAGE: c_int = 10;
pub const VK_OBJECT_TYPE_EVENT: c_int = 11;
pub const VK_OBJECT_TYPE_QUERY_POOL: c_int = 12;
pub const VK_OBJECT_TYPE_BUFFER_VIEW: c_int = 13;
pub const VK_OBJECT_TYPE_IMAGE_VIEW: c_int = 14;
pub const VK_OBJECT_TYPE_SHADER_MODULE: c_int = 15;
pub const VK_OBJECT_TYPE_PIPELINE_CACHE: c_int = 16;
pub const VK_OBJECT_TYPE_PIPELINE_LAYOUT: c_int = 17;
pub const VK_OBJECT_TYPE_RENDER_PASS: c_int = 18;
pub const VK_OBJECT_TYPE_PIPELINE: c_int = 19;
pub const VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT: c_int = 20;
pub const VK_OBJECT_TYPE_SAMPLER: c_int = 21;
pub const VK_OBJECT_TYPE_DESCRIPTOR_POOL: c_int = 22;
pub const VK_OBJECT_TYPE_DESCRIPTOR_SET: c_int = 23;
pub const VK_OBJECT_TYPE_FRAMEBUFFER: c_int = 24;
pub const VK_OBJECT_TYPE_COMMAND_POOL: c_int = 25;
pub const VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION: c_int = 1000156000;
pub const VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE: c_int = 1000085000;
pub const VK_OBJECT_TYPE_PRIVATE_DATA_SLOT: c_int = 1000295000;
pub const VK_OBJECT_TYPE_SURFACE_KHR: c_int = 1000000000;
pub const VK_OBJECT_TYPE_SWAPCHAIN_KHR: c_int = 1000001000;
pub const VK_OBJECT_TYPE_DISPLAY_KHR: c_int = 1000002000;
pub const VK_OBJECT_TYPE_DISPLAY_MODE_KHR: c_int = 1000002001;
pub const VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT: c_int = 1000011000;
pub const VK_OBJECT_TYPE_VIDEO_SESSION_KHR: c_int = 1000023000;
pub const VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR: c_int = 1000023001;
pub const VK_OBJECT_TYPE_CU_MODULE_NVX: c_int = 1000029000;
pub const VK_OBJECT_TYPE_CU_FUNCTION_NVX: c_int = 1000029001;
pub const VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT: c_int = 1000128000;
pub const VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR: c_int = 1000150000;
pub const VK_OBJECT_TYPE_VALIDATION_CACHE_EXT: c_int = 1000160000;
pub const VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV: c_int = 1000165000;
pub const VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL: c_int = 1000210000;
pub const VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR: c_int = 1000268000;
pub const VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV: c_int = 1000277000;
pub const VK_OBJECT_TYPE_CUDA_MODULE_NV: c_int = 1000307000;
pub const VK_OBJECT_TYPE_CUDA_FUNCTION_NV: c_int = 1000307001;
pub const VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA: c_int = 1000366000;
pub const VK_OBJECT_TYPE_MICROMAP_EXT: c_int = 1000396000;
pub const VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV: c_int = 1000464000;
pub const VK_OBJECT_TYPE_SHADER_EXT: c_int = 1000482000;
pub const VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR: c_int = 1000085000;
pub const VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR: c_int = 1000156000;
pub const VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT: c_int = 1000295000;
pub const VK_OBJECT_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkObjectType = c_uint;
pub const VkObjectType = enum_VkObjectType;
pub const VK_VENDOR_ID_VIV: c_int = 65537;
pub const VK_VENDOR_ID_VSI: c_int = 65538;
pub const VK_VENDOR_ID_KAZAN: c_int = 65539;
pub const VK_VENDOR_ID_CODEPLAY: c_int = 65540;
pub const VK_VENDOR_ID_MESA: c_int = 65541;
pub const VK_VENDOR_ID_POCL: c_int = 65542;
pub const VK_VENDOR_ID_MOBILEYE: c_int = 65543;
pub const VK_VENDOR_ID_MAX_ENUM: c_int = 2147483647;
pub const enum_VkVendorId = c_uint;
pub const VkVendorId = enum_VkVendorId;
pub const VK_SYSTEM_ALLOCATION_SCOPE_COMMAND: c_int = 0;
pub const VK_SYSTEM_ALLOCATION_SCOPE_OBJECT: c_int = 1;
pub const VK_SYSTEM_ALLOCATION_SCOPE_CACHE: c_int = 2;
pub const VK_SYSTEM_ALLOCATION_SCOPE_DEVICE: c_int = 3;
pub const VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE: c_int = 4;
pub const VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSystemAllocationScope = c_uint;
pub const VkSystemAllocationScope = enum_VkSystemAllocationScope;
pub const VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE: c_int = 0;
pub const VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkInternalAllocationType = c_uint;
pub const VkInternalAllocationType = enum_VkInternalAllocationType;
pub const VK_FORMAT_UNDEFINED: c_int = 0;
pub const VK_FORMAT_R4G4_UNORM_PACK8: c_int = 1;
pub const VK_FORMAT_R4G4B4A4_UNORM_PACK16: c_int = 2;
pub const VK_FORMAT_B4G4R4A4_UNORM_PACK16: c_int = 3;
pub const VK_FORMAT_R5G6B5_UNORM_PACK16: c_int = 4;
pub const VK_FORMAT_B5G6R5_UNORM_PACK16: c_int = 5;
pub const VK_FORMAT_R5G5B5A1_UNORM_PACK16: c_int = 6;
pub const VK_FORMAT_B5G5R5A1_UNORM_PACK16: c_int = 7;
pub const VK_FORMAT_A1R5G5B5_UNORM_PACK16: c_int = 8;
pub const VK_FORMAT_R8_UNORM: c_int = 9;
pub const VK_FORMAT_R8_SNORM: c_int = 10;
pub const VK_FORMAT_R8_USCALED: c_int = 11;
pub const VK_FORMAT_R8_SSCALED: c_int = 12;
pub const VK_FORMAT_R8_UINT: c_int = 13;
pub const VK_FORMAT_R8_SINT: c_int = 14;
pub const VK_FORMAT_R8_SRGB: c_int = 15;
pub const VK_FORMAT_R8G8_UNORM: c_int = 16;
pub const VK_FORMAT_R8G8_SNORM: c_int = 17;
pub const VK_FORMAT_R8G8_USCALED: c_int = 18;
pub const VK_FORMAT_R8G8_SSCALED: c_int = 19;
pub const VK_FORMAT_R8G8_UINT: c_int = 20;
pub const VK_FORMAT_R8G8_SINT: c_int = 21;
pub const VK_FORMAT_R8G8_SRGB: c_int = 22;
pub const VK_FORMAT_R8G8B8_UNORM: c_int = 23;
pub const VK_FORMAT_R8G8B8_SNORM: c_int = 24;
pub const VK_FORMAT_R8G8B8_USCALED: c_int = 25;
pub const VK_FORMAT_R8G8B8_SSCALED: c_int = 26;
pub const VK_FORMAT_R8G8B8_UINT: c_int = 27;
pub const VK_FORMAT_R8G8B8_SINT: c_int = 28;
pub const VK_FORMAT_R8G8B8_SRGB: c_int = 29;
pub const VK_FORMAT_B8G8R8_UNORM: c_int = 30;
pub const VK_FORMAT_B8G8R8_SNORM: c_int = 31;
pub const VK_FORMAT_B8G8R8_USCALED: c_int = 32;
pub const VK_FORMAT_B8G8R8_SSCALED: c_int = 33;
pub const VK_FORMAT_B8G8R8_UINT: c_int = 34;
pub const VK_FORMAT_B8G8R8_SINT: c_int = 35;
pub const VK_FORMAT_B8G8R8_SRGB: c_int = 36;
pub const VK_FORMAT_R8G8B8A8_UNORM: c_int = 37;
pub const VK_FORMAT_R8G8B8A8_SNORM: c_int = 38;
pub const VK_FORMAT_R8G8B8A8_USCALED: c_int = 39;
pub const VK_FORMAT_R8G8B8A8_SSCALED: c_int = 40;
pub const VK_FORMAT_R8G8B8A8_UINT: c_int = 41;
pub const VK_FORMAT_R8G8B8A8_SINT: c_int = 42;
pub const VK_FORMAT_R8G8B8A8_SRGB: c_int = 43;
pub const VK_FORMAT_B8G8R8A8_UNORM: c_int = 44;
pub const VK_FORMAT_B8G8R8A8_SNORM: c_int = 45;
pub const VK_FORMAT_B8G8R8A8_USCALED: c_int = 46;
pub const VK_FORMAT_B8G8R8A8_SSCALED: c_int = 47;
pub const VK_FORMAT_B8G8R8A8_UINT: c_int = 48;
pub const VK_FORMAT_B8G8R8A8_SINT: c_int = 49;
pub const VK_FORMAT_B8G8R8A8_SRGB: c_int = 50;
pub const VK_FORMAT_A8B8G8R8_UNORM_PACK32: c_int = 51;
pub const VK_FORMAT_A8B8G8R8_SNORM_PACK32: c_int = 52;
pub const VK_FORMAT_A8B8G8R8_USCALED_PACK32: c_int = 53;
pub const VK_FORMAT_A8B8G8R8_SSCALED_PACK32: c_int = 54;
pub const VK_FORMAT_A8B8G8R8_UINT_PACK32: c_int = 55;
pub const VK_FORMAT_A8B8G8R8_SINT_PACK32: c_int = 56;
pub const VK_FORMAT_A8B8G8R8_SRGB_PACK32: c_int = 57;
pub const VK_FORMAT_A2R10G10B10_UNORM_PACK32: c_int = 58;
pub const VK_FORMAT_A2R10G10B10_SNORM_PACK32: c_int = 59;
pub const VK_FORMAT_A2R10G10B10_USCALED_PACK32: c_int = 60;
pub const VK_FORMAT_A2R10G10B10_SSCALED_PACK32: c_int = 61;
pub const VK_FORMAT_A2R10G10B10_UINT_PACK32: c_int = 62;
pub const VK_FORMAT_A2R10G10B10_SINT_PACK32: c_int = 63;
pub const VK_FORMAT_A2B10G10R10_UNORM_PACK32: c_int = 64;
pub const VK_FORMAT_A2B10G10R10_SNORM_PACK32: c_int = 65;
pub const VK_FORMAT_A2B10G10R10_USCALED_PACK32: c_int = 66;
pub const VK_FORMAT_A2B10G10R10_SSCALED_PACK32: c_int = 67;
pub const VK_FORMAT_A2B10G10R10_UINT_PACK32: c_int = 68;
pub const VK_FORMAT_A2B10G10R10_SINT_PACK32: c_int = 69;
pub const VK_FORMAT_R16_UNORM: c_int = 70;
pub const VK_FORMAT_R16_SNORM: c_int = 71;
pub const VK_FORMAT_R16_USCALED: c_int = 72;
pub const VK_FORMAT_R16_SSCALED: c_int = 73;
pub const VK_FORMAT_R16_UINT: c_int = 74;
pub const VK_FORMAT_R16_SINT: c_int = 75;
pub const VK_FORMAT_R16_SFLOAT: c_int = 76;
pub const VK_FORMAT_R16G16_UNORM: c_int = 77;
pub const VK_FORMAT_R16G16_SNORM: c_int = 78;
pub const VK_FORMAT_R16G16_USCALED: c_int = 79;
pub const VK_FORMAT_R16G16_SSCALED: c_int = 80;
pub const VK_FORMAT_R16G16_UINT: c_int = 81;
pub const VK_FORMAT_R16G16_SINT: c_int = 82;
pub const VK_FORMAT_R16G16_SFLOAT: c_int = 83;
pub const VK_FORMAT_R16G16B16_UNORM: c_int = 84;
pub const VK_FORMAT_R16G16B16_SNORM: c_int = 85;
pub const VK_FORMAT_R16G16B16_USCALED: c_int = 86;
pub const VK_FORMAT_R16G16B16_SSCALED: c_int = 87;
pub const VK_FORMAT_R16G16B16_UINT: c_int = 88;
pub const VK_FORMAT_R16G16B16_SINT: c_int = 89;
pub const VK_FORMAT_R16G16B16_SFLOAT: c_int = 90;
pub const VK_FORMAT_R16G16B16A16_UNORM: c_int = 91;
pub const VK_FORMAT_R16G16B16A16_SNORM: c_int = 92;
pub const VK_FORMAT_R16G16B16A16_USCALED: c_int = 93;
pub const VK_FORMAT_R16G16B16A16_SSCALED: c_int = 94;
pub const VK_FORMAT_R16G16B16A16_UINT: c_int = 95;
pub const VK_FORMAT_R16G16B16A16_SINT: c_int = 96;
pub const VK_FORMAT_R16G16B16A16_SFLOAT: c_int = 97;
pub const VK_FORMAT_R32_UINT: c_int = 98;
pub const VK_FORMAT_R32_SINT: c_int = 99;
pub const VK_FORMAT_R32_SFLOAT: c_int = 100;
pub const VK_FORMAT_R32G32_UINT: c_int = 101;
pub const VK_FORMAT_R32G32_SINT: c_int = 102;
pub const VK_FORMAT_R32G32_SFLOAT: c_int = 103;
pub const VK_FORMAT_R32G32B32_UINT: c_int = 104;
pub const VK_FORMAT_R32G32B32_SINT: c_int = 105;
pub const VK_FORMAT_R32G32B32_SFLOAT: c_int = 106;
pub const VK_FORMAT_R32G32B32A32_UINT: c_int = 107;
pub const VK_FORMAT_R32G32B32A32_SINT: c_int = 108;
pub const VK_FORMAT_R32G32B32A32_SFLOAT: c_int = 109;
pub const VK_FORMAT_R64_UINT: c_int = 110;
pub const VK_FORMAT_R64_SINT: c_int = 111;
pub const VK_FORMAT_R64_SFLOAT: c_int = 112;
pub const VK_FORMAT_R64G64_UINT: c_int = 113;
pub const VK_FORMAT_R64G64_SINT: c_int = 114;
pub const VK_FORMAT_R64G64_SFLOAT: c_int = 115;
pub const VK_FORMAT_R64G64B64_UINT: c_int = 116;
pub const VK_FORMAT_R64G64B64_SINT: c_int = 117;
pub const VK_FORMAT_R64G64B64_SFLOAT: c_int = 118;
pub const VK_FORMAT_R64G64B64A64_UINT: c_int = 119;
pub const VK_FORMAT_R64G64B64A64_SINT: c_int = 120;
pub const VK_FORMAT_R64G64B64A64_SFLOAT: c_int = 121;
pub const VK_FORMAT_B10G11R11_UFLOAT_PACK32: c_int = 122;
pub const VK_FORMAT_E5B9G9R9_UFLOAT_PACK32: c_int = 123;
pub const VK_FORMAT_D16_UNORM: c_int = 124;
pub const VK_FORMAT_X8_D24_UNORM_PACK32: c_int = 125;
pub const VK_FORMAT_D32_SFLOAT: c_int = 126;
pub const VK_FORMAT_S8_UINT: c_int = 127;
pub const VK_FORMAT_D16_UNORM_S8_UINT: c_int = 128;
pub const VK_FORMAT_D24_UNORM_S8_UINT: c_int = 129;
pub const VK_FORMAT_D32_SFLOAT_S8_UINT: c_int = 130;
pub const VK_FORMAT_BC1_RGB_UNORM_BLOCK: c_int = 131;
pub const VK_FORMAT_BC1_RGB_SRGB_BLOCK: c_int = 132;
pub const VK_FORMAT_BC1_RGBA_UNORM_BLOCK: c_int = 133;
pub const VK_FORMAT_BC1_RGBA_SRGB_BLOCK: c_int = 134;
pub const VK_FORMAT_BC2_UNORM_BLOCK: c_int = 135;
pub const VK_FORMAT_BC2_SRGB_BLOCK: c_int = 136;
pub const VK_FORMAT_BC3_UNORM_BLOCK: c_int = 137;
pub const VK_FORMAT_BC3_SRGB_BLOCK: c_int = 138;
pub const VK_FORMAT_BC4_UNORM_BLOCK: c_int = 139;
pub const VK_FORMAT_BC4_SNORM_BLOCK: c_int = 140;
pub const VK_FORMAT_BC5_UNORM_BLOCK: c_int = 141;
pub const VK_FORMAT_BC5_SNORM_BLOCK: c_int = 142;
pub const VK_FORMAT_BC6H_UFLOAT_BLOCK: c_int = 143;
pub const VK_FORMAT_BC6H_SFLOAT_BLOCK: c_int = 144;
pub const VK_FORMAT_BC7_UNORM_BLOCK: c_int = 145;
pub const VK_FORMAT_BC7_SRGB_BLOCK: c_int = 146;
pub const VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK: c_int = 147;
pub const VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK: c_int = 148;
pub const VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK: c_int = 149;
pub const VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK: c_int = 150;
pub const VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK: c_int = 151;
pub const VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK: c_int = 152;
pub const VK_FORMAT_EAC_R11_UNORM_BLOCK: c_int = 153;
pub const VK_FORMAT_EAC_R11_SNORM_BLOCK: c_int = 154;
pub const VK_FORMAT_EAC_R11G11_UNORM_BLOCK: c_int = 155;
pub const VK_FORMAT_EAC_R11G11_SNORM_BLOCK: c_int = 156;
pub const VK_FORMAT_ASTC_4x4_UNORM_BLOCK: c_int = 157;
pub const VK_FORMAT_ASTC_4x4_SRGB_BLOCK: c_int = 158;
pub const VK_FORMAT_ASTC_5x4_UNORM_BLOCK: c_int = 159;
pub const VK_FORMAT_ASTC_5x4_SRGB_BLOCK: c_int = 160;
pub const VK_FORMAT_ASTC_5x5_UNORM_BLOCK: c_int = 161;
pub const VK_FORMAT_ASTC_5x5_SRGB_BLOCK: c_int = 162;
pub const VK_FORMAT_ASTC_6x5_UNORM_BLOCK: c_int = 163;
pub const VK_FORMAT_ASTC_6x5_SRGB_BLOCK: c_int = 164;
pub const VK_FORMAT_ASTC_6x6_UNORM_BLOCK: c_int = 165;
pub const VK_FORMAT_ASTC_6x6_SRGB_BLOCK: c_int = 166;
pub const VK_FORMAT_ASTC_8x5_UNORM_BLOCK: c_int = 167;
pub const VK_FORMAT_ASTC_8x5_SRGB_BLOCK: c_int = 168;
pub const VK_FORMAT_ASTC_8x6_UNORM_BLOCK: c_int = 169;
pub const VK_FORMAT_ASTC_8x6_SRGB_BLOCK: c_int = 170;
pub const VK_FORMAT_ASTC_8x8_UNORM_BLOCK: c_int = 171;
pub const VK_FORMAT_ASTC_8x8_SRGB_BLOCK: c_int = 172;
pub const VK_FORMAT_ASTC_10x5_UNORM_BLOCK: c_int = 173;
pub const VK_FORMAT_ASTC_10x5_SRGB_BLOCK: c_int = 174;
pub const VK_FORMAT_ASTC_10x6_UNORM_BLOCK: c_int = 175;
pub const VK_FORMAT_ASTC_10x6_SRGB_BLOCK: c_int = 176;
pub const VK_FORMAT_ASTC_10x8_UNORM_BLOCK: c_int = 177;
pub const VK_FORMAT_ASTC_10x8_SRGB_BLOCK: c_int = 178;
pub const VK_FORMAT_ASTC_10x10_UNORM_BLOCK: c_int = 179;
pub const VK_FORMAT_ASTC_10x10_SRGB_BLOCK: c_int = 180;
pub const VK_FORMAT_ASTC_12x10_UNORM_BLOCK: c_int = 181;
pub const VK_FORMAT_ASTC_12x10_SRGB_BLOCK: c_int = 182;
pub const VK_FORMAT_ASTC_12x12_UNORM_BLOCK: c_int = 183;
pub const VK_FORMAT_ASTC_12x12_SRGB_BLOCK: c_int = 184;
pub const VK_FORMAT_G8B8G8R8_422_UNORM: c_int = 1000156000;
pub const VK_FORMAT_B8G8R8G8_422_UNORM: c_int = 1000156001;
pub const VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM: c_int = 1000156002;
pub const VK_FORMAT_G8_B8R8_2PLANE_420_UNORM: c_int = 1000156003;
pub const VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM: c_int = 1000156004;
pub const VK_FORMAT_G8_B8R8_2PLANE_422_UNORM: c_int = 1000156005;
pub const VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM: c_int = 1000156006;
pub const VK_FORMAT_R10X6_UNORM_PACK16: c_int = 1000156007;
pub const VK_FORMAT_R10X6G10X6_UNORM_2PACK16: c_int = 1000156008;
pub const VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16: c_int = 1000156009;
pub const VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16: c_int = 1000156010;
pub const VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16: c_int = 1000156011;
pub const VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16: c_int = 1000156012;
pub const VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16: c_int = 1000156013;
pub const VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16: c_int = 1000156014;
pub const VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16: c_int = 1000156015;
pub const VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16: c_int = 1000156016;
pub const VK_FORMAT_R12X4_UNORM_PACK16: c_int = 1000156017;
pub const VK_FORMAT_R12X4G12X4_UNORM_2PACK16: c_int = 1000156018;
pub const VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16: c_int = 1000156019;
pub const VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16: c_int = 1000156020;
pub const VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16: c_int = 1000156021;
pub const VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16: c_int = 1000156022;
pub const VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16: c_int = 1000156023;
pub const VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16: c_int = 1000156024;
pub const VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16: c_int = 1000156025;
pub const VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16: c_int = 1000156026;
pub const VK_FORMAT_G16B16G16R16_422_UNORM: c_int = 1000156027;
pub const VK_FORMAT_B16G16R16G16_422_UNORM: c_int = 1000156028;
pub const VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM: c_int = 1000156029;
pub const VK_FORMAT_G16_B16R16_2PLANE_420_UNORM: c_int = 1000156030;
pub const VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM: c_int = 1000156031;
pub const VK_FORMAT_G16_B16R16_2PLANE_422_UNORM: c_int = 1000156032;
pub const VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM: c_int = 1000156033;
pub const VK_FORMAT_G8_B8R8_2PLANE_444_UNORM: c_int = 1000330000;
pub const VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16: c_int = 1000330001;
pub const VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16: c_int = 1000330002;
pub const VK_FORMAT_G16_B16R16_2PLANE_444_UNORM: c_int = 1000330003;
pub const VK_FORMAT_A4R4G4B4_UNORM_PACK16: c_int = 1000340000;
pub const VK_FORMAT_A4B4G4R4_UNORM_PACK16: c_int = 1000340001;
pub const VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK: c_int = 1000066000;
pub const VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK: c_int = 1000066001;
pub const VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK: c_int = 1000066002;
pub const VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK: c_int = 1000066003;
pub const VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK: c_int = 1000066004;
pub const VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK: c_int = 1000066005;
pub const VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK: c_int = 1000066006;
pub const VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK: c_int = 1000066007;
pub const VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK: c_int = 1000066008;
pub const VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK: c_int = 1000066009;
pub const VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK: c_int = 1000066010;
pub const VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK: c_int = 1000066011;
pub const VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK: c_int = 1000066012;
pub const VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK: c_int = 1000066013;
pub const VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG: c_int = 1000054000;
pub const VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG: c_int = 1000054001;
pub const VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG: c_int = 1000054002;
pub const VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG: c_int = 1000054003;
pub const VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG: c_int = 1000054004;
pub const VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG: c_int = 1000054005;
pub const VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG: c_int = 1000054006;
pub const VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG: c_int = 1000054007;
pub const VK_FORMAT_R16G16_SFIXED5_NV: c_int = 1000464000;
pub const VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR: c_int = 1000470000;
pub const VK_FORMAT_A8_UNORM_KHR: c_int = 1000470001;
pub const VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT: c_int = 1000066000;
pub const VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT: c_int = 1000066001;
pub const VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT: c_int = 1000066002;
pub const VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT: c_int = 1000066003;
pub const VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT: c_int = 1000066004;
pub const VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT: c_int = 1000066005;
pub const VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT: c_int = 1000066006;
pub const VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT: c_int = 1000066007;
pub const VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT: c_int = 1000066008;
pub const VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT: c_int = 1000066009;
pub const VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT: c_int = 1000066010;
pub const VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT: c_int = 1000066011;
pub const VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT: c_int = 1000066012;
pub const VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT: c_int = 1000066013;
pub const VK_FORMAT_G8B8G8R8_422_UNORM_KHR: c_int = 1000156000;
pub const VK_FORMAT_B8G8R8G8_422_UNORM_KHR: c_int = 1000156001;
pub const VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR: c_int = 1000156002;
pub const VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR: c_int = 1000156003;
pub const VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR: c_int = 1000156004;
pub const VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR: c_int = 1000156005;
pub const VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR: c_int = 1000156006;
pub const VK_FORMAT_R10X6_UNORM_PACK16_KHR: c_int = 1000156007;
pub const VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR: c_int = 1000156008;
pub const VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR: c_int = 1000156009;
pub const VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR: c_int = 1000156010;
pub const VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR: c_int = 1000156011;
pub const VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR: c_int = 1000156012;
pub const VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR: c_int = 1000156013;
pub const VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR: c_int = 1000156014;
pub const VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR: c_int = 1000156015;
pub const VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR: c_int = 1000156016;
pub const VK_FORMAT_R12X4_UNORM_PACK16_KHR: c_int = 1000156017;
pub const VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR: c_int = 1000156018;
pub const VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR: c_int = 1000156019;
pub const VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR: c_int = 1000156020;
pub const VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR: c_int = 1000156021;
pub const VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR: c_int = 1000156022;
pub const VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR: c_int = 1000156023;
pub const VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR: c_int = 1000156024;
pub const VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR: c_int = 1000156025;
pub const VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR: c_int = 1000156026;
pub const VK_FORMAT_G16B16G16R16_422_UNORM_KHR: c_int = 1000156027;
pub const VK_FORMAT_B16G16R16G16_422_UNORM_KHR: c_int = 1000156028;
pub const VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR: c_int = 1000156029;
pub const VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR: c_int = 1000156030;
pub const VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR: c_int = 1000156031;
pub const VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR: c_int = 1000156032;
pub const VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR: c_int = 1000156033;
pub const VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT: c_int = 1000330000;
pub const VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT: c_int = 1000330001;
pub const VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT: c_int = 1000330002;
pub const VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT: c_int = 1000330003;
pub const VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT: c_int = 1000340000;
pub const VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT: c_int = 1000340001;
pub const VK_FORMAT_R16G16_S10_5_NV: c_int = 1000464000;
pub const VK_FORMAT_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFormat = c_uint;
pub const VkFormat = enum_VkFormat;
pub const VK_IMAGE_TILING_OPTIMAL: c_int = 0;
pub const VK_IMAGE_TILING_LINEAR: c_int = 1;
pub const VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT: c_int = 1000158000;
pub const VK_IMAGE_TILING_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageTiling = c_uint;
pub const VkImageTiling = enum_VkImageTiling;
pub const VK_IMAGE_TYPE_1D: c_int = 0;
pub const VK_IMAGE_TYPE_2D: c_int = 1;
pub const VK_IMAGE_TYPE_3D: c_int = 2;
pub const VK_IMAGE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageType = c_uint;
pub const VkImageType = enum_VkImageType;
pub const VK_PHYSICAL_DEVICE_TYPE_OTHER: c_int = 0;
pub const VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU: c_int = 1;
pub const VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU: c_int = 2;
pub const VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU: c_int = 3;
pub const VK_PHYSICAL_DEVICE_TYPE_CPU: c_int = 4;
pub const VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPhysicalDeviceType = c_uint;
pub const VkPhysicalDeviceType = enum_VkPhysicalDeviceType;
pub const VK_QUERY_TYPE_OCCLUSION: c_int = 0;
pub const VK_QUERY_TYPE_PIPELINE_STATISTICS: c_int = 1;
pub const VK_QUERY_TYPE_TIMESTAMP: c_int = 2;
pub const VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR: c_int = 1000023000;
pub const VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT: c_int = 1000028004;
pub const VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR: c_int = 1000116000;
pub const VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR: c_int = 1000150000;
pub const VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR: c_int = 1000150001;
pub const VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV: c_int = 1000165000;
pub const VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL: c_int = 1000210000;
pub const VK_QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR: c_int = 1000299000;
pub const VK_QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT: c_int = 1000328000;
pub const VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT: c_int = 1000382000;
pub const VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR: c_int = 1000386000;
pub const VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR: c_int = 1000386001;
pub const VK_QUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXT: c_int = 1000396000;
pub const VK_QUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT: c_int = 1000396001;
pub const VK_QUERY_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkQueryType = c_uint;
pub const VkQueryType = enum_VkQueryType;
pub const VK_SHARING_MODE_EXCLUSIVE: c_int = 0;
pub const VK_SHARING_MODE_CONCURRENT: c_int = 1;
pub const VK_SHARING_MODE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSharingMode = c_uint;
pub const VkSharingMode = enum_VkSharingMode;
pub const VK_COMPONENT_SWIZZLE_IDENTITY: c_int = 0;
pub const VK_COMPONENT_SWIZZLE_ZERO: c_int = 1;
pub const VK_COMPONENT_SWIZZLE_ONE: c_int = 2;
pub const VK_COMPONENT_SWIZZLE_R: c_int = 3;
pub const VK_COMPONENT_SWIZZLE_G: c_int = 4;
pub const VK_COMPONENT_SWIZZLE_B: c_int = 5;
pub const VK_COMPONENT_SWIZZLE_A: c_int = 6;
pub const VK_COMPONENT_SWIZZLE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkComponentSwizzle = c_uint;
pub const VkComponentSwizzle = enum_VkComponentSwizzle;
pub const VK_IMAGE_VIEW_TYPE_1D: c_int = 0;
pub const VK_IMAGE_VIEW_TYPE_2D: c_int = 1;
pub const VK_IMAGE_VIEW_TYPE_3D: c_int = 2;
pub const VK_IMAGE_VIEW_TYPE_CUBE: c_int = 3;
pub const VK_IMAGE_VIEW_TYPE_1D_ARRAY: c_int = 4;
pub const VK_IMAGE_VIEW_TYPE_2D_ARRAY: c_int = 5;
pub const VK_IMAGE_VIEW_TYPE_CUBE_ARRAY: c_int = 6;
pub const VK_IMAGE_VIEW_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageViewType = c_uint;
pub const VkImageViewType = enum_VkImageViewType;
pub const VK_BLEND_FACTOR_ZERO: c_int = 0;
pub const VK_BLEND_FACTOR_ONE: c_int = 1;
pub const VK_BLEND_FACTOR_SRC_COLOR: c_int = 2;
pub const VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR: c_int = 3;
pub const VK_BLEND_FACTOR_DST_COLOR: c_int = 4;
pub const VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR: c_int = 5;
pub const VK_BLEND_FACTOR_SRC_ALPHA: c_int = 6;
pub const VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA: c_int = 7;
pub const VK_BLEND_FACTOR_DST_ALPHA: c_int = 8;
pub const VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA: c_int = 9;
pub const VK_BLEND_FACTOR_CONSTANT_COLOR: c_int = 10;
pub const VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR: c_int = 11;
pub const VK_BLEND_FACTOR_CONSTANT_ALPHA: c_int = 12;
pub const VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA: c_int = 13;
pub const VK_BLEND_FACTOR_SRC_ALPHA_SATURATE: c_int = 14;
pub const VK_BLEND_FACTOR_SRC1_COLOR: c_int = 15;
pub const VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR: c_int = 16;
pub const VK_BLEND_FACTOR_SRC1_ALPHA: c_int = 17;
pub const VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA: c_int = 18;
pub const VK_BLEND_FACTOR_MAX_ENUM: c_int = 2147483647;
pub const enum_VkBlendFactor = c_uint;
pub const VkBlendFactor = enum_VkBlendFactor;
pub const VK_BLEND_OP_ADD: c_int = 0;
pub const VK_BLEND_OP_SUBTRACT: c_int = 1;
pub const VK_BLEND_OP_REVERSE_SUBTRACT: c_int = 2;
pub const VK_BLEND_OP_MIN: c_int = 3;
pub const VK_BLEND_OP_MAX: c_int = 4;
pub const VK_BLEND_OP_ZERO_EXT: c_int = 1000148000;
pub const VK_BLEND_OP_SRC_EXT: c_int = 1000148001;
pub const VK_BLEND_OP_DST_EXT: c_int = 1000148002;
pub const VK_BLEND_OP_SRC_OVER_EXT: c_int = 1000148003;
pub const VK_BLEND_OP_DST_OVER_EXT: c_int = 1000148004;
pub const VK_BLEND_OP_SRC_IN_EXT: c_int = 1000148005;
pub const VK_BLEND_OP_DST_IN_EXT: c_int = 1000148006;
pub const VK_BLEND_OP_SRC_OUT_EXT: c_int = 1000148007;
pub const VK_BLEND_OP_DST_OUT_EXT: c_int = 1000148008;
pub const VK_BLEND_OP_SRC_ATOP_EXT: c_int = 1000148009;
pub const VK_BLEND_OP_DST_ATOP_EXT: c_int = 1000148010;
pub const VK_BLEND_OP_XOR_EXT: c_int = 1000148011;
pub const VK_BLEND_OP_MULTIPLY_EXT: c_int = 1000148012;
pub const VK_BLEND_OP_SCREEN_EXT: c_int = 1000148013;
pub const VK_BLEND_OP_OVERLAY_EXT: c_int = 1000148014;
pub const VK_BLEND_OP_DARKEN_EXT: c_int = 1000148015;
pub const VK_BLEND_OP_LIGHTEN_EXT: c_int = 1000148016;
pub const VK_BLEND_OP_COLORDODGE_EXT: c_int = 1000148017;
pub const VK_BLEND_OP_COLORBURN_EXT: c_int = 1000148018;
pub const VK_BLEND_OP_HARDLIGHT_EXT: c_int = 1000148019;
pub const VK_BLEND_OP_SOFTLIGHT_EXT: c_int = 1000148020;
pub const VK_BLEND_OP_DIFFERENCE_EXT: c_int = 1000148021;
pub const VK_BLEND_OP_EXCLUSION_EXT: c_int = 1000148022;
pub const VK_BLEND_OP_INVERT_EXT: c_int = 1000148023;
pub const VK_BLEND_OP_INVERT_RGB_EXT: c_int = 1000148024;
pub const VK_BLEND_OP_LINEARDODGE_EXT: c_int = 1000148025;
pub const VK_BLEND_OP_LINEARBURN_EXT: c_int = 1000148026;
pub const VK_BLEND_OP_VIVIDLIGHT_EXT: c_int = 1000148027;
pub const VK_BLEND_OP_LINEARLIGHT_EXT: c_int = 1000148028;
pub const VK_BLEND_OP_PINLIGHT_EXT: c_int = 1000148029;
pub const VK_BLEND_OP_HARDMIX_EXT: c_int = 1000148030;
pub const VK_BLEND_OP_HSL_HUE_EXT: c_int = 1000148031;
pub const VK_BLEND_OP_HSL_SATURATION_EXT: c_int = 1000148032;
pub const VK_BLEND_OP_HSL_COLOR_EXT: c_int = 1000148033;
pub const VK_BLEND_OP_HSL_LUMINOSITY_EXT: c_int = 1000148034;
pub const VK_BLEND_OP_PLUS_EXT: c_int = 1000148035;
pub const VK_BLEND_OP_PLUS_CLAMPED_EXT: c_int = 1000148036;
pub const VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT: c_int = 1000148037;
pub const VK_BLEND_OP_PLUS_DARKER_EXT: c_int = 1000148038;
pub const VK_BLEND_OP_MINUS_EXT: c_int = 1000148039;
pub const VK_BLEND_OP_MINUS_CLAMPED_EXT: c_int = 1000148040;
pub const VK_BLEND_OP_CONTRAST_EXT: c_int = 1000148041;
pub const VK_BLEND_OP_INVERT_OVG_EXT: c_int = 1000148042;
pub const VK_BLEND_OP_RED_EXT: c_int = 1000148043;
pub const VK_BLEND_OP_GREEN_EXT: c_int = 1000148044;
pub const VK_BLEND_OP_BLUE_EXT: c_int = 1000148045;
pub const VK_BLEND_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_VkBlendOp = c_uint;
pub const VkBlendOp = enum_VkBlendOp;
pub const VK_COMPARE_OP_NEVER: c_int = 0;
pub const VK_COMPARE_OP_LESS: c_int = 1;
pub const VK_COMPARE_OP_EQUAL: c_int = 2;
pub const VK_COMPARE_OP_LESS_OR_EQUAL: c_int = 3;
pub const VK_COMPARE_OP_GREATER: c_int = 4;
pub const VK_COMPARE_OP_NOT_EQUAL: c_int = 5;
pub const VK_COMPARE_OP_GREATER_OR_EQUAL: c_int = 6;
pub const VK_COMPARE_OP_ALWAYS: c_int = 7;
pub const VK_COMPARE_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCompareOp = c_uint;
pub const VkCompareOp = enum_VkCompareOp;
pub const VK_DYNAMIC_STATE_VIEWPORT: c_int = 0;
pub const VK_DYNAMIC_STATE_SCISSOR: c_int = 1;
pub const VK_DYNAMIC_STATE_LINE_WIDTH: c_int = 2;
pub const VK_DYNAMIC_STATE_DEPTH_BIAS: c_int = 3;
pub const VK_DYNAMIC_STATE_BLEND_CONSTANTS: c_int = 4;
pub const VK_DYNAMIC_STATE_DEPTH_BOUNDS: c_int = 5;
pub const VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK: c_int = 6;
pub const VK_DYNAMIC_STATE_STENCIL_WRITE_MASK: c_int = 7;
pub const VK_DYNAMIC_STATE_STENCIL_REFERENCE: c_int = 8;
pub const VK_DYNAMIC_STATE_CULL_MODE: c_int = 1000267000;
pub const VK_DYNAMIC_STATE_FRONT_FACE: c_int = 1000267001;
pub const VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY: c_int = 1000267002;
pub const VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT: c_int = 1000267003;
pub const VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT: c_int = 1000267004;
pub const VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE: c_int = 1000267005;
pub const VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE: c_int = 1000267006;
pub const VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE: c_int = 1000267007;
pub const VK_DYNAMIC_STATE_DEPTH_COMPARE_OP: c_int = 1000267008;
pub const VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE: c_int = 1000267009;
pub const VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE: c_int = 1000267010;
pub const VK_DYNAMIC_STATE_STENCIL_OP: c_int = 1000267011;
pub const VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE: c_int = 1000377001;
pub const VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE: c_int = 1000377002;
pub const VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE: c_int = 1000377004;
pub const VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV: c_int = 1000087000;
pub const VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT: c_int = 1000099000;
pub const VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT: c_int = 1000099001;
pub const VK_DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT: c_int = 1000099002;
pub const VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT: c_int = 1000143000;
pub const VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR: c_int = 1000347000;
pub const VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV: c_int = 1000164004;
pub const VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV: c_int = 1000164006;
pub const VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV: c_int = 1000205000;
pub const VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV: c_int = 1000205001;
pub const VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR: c_int = 1000226000;
pub const VK_DYNAMIC_STATE_VERTEX_INPUT_EXT: c_int = 1000352000;
pub const VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT: c_int = 1000377000;
pub const VK_DYNAMIC_STATE_LOGIC_OP_EXT: c_int = 1000377003;
pub const VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT: c_int = 1000381000;
pub const VK_DYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXT: c_int = 1000455003;
pub const VK_DYNAMIC_STATE_POLYGON_MODE_EXT: c_int = 1000455004;
pub const VK_DYNAMIC_STATE_RASTERIZATION_SAMPLES_EXT: c_int = 1000455005;
pub const VK_DYNAMIC_STATE_SAMPLE_MASK_EXT: c_int = 1000455006;
pub const VK_DYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXT: c_int = 1000455007;
pub const VK_DYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXT: c_int = 1000455008;
pub const VK_DYNAMIC_STATE_LOGIC_OP_ENABLE_EXT: c_int = 1000455009;
pub const VK_DYNAMIC_STATE_COLOR_BLEND_ENABLE_EXT: c_int = 1000455010;
pub const VK_DYNAMIC_STATE_COLOR_BLEND_EQUATION_EXT: c_int = 1000455011;
pub const VK_DYNAMIC_STATE_COLOR_WRITE_MASK_EXT: c_int = 1000455012;
pub const VK_DYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXT: c_int = 1000455002;
pub const VK_DYNAMIC_STATE_RASTERIZATION_STREAM_EXT: c_int = 1000455013;
pub const VK_DYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXT: c_int = 1000455014;
pub const VK_DYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT: c_int = 1000455015;
pub const VK_DYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXT: c_int = 1000455016;
pub const VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT: c_int = 1000455017;
pub const VK_DYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXT: c_int = 1000455018;
pub const VK_DYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXT: c_int = 1000455019;
pub const VK_DYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXT: c_int = 1000455020;
pub const VK_DYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXT: c_int = 1000455021;
pub const VK_DYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT: c_int = 1000455022;
pub const VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NV: c_int = 1000455023;
pub const VK_DYNAMIC_STATE_VIEWPORT_SWIZZLE_NV: c_int = 1000455024;
pub const VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NV: c_int = 1000455025;
pub const VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NV: c_int = 1000455026;
pub const VK_DYNAMIC_STATE_COVERAGE_MODULATION_MODE_NV: c_int = 1000455027;
pub const VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NV: c_int = 1000455028;
pub const VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NV: c_int = 1000455029;
pub const VK_DYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NV: c_int = 1000455030;
pub const VK_DYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV: c_int = 1000455031;
pub const VK_DYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NV: c_int = 1000455032;
pub const VK_DYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT: c_int = 1000524000;
pub const VK_DYNAMIC_STATE_LINE_STIPPLE_KHR: c_int = 1000259000;
pub const VK_DYNAMIC_STATE_LINE_STIPPLE_EXT: c_int = 1000259000;
pub const VK_DYNAMIC_STATE_CULL_MODE_EXT: c_int = 1000267000;
pub const VK_DYNAMIC_STATE_FRONT_FACE_EXT: c_int = 1000267001;
pub const VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT: c_int = 1000267002;
pub const VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT: c_int = 1000267003;
pub const VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT: c_int = 1000267004;
pub const VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT: c_int = 1000267005;
pub const VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT: c_int = 1000267006;
pub const VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT: c_int = 1000267007;
pub const VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT: c_int = 1000267008;
pub const VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT: c_int = 1000267009;
pub const VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT: c_int = 1000267010;
pub const VK_DYNAMIC_STATE_STENCIL_OP_EXT: c_int = 1000267011;
pub const VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT: c_int = 1000377001;
pub const VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT: c_int = 1000377002;
pub const VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT: c_int = 1000377004;
pub const VK_DYNAMIC_STATE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDynamicState = c_uint;
pub const VkDynamicState = enum_VkDynamicState;
pub const VK_FRONT_FACE_COUNTER_CLOCKWISE: c_int = 0;
pub const VK_FRONT_FACE_CLOCKWISE: c_int = 1;
pub const VK_FRONT_FACE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFrontFace = c_uint;
pub const VkFrontFace = enum_VkFrontFace;
pub const VK_VERTEX_INPUT_RATE_VERTEX: c_int = 0;
pub const VK_VERTEX_INPUT_RATE_INSTANCE: c_int = 1;
pub const VK_VERTEX_INPUT_RATE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkVertexInputRate = c_uint;
pub const VkVertexInputRate = enum_VkVertexInputRate;
pub const VK_PRIMITIVE_TOPOLOGY_POINT_LIST: c_int = 0;
pub const VK_PRIMITIVE_TOPOLOGY_LINE_LIST: c_int = 1;
pub const VK_PRIMITIVE_TOPOLOGY_LINE_STRIP: c_int = 2;
pub const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST: c_int = 3;
pub const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP: c_int = 4;
pub const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN: c_int = 5;
pub const VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY: c_int = 6;
pub const VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY: c_int = 7;
pub const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY: c_int = 8;
pub const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY: c_int = 9;
pub const VK_PRIMITIVE_TOPOLOGY_PATCH_LIST: c_int = 10;
pub const VK_PRIMITIVE_TOPOLOGY_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPrimitiveTopology = c_uint;
pub const VkPrimitiveTopology = enum_VkPrimitiveTopology;
pub const VK_POLYGON_MODE_FILL: c_int = 0;
pub const VK_POLYGON_MODE_LINE: c_int = 1;
pub const VK_POLYGON_MODE_POINT: c_int = 2;
pub const VK_POLYGON_MODE_FILL_RECTANGLE_NV: c_int = 1000153000;
pub const VK_POLYGON_MODE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPolygonMode = c_uint;
pub const VkPolygonMode = enum_VkPolygonMode;
pub const VK_STENCIL_OP_KEEP: c_int = 0;
pub const VK_STENCIL_OP_ZERO: c_int = 1;
pub const VK_STENCIL_OP_REPLACE: c_int = 2;
pub const VK_STENCIL_OP_INCREMENT_AND_CLAMP: c_int = 3;
pub const VK_STENCIL_OP_DECREMENT_AND_CLAMP: c_int = 4;
pub const VK_STENCIL_OP_INVERT: c_int = 5;
pub const VK_STENCIL_OP_INCREMENT_AND_WRAP: c_int = 6;
pub const VK_STENCIL_OP_DECREMENT_AND_WRAP: c_int = 7;
pub const VK_STENCIL_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_VkStencilOp = c_uint;
pub const VkStencilOp = enum_VkStencilOp;
pub const VK_LOGIC_OP_CLEAR: c_int = 0;
pub const VK_LOGIC_OP_AND: c_int = 1;
pub const VK_LOGIC_OP_AND_REVERSE: c_int = 2;
pub const VK_LOGIC_OP_COPY: c_int = 3;
pub const VK_LOGIC_OP_AND_INVERTED: c_int = 4;
pub const VK_LOGIC_OP_NO_OP: c_int = 5;
pub const VK_LOGIC_OP_XOR: c_int = 6;
pub const VK_LOGIC_OP_OR: c_int = 7;
pub const VK_LOGIC_OP_NOR: c_int = 8;
pub const VK_LOGIC_OP_EQUIVALENT: c_int = 9;
pub const VK_LOGIC_OP_INVERT: c_int = 10;
pub const VK_LOGIC_OP_OR_REVERSE: c_int = 11;
pub const VK_LOGIC_OP_COPY_INVERTED: c_int = 12;
pub const VK_LOGIC_OP_OR_INVERTED: c_int = 13;
pub const VK_LOGIC_OP_NAND: c_int = 14;
pub const VK_LOGIC_OP_SET: c_int = 15;
pub const VK_LOGIC_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_VkLogicOp = c_uint;
pub const VkLogicOp = enum_VkLogicOp;
pub const VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK: c_int = 0;
pub const VK_BORDER_COLOR_INT_TRANSPARENT_BLACK: c_int = 1;
pub const VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK: c_int = 2;
pub const VK_BORDER_COLOR_INT_OPAQUE_BLACK: c_int = 3;
pub const VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE: c_int = 4;
pub const VK_BORDER_COLOR_INT_OPAQUE_WHITE: c_int = 5;
pub const VK_BORDER_COLOR_FLOAT_CUSTOM_EXT: c_int = 1000287003;
pub const VK_BORDER_COLOR_INT_CUSTOM_EXT: c_int = 1000287004;
pub const VK_BORDER_COLOR_MAX_ENUM: c_int = 2147483647;
pub const enum_VkBorderColor = c_uint;
pub const VkBorderColor = enum_VkBorderColor;
pub const VK_FILTER_NEAREST: c_int = 0;
pub const VK_FILTER_LINEAR: c_int = 1;
pub const VK_FILTER_CUBIC_EXT: c_int = 1000015000;
pub const VK_FILTER_CUBIC_IMG: c_int = 1000015000;
pub const VK_FILTER_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFilter = c_uint;
pub const VkFilter = enum_VkFilter;
pub const VK_SAMPLER_ADDRESS_MODE_REPEAT: c_int = 0;
pub const VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT: c_int = 1;
pub const VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE: c_int = 2;
pub const VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER: c_int = 3;
pub const VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE: c_int = 4;
pub const VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR: c_int = 4;
pub const VK_SAMPLER_ADDRESS_MODE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSamplerAddressMode = c_uint;
pub const VkSamplerAddressMode = enum_VkSamplerAddressMode;
pub const VK_SAMPLER_MIPMAP_MODE_NEAREST: c_int = 0;
pub const VK_SAMPLER_MIPMAP_MODE_LINEAR: c_int = 1;
pub const VK_SAMPLER_MIPMAP_MODE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSamplerMipmapMode = c_uint;
pub const VkSamplerMipmapMode = enum_VkSamplerMipmapMode;
pub const VK_DESCRIPTOR_TYPE_SAMPLER: c_int = 0;
pub const VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER: c_int = 1;
pub const VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE: c_int = 2;
pub const VK_DESCRIPTOR_TYPE_STORAGE_IMAGE: c_int = 3;
pub const VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER: c_int = 4;
pub const VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER: c_int = 5;
pub const VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER: c_int = 6;
pub const VK_DESCRIPTOR_TYPE_STORAGE_BUFFER: c_int = 7;
pub const VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC: c_int = 8;
pub const VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC: c_int = 9;
pub const VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT: c_int = 10;
pub const VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK: c_int = 1000138000;
pub const VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR: c_int = 1000150000;
pub const VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV: c_int = 1000165000;
pub const VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM: c_int = 1000440000;
pub const VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM: c_int = 1000440001;
pub const VK_DESCRIPTOR_TYPE_MUTABLE_EXT: c_int = 1000351000;
pub const VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT: c_int = 1000138000;
pub const VK_DESCRIPTOR_TYPE_MUTABLE_VALVE: c_int = 1000351000;
pub const VK_DESCRIPTOR_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDescriptorType = c_uint;
pub const VkDescriptorType = enum_VkDescriptorType;
pub const VK_ATTACHMENT_LOAD_OP_LOAD: c_int = 0;
pub const VK_ATTACHMENT_LOAD_OP_CLEAR: c_int = 1;
pub const VK_ATTACHMENT_LOAD_OP_DONT_CARE: c_int = 2;
pub const VK_ATTACHMENT_LOAD_OP_NONE_KHR: c_int = 1000400000;
pub const VK_ATTACHMENT_LOAD_OP_NONE_EXT: c_int = 1000400000;
pub const VK_ATTACHMENT_LOAD_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_VkAttachmentLoadOp = c_uint;
pub const VkAttachmentLoadOp = enum_VkAttachmentLoadOp;
pub const VK_ATTACHMENT_STORE_OP_STORE: c_int = 0;
pub const VK_ATTACHMENT_STORE_OP_DONT_CARE: c_int = 1;
pub const VK_ATTACHMENT_STORE_OP_NONE: c_int = 1000301000;
pub const VK_ATTACHMENT_STORE_OP_NONE_KHR: c_int = 1000301000;
pub const VK_ATTACHMENT_STORE_OP_NONE_QCOM: c_int = 1000301000;
pub const VK_ATTACHMENT_STORE_OP_NONE_EXT: c_int = 1000301000;
pub const VK_ATTACHMENT_STORE_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_VkAttachmentStoreOp = c_uint;
pub const VkAttachmentStoreOp = enum_VkAttachmentStoreOp;
pub const VK_PIPELINE_BIND_POINT_GRAPHICS: c_int = 0;
pub const VK_PIPELINE_BIND_POINT_COMPUTE: c_int = 1;
pub const VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR: c_int = 1000165000;
pub const VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI: c_int = 1000369003;
pub const VK_PIPELINE_BIND_POINT_RAY_TRACING_NV: c_int = 1000165000;
pub const VK_PIPELINE_BIND_POINT_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineBindPoint = c_uint;
pub const VkPipelineBindPoint = enum_VkPipelineBindPoint;
pub const VK_COMMAND_BUFFER_LEVEL_PRIMARY: c_int = 0;
pub const VK_COMMAND_BUFFER_LEVEL_SECONDARY: c_int = 1;
pub const VK_COMMAND_BUFFER_LEVEL_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCommandBufferLevel = c_uint;
pub const VkCommandBufferLevel = enum_VkCommandBufferLevel;
pub const VK_INDEX_TYPE_UINT16: c_int = 0;
pub const VK_INDEX_TYPE_UINT32: c_int = 1;
pub const VK_INDEX_TYPE_NONE_KHR: c_int = 1000165000;
pub const VK_INDEX_TYPE_UINT8_KHR: c_int = 1000265000;
pub const VK_INDEX_TYPE_NONE_NV: c_int = 1000165000;
pub const VK_INDEX_TYPE_UINT8_EXT: c_int = 1000265000;
pub const VK_INDEX_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkIndexType = c_uint;
pub const VkIndexType = enum_VkIndexType;
pub const VK_SUBPASS_CONTENTS_INLINE: c_int = 0;
pub const VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS: c_int = 1;
pub const VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT: c_int = 1000451000;
pub const VK_SUBPASS_CONTENTS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSubpassContents = c_uint;
pub const VkSubpassContents = enum_VkSubpassContents;
pub const VK_ACCESS_INDIRECT_COMMAND_READ_BIT: c_int = 1;
pub const VK_ACCESS_INDEX_READ_BIT: c_int = 2;
pub const VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT: c_int = 4;
pub const VK_ACCESS_UNIFORM_READ_BIT: c_int = 8;
pub const VK_ACCESS_INPUT_ATTACHMENT_READ_BIT: c_int = 16;
pub const VK_ACCESS_SHADER_READ_BIT: c_int = 32;
pub const VK_ACCESS_SHADER_WRITE_BIT: c_int = 64;
pub const VK_ACCESS_COLOR_ATTACHMENT_READ_BIT: c_int = 128;
pub const VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT: c_int = 256;
pub const VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT: c_int = 512;
pub const VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT: c_int = 1024;
pub const VK_ACCESS_TRANSFER_READ_BIT: c_int = 2048;
pub const VK_ACCESS_TRANSFER_WRITE_BIT: c_int = 4096;
pub const VK_ACCESS_HOST_READ_BIT: c_int = 8192;
pub const VK_ACCESS_HOST_WRITE_BIT: c_int = 16384;
pub const VK_ACCESS_MEMORY_READ_BIT: c_int = 32768;
pub const VK_ACCESS_MEMORY_WRITE_BIT: c_int = 65536;
pub const VK_ACCESS_NONE: c_int = 0;
pub const VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT: c_int = 33554432;
pub const VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT: c_int = 67108864;
pub const VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT: c_int = 134217728;
pub const VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT: c_int = 1048576;
pub const VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT: c_int = 524288;
pub const VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR: c_int = 2097152;
pub const VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR: c_int = 4194304;
pub const VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT: c_int = 16777216;
pub const VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR: c_int = 8388608;
pub const VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV: c_int = 131072;
pub const VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV: c_int = 262144;
pub const VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV: c_int = 8388608;
pub const VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV: c_int = 2097152;
pub const VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV: c_int = 4194304;
pub const VK_ACCESS_NONE_KHR: c_int = 0;
pub const VK_ACCESS_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkAccessFlagBits = c_uint;
pub const VkAccessFlagBits = enum_VkAccessFlagBits;
pub const VkAccessFlags = VkFlags;
pub const VK_IMAGE_ASPECT_COLOR_BIT: c_int = 1;
pub const VK_IMAGE_ASPECT_DEPTH_BIT: c_int = 2;
pub const VK_IMAGE_ASPECT_STENCIL_BIT: c_int = 4;
pub const VK_IMAGE_ASPECT_METADATA_BIT: c_int = 8;
pub const VK_IMAGE_ASPECT_PLANE_0_BIT: c_int = 16;
pub const VK_IMAGE_ASPECT_PLANE_1_BIT: c_int = 32;
pub const VK_IMAGE_ASPECT_PLANE_2_BIT: c_int = 64;
pub const VK_IMAGE_ASPECT_NONE: c_int = 0;
pub const VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT: c_int = 128;
pub const VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT: c_int = 256;
pub const VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT: c_int = 512;
pub const VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT: c_int = 1024;
pub const VK_IMAGE_ASPECT_PLANE_0_BIT_KHR: c_int = 16;
pub const VK_IMAGE_ASPECT_PLANE_1_BIT_KHR: c_int = 32;
pub const VK_IMAGE_ASPECT_PLANE_2_BIT_KHR: c_int = 64;
pub const VK_IMAGE_ASPECT_NONE_KHR: c_int = 0;
pub const VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageAspectFlagBits = c_uint;
pub const VkImageAspectFlagBits = enum_VkImageAspectFlagBits;
pub const VkImageAspectFlags = VkFlags;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT: c_int = 1;
pub const VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT: c_int = 2;
pub const VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT: c_int = 4;
pub const VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT: c_int = 8;
pub const VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT: c_int = 16;
pub const VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT: c_int = 32;
pub const VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT: c_int = 64;
pub const VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT: c_int = 128;
pub const VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT: c_int = 256;
pub const VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT: c_int = 512;
pub const VK_FORMAT_FEATURE_BLIT_SRC_BIT: c_int = 1024;
pub const VK_FORMAT_FEATURE_BLIT_DST_BIT: c_int = 2048;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT: c_int = 4096;
pub const VK_FORMAT_FEATURE_TRANSFER_SRC_BIT: c_int = 16384;
pub const VK_FORMAT_FEATURE_TRANSFER_DST_BIT: c_int = 32768;
pub const VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT: c_int = 131072;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT: c_int = 262144;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT: c_int = 524288;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT: c_int = 1048576;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT: c_int = 2097152;
pub const VK_FORMAT_FEATURE_DISJOINT_BIT: c_int = 4194304;
pub const VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT: c_int = 8388608;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT: c_int = 65536;
pub const VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR: c_int = 33554432;
pub const VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR: c_int = 67108864;
pub const VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR: c_int = 536870912;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT: c_int = 8192;
pub const VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT: c_int = 16777216;
pub const VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: c_int = 1073741824;
pub const VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR: c_int = 134217728;
pub const VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR: c_int = 268435456;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG: c_int = 8192;
pub const VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR: c_int = 16384;
pub const VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR: c_int = 32768;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT: c_int = 65536;
pub const VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR: c_int = 131072;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR: c_int = 262144;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR: c_int = 524288;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR: c_int = 1048576;
pub const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR: c_int = 2097152;
pub const VK_FORMAT_FEATURE_DISJOINT_BIT_KHR: c_int = 4194304;
pub const VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR: c_int = 8388608;
pub const VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFormatFeatureFlagBits = c_uint;
pub const VkFormatFeatureFlagBits = enum_VkFormatFeatureFlagBits;
pub const VkFormatFeatureFlags = VkFlags;
pub const VK_IMAGE_CREATE_SPARSE_BINDING_BIT: c_int = 1;
pub const VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT: c_int = 2;
pub const VK_IMAGE_CREATE_SPARSE_ALIASED_BIT: c_int = 4;
pub const VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT: c_int = 8;
pub const VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT: c_int = 16;
pub const VK_IMAGE_CREATE_ALIAS_BIT: c_int = 1024;
pub const VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT: c_int = 64;
pub const VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT: c_int = 32;
pub const VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT: c_int = 128;
pub const VK_IMAGE_CREATE_EXTENDED_USAGE_BIT: c_int = 256;
pub const VK_IMAGE_CREATE_PROTECTED_BIT: c_int = 2048;
pub const VK_IMAGE_CREATE_DISJOINT_BIT: c_int = 512;
pub const VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV: c_int = 8192;
pub const VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT: c_int = 4096;
pub const VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT: c_int = 16384;
pub const VK_IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT: c_int = 65536;
pub const VK_IMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT: c_int = 262144;
pub const VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT: c_int = 131072;
pub const VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM: c_int = 32768;
pub const VK_IMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR: c_int = 1048576;
pub const VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR: c_int = 64;
pub const VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR: c_int = 32;
pub const VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR: c_int = 128;
pub const VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR: c_int = 256;
pub const VK_IMAGE_CREATE_DISJOINT_BIT_KHR: c_int = 512;
pub const VK_IMAGE_CREATE_ALIAS_BIT_KHR: c_int = 1024;
pub const VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageCreateFlagBits = c_uint;
pub const VkImageCreateFlagBits = enum_VkImageCreateFlagBits;
pub const VkImageCreateFlags = VkFlags;
pub const VK_SAMPLE_COUNT_1_BIT: c_int = 1;
pub const VK_SAMPLE_COUNT_2_BIT: c_int = 2;
pub const VK_SAMPLE_COUNT_4_BIT: c_int = 4;
pub const VK_SAMPLE_COUNT_8_BIT: c_int = 8;
pub const VK_SAMPLE_COUNT_16_BIT: c_int = 16;
pub const VK_SAMPLE_COUNT_32_BIT: c_int = 32;
pub const VK_SAMPLE_COUNT_64_BIT: c_int = 64;
pub const VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSampleCountFlagBits = c_uint;
pub const VkSampleCountFlagBits = enum_VkSampleCountFlagBits;
pub const VkSampleCountFlags = VkFlags;
pub const VK_IMAGE_USAGE_TRANSFER_SRC_BIT: c_int = 1;
pub const VK_IMAGE_USAGE_TRANSFER_DST_BIT: c_int = 2;
pub const VK_IMAGE_USAGE_SAMPLED_BIT: c_int = 4;
pub const VK_IMAGE_USAGE_STORAGE_BIT: c_int = 8;
pub const VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT: c_int = 16;
pub const VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT: c_int = 32;
pub const VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT: c_int = 64;
pub const VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT: c_int = 128;
pub const VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR: c_int = 1024;
pub const VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR: c_int = 2048;
pub const VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR: c_int = 4096;
pub const VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT: c_int = 512;
pub const VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: c_int = 256;
pub const VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT: c_int = 4194304;
pub const VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR: c_int = 8192;
pub const VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR: c_int = 16384;
pub const VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR: c_int = 32768;
pub const VK_IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT: c_int = 524288;
pub const VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI: c_int = 262144;
pub const VK_IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM: c_int = 1048576;
pub const VK_IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM: c_int = 2097152;
pub const VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV: c_int = 256;
pub const VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageUsageFlagBits = c_uint;
pub const VkImageUsageFlagBits = enum_VkImageUsageFlagBits;
pub const VkImageUsageFlags = VkFlags;
pub const VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR: c_int = 1;
pub const VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkInstanceCreateFlagBits = c_uint;
pub const VkInstanceCreateFlagBits = enum_VkInstanceCreateFlagBits;
pub const VkInstanceCreateFlags = VkFlags;
pub const VK_MEMORY_HEAP_DEVICE_LOCAL_BIT: c_int = 1;
pub const VK_MEMORY_HEAP_MULTI_INSTANCE_BIT: c_int = 2;
pub const VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR: c_int = 2;
pub const VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkMemoryHeapFlagBits = c_uint;
pub const VkMemoryHeapFlagBits = enum_VkMemoryHeapFlagBits;
pub const VkMemoryHeapFlags = VkFlags;
pub const VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT: c_int = 1;
pub const VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT: c_int = 2;
pub const VK_MEMORY_PROPERTY_HOST_COHERENT_BIT: c_int = 4;
pub const VK_MEMORY_PROPERTY_HOST_CACHED_BIT: c_int = 8;
pub const VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT: c_int = 16;
pub const VK_MEMORY_PROPERTY_PROTECTED_BIT: c_int = 32;
pub const VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD: c_int = 64;
pub const VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD: c_int = 128;
pub const VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV: c_int = 256;
pub const VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkMemoryPropertyFlagBits = c_uint;
pub const VkMemoryPropertyFlagBits = enum_VkMemoryPropertyFlagBits;
pub const VkMemoryPropertyFlags = VkFlags;
pub const VK_QUEUE_GRAPHICS_BIT: c_int = 1;
pub const VK_QUEUE_COMPUTE_BIT: c_int = 2;
pub const VK_QUEUE_TRANSFER_BIT: c_int = 4;
pub const VK_QUEUE_SPARSE_BINDING_BIT: c_int = 8;
pub const VK_QUEUE_PROTECTED_BIT: c_int = 16;
pub const VK_QUEUE_VIDEO_DECODE_BIT_KHR: c_int = 32;
pub const VK_QUEUE_VIDEO_ENCODE_BIT_KHR: c_int = 64;
pub const VK_QUEUE_OPTICAL_FLOW_BIT_NV: c_int = 256;
pub const VK_QUEUE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkQueueFlagBits = c_uint;
pub const VkQueueFlagBits = enum_VkQueueFlagBits;
pub const VkQueueFlags = VkFlags;
pub const VkDeviceCreateFlags = VkFlags;
pub const VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT: c_int = 1;
pub const VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDeviceQueueCreateFlagBits = c_uint;
pub const VkDeviceQueueCreateFlagBits = enum_VkDeviceQueueCreateFlagBits;
pub const VkDeviceQueueCreateFlags = VkFlags;
pub const VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT: c_int = 1;
pub const VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT: c_int = 2;
pub const VK_PIPELINE_STAGE_VERTEX_INPUT_BIT: c_int = 4;
pub const VK_PIPELINE_STAGE_VERTEX_SHADER_BIT: c_int = 8;
pub const VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT: c_int = 16;
pub const VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT: c_int = 32;
pub const VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT: c_int = 64;
pub const VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT: c_int = 128;
pub const VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT: c_int = 256;
pub const VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT: c_int = 512;
pub const VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT: c_int = 1024;
pub const VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT: c_int = 2048;
pub const VK_PIPELINE_STAGE_TRANSFER_BIT: c_int = 4096;
pub const VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT: c_int = 8192;
pub const VK_PIPELINE_STAGE_HOST_BIT: c_int = 16384;
pub const VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT: c_int = 32768;
pub const VK_PIPELINE_STAGE_ALL_COMMANDS_BIT: c_int = 65536;
pub const VK_PIPELINE_STAGE_NONE: c_int = 0;
pub const VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT: c_int = 16777216;
pub const VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT: c_int = 262144;
pub const VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR: c_int = 33554432;
pub const VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR: c_int = 2097152;
pub const VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT: c_int = 8388608;
pub const VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: c_int = 4194304;
pub const VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV: c_int = 131072;
pub const VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT: c_int = 524288;
pub const VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT: c_int = 1048576;
pub const VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV: c_int = 4194304;
pub const VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV: c_int = 2097152;
pub const VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV: c_int = 33554432;
pub const VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV: c_int = 524288;
pub const VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV: c_int = 1048576;
pub const VK_PIPELINE_STAGE_NONE_KHR: c_int = 0;
pub const VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineStageFlagBits = c_uint;
pub const VkPipelineStageFlagBits = enum_VkPipelineStageFlagBits;
pub const VkPipelineStageFlags = VkFlags;
pub const VK_MEMORY_MAP_PLACED_BIT_EXT: c_int = 1;
pub const VK_MEMORY_MAP_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkMemoryMapFlagBits = c_uint;
pub const VkMemoryMapFlagBits = enum_VkMemoryMapFlagBits;
pub const VkMemoryMapFlags = VkFlags;
pub const VK_SPARSE_MEMORY_BIND_METADATA_BIT: c_int = 1;
pub const VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSparseMemoryBindFlagBits = c_uint;
pub const VkSparseMemoryBindFlagBits = enum_VkSparseMemoryBindFlagBits;
pub const VkSparseMemoryBindFlags = VkFlags;
pub const VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT: c_int = 1;
pub const VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT: c_int = 2;
pub const VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT: c_int = 4;
pub const VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSparseImageFormatFlagBits = c_uint;
pub const VkSparseImageFormatFlagBits = enum_VkSparseImageFormatFlagBits;
pub const VkSparseImageFormatFlags = VkFlags;
pub const VK_FENCE_CREATE_SIGNALED_BIT: c_int = 1;
pub const VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFenceCreateFlagBits = c_uint;
pub const VkFenceCreateFlagBits = enum_VkFenceCreateFlagBits;
pub const VkFenceCreateFlags = VkFlags;
pub const VkSemaphoreCreateFlags = VkFlags;
pub const VK_EVENT_CREATE_DEVICE_ONLY_BIT: c_int = 1;
pub const VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR: c_int = 1;
pub const VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkEventCreateFlagBits = c_uint;
pub const VkEventCreateFlagBits = enum_VkEventCreateFlagBits;
pub const VkEventCreateFlags = VkFlags;
pub const VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT: c_int = 1;
pub const VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT: c_int = 2;
pub const VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT: c_int = 4;
pub const VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT: c_int = 8;
pub const VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT: c_int = 16;
pub const VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT: c_int = 32;
pub const VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT: c_int = 64;
pub const VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT: c_int = 128;
pub const VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT: c_int = 256;
pub const VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT: c_int = 512;
pub const VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT: c_int = 1024;
pub const VK_QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT: c_int = 2048;
pub const VK_QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT: c_int = 4096;
pub const VK_QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI: c_int = 8192;
pub const VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkQueryPipelineStatisticFlagBits = c_uint;
pub const VkQueryPipelineStatisticFlagBits = enum_VkQueryPipelineStatisticFlagBits;
pub const VkQueryPipelineStatisticFlags = VkFlags;
pub const VkQueryPoolCreateFlags = VkFlags;
pub const VK_QUERY_RESULT_64_BIT: c_int = 1;
pub const VK_QUERY_RESULT_WAIT_BIT: c_int = 2;
pub const VK_QUERY_RESULT_WITH_AVAILABILITY_BIT: c_int = 4;
pub const VK_QUERY_RESULT_PARTIAL_BIT: c_int = 8;
pub const VK_QUERY_RESULT_WITH_STATUS_BIT_KHR: c_int = 16;
pub const VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkQueryResultFlagBits = c_uint;
pub const VkQueryResultFlagBits = enum_VkQueryResultFlagBits;
pub const VkQueryResultFlags = VkFlags;
pub const VK_BUFFER_CREATE_SPARSE_BINDING_BIT: c_int = 1;
pub const VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT: c_int = 2;
pub const VK_BUFFER_CREATE_SPARSE_ALIASED_BIT: c_int = 4;
pub const VK_BUFFER_CREATE_PROTECTED_BIT: c_int = 8;
pub const VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT: c_int = 16;
pub const VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT: c_int = 32;
pub const VK_BUFFER_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR: c_int = 64;
pub const VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT: c_int = 16;
pub const VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR: c_int = 16;
pub const VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkBufferCreateFlagBits = c_uint;
pub const VkBufferCreateFlagBits = enum_VkBufferCreateFlagBits;
pub const VkBufferCreateFlags = VkFlags;
pub const VK_BUFFER_USAGE_TRANSFER_SRC_BIT: c_int = 1;
pub const VK_BUFFER_USAGE_TRANSFER_DST_BIT: c_int = 2;
pub const VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT: c_int = 4;
pub const VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT: c_int = 8;
pub const VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT: c_int = 16;
pub const VK_BUFFER_USAGE_STORAGE_BUFFER_BIT: c_int = 32;
pub const VK_BUFFER_USAGE_INDEX_BUFFER_BIT: c_int = 64;
pub const VK_BUFFER_USAGE_VERTEX_BUFFER_BIT: c_int = 128;
pub const VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT: c_int = 256;
pub const VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT: c_int = 131072;
pub const VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR: c_int = 8192;
pub const VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR: c_int = 16384;
pub const VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT: c_int = 2048;
pub const VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT: c_int = 4096;
pub const VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT: c_int = 512;
pub const VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR: c_int = 524288;
pub const VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR: c_int = 1048576;
pub const VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR: c_int = 1024;
pub const VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR: c_int = 32768;
pub const VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR: c_int = 65536;
pub const VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT: c_int = 2097152;
pub const VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT: c_int = 4194304;
pub const VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT: c_int = 67108864;
pub const VK_BUFFER_USAGE_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT: c_int = 8388608;
pub const VK_BUFFER_USAGE_MICROMAP_STORAGE_BIT_EXT: c_int = 16777216;
pub const VK_BUFFER_USAGE_RAY_TRACING_BIT_NV: c_int = 1024;
pub const VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT: c_int = 131072;
pub const VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR: c_int = 131072;
pub const VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkBufferUsageFlagBits = c_uint;
pub const VkBufferUsageFlagBits = enum_VkBufferUsageFlagBits;
pub const VkBufferUsageFlags = VkFlags;
pub const VkBufferViewCreateFlags = VkFlags;
pub const VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT: c_int = 1;
pub const VK_IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT: c_int = 4;
pub const VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT: c_int = 2;
pub const VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkImageViewCreateFlagBits = c_uint;
pub const VkImageViewCreateFlagBits = enum_VkImageViewCreateFlagBits;
pub const VkImageViewCreateFlags = VkFlags;
pub const VkShaderModuleCreateFlags = VkFlags;
pub const VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT: c_int = 1;
pub const VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT: c_int = 1;
pub const VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineCacheCreateFlagBits = c_uint;
pub const VkPipelineCacheCreateFlagBits = enum_VkPipelineCacheCreateFlagBits;
pub const VkPipelineCacheCreateFlags = VkFlags;
pub const VK_COLOR_COMPONENT_R_BIT: c_int = 1;
pub const VK_COLOR_COMPONENT_G_BIT: c_int = 2;
pub const VK_COLOR_COMPONENT_B_BIT: c_int = 4;
pub const VK_COLOR_COMPONENT_A_BIT: c_int = 8;
pub const VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkColorComponentFlagBits = c_uint;
pub const VkColorComponentFlagBits = enum_VkColorComponentFlagBits;
pub const VkColorComponentFlags = VkFlags;
pub const VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT: c_int = 1;
pub const VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT: c_int = 2;
pub const VK_PIPELINE_CREATE_DERIVATIVE_BIT: c_int = 4;
pub const VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT: c_int = 8;
pub const VK_PIPELINE_CREATE_DISPATCH_BASE_BIT: c_int = 16;
pub const VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT: c_int = 256;
pub const VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT: c_int = 512;
pub const VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: c_int = 2097152;
pub const VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT: c_int = 4194304;
pub const VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR: c_int = 16384;
pub const VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR: c_int = 32768;
pub const VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR: c_int = 65536;
pub const VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR: c_int = 131072;
pub const VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR: c_int = 4096;
pub const VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR: c_int = 8192;
pub const VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR: c_int = 524288;
pub const VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV: c_int = 32;
pub const VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR: c_int = 64;
pub const VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR: c_int = 128;
pub const VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV: c_int = 262144;
pub const VK_PIPELINE_CREATE_LIBRARY_BIT_KHR: c_int = 2048;
pub const VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT: c_int = 536870912;
pub const VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT: c_int = 8388608;
pub const VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT: c_int = 1024;
pub const VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV: c_int = 1048576;
pub const VK_PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT: c_int = 33554432;
pub const VK_PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT: c_int = 67108864;
pub const VK_PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT: c_int = 16777216;
pub const VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT: c_int = 134217728;
pub const VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT: c_int = 1073741824;
pub const VK_PIPELINE_CREATE_DISPATCH_BASE: c_int = 16;
pub const VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: c_int = 2097152;
pub const VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT: c_int = 4194304;
pub const VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR: c_int = 8;
pub const VK_PIPELINE_CREATE_DISPATCH_BASE_KHR: c_int = 16;
pub const VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT: c_int = 256;
pub const VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT: c_int = 512;
pub const VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineCreateFlagBits = c_uint;
pub const VkPipelineCreateFlagBits = enum_VkPipelineCreateFlagBits;
pub const VkPipelineCreateFlags = VkFlags;
pub const VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT: c_int = 1;
pub const VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT: c_int = 2;
pub const VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT: c_int = 1;
pub const VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT: c_int = 2;
pub const VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineShaderStageCreateFlagBits = c_uint;
pub const VkPipelineShaderStageCreateFlagBits = enum_VkPipelineShaderStageCreateFlagBits;
pub const VkPipelineShaderStageCreateFlags = VkFlags;
pub const VK_SHADER_STAGE_VERTEX_BIT: c_int = 1;
pub const VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT: c_int = 2;
pub const VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT: c_int = 4;
pub const VK_SHADER_STAGE_GEOMETRY_BIT: c_int = 8;
pub const VK_SHADER_STAGE_FRAGMENT_BIT: c_int = 16;
pub const VK_SHADER_STAGE_COMPUTE_BIT: c_int = 32;
pub const VK_SHADER_STAGE_ALL_GRAPHICS: c_int = 31;
pub const VK_SHADER_STAGE_ALL: c_int = 2147483647;
pub const VK_SHADER_STAGE_RAYGEN_BIT_KHR: c_int = 256;
pub const VK_SHADER_STAGE_ANY_HIT_BIT_KHR: c_int = 512;
pub const VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR: c_int = 1024;
pub const VK_SHADER_STAGE_MISS_BIT_KHR: c_int = 2048;
pub const VK_SHADER_STAGE_INTERSECTION_BIT_KHR: c_int = 4096;
pub const VK_SHADER_STAGE_CALLABLE_BIT_KHR: c_int = 8192;
pub const VK_SHADER_STAGE_TASK_BIT_EXT: c_int = 64;
pub const VK_SHADER_STAGE_MESH_BIT_EXT: c_int = 128;
pub const VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI: c_int = 16384;
pub const VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI: c_int = 524288;
pub const VK_SHADER_STAGE_RAYGEN_BIT_NV: c_int = 256;
pub const VK_SHADER_STAGE_ANY_HIT_BIT_NV: c_int = 512;
pub const VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV: c_int = 1024;
pub const VK_SHADER_STAGE_MISS_BIT_NV: c_int = 2048;
pub const VK_SHADER_STAGE_INTERSECTION_BIT_NV: c_int = 4096;
pub const VK_SHADER_STAGE_CALLABLE_BIT_NV: c_int = 8192;
pub const VK_SHADER_STAGE_TASK_BIT_NV: c_int = 64;
pub const VK_SHADER_STAGE_MESH_BIT_NV: c_int = 128;
pub const VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkShaderStageFlagBits = c_uint;
pub const VkShaderStageFlagBits = enum_VkShaderStageFlagBits;
pub const VK_CULL_MODE_NONE: c_int = 0;
pub const VK_CULL_MODE_FRONT_BIT: c_int = 1;
pub const VK_CULL_MODE_BACK_BIT: c_int = 2;
pub const VK_CULL_MODE_FRONT_AND_BACK: c_int = 3;
pub const VK_CULL_MODE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCullModeFlagBits = c_uint;
pub const VkCullModeFlagBits = enum_VkCullModeFlagBits;
pub const VkCullModeFlags = VkFlags;
pub const VkPipelineVertexInputStateCreateFlags = VkFlags;
pub const VkPipelineInputAssemblyStateCreateFlags = VkFlags;
pub const VkPipelineTessellationStateCreateFlags = VkFlags;
pub const VkPipelineViewportStateCreateFlags = VkFlags;
pub const VkPipelineRasterizationStateCreateFlags = VkFlags;
pub const VkPipelineMultisampleStateCreateFlags = VkFlags;
pub const VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT: c_int = 1;
pub const VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT: c_int = 2;
pub const VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM: c_int = 1;
pub const VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM: c_int = 2;
pub const VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineDepthStencilStateCreateFlagBits = c_uint;
pub const VkPipelineDepthStencilStateCreateFlagBits = enum_VkPipelineDepthStencilStateCreateFlagBits;
pub const VkPipelineDepthStencilStateCreateFlags = VkFlags;
pub const VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT: c_int = 1;
pub const VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM: c_int = 1;
pub const VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineColorBlendStateCreateFlagBits = c_uint;
pub const VkPipelineColorBlendStateCreateFlagBits = enum_VkPipelineColorBlendStateCreateFlagBits;
pub const VkPipelineColorBlendStateCreateFlags = VkFlags;
pub const VkPipelineDynamicStateCreateFlags = VkFlags;
pub const VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT: c_int = 2;
pub const VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineLayoutCreateFlagBits = c_uint;
pub const VkPipelineLayoutCreateFlagBits = enum_VkPipelineLayoutCreateFlagBits;
pub const VkPipelineLayoutCreateFlags = VkFlags;
pub const VkShaderStageFlags = VkFlags;
pub const VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT: c_int = 1;
pub const VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT: c_int = 2;
pub const VK_SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT: c_int = 8;
pub const VK_SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT: c_int = 4;
pub const VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM: c_int = 16;
pub const VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSamplerCreateFlagBits = c_uint;
pub const VkSamplerCreateFlagBits = enum_VkSamplerCreateFlagBits;
pub const VkSamplerCreateFlags = VkFlags;
pub const VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT: c_int = 1;
pub const VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT: c_int = 2;
pub const VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT: c_int = 4;
pub const VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_SETS_BIT_NV: c_int = 8;
pub const VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_POOLS_BIT_NV: c_int = 16;
pub const VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT: c_int = 2;
pub const VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE: c_int = 4;
pub const VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDescriptorPoolCreateFlagBits = c_uint;
pub const VkDescriptorPoolCreateFlagBits = enum_VkDescriptorPoolCreateFlagBits;
pub const VkDescriptorPoolCreateFlags = VkFlags;
pub const VkDescriptorPoolResetFlags = VkFlags;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT: c_int = 2;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR: c_int = 1;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT: c_int = 16;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT: c_int = 32;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV: c_int = 128;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT: c_int = 4;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_PER_STAGE_BIT_NV: c_int = 64;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT: c_int = 2;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE: c_int = 4;
pub const VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDescriptorSetLayoutCreateFlagBits = c_uint;
pub const VkDescriptorSetLayoutCreateFlagBits = enum_VkDescriptorSetLayoutCreateFlagBits;
pub const VkDescriptorSetLayoutCreateFlags = VkFlags;
pub const VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT: c_int = 1;
pub const VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkAttachmentDescriptionFlagBits = c_uint;
pub const VkAttachmentDescriptionFlagBits = enum_VkAttachmentDescriptionFlagBits;
pub const VkAttachmentDescriptionFlags = VkFlags;
pub const VK_DEPENDENCY_BY_REGION_BIT: c_int = 1;
pub const VK_DEPENDENCY_DEVICE_GROUP_BIT: c_int = 4;
pub const VK_DEPENDENCY_VIEW_LOCAL_BIT: c_int = 2;
pub const VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT: c_int = 8;
pub const VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR: c_int = 2;
pub const VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR: c_int = 4;
pub const VK_DEPENDENCY_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDependencyFlagBits = c_uint;
pub const VkDependencyFlagBits = enum_VkDependencyFlagBits;
pub const VkDependencyFlags = VkFlags;
pub const VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT: c_int = 1;
pub const VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR: c_int = 1;
pub const VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFramebufferCreateFlagBits = c_uint;
pub const VkFramebufferCreateFlagBits = enum_VkFramebufferCreateFlagBits;
pub const VkFramebufferCreateFlags = VkFlags;
pub const VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM: c_int = 2;
pub const VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkRenderPassCreateFlagBits = c_uint;
pub const VkRenderPassCreateFlagBits = enum_VkRenderPassCreateFlagBits;
pub const VkRenderPassCreateFlags = VkFlags;
pub const VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX: c_int = 1;
pub const VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX: c_int = 2;
pub const VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM: c_int = 4;
pub const VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM: c_int = 8;
pub const VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT: c_int = 16;
pub const VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT: c_int = 32;
pub const VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT: c_int = 64;
pub const VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT: c_int = 128;
pub const VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM: c_int = 16;
pub const VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM: c_int = 32;
pub const VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM: c_int = 64;
pub const VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSubpassDescriptionFlagBits = c_uint;
pub const VkSubpassDescriptionFlagBits = enum_VkSubpassDescriptionFlagBits;
pub const VkSubpassDescriptionFlags = VkFlags;
pub const VK_COMMAND_POOL_CREATE_TRANSIENT_BIT: c_int = 1;
pub const VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT: c_int = 2;
pub const VK_COMMAND_POOL_CREATE_PROTECTED_BIT: c_int = 4;
pub const VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCommandPoolCreateFlagBits = c_uint;
pub const VkCommandPoolCreateFlagBits = enum_VkCommandPoolCreateFlagBits;
pub const VkCommandPoolCreateFlags = VkFlags;
pub const VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT: c_int = 1;
pub const VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCommandPoolResetFlagBits = c_uint;
pub const VkCommandPoolResetFlagBits = enum_VkCommandPoolResetFlagBits;
pub const VkCommandPoolResetFlags = VkFlags;
pub const VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT: c_int = 1;
pub const VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT: c_int = 2;
pub const VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT: c_int = 4;
pub const VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCommandBufferUsageFlagBits = c_uint;
pub const VkCommandBufferUsageFlagBits = enum_VkCommandBufferUsageFlagBits;
pub const VkCommandBufferUsageFlags = VkFlags;
pub const VK_QUERY_CONTROL_PRECISE_BIT: c_int = 1;
pub const VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkQueryControlFlagBits = c_uint;
pub const VkQueryControlFlagBits = enum_VkQueryControlFlagBits;
pub const VkQueryControlFlags = VkFlags;
pub const VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT: c_int = 1;
pub const VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkCommandBufferResetFlagBits = c_uint;
pub const VkCommandBufferResetFlagBits = enum_VkCommandBufferResetFlagBits;
pub const VkCommandBufferResetFlags = VkFlags;
pub const VK_STENCIL_FACE_FRONT_BIT: c_int = 1;
pub const VK_STENCIL_FACE_BACK_BIT: c_int = 2;
pub const VK_STENCIL_FACE_FRONT_AND_BACK: c_int = 3;
pub const VK_STENCIL_FRONT_AND_BACK: c_int = 3;
pub const VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkStencilFaceFlagBits = c_uint;
pub const VkStencilFaceFlagBits = enum_VkStencilFaceFlagBits;
pub const VkStencilFaceFlags = VkFlags;
pub const struct_VkExtent2D = extern struct {
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
};
pub const VkExtent2D = struct_VkExtent2D;
pub const struct_VkExtent3D = extern struct {
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
    depth: u32 = @import("std").mem.zeroes(u32),
};
pub const VkExtent3D = struct_VkExtent3D;
pub const struct_VkOffset2D = extern struct {
    x: i32 = @import("std").mem.zeroes(i32),
    y: i32 = @import("std").mem.zeroes(i32),
};
pub const VkOffset2D = struct_VkOffset2D;
pub const struct_VkOffset3D = extern struct {
    x: i32 = @import("std").mem.zeroes(i32),
    y: i32 = @import("std").mem.zeroes(i32),
    z: i32 = @import("std").mem.zeroes(i32),
};
pub const VkOffset3D = struct_VkOffset3D;
pub const struct_VkRect2D = extern struct {
    offset: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    extent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkRect2D = struct_VkRect2D;
pub const struct_VkBaseInStructure = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: [*c]const struct_VkBaseInStructure = @import("std").mem.zeroes([*c]const struct_VkBaseInStructure),
};
pub const VkBaseInStructure = struct_VkBaseInStructure;
pub const struct_VkBaseOutStructure = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: [*c]struct_VkBaseOutStructure = @import("std").mem.zeroes([*c]struct_VkBaseOutStructure),
};
pub const VkBaseOutStructure = struct_VkBaseOutStructure;
pub const struct_VkBufferMemoryBarrier = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dstAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    srcQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    dstQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBufferMemoryBarrier = struct_VkBufferMemoryBarrier;
pub const struct_VkDispatchIndirectCommand = extern struct {
    x: u32 = @import("std").mem.zeroes(u32),
    y: u32 = @import("std").mem.zeroes(u32),
    z: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDispatchIndirectCommand = struct_VkDispatchIndirectCommand;
pub const struct_VkDrawIndexedIndirectCommand = extern struct {
    indexCount: u32 = @import("std").mem.zeroes(u32),
    instanceCount: u32 = @import("std").mem.zeroes(u32),
    firstIndex: u32 = @import("std").mem.zeroes(u32),
    vertexOffset: i32 = @import("std").mem.zeroes(i32),
    firstInstance: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDrawIndexedIndirectCommand = struct_VkDrawIndexedIndirectCommand;
pub const struct_VkDrawIndirectCommand = extern struct {
    vertexCount: u32 = @import("std").mem.zeroes(u32),
    instanceCount: u32 = @import("std").mem.zeroes(u32),
    firstVertex: u32 = @import("std").mem.zeroes(u32),
    firstInstance: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDrawIndirectCommand = struct_VkDrawIndirectCommand;
pub const struct_VkImageSubresourceRange = extern struct {
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
    baseMipLevel: u32 = @import("std").mem.zeroes(u32),
    levelCount: u32 = @import("std").mem.zeroes(u32),
    baseArrayLayer: u32 = @import("std").mem.zeroes(u32),
    layerCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkImageSubresourceRange = struct_VkImageSubresourceRange;
pub const struct_VkImageMemoryBarrier = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dstAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    oldLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    newLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    srcQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    dstQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    subresourceRange: VkImageSubresourceRange = @import("std").mem.zeroes(VkImageSubresourceRange),
};
pub const VkImageMemoryBarrier = struct_VkImageMemoryBarrier;
pub const struct_VkMemoryBarrier = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dstAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
};
pub const VkMemoryBarrier = struct_VkMemoryBarrier;
pub const struct_VkPipelineCacheHeaderVersionOne = extern struct {
    headerSize: u32 = @import("std").mem.zeroes(u32),
    headerVersion: VkPipelineCacheHeaderVersion = @import("std").mem.zeroes(VkPipelineCacheHeaderVersion),
    vendorID: u32 = @import("std").mem.zeroes(u32),
    deviceID: u32 = @import("std").mem.zeroes(u32),
    pipelineCacheUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const VkPipelineCacheHeaderVersionOne = struct_VkPipelineCacheHeaderVersionOne;
pub const PFN_vkAllocationFunction = ?*const fn (?*anyopaque, usize, usize, VkSystemAllocationScope) callconv(.C) ?*anyopaque;
pub const PFN_vkFreeFunction = ?*const fn (?*anyopaque, ?*anyopaque) callconv(.C) void;
pub const PFN_vkInternalAllocationNotification = ?*const fn (?*anyopaque, usize, VkInternalAllocationType, VkSystemAllocationScope) callconv(.C) void;
pub const PFN_vkInternalFreeNotification = ?*const fn (?*anyopaque, usize, VkInternalAllocationType, VkSystemAllocationScope) callconv(.C) void;
pub const PFN_vkReallocationFunction = ?*const fn (?*anyopaque, ?*anyopaque, usize, usize, VkSystemAllocationScope) callconv(.C) ?*anyopaque;
pub const PFN_vkVoidFunction = ?*const fn () callconv(.C) void;
pub const struct_VkAllocationCallbacks = extern struct {
    pUserData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pfnAllocation: PFN_vkAllocationFunction = @import("std").mem.zeroes(PFN_vkAllocationFunction),
    pfnReallocation: PFN_vkReallocationFunction = @import("std").mem.zeroes(PFN_vkReallocationFunction),
    pfnFree: PFN_vkFreeFunction = @import("std").mem.zeroes(PFN_vkFreeFunction),
    pfnInternalAllocation: PFN_vkInternalAllocationNotification = @import("std").mem.zeroes(PFN_vkInternalAllocationNotification),
    pfnInternalFree: PFN_vkInternalFreeNotification = @import("std").mem.zeroes(PFN_vkInternalFreeNotification),
};
pub const VkAllocationCallbacks = struct_VkAllocationCallbacks;
pub const struct_VkApplicationInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pApplicationName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    applicationVersion: u32 = @import("std").mem.zeroes(u32),
    pEngineName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    engineVersion: u32 = @import("std").mem.zeroes(u32),
    apiVersion: u32 = @import("std").mem.zeroes(u32),
};
pub const VkApplicationInfo = struct_VkApplicationInfo;
pub const struct_VkFormatProperties = extern struct {
    linearTilingFeatures: VkFormatFeatureFlags = @import("std").mem.zeroes(VkFormatFeatureFlags),
    optimalTilingFeatures: VkFormatFeatureFlags = @import("std").mem.zeroes(VkFormatFeatureFlags),
    bufferFeatures: VkFormatFeatureFlags = @import("std").mem.zeroes(VkFormatFeatureFlags),
};
pub const VkFormatProperties = struct_VkFormatProperties;
pub const struct_VkImageFormatProperties = extern struct {
    maxExtent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
    maxMipLevels: u32 = @import("std").mem.zeroes(u32),
    maxArrayLayers: u32 = @import("std").mem.zeroes(u32),
    sampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    maxResourceSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkImageFormatProperties = struct_VkImageFormatProperties;
pub const struct_VkInstanceCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkInstanceCreateFlags = @import("std").mem.zeroes(VkInstanceCreateFlags),
    pApplicationInfo: [*c]const VkApplicationInfo = @import("std").mem.zeroes([*c]const VkApplicationInfo),
    enabledLayerCount: u32 = @import("std").mem.zeroes(u32),
    ppEnabledLayerNames: [*c]const [*c]const u8 = @import("std").mem.zeroes([*c]const [*c]const u8),
    enabledExtensionCount: u32 = @import("std").mem.zeroes(u32),
    ppEnabledExtensionNames: [*c]const [*c]const u8 = @import("std").mem.zeroes([*c]const [*c]const u8),
};
pub const VkInstanceCreateInfo = struct_VkInstanceCreateInfo;
pub const struct_VkMemoryHeap = extern struct {
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    flags: VkMemoryHeapFlags = @import("std").mem.zeroes(VkMemoryHeapFlags),
};
pub const VkMemoryHeap = struct_VkMemoryHeap;
pub const struct_VkMemoryType = extern struct {
    propertyFlags: VkMemoryPropertyFlags = @import("std").mem.zeroes(VkMemoryPropertyFlags),
    heapIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMemoryType = struct_VkMemoryType;
pub const struct_VkPhysicalDeviceFeatures = extern struct {
    robustBufferAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fullDrawIndexUint32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    imageCubeArray: VkBool32 = @import("std").mem.zeroes(VkBool32),
    independentBlend: VkBool32 = @import("std").mem.zeroes(VkBool32),
    geometryShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    tessellationShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sampleRateShading: VkBool32 = @import("std").mem.zeroes(VkBool32),
    dualSrcBlend: VkBool32 = @import("std").mem.zeroes(VkBool32),
    logicOp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiDrawIndirect: VkBool32 = @import("std").mem.zeroes(VkBool32),
    drawIndirectFirstInstance: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthClamp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthBiasClamp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fillModeNonSolid: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthBounds: VkBool32 = @import("std").mem.zeroes(VkBool32),
    wideLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    largePoints: VkBool32 = @import("std").mem.zeroes(VkBool32),
    alphaToOne: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiViewport: VkBool32 = @import("std").mem.zeroes(VkBool32),
    samplerAnisotropy: VkBool32 = @import("std").mem.zeroes(VkBool32),
    textureCompressionETC2: VkBool32 = @import("std").mem.zeroes(VkBool32),
    textureCompressionASTC_LDR: VkBool32 = @import("std").mem.zeroes(VkBool32),
    textureCompressionBC: VkBool32 = @import("std").mem.zeroes(VkBool32),
    occlusionQueryPrecise: VkBool32 = @import("std").mem.zeroes(VkBool32),
    pipelineStatisticsQuery: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vertexPipelineStoresAndAtomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentStoresAndAtomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderTessellationAndGeometryPointSize: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderImageGatherExtended: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageExtendedFormats: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageMultisample: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageReadWithoutFormat: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageWriteWithoutFormat: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformBufferArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSampledImageArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageBufferArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderClipDistance: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderCullDistance: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInt64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInt16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderResourceResidency: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderResourceMinLod: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseBinding: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidencyBuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidencyImage2D: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidencyImage3D: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidency2Samples: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidency4Samples: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidency8Samples: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidency16Samples: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseResidencyAliased: VkBool32 = @import("std").mem.zeroes(VkBool32),
    variableMultisampleRate: VkBool32 = @import("std").mem.zeroes(VkBool32),
    inheritedQueries: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFeatures = struct_VkPhysicalDeviceFeatures;
pub const struct_VkPhysicalDeviceLimits = extern struct {
    maxImageDimension1D: u32 = @import("std").mem.zeroes(u32),
    maxImageDimension2D: u32 = @import("std").mem.zeroes(u32),
    maxImageDimension3D: u32 = @import("std").mem.zeroes(u32),
    maxImageDimensionCube: u32 = @import("std").mem.zeroes(u32),
    maxImageArrayLayers: u32 = @import("std").mem.zeroes(u32),
    maxTexelBufferElements: u32 = @import("std").mem.zeroes(u32),
    maxUniformBufferRange: u32 = @import("std").mem.zeroes(u32),
    maxStorageBufferRange: u32 = @import("std").mem.zeroes(u32),
    maxPushConstantsSize: u32 = @import("std").mem.zeroes(u32),
    maxMemoryAllocationCount: u32 = @import("std").mem.zeroes(u32),
    maxSamplerAllocationCount: u32 = @import("std").mem.zeroes(u32),
    bufferImageGranularity: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    sparseAddressSpaceSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    maxBoundDescriptorSets: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorSamplers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUniformBuffers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorStorageBuffers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorSampledImages: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorStorageImages: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorInputAttachments: u32 = @import("std").mem.zeroes(u32),
    maxPerStageResources: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetSamplers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUniformBuffers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUniformBuffersDynamic: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetStorageBuffers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetStorageBuffersDynamic: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetSampledImages: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetStorageImages: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetInputAttachments: u32 = @import("std").mem.zeroes(u32),
    maxVertexInputAttributes: u32 = @import("std").mem.zeroes(u32),
    maxVertexInputBindings: u32 = @import("std").mem.zeroes(u32),
    maxVertexInputAttributeOffset: u32 = @import("std").mem.zeroes(u32),
    maxVertexInputBindingStride: u32 = @import("std").mem.zeroes(u32),
    maxVertexOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxTessellationGenerationLevel: u32 = @import("std").mem.zeroes(u32),
    maxTessellationPatchSize: u32 = @import("std").mem.zeroes(u32),
    maxTessellationControlPerVertexInputComponents: u32 = @import("std").mem.zeroes(u32),
    maxTessellationControlPerVertexOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxTessellationControlPerPatchOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxTessellationControlTotalOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxTessellationEvaluationInputComponents: u32 = @import("std").mem.zeroes(u32),
    maxTessellationEvaluationOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxGeometryShaderInvocations: u32 = @import("std").mem.zeroes(u32),
    maxGeometryInputComponents: u32 = @import("std").mem.zeroes(u32),
    maxGeometryOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxGeometryOutputVertices: u32 = @import("std").mem.zeroes(u32),
    maxGeometryTotalOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxFragmentInputComponents: u32 = @import("std").mem.zeroes(u32),
    maxFragmentOutputAttachments: u32 = @import("std").mem.zeroes(u32),
    maxFragmentDualSrcAttachments: u32 = @import("std").mem.zeroes(u32),
    maxFragmentCombinedOutputResources: u32 = @import("std").mem.zeroes(u32),
    maxComputeSharedMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxComputeWorkGroupCount: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxComputeWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    maxComputeWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
    subPixelPrecisionBits: u32 = @import("std").mem.zeroes(u32),
    subTexelPrecisionBits: u32 = @import("std").mem.zeroes(u32),
    mipmapPrecisionBits: u32 = @import("std").mem.zeroes(u32),
    maxDrawIndexedIndexValue: u32 = @import("std").mem.zeroes(u32),
    maxDrawIndirectCount: u32 = @import("std").mem.zeroes(u32),
    maxSamplerLodBias: f32 = @import("std").mem.zeroes(f32),
    maxSamplerAnisotropy: f32 = @import("std").mem.zeroes(f32),
    maxViewports: u32 = @import("std").mem.zeroes(u32),
    maxViewportDimensions: [2]u32 = @import("std").mem.zeroes([2]u32),
    viewportBoundsRange: [2]f32 = @import("std").mem.zeroes([2]f32),
    viewportSubPixelBits: u32 = @import("std").mem.zeroes(u32),
    minMemoryMapAlignment: usize = @import("std").mem.zeroes(usize),
    minTexelBufferOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    minUniformBufferOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    minStorageBufferOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    minTexelOffset: i32 = @import("std").mem.zeroes(i32),
    maxTexelOffset: u32 = @import("std").mem.zeroes(u32),
    minTexelGatherOffset: i32 = @import("std").mem.zeroes(i32),
    maxTexelGatherOffset: u32 = @import("std").mem.zeroes(u32),
    minInterpolationOffset: f32 = @import("std").mem.zeroes(f32),
    maxInterpolationOffset: f32 = @import("std").mem.zeroes(f32),
    subPixelInterpolationOffsetBits: u32 = @import("std").mem.zeroes(u32),
    maxFramebufferWidth: u32 = @import("std").mem.zeroes(u32),
    maxFramebufferHeight: u32 = @import("std").mem.zeroes(u32),
    maxFramebufferLayers: u32 = @import("std").mem.zeroes(u32),
    framebufferColorSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    framebufferDepthSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    framebufferStencilSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    maxColorAttachments: u32 = @import("std").mem.zeroes(u32),
    sampledImageColorSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    sampledImageIntegerSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    sampledImageDepthSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    sampledImageStencilSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    storageImageSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    maxSampleMaskWords: u32 = @import("std").mem.zeroes(u32),
    timestampComputeAndGraphics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    timestampPeriod: f32 = @import("std").mem.zeroes(f32),
    maxClipDistances: u32 = @import("std").mem.zeroes(u32),
    maxCullDistances: u32 = @import("std").mem.zeroes(u32),
    maxCombinedClipAndCullDistances: u32 = @import("std").mem.zeroes(u32),
    discreteQueuePriorities: u32 = @import("std").mem.zeroes(u32),
    pointSizeRange: [2]f32 = @import("std").mem.zeroes([2]f32),
    lineWidthRange: [2]f32 = @import("std").mem.zeroes([2]f32),
    pointSizeGranularity: f32 = @import("std").mem.zeroes(f32),
    lineWidthGranularity: f32 = @import("std").mem.zeroes(f32),
    strictLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    standardSampleLocations: VkBool32 = @import("std").mem.zeroes(VkBool32),
    optimalBufferCopyOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    optimalBufferCopyRowPitchAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    nonCoherentAtomSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceLimits = struct_VkPhysicalDeviceLimits;
pub const struct_VkPhysicalDeviceMemoryProperties = extern struct {
    memoryTypeCount: u32 = @import("std").mem.zeroes(u32),
    memoryTypes: [32]VkMemoryType = @import("std").mem.zeroes([32]VkMemoryType),
    memoryHeapCount: u32 = @import("std").mem.zeroes(u32),
    memoryHeaps: [16]VkMemoryHeap = @import("std").mem.zeroes([16]VkMemoryHeap),
};
pub const VkPhysicalDeviceMemoryProperties = struct_VkPhysicalDeviceMemoryProperties;
pub const struct_VkPhysicalDeviceSparseProperties = extern struct {
    residencyStandard2DBlockShape: VkBool32 = @import("std").mem.zeroes(VkBool32),
    residencyStandard2DMultisampleBlockShape: VkBool32 = @import("std").mem.zeroes(VkBool32),
    residencyStandard3DBlockShape: VkBool32 = @import("std").mem.zeroes(VkBool32),
    residencyAlignedMipSize: VkBool32 = @import("std").mem.zeroes(VkBool32),
    residencyNonResidentStrict: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSparseProperties = struct_VkPhysicalDeviceSparseProperties;
pub const struct_VkPhysicalDeviceProperties = extern struct {
    apiVersion: u32 = @import("std").mem.zeroes(u32),
    driverVersion: u32 = @import("std").mem.zeroes(u32),
    vendorID: u32 = @import("std").mem.zeroes(u32),
    deviceID: u32 = @import("std").mem.zeroes(u32),
    deviceType: VkPhysicalDeviceType = @import("std").mem.zeroes(VkPhysicalDeviceType),
    deviceName: [256]u8 = @import("std").mem.zeroes([256]u8),
    pipelineCacheUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    limits: VkPhysicalDeviceLimits = @import("std").mem.zeroes(VkPhysicalDeviceLimits),
    sparseProperties: VkPhysicalDeviceSparseProperties = @import("std").mem.zeroes(VkPhysicalDeviceSparseProperties),
};
pub const VkPhysicalDeviceProperties = struct_VkPhysicalDeviceProperties;
pub const struct_VkQueueFamilyProperties = extern struct {
    queueFlags: VkQueueFlags = @import("std").mem.zeroes(VkQueueFlags),
    queueCount: u32 = @import("std").mem.zeroes(u32),
    timestampValidBits: u32 = @import("std").mem.zeroes(u32),
    minImageTransferGranularity: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkQueueFamilyProperties = struct_VkQueueFamilyProperties;
pub const struct_VkDeviceQueueCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDeviceQueueCreateFlags = @import("std").mem.zeroes(VkDeviceQueueCreateFlags),
    queueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    queueCount: u32 = @import("std").mem.zeroes(u32),
    pQueuePriorities: [*c]const f32 = @import("std").mem.zeroes([*c]const f32),
};
pub const VkDeviceQueueCreateInfo = struct_VkDeviceQueueCreateInfo;
pub const struct_VkDeviceCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDeviceCreateFlags = @import("std").mem.zeroes(VkDeviceCreateFlags),
    queueCreateInfoCount: u32 = @import("std").mem.zeroes(u32),
    pQueueCreateInfos: [*c]const VkDeviceQueueCreateInfo = @import("std").mem.zeroes([*c]const VkDeviceQueueCreateInfo),
    enabledLayerCount: u32 = @import("std").mem.zeroes(u32),
    ppEnabledLayerNames: [*c]const [*c]const u8 = @import("std").mem.zeroes([*c]const [*c]const u8),
    enabledExtensionCount: u32 = @import("std").mem.zeroes(u32),
    ppEnabledExtensionNames: [*c]const [*c]const u8 = @import("std").mem.zeroes([*c]const [*c]const u8),
    pEnabledFeatures: [*c]const VkPhysicalDeviceFeatures = @import("std").mem.zeroes([*c]const VkPhysicalDeviceFeatures),
};
pub const VkDeviceCreateInfo = struct_VkDeviceCreateInfo;
pub const struct_VkExtensionProperties = extern struct {
    extensionName: [256]u8 = @import("std").mem.zeroes([256]u8),
    specVersion: u32 = @import("std").mem.zeroes(u32),
};
pub const VkExtensionProperties = struct_VkExtensionProperties;
pub const struct_VkLayerProperties = extern struct {
    layerName: [256]u8 = @import("std").mem.zeroes([256]u8),
    specVersion: u32 = @import("std").mem.zeroes(u32),
    implementationVersion: u32 = @import("std").mem.zeroes(u32),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
};
pub const VkLayerProperties = struct_VkLayerProperties;
pub const struct_VkSubmitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    waitSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pWaitSemaphores: [*c]const VkSemaphore = @import("std").mem.zeroes([*c]const VkSemaphore),
    pWaitDstStageMask: [*c]const VkPipelineStageFlags = @import("std").mem.zeroes([*c]const VkPipelineStageFlags),
    commandBufferCount: u32 = @import("std").mem.zeroes(u32),
    pCommandBuffers: [*c]const VkCommandBuffer = @import("std").mem.zeroes([*c]const VkCommandBuffer),
    signalSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pSignalSemaphores: [*c]const VkSemaphore = @import("std").mem.zeroes([*c]const VkSemaphore),
};
pub const VkSubmitInfo = struct_VkSubmitInfo;
pub const struct_VkMappedMemoryRange = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkMappedMemoryRange = struct_VkMappedMemoryRange;
pub const struct_VkMemoryAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    allocationSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    memoryTypeIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMemoryAllocateInfo = struct_VkMemoryAllocateInfo;
pub const struct_VkMemoryRequirements = extern struct {
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    alignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    memoryTypeBits: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMemoryRequirements = struct_VkMemoryRequirements;
pub const struct_VkSparseMemoryBind = extern struct {
    resourceOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    memoryOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    flags: VkSparseMemoryBindFlags = @import("std").mem.zeroes(VkSparseMemoryBindFlags),
};
pub const VkSparseMemoryBind = struct_VkSparseMemoryBind;
pub const struct_VkSparseBufferMemoryBindInfo = extern struct {
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    bindCount: u32 = @import("std").mem.zeroes(u32),
    pBinds: [*c]const VkSparseMemoryBind = @import("std").mem.zeroes([*c]const VkSparseMemoryBind),
};
pub const VkSparseBufferMemoryBindInfo = struct_VkSparseBufferMemoryBindInfo;
pub const struct_VkSparseImageOpaqueMemoryBindInfo = extern struct {
    image: VkImage = @import("std").mem.zeroes(VkImage),
    bindCount: u32 = @import("std").mem.zeroes(u32),
    pBinds: [*c]const VkSparseMemoryBind = @import("std").mem.zeroes([*c]const VkSparseMemoryBind),
};
pub const VkSparseImageOpaqueMemoryBindInfo = struct_VkSparseImageOpaqueMemoryBindInfo;
pub const struct_VkImageSubresource = extern struct {
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
    mipLevel: u32 = @import("std").mem.zeroes(u32),
    arrayLayer: u32 = @import("std").mem.zeroes(u32),
};
pub const VkImageSubresource = struct_VkImageSubresource;
pub const struct_VkSparseImageMemoryBind = extern struct {
    subresource: VkImageSubresource = @import("std").mem.zeroes(VkImageSubresource),
    offset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    extent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    memoryOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    flags: VkSparseMemoryBindFlags = @import("std").mem.zeroes(VkSparseMemoryBindFlags),
};
pub const VkSparseImageMemoryBind = struct_VkSparseImageMemoryBind;
pub const struct_VkSparseImageMemoryBindInfo = extern struct {
    image: VkImage = @import("std").mem.zeroes(VkImage),
    bindCount: u32 = @import("std").mem.zeroes(u32),
    pBinds: [*c]const VkSparseImageMemoryBind = @import("std").mem.zeroes([*c]const VkSparseImageMemoryBind),
};
pub const VkSparseImageMemoryBindInfo = struct_VkSparseImageMemoryBindInfo;
pub const struct_VkBindSparseInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    waitSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pWaitSemaphores: [*c]const VkSemaphore = @import("std").mem.zeroes([*c]const VkSemaphore),
    bufferBindCount: u32 = @import("std").mem.zeroes(u32),
    pBufferBinds: [*c]const VkSparseBufferMemoryBindInfo = @import("std").mem.zeroes([*c]const VkSparseBufferMemoryBindInfo),
    imageOpaqueBindCount: u32 = @import("std").mem.zeroes(u32),
    pImageOpaqueBinds: [*c]const VkSparseImageOpaqueMemoryBindInfo = @import("std").mem.zeroes([*c]const VkSparseImageOpaqueMemoryBindInfo),
    imageBindCount: u32 = @import("std").mem.zeroes(u32),
    pImageBinds: [*c]const VkSparseImageMemoryBindInfo = @import("std").mem.zeroes([*c]const VkSparseImageMemoryBindInfo),
    signalSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pSignalSemaphores: [*c]const VkSemaphore = @import("std").mem.zeroes([*c]const VkSemaphore),
};
pub const VkBindSparseInfo = struct_VkBindSparseInfo;
pub const struct_VkSparseImageFormatProperties = extern struct {
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
    imageGranularity: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
    flags: VkSparseImageFormatFlags = @import("std").mem.zeroes(VkSparseImageFormatFlags),
};
pub const VkSparseImageFormatProperties = struct_VkSparseImageFormatProperties;
pub const struct_VkSparseImageMemoryRequirements = extern struct {
    formatProperties: VkSparseImageFormatProperties = @import("std").mem.zeroes(VkSparseImageFormatProperties),
    imageMipTailFirstLod: u32 = @import("std").mem.zeroes(u32),
    imageMipTailSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    imageMipTailOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    imageMipTailStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkSparseImageMemoryRequirements = struct_VkSparseImageMemoryRequirements;
pub const struct_VkFenceCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkFenceCreateFlags = @import("std").mem.zeroes(VkFenceCreateFlags),
};
pub const VkFenceCreateInfo = struct_VkFenceCreateInfo;
pub const struct_VkSemaphoreCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkSemaphoreCreateFlags = @import("std").mem.zeroes(VkSemaphoreCreateFlags),
};
pub const VkSemaphoreCreateInfo = struct_VkSemaphoreCreateInfo;
pub const struct_VkEventCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkEventCreateFlags = @import("std").mem.zeroes(VkEventCreateFlags),
};
pub const VkEventCreateInfo = struct_VkEventCreateInfo;
pub const struct_VkQueryPoolCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkQueryPoolCreateFlags = @import("std").mem.zeroes(VkQueryPoolCreateFlags),
    queryType: VkQueryType = @import("std").mem.zeroes(VkQueryType),
    queryCount: u32 = @import("std").mem.zeroes(u32),
    pipelineStatistics: VkQueryPipelineStatisticFlags = @import("std").mem.zeroes(VkQueryPipelineStatisticFlags),
};
pub const VkQueryPoolCreateInfo = struct_VkQueryPoolCreateInfo;
pub const struct_VkBufferCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkBufferCreateFlags = @import("std").mem.zeroes(VkBufferCreateFlags),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    usage: VkBufferUsageFlags = @import("std").mem.zeroes(VkBufferUsageFlags),
    sharingMode: VkSharingMode = @import("std").mem.zeroes(VkSharingMode),
    queueFamilyIndexCount: u32 = @import("std").mem.zeroes(u32),
    pQueueFamilyIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkBufferCreateInfo = struct_VkBufferCreateInfo;
pub const struct_VkBufferViewCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkBufferViewCreateFlags = @import("std").mem.zeroes(VkBufferViewCreateFlags),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    range: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBufferViewCreateInfo = struct_VkBufferViewCreateInfo;
pub const struct_VkImageCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkImageCreateFlags = @import("std").mem.zeroes(VkImageCreateFlags),
    imageType: VkImageType = @import("std").mem.zeroes(VkImageType),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    extent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
    mipLevels: u32 = @import("std").mem.zeroes(u32),
    arrayLayers: u32 = @import("std").mem.zeroes(u32),
    samples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    tiling: VkImageTiling = @import("std").mem.zeroes(VkImageTiling),
    usage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    sharingMode: VkSharingMode = @import("std").mem.zeroes(VkSharingMode),
    queueFamilyIndexCount: u32 = @import("std").mem.zeroes(u32),
    pQueueFamilyIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    initialLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkImageCreateInfo = struct_VkImageCreateInfo;
pub const struct_VkSubresourceLayout = extern struct {
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    rowPitch: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    arrayPitch: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    depthPitch: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkSubresourceLayout = struct_VkSubresourceLayout;
pub const struct_VkComponentMapping = extern struct {
    r: VkComponentSwizzle = @import("std").mem.zeroes(VkComponentSwizzle),
    g: VkComponentSwizzle = @import("std").mem.zeroes(VkComponentSwizzle),
    b: VkComponentSwizzle = @import("std").mem.zeroes(VkComponentSwizzle),
    a: VkComponentSwizzle = @import("std").mem.zeroes(VkComponentSwizzle),
};
pub const VkComponentMapping = struct_VkComponentMapping;
pub const struct_VkImageViewCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkImageViewCreateFlags = @import("std").mem.zeroes(VkImageViewCreateFlags),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    viewType: VkImageViewType = @import("std").mem.zeroes(VkImageViewType),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    components: VkComponentMapping = @import("std").mem.zeroes(VkComponentMapping),
    subresourceRange: VkImageSubresourceRange = @import("std").mem.zeroes(VkImageSubresourceRange),
};
pub const VkImageViewCreateInfo = struct_VkImageViewCreateInfo;
pub const struct_VkShaderModuleCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkShaderModuleCreateFlags = @import("std").mem.zeroes(VkShaderModuleCreateFlags),
    codeSize: usize = @import("std").mem.zeroes(usize),
    pCode: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkShaderModuleCreateInfo = struct_VkShaderModuleCreateInfo;
pub const struct_VkPipelineCacheCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCacheCreateFlags = @import("std").mem.zeroes(VkPipelineCacheCreateFlags),
    initialDataSize: usize = @import("std").mem.zeroes(usize),
    pInitialData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkPipelineCacheCreateInfo = struct_VkPipelineCacheCreateInfo;
pub const struct_VkSpecializationMapEntry = extern struct {
    constantID: u32 = @import("std").mem.zeroes(u32),
    offset: u32 = @import("std").mem.zeroes(u32),
    size: usize = @import("std").mem.zeroes(usize),
};
pub const VkSpecializationMapEntry = struct_VkSpecializationMapEntry;
pub const struct_VkSpecializationInfo = extern struct {
    mapEntryCount: u32 = @import("std").mem.zeroes(u32),
    pMapEntries: [*c]const VkSpecializationMapEntry = @import("std").mem.zeroes([*c]const VkSpecializationMapEntry),
    dataSize: usize = @import("std").mem.zeroes(usize),
    pData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkSpecializationInfo = struct_VkSpecializationInfo;
pub const struct_VkPipelineShaderStageCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineShaderStageCreateFlags = @import("std").mem.zeroes(VkPipelineShaderStageCreateFlags),
    stage: VkShaderStageFlagBits = @import("std").mem.zeroes(VkShaderStageFlagBits),
    module: VkShaderModule = @import("std").mem.zeroes(VkShaderModule),
    pName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    pSpecializationInfo: [*c]const VkSpecializationInfo = @import("std").mem.zeroes([*c]const VkSpecializationInfo),
};
pub const VkPipelineShaderStageCreateInfo = struct_VkPipelineShaderStageCreateInfo;
pub const struct_VkComputePipelineCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCreateFlags = @import("std").mem.zeroes(VkPipelineCreateFlags),
    stage: VkPipelineShaderStageCreateInfo = @import("std").mem.zeroes(VkPipelineShaderStageCreateInfo),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    basePipelineHandle: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    basePipelineIndex: i32 = @import("std").mem.zeroes(i32),
};
pub const VkComputePipelineCreateInfo = struct_VkComputePipelineCreateInfo;
pub const struct_VkVertexInputBindingDescription = extern struct {
    binding: u32 = @import("std").mem.zeroes(u32),
    stride: u32 = @import("std").mem.zeroes(u32),
    inputRate: VkVertexInputRate = @import("std").mem.zeroes(VkVertexInputRate),
};
pub const VkVertexInputBindingDescription = struct_VkVertexInputBindingDescription;
pub const struct_VkVertexInputAttributeDescription = extern struct {
    location: u32 = @import("std").mem.zeroes(u32),
    binding: u32 = @import("std").mem.zeroes(u32),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    offset: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVertexInputAttributeDescription = struct_VkVertexInputAttributeDescription;
pub const struct_VkPipelineVertexInputStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineVertexInputStateCreateFlags = @import("std").mem.zeroes(VkPipelineVertexInputStateCreateFlags),
    vertexBindingDescriptionCount: u32 = @import("std").mem.zeroes(u32),
    pVertexBindingDescriptions: [*c]const VkVertexInputBindingDescription = @import("std").mem.zeroes([*c]const VkVertexInputBindingDescription),
    vertexAttributeDescriptionCount: u32 = @import("std").mem.zeroes(u32),
    pVertexAttributeDescriptions: [*c]const VkVertexInputAttributeDescription = @import("std").mem.zeroes([*c]const VkVertexInputAttributeDescription),
};
pub const VkPipelineVertexInputStateCreateInfo = struct_VkPipelineVertexInputStateCreateInfo;
pub const struct_VkPipelineInputAssemblyStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineInputAssemblyStateCreateFlags = @import("std").mem.zeroes(VkPipelineInputAssemblyStateCreateFlags),
    topology: VkPrimitiveTopology = @import("std").mem.zeroes(VkPrimitiveTopology),
    primitiveRestartEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPipelineInputAssemblyStateCreateInfo = struct_VkPipelineInputAssemblyStateCreateInfo;
pub const struct_VkPipelineTessellationStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineTessellationStateCreateFlags = @import("std").mem.zeroes(VkPipelineTessellationStateCreateFlags),
    patchControlPoints: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPipelineTessellationStateCreateInfo = struct_VkPipelineTessellationStateCreateInfo;
pub const struct_VkViewport = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    width: f32 = @import("std").mem.zeroes(f32),
    height: f32 = @import("std").mem.zeroes(f32),
    minDepth: f32 = @import("std").mem.zeroes(f32),
    maxDepth: f32 = @import("std").mem.zeroes(f32),
};
pub const VkViewport = struct_VkViewport;
pub const struct_VkPipelineViewportStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineViewportStateCreateFlags = @import("std").mem.zeroes(VkPipelineViewportStateCreateFlags),
    viewportCount: u32 = @import("std").mem.zeroes(u32),
    pViewports: [*c]const VkViewport = @import("std").mem.zeroes([*c]const VkViewport),
    scissorCount: u32 = @import("std").mem.zeroes(u32),
    pScissors: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkPipelineViewportStateCreateInfo = struct_VkPipelineViewportStateCreateInfo;
pub const struct_VkPipelineRasterizationStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineRasterizationStateCreateFlags = @import("std").mem.zeroes(VkPipelineRasterizationStateCreateFlags),
    depthClampEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rasterizerDiscardEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    polygonMode: VkPolygonMode = @import("std").mem.zeroes(VkPolygonMode),
    cullMode: VkCullModeFlags = @import("std").mem.zeroes(VkCullModeFlags),
    frontFace: VkFrontFace = @import("std").mem.zeroes(VkFrontFace),
    depthBiasEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthBiasConstantFactor: f32 = @import("std").mem.zeroes(f32),
    depthBiasClamp: f32 = @import("std").mem.zeroes(f32),
    depthBiasSlopeFactor: f32 = @import("std").mem.zeroes(f32),
    lineWidth: f32 = @import("std").mem.zeroes(f32),
};
pub const VkPipelineRasterizationStateCreateInfo = struct_VkPipelineRasterizationStateCreateInfo;
pub const struct_VkPipelineMultisampleStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineMultisampleStateCreateFlags = @import("std").mem.zeroes(VkPipelineMultisampleStateCreateFlags),
    rasterizationSamples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    sampleShadingEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minSampleShading: f32 = @import("std").mem.zeroes(f32),
    pSampleMask: [*c]const VkSampleMask = @import("std").mem.zeroes([*c]const VkSampleMask),
    alphaToCoverageEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    alphaToOneEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPipelineMultisampleStateCreateInfo = struct_VkPipelineMultisampleStateCreateInfo;
pub const struct_VkStencilOpState = extern struct {
    failOp: VkStencilOp = @import("std").mem.zeroes(VkStencilOp),
    passOp: VkStencilOp = @import("std").mem.zeroes(VkStencilOp),
    depthFailOp: VkStencilOp = @import("std").mem.zeroes(VkStencilOp),
    compareOp: VkCompareOp = @import("std").mem.zeroes(VkCompareOp),
    compareMask: u32 = @import("std").mem.zeroes(u32),
    writeMask: u32 = @import("std").mem.zeroes(u32),
    reference: u32 = @import("std").mem.zeroes(u32),
};
pub const VkStencilOpState = struct_VkStencilOpState;
pub const struct_VkPipelineDepthStencilStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineDepthStencilStateCreateFlags = @import("std").mem.zeroes(VkPipelineDepthStencilStateCreateFlags),
    depthTestEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthWriteEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthCompareOp: VkCompareOp = @import("std").mem.zeroes(VkCompareOp),
    depthBoundsTestEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stencilTestEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    front: VkStencilOpState = @import("std").mem.zeroes(VkStencilOpState),
    back: VkStencilOpState = @import("std").mem.zeroes(VkStencilOpState),
    minDepthBounds: f32 = @import("std").mem.zeroes(f32),
    maxDepthBounds: f32 = @import("std").mem.zeroes(f32),
};
pub const VkPipelineDepthStencilStateCreateInfo = struct_VkPipelineDepthStencilStateCreateInfo;
pub const struct_VkPipelineColorBlendAttachmentState = extern struct {
    blendEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    srcColorBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    dstColorBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    colorBlendOp: VkBlendOp = @import("std").mem.zeroes(VkBlendOp),
    srcAlphaBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    dstAlphaBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    alphaBlendOp: VkBlendOp = @import("std").mem.zeroes(VkBlendOp),
    colorWriteMask: VkColorComponentFlags = @import("std").mem.zeroes(VkColorComponentFlags),
};
pub const VkPipelineColorBlendAttachmentState = struct_VkPipelineColorBlendAttachmentState;
pub const struct_VkPipelineColorBlendStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineColorBlendStateCreateFlags = @import("std").mem.zeroes(VkPipelineColorBlendStateCreateFlags),
    logicOpEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    logicOp: VkLogicOp = @import("std").mem.zeroes(VkLogicOp),
    attachmentCount: u32 = @import("std").mem.zeroes(u32),
    pAttachments: [*c]const VkPipelineColorBlendAttachmentState = @import("std").mem.zeroes([*c]const VkPipelineColorBlendAttachmentState),
    blendConstants: [4]f32 = @import("std").mem.zeroes([4]f32),
};
pub const VkPipelineColorBlendStateCreateInfo = struct_VkPipelineColorBlendStateCreateInfo;
pub const struct_VkPipelineDynamicStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineDynamicStateCreateFlags = @import("std").mem.zeroes(VkPipelineDynamicStateCreateFlags),
    dynamicStateCount: u32 = @import("std").mem.zeroes(u32),
    pDynamicStates: [*c]const VkDynamicState = @import("std").mem.zeroes([*c]const VkDynamicState),
};
pub const VkPipelineDynamicStateCreateInfo = struct_VkPipelineDynamicStateCreateInfo;
pub const struct_VkGraphicsPipelineCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCreateFlags = @import("std").mem.zeroes(VkPipelineCreateFlags),
    stageCount: u32 = @import("std").mem.zeroes(u32),
    pStages: [*c]const VkPipelineShaderStageCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineShaderStageCreateInfo),
    pVertexInputState: [*c]const VkPipelineVertexInputStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineVertexInputStateCreateInfo),
    pInputAssemblyState: [*c]const VkPipelineInputAssemblyStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineInputAssemblyStateCreateInfo),
    pTessellationState: [*c]const VkPipelineTessellationStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineTessellationStateCreateInfo),
    pViewportState: [*c]const VkPipelineViewportStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineViewportStateCreateInfo),
    pRasterizationState: [*c]const VkPipelineRasterizationStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineRasterizationStateCreateInfo),
    pMultisampleState: [*c]const VkPipelineMultisampleStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineMultisampleStateCreateInfo),
    pDepthStencilState: [*c]const VkPipelineDepthStencilStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineDepthStencilStateCreateInfo),
    pColorBlendState: [*c]const VkPipelineColorBlendStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineColorBlendStateCreateInfo),
    pDynamicState: [*c]const VkPipelineDynamicStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineDynamicStateCreateInfo),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    renderPass: VkRenderPass = @import("std").mem.zeroes(VkRenderPass),
    subpass: u32 = @import("std").mem.zeroes(u32),
    basePipelineHandle: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    basePipelineIndex: i32 = @import("std").mem.zeroes(i32),
};
pub const VkGraphicsPipelineCreateInfo = struct_VkGraphicsPipelineCreateInfo;
pub const struct_VkPushConstantRange = extern struct {
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    offset: u32 = @import("std").mem.zeroes(u32),
    size: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPushConstantRange = struct_VkPushConstantRange;
pub const struct_VkPipelineLayoutCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineLayoutCreateFlags = @import("std").mem.zeroes(VkPipelineLayoutCreateFlags),
    setLayoutCount: u32 = @import("std").mem.zeroes(u32),
    pSetLayouts: [*c]const VkDescriptorSetLayout = @import("std").mem.zeroes([*c]const VkDescriptorSetLayout),
    pushConstantRangeCount: u32 = @import("std").mem.zeroes(u32),
    pPushConstantRanges: [*c]const VkPushConstantRange = @import("std").mem.zeroes([*c]const VkPushConstantRange),
};
pub const VkPipelineLayoutCreateInfo = struct_VkPipelineLayoutCreateInfo;
pub const struct_VkSamplerCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkSamplerCreateFlags = @import("std").mem.zeroes(VkSamplerCreateFlags),
    magFilter: VkFilter = @import("std").mem.zeroes(VkFilter),
    minFilter: VkFilter = @import("std").mem.zeroes(VkFilter),
    mipmapMode: VkSamplerMipmapMode = @import("std").mem.zeroes(VkSamplerMipmapMode),
    addressModeU: VkSamplerAddressMode = @import("std").mem.zeroes(VkSamplerAddressMode),
    addressModeV: VkSamplerAddressMode = @import("std").mem.zeroes(VkSamplerAddressMode),
    addressModeW: VkSamplerAddressMode = @import("std").mem.zeroes(VkSamplerAddressMode),
    mipLodBias: f32 = @import("std").mem.zeroes(f32),
    anisotropyEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxAnisotropy: f32 = @import("std").mem.zeroes(f32),
    compareEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    compareOp: VkCompareOp = @import("std").mem.zeroes(VkCompareOp),
    minLod: f32 = @import("std").mem.zeroes(f32),
    maxLod: f32 = @import("std").mem.zeroes(f32),
    borderColor: VkBorderColor = @import("std").mem.zeroes(VkBorderColor),
    unnormalizedCoordinates: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSamplerCreateInfo = struct_VkSamplerCreateInfo;
pub const struct_VkCopyDescriptorSet = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcSet: VkDescriptorSet = @import("std").mem.zeroes(VkDescriptorSet),
    srcBinding: u32 = @import("std").mem.zeroes(u32),
    srcArrayElement: u32 = @import("std").mem.zeroes(u32),
    dstSet: VkDescriptorSet = @import("std").mem.zeroes(VkDescriptorSet),
    dstBinding: u32 = @import("std").mem.zeroes(u32),
    dstArrayElement: u32 = @import("std").mem.zeroes(u32),
    descriptorCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkCopyDescriptorSet = struct_VkCopyDescriptorSet;
pub const struct_VkDescriptorBufferInfo = extern struct {
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    range: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkDescriptorBufferInfo = struct_VkDescriptorBufferInfo;
pub const struct_VkDescriptorImageInfo = extern struct {
    sampler: VkSampler = @import("std").mem.zeroes(VkSampler),
    imageView: VkImageView = @import("std").mem.zeroes(VkImageView),
    imageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkDescriptorImageInfo = struct_VkDescriptorImageInfo;
pub const struct_VkDescriptorPoolSize = extern struct {
    type: VkDescriptorType = @import("std").mem.zeroes(VkDescriptorType),
    descriptorCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDescriptorPoolSize = struct_VkDescriptorPoolSize;
pub const struct_VkDescriptorPoolCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDescriptorPoolCreateFlags = @import("std").mem.zeroes(VkDescriptorPoolCreateFlags),
    maxSets: u32 = @import("std").mem.zeroes(u32),
    poolSizeCount: u32 = @import("std").mem.zeroes(u32),
    pPoolSizes: [*c]const VkDescriptorPoolSize = @import("std").mem.zeroes([*c]const VkDescriptorPoolSize),
};
pub const VkDescriptorPoolCreateInfo = struct_VkDescriptorPoolCreateInfo;
pub const struct_VkDescriptorSetAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    descriptorPool: VkDescriptorPool = @import("std").mem.zeroes(VkDescriptorPool),
    descriptorSetCount: u32 = @import("std").mem.zeroes(u32),
    pSetLayouts: [*c]const VkDescriptorSetLayout = @import("std").mem.zeroes([*c]const VkDescriptorSetLayout),
};
pub const VkDescriptorSetAllocateInfo = struct_VkDescriptorSetAllocateInfo;
pub const struct_VkDescriptorSetLayoutBinding = extern struct {
    binding: u32 = @import("std").mem.zeroes(u32),
    descriptorType: VkDescriptorType = @import("std").mem.zeroes(VkDescriptorType),
    descriptorCount: u32 = @import("std").mem.zeroes(u32),
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    pImmutableSamplers: [*c]const VkSampler = @import("std").mem.zeroes([*c]const VkSampler),
};
pub const VkDescriptorSetLayoutBinding = struct_VkDescriptorSetLayoutBinding;
pub const struct_VkDescriptorSetLayoutCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDescriptorSetLayoutCreateFlags = @import("std").mem.zeroes(VkDescriptorSetLayoutCreateFlags),
    bindingCount: u32 = @import("std").mem.zeroes(u32),
    pBindings: [*c]const VkDescriptorSetLayoutBinding = @import("std").mem.zeroes([*c]const VkDescriptorSetLayoutBinding),
};
pub const VkDescriptorSetLayoutCreateInfo = struct_VkDescriptorSetLayoutCreateInfo;
pub const struct_VkWriteDescriptorSet = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dstSet: VkDescriptorSet = @import("std").mem.zeroes(VkDescriptorSet),
    dstBinding: u32 = @import("std").mem.zeroes(u32),
    dstArrayElement: u32 = @import("std").mem.zeroes(u32),
    descriptorCount: u32 = @import("std").mem.zeroes(u32),
    descriptorType: VkDescriptorType = @import("std").mem.zeroes(VkDescriptorType),
    pImageInfo: [*c]const VkDescriptorImageInfo = @import("std").mem.zeroes([*c]const VkDescriptorImageInfo),
    pBufferInfo: [*c]const VkDescriptorBufferInfo = @import("std").mem.zeroes([*c]const VkDescriptorBufferInfo),
    pTexelBufferView: [*c]const VkBufferView = @import("std").mem.zeroes([*c]const VkBufferView),
};
pub const VkWriteDescriptorSet = struct_VkWriteDescriptorSet;
pub const struct_VkAttachmentDescription = extern struct {
    flags: VkAttachmentDescriptionFlags = @import("std").mem.zeroes(VkAttachmentDescriptionFlags),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    samples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    loadOp: VkAttachmentLoadOp = @import("std").mem.zeroes(VkAttachmentLoadOp),
    storeOp: VkAttachmentStoreOp = @import("std").mem.zeroes(VkAttachmentStoreOp),
    stencilLoadOp: VkAttachmentLoadOp = @import("std").mem.zeroes(VkAttachmentLoadOp),
    stencilStoreOp: VkAttachmentStoreOp = @import("std").mem.zeroes(VkAttachmentStoreOp),
    initialLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    finalLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkAttachmentDescription = struct_VkAttachmentDescription;
pub const struct_VkAttachmentReference = extern struct {
    attachment: u32 = @import("std").mem.zeroes(u32),
    layout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkAttachmentReference = struct_VkAttachmentReference;
pub const struct_VkFramebufferCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkFramebufferCreateFlags = @import("std").mem.zeroes(VkFramebufferCreateFlags),
    renderPass: VkRenderPass = @import("std").mem.zeroes(VkRenderPass),
    attachmentCount: u32 = @import("std").mem.zeroes(u32),
    pAttachments: [*c]const VkImageView = @import("std").mem.zeroes([*c]const VkImageView),
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
    layers: u32 = @import("std").mem.zeroes(u32),
};
pub const VkFramebufferCreateInfo = struct_VkFramebufferCreateInfo;
pub const struct_VkSubpassDescription = extern struct {
    flags: VkSubpassDescriptionFlags = @import("std").mem.zeroes(VkSubpassDescriptionFlags),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    inputAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pInputAttachments: [*c]const VkAttachmentReference = @import("std").mem.zeroes([*c]const VkAttachmentReference),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachments: [*c]const VkAttachmentReference = @import("std").mem.zeroes([*c]const VkAttachmentReference),
    pResolveAttachments: [*c]const VkAttachmentReference = @import("std").mem.zeroes([*c]const VkAttachmentReference),
    pDepthStencilAttachment: [*c]const VkAttachmentReference = @import("std").mem.zeroes([*c]const VkAttachmentReference),
    preserveAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pPreserveAttachments: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkSubpassDescription = struct_VkSubpassDescription;
pub const struct_VkSubpassDependency = extern struct {
    srcSubpass: u32 = @import("std").mem.zeroes(u32),
    dstSubpass: u32 = @import("std").mem.zeroes(u32),
    srcStageMask: VkPipelineStageFlags = @import("std").mem.zeroes(VkPipelineStageFlags),
    dstStageMask: VkPipelineStageFlags = @import("std").mem.zeroes(VkPipelineStageFlags),
    srcAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dstAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dependencyFlags: VkDependencyFlags = @import("std").mem.zeroes(VkDependencyFlags),
};
pub const VkSubpassDependency = struct_VkSubpassDependency;
pub const struct_VkRenderPassCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkRenderPassCreateFlags = @import("std").mem.zeroes(VkRenderPassCreateFlags),
    attachmentCount: u32 = @import("std").mem.zeroes(u32),
    pAttachments: [*c]const VkAttachmentDescription = @import("std").mem.zeroes([*c]const VkAttachmentDescription),
    subpassCount: u32 = @import("std").mem.zeroes(u32),
    pSubpasses: [*c]const VkSubpassDescription = @import("std").mem.zeroes([*c]const VkSubpassDescription),
    dependencyCount: u32 = @import("std").mem.zeroes(u32),
    pDependencies: [*c]const VkSubpassDependency = @import("std").mem.zeroes([*c]const VkSubpassDependency),
};
pub const VkRenderPassCreateInfo = struct_VkRenderPassCreateInfo;
pub const struct_VkCommandPoolCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkCommandPoolCreateFlags = @import("std").mem.zeroes(VkCommandPoolCreateFlags),
    queueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkCommandPoolCreateInfo = struct_VkCommandPoolCreateInfo;
pub const struct_VkCommandBufferAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    commandPool: VkCommandPool = @import("std").mem.zeroes(VkCommandPool),
    level: VkCommandBufferLevel = @import("std").mem.zeroes(VkCommandBufferLevel),
    commandBufferCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkCommandBufferAllocateInfo = struct_VkCommandBufferAllocateInfo;
pub const struct_VkCommandBufferInheritanceInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    renderPass: VkRenderPass = @import("std").mem.zeroes(VkRenderPass),
    subpass: u32 = @import("std").mem.zeroes(u32),
    framebuffer: VkFramebuffer = @import("std").mem.zeroes(VkFramebuffer),
    occlusionQueryEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    queryFlags: VkQueryControlFlags = @import("std").mem.zeroes(VkQueryControlFlags),
    pipelineStatistics: VkQueryPipelineStatisticFlags = @import("std").mem.zeroes(VkQueryPipelineStatisticFlags),
};
pub const VkCommandBufferInheritanceInfo = struct_VkCommandBufferInheritanceInfo;
pub const struct_VkCommandBufferBeginInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkCommandBufferUsageFlags = @import("std").mem.zeroes(VkCommandBufferUsageFlags),
    pInheritanceInfo: [*c]const VkCommandBufferInheritanceInfo = @import("std").mem.zeroes([*c]const VkCommandBufferInheritanceInfo),
};
pub const VkCommandBufferBeginInfo = struct_VkCommandBufferBeginInfo;
pub const struct_VkBufferCopy = extern struct {
    srcOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    dstOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBufferCopy = struct_VkBufferCopy;
pub const struct_VkImageSubresourceLayers = extern struct {
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
    mipLevel: u32 = @import("std").mem.zeroes(u32),
    baseArrayLayer: u32 = @import("std").mem.zeroes(u32),
    layerCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkImageSubresourceLayers = struct_VkImageSubresourceLayers;
pub const struct_VkBufferImageCopy = extern struct {
    bufferOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    bufferRowLength: u32 = @import("std").mem.zeroes(u32),
    bufferImageHeight: u32 = @import("std").mem.zeroes(u32),
    imageSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    imageOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    imageExtent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkBufferImageCopy = struct_VkBufferImageCopy;
pub const union_VkClearColorValue = extern union {
    float32: [4]f32,
    int32: [4]i32,
    uint32: [4]u32,
};
pub const VkClearColorValue = union_VkClearColorValue;
pub const struct_VkClearDepthStencilValue = extern struct {
    depth: f32 = @import("std").mem.zeroes(f32),
    stencil: u32 = @import("std").mem.zeroes(u32),
};
pub const VkClearDepthStencilValue = struct_VkClearDepthStencilValue;
pub const union_VkClearValue = extern union {
    color: VkClearColorValue,
    depthStencil: VkClearDepthStencilValue,
};
pub const VkClearValue = union_VkClearValue;
pub const struct_VkClearAttachment = extern struct {
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
    colorAttachment: u32 = @import("std").mem.zeroes(u32),
    clearValue: VkClearValue = @import("std").mem.zeroes(VkClearValue),
};
pub const VkClearAttachment = struct_VkClearAttachment;
pub const struct_VkClearRect = extern struct {
    rect: VkRect2D = @import("std").mem.zeroes(VkRect2D),
    baseArrayLayer: u32 = @import("std").mem.zeroes(u32),
    layerCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkClearRect = struct_VkClearRect;
pub const struct_VkImageBlit = extern struct {
    srcSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    srcOffsets: [2]VkOffset3D = @import("std").mem.zeroes([2]VkOffset3D),
    dstSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    dstOffsets: [2]VkOffset3D = @import("std").mem.zeroes([2]VkOffset3D),
};
pub const VkImageBlit = struct_VkImageBlit;
pub const struct_VkImageCopy = extern struct {
    srcSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    srcOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    dstSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    dstOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    extent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkImageCopy = struct_VkImageCopy;
pub const struct_VkImageResolve = extern struct {
    srcSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    srcOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    dstSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    dstOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    extent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkImageResolve = struct_VkImageResolve;
pub const struct_VkRenderPassBeginInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    renderPass: VkRenderPass = @import("std").mem.zeroes(VkRenderPass),
    framebuffer: VkFramebuffer = @import("std").mem.zeroes(VkFramebuffer),
    renderArea: VkRect2D = @import("std").mem.zeroes(VkRect2D),
    clearValueCount: u32 = @import("std").mem.zeroes(u32),
    pClearValues: [*c]const VkClearValue = @import("std").mem.zeroes([*c]const VkClearValue),
};
pub const VkRenderPassBeginInfo = struct_VkRenderPassBeginInfo;
pub const PFN_vkCreateInstance = ?*const fn ([*c]const VkInstanceCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkInstance) callconv(.C) VkResult;
pub const PFN_vkDestroyInstance = ?*const fn (VkInstance, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkEnumeratePhysicalDevices = ?*const fn (VkInstance, [*c]u32, [*c]VkPhysicalDevice) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceFeatures = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceFeatures) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceFormatProperties = ?*const fn (VkPhysicalDevice, VkFormat, [*c]VkFormatProperties) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceImageFormatProperties = ?*const fn (VkPhysicalDevice, VkFormat, VkImageType, VkImageTiling, VkImageUsageFlags, VkImageCreateFlags, [*c]VkImageFormatProperties) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceProperties = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceProperties) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceQueueFamilyProperties = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkQueueFamilyProperties) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceMemoryProperties = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceMemoryProperties) callconv(.C) void;
pub const PFN_vkGetInstanceProcAddr = ?*const fn (VkInstance, [*c]const u8) callconv(.C) PFN_vkVoidFunction;
pub const PFN_vkGetDeviceProcAddr = ?*const fn (VkDevice, [*c]const u8) callconv(.C) PFN_vkVoidFunction;
pub const PFN_vkCreateDevice = ?*const fn (VkPhysicalDevice, [*c]const VkDeviceCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkDevice) callconv(.C) VkResult;
pub const PFN_vkDestroyDevice = ?*const fn (VkDevice, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkEnumerateInstanceExtensionProperties = ?*const fn ([*c]const u8, [*c]u32, [*c]VkExtensionProperties) callconv(.C) VkResult;
pub const PFN_vkEnumerateDeviceExtensionProperties = ?*const fn (VkPhysicalDevice, [*c]const u8, [*c]u32, [*c]VkExtensionProperties) callconv(.C) VkResult;
pub const PFN_vkEnumerateInstanceLayerProperties = ?*const fn ([*c]u32, [*c]VkLayerProperties) callconv(.C) VkResult;
pub const PFN_vkEnumerateDeviceLayerProperties = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkLayerProperties) callconv(.C) VkResult;
pub const PFN_vkGetDeviceQueue = ?*const fn (VkDevice, u32, u32, [*c]VkQueue) callconv(.C) void;
pub const PFN_vkQueueSubmit = ?*const fn (VkQueue, u32, [*c]const VkSubmitInfo, VkFence) callconv(.C) VkResult;
pub const PFN_vkQueueWaitIdle = ?*const fn (VkQueue) callconv(.C) VkResult;
pub const PFN_vkDeviceWaitIdle = ?*const fn (VkDevice) callconv(.C) VkResult;
pub const PFN_vkAllocateMemory = ?*const fn (VkDevice, [*c]const VkMemoryAllocateInfo, [*c]const VkAllocationCallbacks, [*c]VkDeviceMemory) callconv(.C) VkResult;
pub const PFN_vkFreeMemory = ?*const fn (VkDevice, VkDeviceMemory, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkMapMemory = ?*const fn (VkDevice, VkDeviceMemory, VkDeviceSize, VkDeviceSize, VkMemoryMapFlags, [*c]?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkUnmapMemory = ?*const fn (VkDevice, VkDeviceMemory) callconv(.C) void;
pub const PFN_vkFlushMappedMemoryRanges = ?*const fn (VkDevice, u32, [*c]const VkMappedMemoryRange) callconv(.C) VkResult;
pub const PFN_vkInvalidateMappedMemoryRanges = ?*const fn (VkDevice, u32, [*c]const VkMappedMemoryRange) callconv(.C) VkResult;
pub const PFN_vkGetDeviceMemoryCommitment = ?*const fn (VkDevice, VkDeviceMemory, [*c]VkDeviceSize) callconv(.C) void;
pub const PFN_vkBindBufferMemory = ?*const fn (VkDevice, VkBuffer, VkDeviceMemory, VkDeviceSize) callconv(.C) VkResult;
pub const PFN_vkBindImageMemory = ?*const fn (VkDevice, VkImage, VkDeviceMemory, VkDeviceSize) callconv(.C) VkResult;
pub const PFN_vkGetBufferMemoryRequirements = ?*const fn (VkDevice, VkBuffer, [*c]VkMemoryRequirements) callconv(.C) void;
pub const PFN_vkGetImageMemoryRequirements = ?*const fn (VkDevice, VkImage, [*c]VkMemoryRequirements) callconv(.C) void;
pub const PFN_vkGetImageSparseMemoryRequirements = ?*const fn (VkDevice, VkImage, [*c]u32, [*c]VkSparseImageMemoryRequirements) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceSparseImageFormatProperties = ?*const fn (VkPhysicalDevice, VkFormat, VkImageType, VkSampleCountFlagBits, VkImageUsageFlags, VkImageTiling, [*c]u32, [*c]VkSparseImageFormatProperties) callconv(.C) void;
pub const PFN_vkQueueBindSparse = ?*const fn (VkQueue, u32, [*c]const VkBindSparseInfo, VkFence) callconv(.C) VkResult;
pub const PFN_vkCreateFence = ?*const fn (VkDevice, [*c]const VkFenceCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkFence) callconv(.C) VkResult;
pub const PFN_vkDestroyFence = ?*const fn (VkDevice, VkFence, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkResetFences = ?*const fn (VkDevice, u32, [*c]const VkFence) callconv(.C) VkResult;
pub const PFN_vkGetFenceStatus = ?*const fn (VkDevice, VkFence) callconv(.C) VkResult;
pub const PFN_vkWaitForFences = ?*const fn (VkDevice, u32, [*c]const VkFence, VkBool32, u64) callconv(.C) VkResult;
pub const PFN_vkCreateSemaphore = ?*const fn (VkDevice, [*c]const VkSemaphoreCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkSemaphore) callconv(.C) VkResult;
pub const PFN_vkDestroySemaphore = ?*const fn (VkDevice, VkSemaphore, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateEvent = ?*const fn (VkDevice, [*c]const VkEventCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkEvent) callconv(.C) VkResult;
pub const PFN_vkDestroyEvent = ?*const fn (VkDevice, VkEvent, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetEventStatus = ?*const fn (VkDevice, VkEvent) callconv(.C) VkResult;
pub const PFN_vkSetEvent = ?*const fn (VkDevice, VkEvent) callconv(.C) VkResult;
pub const PFN_vkResetEvent = ?*const fn (VkDevice, VkEvent) callconv(.C) VkResult;
pub const PFN_vkCreateQueryPool = ?*const fn (VkDevice, [*c]const VkQueryPoolCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkQueryPool) callconv(.C) VkResult;
pub const PFN_vkDestroyQueryPool = ?*const fn (VkDevice, VkQueryPool, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetQueryPoolResults = ?*const fn (VkDevice, VkQueryPool, u32, u32, usize, ?*anyopaque, VkDeviceSize, VkQueryResultFlags) callconv(.C) VkResult;
pub const PFN_vkCreateBuffer = ?*const fn (VkDevice, [*c]const VkBufferCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkBuffer) callconv(.C) VkResult;
pub const PFN_vkDestroyBuffer = ?*const fn (VkDevice, VkBuffer, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateBufferView = ?*const fn (VkDevice, [*c]const VkBufferViewCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkBufferView) callconv(.C) VkResult;
pub const PFN_vkDestroyBufferView = ?*const fn (VkDevice, VkBufferView, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateImage = ?*const fn (VkDevice, [*c]const VkImageCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkImage) callconv(.C) VkResult;
pub const PFN_vkDestroyImage = ?*const fn (VkDevice, VkImage, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetImageSubresourceLayout = ?*const fn (VkDevice, VkImage, [*c]const VkImageSubresource, [*c]VkSubresourceLayout) callconv(.C) void;
pub const PFN_vkCreateImageView = ?*const fn (VkDevice, [*c]const VkImageViewCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkImageView) callconv(.C) VkResult;
pub const PFN_vkDestroyImageView = ?*const fn (VkDevice, VkImageView, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateShaderModule = ?*const fn (VkDevice, [*c]const VkShaderModuleCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkShaderModule) callconv(.C) VkResult;
pub const PFN_vkDestroyShaderModule = ?*const fn (VkDevice, VkShaderModule, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreatePipelineCache = ?*const fn (VkDevice, [*c]const VkPipelineCacheCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkPipelineCache) callconv(.C) VkResult;
pub const PFN_vkDestroyPipelineCache = ?*const fn (VkDevice, VkPipelineCache, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetPipelineCacheData = ?*const fn (VkDevice, VkPipelineCache, [*c]usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkMergePipelineCaches = ?*const fn (VkDevice, VkPipelineCache, u32, [*c]const VkPipelineCache) callconv(.C) VkResult;
pub const PFN_vkCreateGraphicsPipelines = ?*const fn (VkDevice, VkPipelineCache, u32, [*c]const VkGraphicsPipelineCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkPipeline) callconv(.C) VkResult;
pub const PFN_vkCreateComputePipelines = ?*const fn (VkDevice, VkPipelineCache, u32, [*c]const VkComputePipelineCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkPipeline) callconv(.C) VkResult;
pub const PFN_vkDestroyPipeline = ?*const fn (VkDevice, VkPipeline, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreatePipelineLayout = ?*const fn (VkDevice, [*c]const VkPipelineLayoutCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkPipelineLayout) callconv(.C) VkResult;
pub const PFN_vkDestroyPipelineLayout = ?*const fn (VkDevice, VkPipelineLayout, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateSampler = ?*const fn (VkDevice, [*c]const VkSamplerCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkSampler) callconv(.C) VkResult;
pub const PFN_vkDestroySampler = ?*const fn (VkDevice, VkSampler, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateDescriptorSetLayout = ?*const fn (VkDevice, [*c]const VkDescriptorSetLayoutCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkDescriptorSetLayout) callconv(.C) VkResult;
pub const PFN_vkDestroyDescriptorSetLayout = ?*const fn (VkDevice, VkDescriptorSetLayout, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateDescriptorPool = ?*const fn (VkDevice, [*c]const VkDescriptorPoolCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkDescriptorPool) callconv(.C) VkResult;
pub const PFN_vkDestroyDescriptorPool = ?*const fn (VkDevice, VkDescriptorPool, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkResetDescriptorPool = ?*const fn (VkDevice, VkDescriptorPool, VkDescriptorPoolResetFlags) callconv(.C) VkResult;
pub const PFN_vkAllocateDescriptorSets = ?*const fn (VkDevice, [*c]const VkDescriptorSetAllocateInfo, [*c]VkDescriptorSet) callconv(.C) VkResult;
pub const PFN_vkFreeDescriptorSets = ?*const fn (VkDevice, VkDescriptorPool, u32, [*c]const VkDescriptorSet) callconv(.C) VkResult;
pub const PFN_vkUpdateDescriptorSets = ?*const fn (VkDevice, u32, [*c]const VkWriteDescriptorSet, u32, [*c]const VkCopyDescriptorSet) callconv(.C) void;
pub const PFN_vkCreateFramebuffer = ?*const fn (VkDevice, [*c]const VkFramebufferCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkFramebuffer) callconv(.C) VkResult;
pub const PFN_vkDestroyFramebuffer = ?*const fn (VkDevice, VkFramebuffer, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateRenderPass = ?*const fn (VkDevice, [*c]const VkRenderPassCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkRenderPass) callconv(.C) VkResult;
pub const PFN_vkDestroyRenderPass = ?*const fn (VkDevice, VkRenderPass, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetRenderAreaGranularity = ?*const fn (VkDevice, VkRenderPass, [*c]VkExtent2D) callconv(.C) void;
pub const PFN_vkCreateCommandPool = ?*const fn (VkDevice, [*c]const VkCommandPoolCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkCommandPool) callconv(.C) VkResult;
pub const PFN_vkDestroyCommandPool = ?*const fn (VkDevice, VkCommandPool, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkResetCommandPool = ?*const fn (VkDevice, VkCommandPool, VkCommandPoolResetFlags) callconv(.C) VkResult;
pub const PFN_vkAllocateCommandBuffers = ?*const fn (VkDevice, [*c]const VkCommandBufferAllocateInfo, [*c]VkCommandBuffer) callconv(.C) VkResult;
pub const PFN_vkFreeCommandBuffers = ?*const fn (VkDevice, VkCommandPool, u32, [*c]const VkCommandBuffer) callconv(.C) void;
pub const PFN_vkBeginCommandBuffer = ?*const fn (VkCommandBuffer, [*c]const VkCommandBufferBeginInfo) callconv(.C) VkResult;
pub const PFN_vkEndCommandBuffer = ?*const fn (VkCommandBuffer) callconv(.C) VkResult;
pub const PFN_vkResetCommandBuffer = ?*const fn (VkCommandBuffer, VkCommandBufferResetFlags) callconv(.C) VkResult;
pub const PFN_vkCmdBindPipeline = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipeline) callconv(.C) void;
pub const PFN_vkCmdSetViewport = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkViewport) callconv(.C) void;
pub const PFN_vkCmdSetScissor = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkRect2D) callconv(.C) void;
pub const PFN_vkCmdSetLineWidth = ?*const fn (VkCommandBuffer, f32) callconv(.C) void;
pub const PFN_vkCmdSetDepthBias = ?*const fn (VkCommandBuffer, f32, f32, f32) callconv(.C) void;
pub const PFN_vkCmdSetBlendConstants = ?*const fn (VkCommandBuffer, [*c]const f32) callconv(.C) void;
pub const PFN_vkCmdSetDepthBounds = ?*const fn (VkCommandBuffer, f32, f32) callconv(.C) void;
pub const PFN_vkCmdSetStencilCompareMask = ?*const fn (VkCommandBuffer, VkStencilFaceFlags, u32) callconv(.C) void;
pub const PFN_vkCmdSetStencilWriteMask = ?*const fn (VkCommandBuffer, VkStencilFaceFlags, u32) callconv(.C) void;
pub const PFN_vkCmdSetStencilReference = ?*const fn (VkCommandBuffer, VkStencilFaceFlags, u32) callconv(.C) void;
pub const PFN_vkCmdBindDescriptorSets = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, u32, u32, [*c]const VkDescriptorSet, u32, [*c]const u32) callconv(.C) void;
pub const PFN_vkCmdBindIndexBuffer = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkIndexType) callconv(.C) void;
pub const PFN_vkCmdBindVertexBuffers = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBuffer, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdDraw = ?*const fn (VkCommandBuffer, u32, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndexed = ?*const fn (VkCommandBuffer, u32, u32, u32, i32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndirect = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndexedIndirect = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDispatch = ?*const fn (VkCommandBuffer, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDispatchIndirect = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdCopyBuffer = ?*const fn (VkCommandBuffer, VkBuffer, VkBuffer, u32, [*c]const VkBufferCopy) callconv(.C) void;
pub const PFN_vkCmdCopyImage = ?*const fn (VkCommandBuffer, VkImage, VkImageLayout, VkImage, VkImageLayout, u32, [*c]const VkImageCopy) callconv(.C) void;
pub const PFN_vkCmdBlitImage = ?*const fn (VkCommandBuffer, VkImage, VkImageLayout, VkImage, VkImageLayout, u32, [*c]const VkImageBlit, VkFilter) callconv(.C) void;
pub const PFN_vkCmdCopyBufferToImage = ?*const fn (VkCommandBuffer, VkBuffer, VkImage, VkImageLayout, u32, [*c]const VkBufferImageCopy) callconv(.C) void;
pub const PFN_vkCmdCopyImageToBuffer = ?*const fn (VkCommandBuffer, VkImage, VkImageLayout, VkBuffer, u32, [*c]const VkBufferImageCopy) callconv(.C) void;
pub const PFN_vkCmdUpdateBuffer = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkDeviceSize, ?*const anyopaque) callconv(.C) void;
pub const PFN_vkCmdFillBuffer = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkDeviceSize, u32) callconv(.C) void;
pub const PFN_vkCmdClearColorImage = ?*const fn (VkCommandBuffer, VkImage, VkImageLayout, [*c]const VkClearColorValue, u32, [*c]const VkImageSubresourceRange) callconv(.C) void;
pub const PFN_vkCmdClearDepthStencilImage = ?*const fn (VkCommandBuffer, VkImage, VkImageLayout, [*c]const VkClearDepthStencilValue, u32, [*c]const VkImageSubresourceRange) callconv(.C) void;
pub const PFN_vkCmdClearAttachments = ?*const fn (VkCommandBuffer, u32, [*c]const VkClearAttachment, u32, [*c]const VkClearRect) callconv(.C) void;
pub const PFN_vkCmdResolveImage = ?*const fn (VkCommandBuffer, VkImage, VkImageLayout, VkImage, VkImageLayout, u32, [*c]const VkImageResolve) callconv(.C) void;
pub const PFN_vkCmdSetEvent = ?*const fn (VkCommandBuffer, VkEvent, VkPipelineStageFlags) callconv(.C) void;
pub const PFN_vkCmdResetEvent = ?*const fn (VkCommandBuffer, VkEvent, VkPipelineStageFlags) callconv(.C) void;
pub const PFN_vkCmdWaitEvents = ?*const fn (VkCommandBuffer, u32, [*c]const VkEvent, VkPipelineStageFlags, VkPipelineStageFlags, u32, [*c]const VkMemoryBarrier, u32, [*c]const VkBufferMemoryBarrier, u32, [*c]const VkImageMemoryBarrier) callconv(.C) void;
pub const PFN_vkCmdPipelineBarrier = ?*const fn (VkCommandBuffer, VkPipelineStageFlags, VkPipelineStageFlags, VkDependencyFlags, u32, [*c]const VkMemoryBarrier, u32, [*c]const VkBufferMemoryBarrier, u32, [*c]const VkImageMemoryBarrier) callconv(.C) void;
pub const PFN_vkCmdBeginQuery = ?*const fn (VkCommandBuffer, VkQueryPool, u32, VkQueryControlFlags) callconv(.C) void;
pub const PFN_vkCmdEndQuery = ?*const fn (VkCommandBuffer, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkCmdResetQueryPool = ?*const fn (VkCommandBuffer, VkQueryPool, u32, u32) callconv(.C) void;
pub const PFN_vkCmdWriteTimestamp = ?*const fn (VkCommandBuffer, VkPipelineStageFlagBits, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkCmdCopyQueryPoolResults = ?*const fn (VkCommandBuffer, VkQueryPool, u32, u32, VkBuffer, VkDeviceSize, VkDeviceSize, VkQueryResultFlags) callconv(.C) void;
pub const PFN_vkCmdPushConstants = ?*const fn (VkCommandBuffer, VkPipelineLayout, VkShaderStageFlags, u32, u32, ?*const anyopaque) callconv(.C) void;
pub const PFN_vkCmdBeginRenderPass = ?*const fn (VkCommandBuffer, [*c]const VkRenderPassBeginInfo, VkSubpassContents) callconv(.C) void;
pub const PFN_vkCmdNextSubpass = ?*const fn (VkCommandBuffer, VkSubpassContents) callconv(.C) void;
pub const PFN_vkCmdEndRenderPass = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub const PFN_vkCmdExecuteCommands = ?*const fn (VkCommandBuffer, u32, [*c]const VkCommandBuffer) callconv(.C) void;
pub extern fn vkCreateInstance(pCreateInfo: [*c]const VkInstanceCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pInstance: [*c]VkInstance) VkResult;
pub extern fn vkDestroyInstance(instance: VkInstance, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkEnumeratePhysicalDevices(instance: VkInstance, pPhysicalDeviceCount: [*c]u32, pPhysicalDevices: [*c]VkPhysicalDevice) VkResult;
pub extern fn vkGetPhysicalDeviceFeatures(physicalDevice: VkPhysicalDevice, pFeatures: [*c]VkPhysicalDeviceFeatures) void;
pub extern fn vkGetPhysicalDeviceFormatProperties(physicalDevice: VkPhysicalDevice, format: VkFormat, pFormatProperties: [*c]VkFormatProperties) void;
pub extern fn vkGetPhysicalDeviceImageFormatProperties(physicalDevice: VkPhysicalDevice, format: VkFormat, @"type": VkImageType, tiling: VkImageTiling, usage: VkImageUsageFlags, flags: VkImageCreateFlags, pImageFormatProperties: [*c]VkImageFormatProperties) VkResult;
pub extern fn vkGetPhysicalDeviceProperties(physicalDevice: VkPhysicalDevice, pProperties: [*c]VkPhysicalDeviceProperties) void;
pub extern fn vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice: VkPhysicalDevice, pQueueFamilyPropertyCount: [*c]u32, pQueueFamilyProperties: [*c]VkQueueFamilyProperties) void;
pub extern fn vkGetPhysicalDeviceMemoryProperties(physicalDevice: VkPhysicalDevice, pMemoryProperties: [*c]VkPhysicalDeviceMemoryProperties) void;
pub extern fn vkGetInstanceProcAddr(instance: VkInstance, pName: [*c]const u8) PFN_vkVoidFunction;
pub extern fn vkGetDeviceProcAddr(device: VkDevice, pName: [*c]const u8) PFN_vkVoidFunction;
pub extern fn vkCreateDevice(physicalDevice: VkPhysicalDevice, pCreateInfo: [*c]const VkDeviceCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pDevice: [*c]VkDevice) VkResult;
pub extern fn vkDestroyDevice(device: VkDevice, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkEnumerateInstanceExtensionProperties(pLayerName: [*c]const u8, pPropertyCount: [*c]u32, pProperties: [*c]VkExtensionProperties) VkResult;
pub extern fn vkEnumerateDeviceExtensionProperties(physicalDevice: VkPhysicalDevice, pLayerName: [*c]const u8, pPropertyCount: [*c]u32, pProperties: [*c]VkExtensionProperties) VkResult;
pub extern fn vkEnumerateInstanceLayerProperties(pPropertyCount: [*c]u32, pProperties: [*c]VkLayerProperties) VkResult;
pub extern fn vkEnumerateDeviceLayerProperties(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkLayerProperties) VkResult;
pub extern fn vkGetDeviceQueue(device: VkDevice, queueFamilyIndex: u32, queueIndex: u32, pQueue: [*c]VkQueue) void;
pub extern fn vkQueueSubmit(queue: VkQueue, submitCount: u32, pSubmits: [*c]const VkSubmitInfo, fence: VkFence) VkResult;
pub extern fn vkQueueWaitIdle(queue: VkQueue) VkResult;
pub extern fn vkDeviceWaitIdle(device: VkDevice) VkResult;
pub extern fn vkAllocateMemory(device: VkDevice, pAllocateInfo: [*c]const VkMemoryAllocateInfo, pAllocator: [*c]const VkAllocationCallbacks, pMemory: [*c]VkDeviceMemory) VkResult;
pub extern fn vkFreeMemory(device: VkDevice, memory: VkDeviceMemory, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkMapMemory(device: VkDevice, memory: VkDeviceMemory, offset: VkDeviceSize, size: VkDeviceSize, flags: VkMemoryMapFlags, ppData: [*c]?*anyopaque) VkResult;
pub extern fn vkUnmapMemory(device: VkDevice, memory: VkDeviceMemory) void;
pub extern fn vkFlushMappedMemoryRanges(device: VkDevice, memoryRangeCount: u32, pMemoryRanges: [*c]const VkMappedMemoryRange) VkResult;
pub extern fn vkInvalidateMappedMemoryRanges(device: VkDevice, memoryRangeCount: u32, pMemoryRanges: [*c]const VkMappedMemoryRange) VkResult;
pub extern fn vkGetDeviceMemoryCommitment(device: VkDevice, memory: VkDeviceMemory, pCommittedMemoryInBytes: [*c]VkDeviceSize) void;
pub extern fn vkBindBufferMemory(device: VkDevice, buffer: VkBuffer, memory: VkDeviceMemory, memoryOffset: VkDeviceSize) VkResult;
pub extern fn vkBindImageMemory(device: VkDevice, image: VkImage, memory: VkDeviceMemory, memoryOffset: VkDeviceSize) VkResult;
pub extern fn vkGetBufferMemoryRequirements(device: VkDevice, buffer: VkBuffer, pMemoryRequirements: [*c]VkMemoryRequirements) void;
pub extern fn vkGetImageMemoryRequirements(device: VkDevice, image: VkImage, pMemoryRequirements: [*c]VkMemoryRequirements) void;
pub extern fn vkGetImageSparseMemoryRequirements(device: VkDevice, image: VkImage, pSparseMemoryRequirementCount: [*c]u32, pSparseMemoryRequirements: [*c]VkSparseImageMemoryRequirements) void;
pub extern fn vkGetPhysicalDeviceSparseImageFormatProperties(physicalDevice: VkPhysicalDevice, format: VkFormat, @"type": VkImageType, samples: VkSampleCountFlagBits, usage: VkImageUsageFlags, tiling: VkImageTiling, pPropertyCount: [*c]u32, pProperties: [*c]VkSparseImageFormatProperties) void;
pub extern fn vkQueueBindSparse(queue: VkQueue, bindInfoCount: u32, pBindInfo: [*c]const VkBindSparseInfo, fence: VkFence) VkResult;
pub extern fn vkCreateFence(device: VkDevice, pCreateInfo: [*c]const VkFenceCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pFence: [*c]VkFence) VkResult;
pub extern fn vkDestroyFence(device: VkDevice, fence: VkFence, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkResetFences(device: VkDevice, fenceCount: u32, pFences: [*c]const VkFence) VkResult;
pub extern fn vkGetFenceStatus(device: VkDevice, fence: VkFence) VkResult;
pub extern fn vkWaitForFences(device: VkDevice, fenceCount: u32, pFences: [*c]const VkFence, waitAll: VkBool32, timeout: u64) VkResult;
pub extern fn vkCreateSemaphore(device: VkDevice, pCreateInfo: [*c]const VkSemaphoreCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pSemaphore: [*c]VkSemaphore) VkResult;
pub extern fn vkDestroySemaphore(device: VkDevice, semaphore: VkSemaphore, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateEvent(device: VkDevice, pCreateInfo: [*c]const VkEventCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pEvent: [*c]VkEvent) VkResult;
pub extern fn vkDestroyEvent(device: VkDevice, event: VkEvent, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetEventStatus(device: VkDevice, event: VkEvent) VkResult;
pub extern fn vkSetEvent(device: VkDevice, event: VkEvent) VkResult;
pub extern fn vkResetEvent(device: VkDevice, event: VkEvent) VkResult;
pub extern fn vkCreateQueryPool(device: VkDevice, pCreateInfo: [*c]const VkQueryPoolCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pQueryPool: [*c]VkQueryPool) VkResult;
pub extern fn vkDestroyQueryPool(device: VkDevice, queryPool: VkQueryPool, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetQueryPoolResults(device: VkDevice, queryPool: VkQueryPool, firstQuery: u32, queryCount: u32, dataSize: usize, pData: ?*anyopaque, stride: VkDeviceSize, flags: VkQueryResultFlags) VkResult;
pub extern fn vkCreateBuffer(device: VkDevice, pCreateInfo: [*c]const VkBufferCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pBuffer: [*c]VkBuffer) VkResult;
pub extern fn vkDestroyBuffer(device: VkDevice, buffer: VkBuffer, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateBufferView(device: VkDevice, pCreateInfo: [*c]const VkBufferViewCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pView: [*c]VkBufferView) VkResult;
pub extern fn vkDestroyBufferView(device: VkDevice, bufferView: VkBufferView, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateImage(device: VkDevice, pCreateInfo: [*c]const VkImageCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pImage: [*c]VkImage) VkResult;
pub extern fn vkDestroyImage(device: VkDevice, image: VkImage, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetImageSubresourceLayout(device: VkDevice, image: VkImage, pSubresource: [*c]const VkImageSubresource, pLayout: [*c]VkSubresourceLayout) void;
pub extern fn vkCreateImageView(device: VkDevice, pCreateInfo: [*c]const VkImageViewCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pView: [*c]VkImageView) VkResult;
pub extern fn vkDestroyImageView(device: VkDevice, imageView: VkImageView, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateShaderModule(device: VkDevice, pCreateInfo: [*c]const VkShaderModuleCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pShaderModule: [*c]VkShaderModule) VkResult;
pub extern fn vkDestroyShaderModule(device: VkDevice, shaderModule: VkShaderModule, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreatePipelineCache(device: VkDevice, pCreateInfo: [*c]const VkPipelineCacheCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pPipelineCache: [*c]VkPipelineCache) VkResult;
pub extern fn vkDestroyPipelineCache(device: VkDevice, pipelineCache: VkPipelineCache, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetPipelineCacheData(device: VkDevice, pipelineCache: VkPipelineCache, pDataSize: [*c]usize, pData: ?*anyopaque) VkResult;
pub extern fn vkMergePipelineCaches(device: VkDevice, dstCache: VkPipelineCache, srcCacheCount: u32, pSrcCaches: [*c]const VkPipelineCache) VkResult;
pub extern fn vkCreateGraphicsPipelines(device: VkDevice, pipelineCache: VkPipelineCache, createInfoCount: u32, pCreateInfos: [*c]const VkGraphicsPipelineCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pPipelines: [*c]VkPipeline) VkResult;
pub extern fn vkCreateComputePipelines(device: VkDevice, pipelineCache: VkPipelineCache, createInfoCount: u32, pCreateInfos: [*c]const VkComputePipelineCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pPipelines: [*c]VkPipeline) VkResult;
pub extern fn vkDestroyPipeline(device: VkDevice, pipeline: VkPipeline, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreatePipelineLayout(device: VkDevice, pCreateInfo: [*c]const VkPipelineLayoutCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pPipelineLayout: [*c]VkPipelineLayout) VkResult;
pub extern fn vkDestroyPipelineLayout(device: VkDevice, pipelineLayout: VkPipelineLayout, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateSampler(device: VkDevice, pCreateInfo: [*c]const VkSamplerCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pSampler: [*c]VkSampler) VkResult;
pub extern fn vkDestroySampler(device: VkDevice, sampler: VkSampler, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateDescriptorSetLayout(device: VkDevice, pCreateInfo: [*c]const VkDescriptorSetLayoutCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pSetLayout: [*c]VkDescriptorSetLayout) VkResult;
pub extern fn vkDestroyDescriptorSetLayout(device: VkDevice, descriptorSetLayout: VkDescriptorSetLayout, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateDescriptorPool(device: VkDevice, pCreateInfo: [*c]const VkDescriptorPoolCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pDescriptorPool: [*c]VkDescriptorPool) VkResult;
pub extern fn vkDestroyDescriptorPool(device: VkDevice, descriptorPool: VkDescriptorPool, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkResetDescriptorPool(device: VkDevice, descriptorPool: VkDescriptorPool, flags: VkDescriptorPoolResetFlags) VkResult;
pub extern fn vkAllocateDescriptorSets(device: VkDevice, pAllocateInfo: [*c]const VkDescriptorSetAllocateInfo, pDescriptorSets: [*c]VkDescriptorSet) VkResult;
pub extern fn vkFreeDescriptorSets(device: VkDevice, descriptorPool: VkDescriptorPool, descriptorSetCount: u32, pDescriptorSets: [*c]const VkDescriptorSet) VkResult;
pub extern fn vkUpdateDescriptorSets(device: VkDevice, descriptorWriteCount: u32, pDescriptorWrites: [*c]const VkWriteDescriptorSet, descriptorCopyCount: u32, pDescriptorCopies: [*c]const VkCopyDescriptorSet) void;
pub extern fn vkCreateFramebuffer(device: VkDevice, pCreateInfo: [*c]const VkFramebufferCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pFramebuffer: [*c]VkFramebuffer) VkResult;
pub extern fn vkDestroyFramebuffer(device: VkDevice, framebuffer: VkFramebuffer, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateRenderPass(device: VkDevice, pCreateInfo: [*c]const VkRenderPassCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pRenderPass: [*c]VkRenderPass) VkResult;
pub extern fn vkDestroyRenderPass(device: VkDevice, renderPass: VkRenderPass, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetRenderAreaGranularity(device: VkDevice, renderPass: VkRenderPass, pGranularity: [*c]VkExtent2D) void;
pub extern fn vkCreateCommandPool(device: VkDevice, pCreateInfo: [*c]const VkCommandPoolCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pCommandPool: [*c]VkCommandPool) VkResult;
pub extern fn vkDestroyCommandPool(device: VkDevice, commandPool: VkCommandPool, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkResetCommandPool(device: VkDevice, commandPool: VkCommandPool, flags: VkCommandPoolResetFlags) VkResult;
pub extern fn vkAllocateCommandBuffers(device: VkDevice, pAllocateInfo: [*c]const VkCommandBufferAllocateInfo, pCommandBuffers: [*c]VkCommandBuffer) VkResult;
pub extern fn vkFreeCommandBuffers(device: VkDevice, commandPool: VkCommandPool, commandBufferCount: u32, pCommandBuffers: [*c]const VkCommandBuffer) void;
pub extern fn vkBeginCommandBuffer(commandBuffer: VkCommandBuffer, pBeginInfo: [*c]const VkCommandBufferBeginInfo) VkResult;
pub extern fn vkEndCommandBuffer(commandBuffer: VkCommandBuffer) VkResult;
pub extern fn vkResetCommandBuffer(commandBuffer: VkCommandBuffer, flags: VkCommandBufferResetFlags) VkResult;
pub extern fn vkCmdBindPipeline(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, pipeline: VkPipeline) void;
pub extern fn vkCmdSetViewport(commandBuffer: VkCommandBuffer, firstViewport: u32, viewportCount: u32, pViewports: [*c]const VkViewport) void;
pub extern fn vkCmdSetScissor(commandBuffer: VkCommandBuffer, firstScissor: u32, scissorCount: u32, pScissors: [*c]const VkRect2D) void;
pub extern fn vkCmdSetLineWidth(commandBuffer: VkCommandBuffer, lineWidth: f32) void;
pub extern fn vkCmdSetDepthBias(commandBuffer: VkCommandBuffer, depthBiasConstantFactor: f32, depthBiasClamp: f32, depthBiasSlopeFactor: f32) void;
pub extern fn vkCmdSetBlendConstants(commandBuffer: VkCommandBuffer, blendConstants: [*c]const f32) void;
pub extern fn vkCmdSetDepthBounds(commandBuffer: VkCommandBuffer, minDepthBounds: f32, maxDepthBounds: f32) void;
pub extern fn vkCmdSetStencilCompareMask(commandBuffer: VkCommandBuffer, faceMask: VkStencilFaceFlags, compareMask: u32) void;
pub extern fn vkCmdSetStencilWriteMask(commandBuffer: VkCommandBuffer, faceMask: VkStencilFaceFlags, writeMask: u32) void;
pub extern fn vkCmdSetStencilReference(commandBuffer: VkCommandBuffer, faceMask: VkStencilFaceFlags, reference: u32) void;
pub extern fn vkCmdBindDescriptorSets(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, layout: VkPipelineLayout, firstSet: u32, descriptorSetCount: u32, pDescriptorSets: [*c]const VkDescriptorSet, dynamicOffsetCount: u32, pDynamicOffsets: [*c]const u32) void;
pub extern fn vkCmdBindIndexBuffer(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, indexType: VkIndexType) void;
pub extern fn vkCmdBindVertexBuffers(commandBuffer: VkCommandBuffer, firstBinding: u32, bindingCount: u32, pBuffers: [*c]const VkBuffer, pOffsets: [*c]const VkDeviceSize) void;
pub extern fn vkCmdDraw(commandBuffer: VkCommandBuffer, vertexCount: u32, instanceCount: u32, firstVertex: u32, firstInstance: u32) void;
pub extern fn vkCmdDrawIndexed(commandBuffer: VkCommandBuffer, indexCount: u32, instanceCount: u32, firstIndex: u32, vertexOffset: i32, firstInstance: u32) void;
pub extern fn vkCmdDrawIndirect(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, drawCount: u32, stride: u32) void;
pub extern fn vkCmdDrawIndexedIndirect(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, drawCount: u32, stride: u32) void;
pub extern fn vkCmdDispatch(commandBuffer: VkCommandBuffer, groupCountX: u32, groupCountY: u32, groupCountZ: u32) void;
pub extern fn vkCmdDispatchIndirect(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize) void;
pub extern fn vkCmdCopyBuffer(commandBuffer: VkCommandBuffer, srcBuffer: VkBuffer, dstBuffer: VkBuffer, regionCount: u32, pRegions: [*c]const VkBufferCopy) void;
pub extern fn vkCmdCopyImage(commandBuffer: VkCommandBuffer, srcImage: VkImage, srcImageLayout: VkImageLayout, dstImage: VkImage, dstImageLayout: VkImageLayout, regionCount: u32, pRegions: [*c]const VkImageCopy) void;
pub extern fn vkCmdBlitImage(commandBuffer: VkCommandBuffer, srcImage: VkImage, srcImageLayout: VkImageLayout, dstImage: VkImage, dstImageLayout: VkImageLayout, regionCount: u32, pRegions: [*c]const VkImageBlit, filter: VkFilter) void;
pub extern fn vkCmdCopyBufferToImage(commandBuffer: VkCommandBuffer, srcBuffer: VkBuffer, dstImage: VkImage, dstImageLayout: VkImageLayout, regionCount: u32, pRegions: [*c]const VkBufferImageCopy) void;
pub extern fn vkCmdCopyImageToBuffer(commandBuffer: VkCommandBuffer, srcImage: VkImage, srcImageLayout: VkImageLayout, dstBuffer: VkBuffer, regionCount: u32, pRegions: [*c]const VkBufferImageCopy) void;
pub extern fn vkCmdUpdateBuffer(commandBuffer: VkCommandBuffer, dstBuffer: VkBuffer, dstOffset: VkDeviceSize, dataSize: VkDeviceSize, pData: ?*const anyopaque) void;
pub extern fn vkCmdFillBuffer(commandBuffer: VkCommandBuffer, dstBuffer: VkBuffer, dstOffset: VkDeviceSize, size: VkDeviceSize, data: u32) void;
pub extern fn vkCmdClearColorImage(commandBuffer: VkCommandBuffer, image: VkImage, imageLayout: VkImageLayout, pColor: [*c]const VkClearColorValue, rangeCount: u32, pRanges: [*c]const VkImageSubresourceRange) void;
pub extern fn vkCmdClearDepthStencilImage(commandBuffer: VkCommandBuffer, image: VkImage, imageLayout: VkImageLayout, pDepthStencil: [*c]const VkClearDepthStencilValue, rangeCount: u32, pRanges: [*c]const VkImageSubresourceRange) void;
pub extern fn vkCmdClearAttachments(commandBuffer: VkCommandBuffer, attachmentCount: u32, pAttachments: [*c]const VkClearAttachment, rectCount: u32, pRects: [*c]const VkClearRect) void;
pub extern fn vkCmdResolveImage(commandBuffer: VkCommandBuffer, srcImage: VkImage, srcImageLayout: VkImageLayout, dstImage: VkImage, dstImageLayout: VkImageLayout, regionCount: u32, pRegions: [*c]const VkImageResolve) void;
pub extern fn vkCmdSetEvent(commandBuffer: VkCommandBuffer, event: VkEvent, stageMask: VkPipelineStageFlags) void;
pub extern fn vkCmdResetEvent(commandBuffer: VkCommandBuffer, event: VkEvent, stageMask: VkPipelineStageFlags) void;
pub extern fn vkCmdWaitEvents(commandBuffer: VkCommandBuffer, eventCount: u32, pEvents: [*c]const VkEvent, srcStageMask: VkPipelineStageFlags, dstStageMask: VkPipelineStageFlags, memoryBarrierCount: u32, pMemoryBarriers: [*c]const VkMemoryBarrier, bufferMemoryBarrierCount: u32, pBufferMemoryBarriers: [*c]const VkBufferMemoryBarrier, imageMemoryBarrierCount: u32, pImageMemoryBarriers: [*c]const VkImageMemoryBarrier) void;
pub extern fn vkCmdPipelineBarrier(commandBuffer: VkCommandBuffer, srcStageMask: VkPipelineStageFlags, dstStageMask: VkPipelineStageFlags, dependencyFlags: VkDependencyFlags, memoryBarrierCount: u32, pMemoryBarriers: [*c]const VkMemoryBarrier, bufferMemoryBarrierCount: u32, pBufferMemoryBarriers: [*c]const VkBufferMemoryBarrier, imageMemoryBarrierCount: u32, pImageMemoryBarriers: [*c]const VkImageMemoryBarrier) void;
pub extern fn vkCmdBeginQuery(commandBuffer: VkCommandBuffer, queryPool: VkQueryPool, query: u32, flags: VkQueryControlFlags) void;
pub extern fn vkCmdEndQuery(commandBuffer: VkCommandBuffer, queryPool: VkQueryPool, query: u32) void;
pub extern fn vkCmdResetQueryPool(commandBuffer: VkCommandBuffer, queryPool: VkQueryPool, firstQuery: u32, queryCount: u32) void;
pub extern fn vkCmdWriteTimestamp(commandBuffer: VkCommandBuffer, pipelineStage: VkPipelineStageFlagBits, queryPool: VkQueryPool, query: u32) void;
pub extern fn vkCmdCopyQueryPoolResults(commandBuffer: VkCommandBuffer, queryPool: VkQueryPool, firstQuery: u32, queryCount: u32, dstBuffer: VkBuffer, dstOffset: VkDeviceSize, stride: VkDeviceSize, flags: VkQueryResultFlags) void;
pub extern fn vkCmdPushConstants(commandBuffer: VkCommandBuffer, layout: VkPipelineLayout, stageFlags: VkShaderStageFlags, offset: u32, size: u32, pValues: ?*const anyopaque) void;
pub extern fn vkCmdBeginRenderPass(commandBuffer: VkCommandBuffer, pRenderPassBegin: [*c]const VkRenderPassBeginInfo, contents: VkSubpassContents) void;
pub extern fn vkCmdNextSubpass(commandBuffer: VkCommandBuffer, contents: VkSubpassContents) void;
pub extern fn vkCmdEndRenderPass(commandBuffer: VkCommandBuffer) void;
pub extern fn vkCmdExecuteCommands(commandBuffer: VkCommandBuffer, commandBufferCount: u32, pCommandBuffers: [*c]const VkCommandBuffer) void;
pub const struct_VkSamplerYcbcrConversion_T = opaque {};
pub const VkSamplerYcbcrConversion = ?*struct_VkSamplerYcbcrConversion_T;
pub const struct_VkDescriptorUpdateTemplate_T = opaque {};
pub const VkDescriptorUpdateTemplate = ?*struct_VkDescriptorUpdateTemplate_T;
pub const VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES: c_int = 0;
pub const VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY: c_int = 1;
pub const VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR: c_int = 0;
pub const VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR: c_int = 1;
pub const VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPointClippingBehavior = c_uint;
pub const VkPointClippingBehavior = enum_VkPointClippingBehavior;
pub const VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT: c_int = 0;
pub const VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT: c_int = 1;
pub const VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR: c_int = 0;
pub const VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR: c_int = 1;
pub const VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM: c_int = 2147483647;
pub const enum_VkTessellationDomainOrigin = c_uint;
pub const VkTessellationDomainOrigin = enum_VkTessellationDomainOrigin;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY: c_int = 0;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY: c_int = 1;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709: c_int = 2;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601: c_int = 3;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020: c_int = 4;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR: c_int = 0;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR: c_int = 1;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR: c_int = 2;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR: c_int = 3;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR: c_int = 4;
pub const VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSamplerYcbcrModelConversion = c_uint;
pub const VkSamplerYcbcrModelConversion = enum_VkSamplerYcbcrModelConversion;
pub const VK_SAMPLER_YCBCR_RANGE_ITU_FULL: c_int = 0;
pub const VK_SAMPLER_YCBCR_RANGE_ITU_NARROW: c_int = 1;
pub const VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR: c_int = 0;
pub const VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR: c_int = 1;
pub const VK_SAMPLER_YCBCR_RANGE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSamplerYcbcrRange = c_uint;
pub const VkSamplerYcbcrRange = enum_VkSamplerYcbcrRange;
pub const VK_CHROMA_LOCATION_COSITED_EVEN: c_int = 0;
pub const VK_CHROMA_LOCATION_MIDPOINT: c_int = 1;
pub const VK_CHROMA_LOCATION_COSITED_EVEN_KHR: c_int = 0;
pub const VK_CHROMA_LOCATION_MIDPOINT_KHR: c_int = 1;
pub const VK_CHROMA_LOCATION_MAX_ENUM: c_int = 2147483647;
pub const enum_VkChromaLocation = c_uint;
pub const VkChromaLocation = enum_VkChromaLocation;
pub const VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET: c_int = 0;
pub const VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR: c_int = 1;
pub const VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR: c_int = 0;
pub const VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDescriptorUpdateTemplateType = c_uint;
pub const VkDescriptorUpdateTemplateType = enum_VkDescriptorUpdateTemplateType;
pub const VK_SUBGROUP_FEATURE_BASIC_BIT: c_int = 1;
pub const VK_SUBGROUP_FEATURE_VOTE_BIT: c_int = 2;
pub const VK_SUBGROUP_FEATURE_ARITHMETIC_BIT: c_int = 4;
pub const VK_SUBGROUP_FEATURE_BALLOT_BIT: c_int = 8;
pub const VK_SUBGROUP_FEATURE_SHUFFLE_BIT: c_int = 16;
pub const VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT: c_int = 32;
pub const VK_SUBGROUP_FEATURE_CLUSTERED_BIT: c_int = 64;
pub const VK_SUBGROUP_FEATURE_QUAD_BIT: c_int = 128;
pub const VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV: c_int = 256;
pub const VK_SUBGROUP_FEATURE_ROTATE_BIT_KHR: c_int = 512;
pub const VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT_KHR: c_int = 1024;
pub const VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSubgroupFeatureFlagBits = c_uint;
pub const VkSubgroupFeatureFlagBits = enum_VkSubgroupFeatureFlagBits;
pub const VkSubgroupFeatureFlags = VkFlags;
pub const VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT: c_int = 1;
pub const VK_PEER_MEMORY_FEATURE_COPY_DST_BIT: c_int = 2;
pub const VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT: c_int = 4;
pub const VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT: c_int = 8;
pub const VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR: c_int = 1;
pub const VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR: c_int = 2;
pub const VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR: c_int = 4;
pub const VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR: c_int = 8;
pub const VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPeerMemoryFeatureFlagBits = c_uint;
pub const VkPeerMemoryFeatureFlagBits = enum_VkPeerMemoryFeatureFlagBits;
pub const VkPeerMemoryFeatureFlags = VkFlags;
pub const VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT: c_int = 1;
pub const VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT: c_int = 2;
pub const VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT: c_int = 4;
pub const VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR: c_int = 1;
pub const VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR: c_int = 2;
pub const VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR: c_int = 4;
pub const VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkMemoryAllocateFlagBits = c_uint;
pub const VkMemoryAllocateFlagBits = enum_VkMemoryAllocateFlagBits;
pub const VkMemoryAllocateFlags = VkFlags;
pub const VkCommandPoolTrimFlags = VkFlags;
pub const VkDescriptorUpdateTemplateCreateFlags = VkFlags;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT: c_int = 1;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT: c_int = 2;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT: c_int = 4;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT: c_int = 8;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT: c_int = 16;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT: c_int = 32;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT: c_int = 64;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT: c_int = 512;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID: c_int = 1024;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT: c_int = 128;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT: c_int = 256;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA: c_int = 2048;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV: c_int = 4096;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX: c_int = 16384;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR: c_int = 1;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR: c_int = 2;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR: c_int = 4;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR: c_int = 8;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR: c_int = 16;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR: c_int = 32;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR: c_int = 64;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkExternalMemoryHandleTypeFlagBits = c_uint;
pub const VkExternalMemoryHandleTypeFlagBits = enum_VkExternalMemoryHandleTypeFlagBits;
pub const VkExternalMemoryHandleTypeFlags = VkFlags;
pub const VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT: c_int = 1;
pub const VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT: c_int = 2;
pub const VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT: c_int = 4;
pub const VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR: c_int = 1;
pub const VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR: c_int = 2;
pub const VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR: c_int = 4;
pub const VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkExternalMemoryFeatureFlagBits = c_uint;
pub const VkExternalMemoryFeatureFlagBits = enum_VkExternalMemoryFeatureFlagBits;
pub const VkExternalMemoryFeatureFlags = VkFlags;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT: c_int = 1;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT: c_int = 2;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT: c_int = 4;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT: c_int = 8;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR: c_int = 1;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR: c_int = 2;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR: c_int = 4;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR: c_int = 8;
pub const VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkExternalFenceHandleTypeFlagBits = c_uint;
pub const VkExternalFenceHandleTypeFlagBits = enum_VkExternalFenceHandleTypeFlagBits;
pub const VkExternalFenceHandleTypeFlags = VkFlags;
pub const VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT: c_int = 1;
pub const VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT: c_int = 2;
pub const VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR: c_int = 1;
pub const VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR: c_int = 2;
pub const VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkExternalFenceFeatureFlagBits = c_uint;
pub const VkExternalFenceFeatureFlagBits = enum_VkExternalFenceFeatureFlagBits;
pub const VkExternalFenceFeatureFlags = VkFlags;
pub const VK_FENCE_IMPORT_TEMPORARY_BIT: c_int = 1;
pub const VK_FENCE_IMPORT_TEMPORARY_BIT_KHR: c_int = 1;
pub const VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkFenceImportFlagBits = c_uint;
pub const VkFenceImportFlagBits = enum_VkFenceImportFlagBits;
pub const VkFenceImportFlags = VkFlags;
pub const VK_SEMAPHORE_IMPORT_TEMPORARY_BIT: c_int = 1;
pub const VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR: c_int = 1;
pub const VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSemaphoreImportFlagBits = c_uint;
pub const VkSemaphoreImportFlagBits = enum_VkSemaphoreImportFlagBits;
pub const VkSemaphoreImportFlags = VkFlags;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT: c_int = 1;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT: c_int = 2;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT: c_int = 4;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT: c_int = 8;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT: c_int = 16;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA: c_int = 128;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT: c_int = 8;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR: c_int = 1;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR: c_int = 2;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR: c_int = 4;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR: c_int = 8;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR: c_int = 16;
pub const VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkExternalSemaphoreHandleTypeFlagBits = c_uint;
pub const VkExternalSemaphoreHandleTypeFlagBits = enum_VkExternalSemaphoreHandleTypeFlagBits;
pub const VkExternalSemaphoreHandleTypeFlags = VkFlags;
pub const VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT: c_int = 1;
pub const VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT: c_int = 2;
pub const VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR: c_int = 1;
pub const VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR: c_int = 2;
pub const VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkExternalSemaphoreFeatureFlagBits = c_uint;
pub const VkExternalSemaphoreFeatureFlagBits = enum_VkExternalSemaphoreFeatureFlagBits;
pub const VkExternalSemaphoreFeatureFlags = VkFlags;
pub const struct_VkPhysicalDeviceSubgroupProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    subgroupSize: u32 = @import("std").mem.zeroes(u32),
    supportedStages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    supportedOperations: VkSubgroupFeatureFlags = @import("std").mem.zeroes(VkSubgroupFeatureFlags),
    quadOperationsInAllStages: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSubgroupProperties = struct_VkPhysicalDeviceSubgroupProperties;
pub const struct_VkBindBufferMemoryInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    memoryOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBindBufferMemoryInfo = struct_VkBindBufferMemoryInfo;
pub const struct_VkBindImageMemoryInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    memoryOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBindImageMemoryInfo = struct_VkBindImageMemoryInfo;
pub const struct_VkPhysicalDevice16BitStorageFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    storageBuffer16BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformAndStorageBuffer16BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storagePushConstant16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storageInputOutput16: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevice16BitStorageFeatures = struct_VkPhysicalDevice16BitStorageFeatures;
pub const struct_VkMemoryDedicatedRequirements = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    prefersDedicatedAllocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    requiresDedicatedAllocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkMemoryDedicatedRequirements = struct_VkMemoryDedicatedRequirements;
pub const struct_VkMemoryDedicatedAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
};
pub const VkMemoryDedicatedAllocateInfo = struct_VkMemoryDedicatedAllocateInfo;
pub const struct_VkMemoryAllocateFlagsInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkMemoryAllocateFlags = @import("std").mem.zeroes(VkMemoryAllocateFlags),
    deviceMask: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMemoryAllocateFlagsInfo = struct_VkMemoryAllocateFlagsInfo;
pub const struct_VkDeviceGroupRenderPassBeginInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceMask: u32 = @import("std").mem.zeroes(u32),
    deviceRenderAreaCount: u32 = @import("std").mem.zeroes(u32),
    pDeviceRenderAreas: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkDeviceGroupRenderPassBeginInfo = struct_VkDeviceGroupRenderPassBeginInfo;
pub const struct_VkDeviceGroupCommandBufferBeginInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceMask: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDeviceGroupCommandBufferBeginInfo = struct_VkDeviceGroupCommandBufferBeginInfo;
pub const struct_VkDeviceGroupSubmitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    waitSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pWaitSemaphoreDeviceIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    commandBufferCount: u32 = @import("std").mem.zeroes(u32),
    pCommandBufferDeviceMasks: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    signalSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pSignalSemaphoreDeviceIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkDeviceGroupSubmitInfo = struct_VkDeviceGroupSubmitInfo;
pub const struct_VkDeviceGroupBindSparseInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    resourceDeviceIndex: u32 = @import("std").mem.zeroes(u32),
    memoryDeviceIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDeviceGroupBindSparseInfo = struct_VkDeviceGroupBindSparseInfo;
pub const struct_VkBindBufferMemoryDeviceGroupInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceIndexCount: u32 = @import("std").mem.zeroes(u32),
    pDeviceIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkBindBufferMemoryDeviceGroupInfo = struct_VkBindBufferMemoryDeviceGroupInfo;
pub const struct_VkBindImageMemoryDeviceGroupInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceIndexCount: u32 = @import("std").mem.zeroes(u32),
    pDeviceIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    splitInstanceBindRegionCount: u32 = @import("std").mem.zeroes(u32),
    pSplitInstanceBindRegions: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkBindImageMemoryDeviceGroupInfo = struct_VkBindImageMemoryDeviceGroupInfo;
pub const struct_VkPhysicalDeviceGroupProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    physicalDeviceCount: u32 = @import("std").mem.zeroes(u32),
    physicalDevices: [32]VkPhysicalDevice = @import("std").mem.zeroes([32]VkPhysicalDevice),
    subsetAllocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceGroupProperties = struct_VkPhysicalDeviceGroupProperties;
pub const struct_VkDeviceGroupDeviceCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    physicalDeviceCount: u32 = @import("std").mem.zeroes(u32),
    pPhysicalDevices: [*c]const VkPhysicalDevice = @import("std").mem.zeroes([*c]const VkPhysicalDevice),
};
pub const VkDeviceGroupDeviceCreateInfo = struct_VkDeviceGroupDeviceCreateInfo;
pub const struct_VkBufferMemoryRequirementsInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
};
pub const VkBufferMemoryRequirementsInfo2 = struct_VkBufferMemoryRequirementsInfo2;
pub const struct_VkImageMemoryRequirementsInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
};
pub const VkImageMemoryRequirementsInfo2 = struct_VkImageMemoryRequirementsInfo2;
pub const struct_VkImageSparseMemoryRequirementsInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
};
pub const VkImageSparseMemoryRequirementsInfo2 = struct_VkImageSparseMemoryRequirementsInfo2;
pub const struct_VkMemoryRequirements2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryRequirements: VkMemoryRequirements = @import("std").mem.zeroes(VkMemoryRequirements),
};
pub const VkMemoryRequirements2 = struct_VkMemoryRequirements2;
pub const struct_VkSparseImageMemoryRequirements2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryRequirements: VkSparseImageMemoryRequirements = @import("std").mem.zeroes(VkSparseImageMemoryRequirements),
};
pub const VkSparseImageMemoryRequirements2 = struct_VkSparseImageMemoryRequirements2;
pub const struct_VkPhysicalDeviceFeatures2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    features: VkPhysicalDeviceFeatures = @import("std").mem.zeroes(VkPhysicalDeviceFeatures),
};
pub const VkPhysicalDeviceFeatures2 = struct_VkPhysicalDeviceFeatures2;
pub const struct_VkPhysicalDeviceProperties2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    properties: VkPhysicalDeviceProperties = @import("std").mem.zeroes(VkPhysicalDeviceProperties),
};
pub const VkPhysicalDeviceProperties2 = struct_VkPhysicalDeviceProperties2;
pub const struct_VkFormatProperties2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    formatProperties: VkFormatProperties = @import("std").mem.zeroes(VkFormatProperties),
};
pub const VkFormatProperties2 = struct_VkFormatProperties2;
pub const struct_VkImageFormatProperties2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageFormatProperties: VkImageFormatProperties = @import("std").mem.zeroes(VkImageFormatProperties),
};
pub const VkImageFormatProperties2 = struct_VkImageFormatProperties2;
pub const struct_VkPhysicalDeviceImageFormatInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    type: VkImageType = @import("std").mem.zeroes(VkImageType),
    tiling: VkImageTiling = @import("std").mem.zeroes(VkImageTiling),
    usage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    flags: VkImageCreateFlags = @import("std").mem.zeroes(VkImageCreateFlags),
};
pub const VkPhysicalDeviceImageFormatInfo2 = struct_VkPhysicalDeviceImageFormatInfo2;
pub const struct_VkQueueFamilyProperties2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    queueFamilyProperties: VkQueueFamilyProperties = @import("std").mem.zeroes(VkQueueFamilyProperties),
};
pub const VkQueueFamilyProperties2 = struct_VkQueueFamilyProperties2;
pub const struct_VkPhysicalDeviceMemoryProperties2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryProperties: VkPhysicalDeviceMemoryProperties = @import("std").mem.zeroes(VkPhysicalDeviceMemoryProperties),
};
pub const VkPhysicalDeviceMemoryProperties2 = struct_VkPhysicalDeviceMemoryProperties2;
pub const struct_VkSparseImageFormatProperties2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    properties: VkSparseImageFormatProperties = @import("std").mem.zeroes(VkSparseImageFormatProperties),
};
pub const VkSparseImageFormatProperties2 = struct_VkSparseImageFormatProperties2;
pub const struct_VkPhysicalDeviceSparseImageFormatInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    type: VkImageType = @import("std").mem.zeroes(VkImageType),
    samples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    usage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    tiling: VkImageTiling = @import("std").mem.zeroes(VkImageTiling),
};
pub const VkPhysicalDeviceSparseImageFormatInfo2 = struct_VkPhysicalDeviceSparseImageFormatInfo2;
pub const struct_VkPhysicalDevicePointClippingProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pointClippingBehavior: VkPointClippingBehavior = @import("std").mem.zeroes(VkPointClippingBehavior),
};
pub const VkPhysicalDevicePointClippingProperties = struct_VkPhysicalDevicePointClippingProperties;
pub const struct_VkInputAttachmentAspectReference = extern struct {
    subpass: u32 = @import("std").mem.zeroes(u32),
    inputAttachmentIndex: u32 = @import("std").mem.zeroes(u32),
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
};
pub const VkInputAttachmentAspectReference = struct_VkInputAttachmentAspectReference;
pub const struct_VkRenderPassInputAttachmentAspectCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    aspectReferenceCount: u32 = @import("std").mem.zeroes(u32),
    pAspectReferences: [*c]const VkInputAttachmentAspectReference = @import("std").mem.zeroes([*c]const VkInputAttachmentAspectReference),
};
pub const VkRenderPassInputAttachmentAspectCreateInfo = struct_VkRenderPassInputAttachmentAspectCreateInfo;
pub const struct_VkImageViewUsageCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    usage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
};
pub const VkImageViewUsageCreateInfo = struct_VkImageViewUsageCreateInfo;
pub const struct_VkPipelineTessellationDomainOriginStateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    domainOrigin: VkTessellationDomainOrigin = @import("std").mem.zeroes(VkTessellationDomainOrigin),
};
pub const VkPipelineTessellationDomainOriginStateCreateInfo = struct_VkPipelineTessellationDomainOriginStateCreateInfo;
pub const struct_VkRenderPassMultiviewCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    subpassCount: u32 = @import("std").mem.zeroes(u32),
    pViewMasks: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    dependencyCount: u32 = @import("std").mem.zeroes(u32),
    pViewOffsets: [*c]const i32 = @import("std").mem.zeroes([*c]const i32),
    correlationMaskCount: u32 = @import("std").mem.zeroes(u32),
    pCorrelationMasks: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkRenderPassMultiviewCreateInfo = struct_VkRenderPassMultiviewCreateInfo;
pub const struct_VkPhysicalDeviceMultiviewFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    multiview: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiviewGeometryShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiviewTessellationShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMultiviewFeatures = struct_VkPhysicalDeviceMultiviewFeatures;
pub const struct_VkPhysicalDeviceMultiviewProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxMultiviewViewCount: u32 = @import("std").mem.zeroes(u32),
    maxMultiviewInstanceIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceMultiviewProperties = struct_VkPhysicalDeviceMultiviewProperties;
pub const struct_VkPhysicalDeviceVariablePointersFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    variablePointersStorageBuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    variablePointers: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVariablePointersFeatures = struct_VkPhysicalDeviceVariablePointersFeatures;
pub const VkPhysicalDeviceVariablePointerFeatures = VkPhysicalDeviceVariablePointersFeatures;
pub const struct_VkPhysicalDeviceProtectedMemoryFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    protectedMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceProtectedMemoryFeatures = struct_VkPhysicalDeviceProtectedMemoryFeatures;
pub const struct_VkPhysicalDeviceProtectedMemoryProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    protectedNoFault: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceProtectedMemoryProperties = struct_VkPhysicalDeviceProtectedMemoryProperties;
pub const struct_VkDeviceQueueInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDeviceQueueCreateFlags = @import("std").mem.zeroes(VkDeviceQueueCreateFlags),
    queueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    queueIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDeviceQueueInfo2 = struct_VkDeviceQueueInfo2;
pub const struct_VkProtectedSubmitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    protectedSubmit: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkProtectedSubmitInfo = struct_VkProtectedSubmitInfo;
pub const struct_VkSamplerYcbcrConversionCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    ycbcrModel: VkSamplerYcbcrModelConversion = @import("std").mem.zeroes(VkSamplerYcbcrModelConversion),
    ycbcrRange: VkSamplerYcbcrRange = @import("std").mem.zeroes(VkSamplerYcbcrRange),
    components: VkComponentMapping = @import("std").mem.zeroes(VkComponentMapping),
    xChromaOffset: VkChromaLocation = @import("std").mem.zeroes(VkChromaLocation),
    yChromaOffset: VkChromaLocation = @import("std").mem.zeroes(VkChromaLocation),
    chromaFilter: VkFilter = @import("std").mem.zeroes(VkFilter),
    forceExplicitReconstruction: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSamplerYcbcrConversionCreateInfo = struct_VkSamplerYcbcrConversionCreateInfo;
pub const struct_VkSamplerYcbcrConversionInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    conversion: VkSamplerYcbcrConversion = @import("std").mem.zeroes(VkSamplerYcbcrConversion),
};
pub const VkSamplerYcbcrConversionInfo = struct_VkSamplerYcbcrConversionInfo;
pub const struct_VkBindImagePlaneMemoryInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    planeAspect: VkImageAspectFlagBits = @import("std").mem.zeroes(VkImageAspectFlagBits),
};
pub const VkBindImagePlaneMemoryInfo = struct_VkBindImagePlaneMemoryInfo;
pub const struct_VkImagePlaneMemoryRequirementsInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    planeAspect: VkImageAspectFlagBits = @import("std").mem.zeroes(VkImageAspectFlagBits),
};
pub const VkImagePlaneMemoryRequirementsInfo = struct_VkImagePlaneMemoryRequirementsInfo;
pub const struct_VkPhysicalDeviceSamplerYcbcrConversionFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    samplerYcbcrConversion: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSamplerYcbcrConversionFeatures = struct_VkPhysicalDeviceSamplerYcbcrConversionFeatures;
pub const struct_VkSamplerYcbcrConversionImageFormatProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    combinedImageSamplerDescriptorCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkSamplerYcbcrConversionImageFormatProperties = struct_VkSamplerYcbcrConversionImageFormatProperties;
pub const struct_VkDescriptorUpdateTemplateEntry = extern struct {
    dstBinding: u32 = @import("std").mem.zeroes(u32),
    dstArrayElement: u32 = @import("std").mem.zeroes(u32),
    descriptorCount: u32 = @import("std").mem.zeroes(u32),
    descriptorType: VkDescriptorType = @import("std").mem.zeroes(VkDescriptorType),
    offset: usize = @import("std").mem.zeroes(usize),
    stride: usize = @import("std").mem.zeroes(usize),
};
pub const VkDescriptorUpdateTemplateEntry = struct_VkDescriptorUpdateTemplateEntry;
pub const struct_VkDescriptorUpdateTemplateCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDescriptorUpdateTemplateCreateFlags = @import("std").mem.zeroes(VkDescriptorUpdateTemplateCreateFlags),
    descriptorUpdateEntryCount: u32 = @import("std").mem.zeroes(u32),
    pDescriptorUpdateEntries: [*c]const VkDescriptorUpdateTemplateEntry = @import("std").mem.zeroes([*c]const VkDescriptorUpdateTemplateEntry),
    templateType: VkDescriptorUpdateTemplateType = @import("std").mem.zeroes(VkDescriptorUpdateTemplateType),
    descriptorSetLayout: VkDescriptorSetLayout = @import("std").mem.zeroes(VkDescriptorSetLayout),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    pipelineLayout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    set: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDescriptorUpdateTemplateCreateInfo = struct_VkDescriptorUpdateTemplateCreateInfo;
pub const struct_VkExternalMemoryProperties = extern struct {
    externalMemoryFeatures: VkExternalMemoryFeatureFlags = @import("std").mem.zeroes(VkExternalMemoryFeatureFlags),
    exportFromImportedHandleTypes: VkExternalMemoryHandleTypeFlags = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlags),
    compatibleHandleTypes: VkExternalMemoryHandleTypeFlags = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlags),
};
pub const VkExternalMemoryProperties = struct_VkExternalMemoryProperties;
pub const struct_VkPhysicalDeviceExternalImageFormatInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleType: VkExternalMemoryHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagBits),
};
pub const VkPhysicalDeviceExternalImageFormatInfo = struct_VkPhysicalDeviceExternalImageFormatInfo;
pub const struct_VkExternalImageFormatProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    externalMemoryProperties: VkExternalMemoryProperties = @import("std").mem.zeroes(VkExternalMemoryProperties),
};
pub const VkExternalImageFormatProperties = struct_VkExternalImageFormatProperties;
pub const struct_VkPhysicalDeviceExternalBufferInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkBufferCreateFlags = @import("std").mem.zeroes(VkBufferCreateFlags),
    usage: VkBufferUsageFlags = @import("std").mem.zeroes(VkBufferUsageFlags),
    handleType: VkExternalMemoryHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagBits),
};
pub const VkPhysicalDeviceExternalBufferInfo = struct_VkPhysicalDeviceExternalBufferInfo;
pub const struct_VkExternalBufferProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    externalMemoryProperties: VkExternalMemoryProperties = @import("std").mem.zeroes(VkExternalMemoryProperties),
};
pub const VkExternalBufferProperties = struct_VkExternalBufferProperties;
pub const struct_VkPhysicalDeviceIDProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    driverUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    deviceLUID: [8]u8 = @import("std").mem.zeroes([8]u8),
    deviceNodeMask: u32 = @import("std").mem.zeroes(u32),
    deviceLUIDValid: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceIDProperties = struct_VkPhysicalDeviceIDProperties;
pub const struct_VkExternalMemoryImageCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalMemoryHandleTypeFlags = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlags),
};
pub const VkExternalMemoryImageCreateInfo = struct_VkExternalMemoryImageCreateInfo;
pub const struct_VkExternalMemoryBufferCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalMemoryHandleTypeFlags = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlags),
};
pub const VkExternalMemoryBufferCreateInfo = struct_VkExternalMemoryBufferCreateInfo;
pub const struct_VkExportMemoryAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalMemoryHandleTypeFlags = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlags),
};
pub const VkExportMemoryAllocateInfo = struct_VkExportMemoryAllocateInfo;
pub const struct_VkPhysicalDeviceExternalFenceInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleType: VkExternalFenceHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalFenceHandleTypeFlagBits),
};
pub const VkPhysicalDeviceExternalFenceInfo = struct_VkPhysicalDeviceExternalFenceInfo;
pub const struct_VkExternalFenceProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    exportFromImportedHandleTypes: VkExternalFenceHandleTypeFlags = @import("std").mem.zeroes(VkExternalFenceHandleTypeFlags),
    compatibleHandleTypes: VkExternalFenceHandleTypeFlags = @import("std").mem.zeroes(VkExternalFenceHandleTypeFlags),
    externalFenceFeatures: VkExternalFenceFeatureFlags = @import("std").mem.zeroes(VkExternalFenceFeatureFlags),
};
pub const VkExternalFenceProperties = struct_VkExternalFenceProperties;
pub const struct_VkExportFenceCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalFenceHandleTypeFlags = @import("std").mem.zeroes(VkExternalFenceHandleTypeFlags),
};
pub const VkExportFenceCreateInfo = struct_VkExportFenceCreateInfo;
pub const struct_VkExportSemaphoreCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalSemaphoreHandleTypeFlags = @import("std").mem.zeroes(VkExternalSemaphoreHandleTypeFlags),
};
pub const VkExportSemaphoreCreateInfo = struct_VkExportSemaphoreCreateInfo;
pub const struct_VkPhysicalDeviceExternalSemaphoreInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleType: VkExternalSemaphoreHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalSemaphoreHandleTypeFlagBits),
};
pub const VkPhysicalDeviceExternalSemaphoreInfo = struct_VkPhysicalDeviceExternalSemaphoreInfo;
pub const struct_VkExternalSemaphoreProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    exportFromImportedHandleTypes: VkExternalSemaphoreHandleTypeFlags = @import("std").mem.zeroes(VkExternalSemaphoreHandleTypeFlags),
    compatibleHandleTypes: VkExternalSemaphoreHandleTypeFlags = @import("std").mem.zeroes(VkExternalSemaphoreHandleTypeFlags),
    externalSemaphoreFeatures: VkExternalSemaphoreFeatureFlags = @import("std").mem.zeroes(VkExternalSemaphoreFeatureFlags),
};
pub const VkExternalSemaphoreProperties = struct_VkExternalSemaphoreProperties;
pub const struct_VkPhysicalDeviceMaintenance3Properties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxPerSetDescriptors: u32 = @import("std").mem.zeroes(u32),
    maxMemoryAllocationSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceMaintenance3Properties = struct_VkPhysicalDeviceMaintenance3Properties;
pub const struct_VkDescriptorSetLayoutSupport = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    supported: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDescriptorSetLayoutSupport = struct_VkDescriptorSetLayoutSupport;
pub const struct_VkPhysicalDeviceShaderDrawParametersFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderDrawParameters: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderDrawParametersFeatures = struct_VkPhysicalDeviceShaderDrawParametersFeatures;
pub const VkPhysicalDeviceShaderDrawParameterFeatures = VkPhysicalDeviceShaderDrawParametersFeatures;
pub const PFN_vkEnumerateInstanceVersion = ?*const fn ([*c]u32) callconv(.C) VkResult;
pub const PFN_vkBindBufferMemory2 = ?*const fn (VkDevice, u32, [*c]const VkBindBufferMemoryInfo) callconv(.C) VkResult;
pub const PFN_vkBindImageMemory2 = ?*const fn (VkDevice, u32, [*c]const VkBindImageMemoryInfo) callconv(.C) VkResult;
pub const PFN_vkGetDeviceGroupPeerMemoryFeatures = ?*const fn (VkDevice, u32, u32, u32, [*c]VkPeerMemoryFeatureFlags) callconv(.C) void;
pub const PFN_vkCmdSetDeviceMask = ?*const fn (VkCommandBuffer, u32) callconv(.C) void;
pub const PFN_vkCmdDispatchBase = ?*const fn (VkCommandBuffer, u32, u32, u32, u32, u32, u32) callconv(.C) void;
pub const PFN_vkEnumeratePhysicalDeviceGroups = ?*const fn (VkInstance, [*c]u32, [*c]VkPhysicalDeviceGroupProperties) callconv(.C) VkResult;
pub const PFN_vkGetImageMemoryRequirements2 = ?*const fn (VkDevice, [*c]const VkImageMemoryRequirementsInfo2, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetBufferMemoryRequirements2 = ?*const fn (VkDevice, [*c]const VkBufferMemoryRequirementsInfo2, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetImageSparseMemoryRequirements2 = ?*const fn (VkDevice, [*c]const VkImageSparseMemoryRequirementsInfo2, [*c]u32, [*c]VkSparseImageMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceFeatures2 = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceFeatures2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceProperties2 = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceFormatProperties2 = ?*const fn (VkPhysicalDevice, VkFormat, [*c]VkFormatProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceImageFormatProperties2 = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceImageFormatInfo2, [*c]VkImageFormatProperties2) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceQueueFamilyProperties2 = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkQueueFamilyProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceMemoryProperties2 = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceMemoryProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceSparseImageFormatInfo2, [*c]u32, [*c]VkSparseImageFormatProperties2) callconv(.C) void;
pub const PFN_vkTrimCommandPool = ?*const fn (VkDevice, VkCommandPool, VkCommandPoolTrimFlags) callconv(.C) void;
pub const PFN_vkGetDeviceQueue2 = ?*const fn (VkDevice, [*c]const VkDeviceQueueInfo2, [*c]VkQueue) callconv(.C) void;
pub const PFN_vkCreateSamplerYcbcrConversion = ?*const fn (VkDevice, [*c]const VkSamplerYcbcrConversionCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkSamplerYcbcrConversion) callconv(.C) VkResult;
pub const PFN_vkDestroySamplerYcbcrConversion = ?*const fn (VkDevice, VkSamplerYcbcrConversion, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCreateDescriptorUpdateTemplate = ?*const fn (VkDevice, [*c]const VkDescriptorUpdateTemplateCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkDescriptorUpdateTemplate) callconv(.C) VkResult;
pub const PFN_vkDestroyDescriptorUpdateTemplate = ?*const fn (VkDevice, VkDescriptorUpdateTemplate, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkUpdateDescriptorSetWithTemplate = ?*const fn (VkDevice, VkDescriptorSet, VkDescriptorUpdateTemplate, ?*const anyopaque) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceExternalBufferProperties = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceExternalBufferInfo, [*c]VkExternalBufferProperties) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceExternalFenceProperties = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceExternalFenceInfo, [*c]VkExternalFenceProperties) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceExternalSemaphoreProperties = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceExternalSemaphoreInfo, [*c]VkExternalSemaphoreProperties) callconv(.C) void;
pub const PFN_vkGetDescriptorSetLayoutSupport = ?*const fn (VkDevice, [*c]const VkDescriptorSetLayoutCreateInfo, [*c]VkDescriptorSetLayoutSupport) callconv(.C) void;
pub extern fn vkEnumerateInstanceVersion(pApiVersion: [*c]u32) VkResult;
pub extern fn vkBindBufferMemory2(device: VkDevice, bindInfoCount: u32, pBindInfos: [*c]const VkBindBufferMemoryInfo) VkResult;
pub extern fn vkBindImageMemory2(device: VkDevice, bindInfoCount: u32, pBindInfos: [*c]const VkBindImageMemoryInfo) VkResult;
pub extern fn vkGetDeviceGroupPeerMemoryFeatures(device: VkDevice, heapIndex: u32, localDeviceIndex: u32, remoteDeviceIndex: u32, pPeerMemoryFeatures: [*c]VkPeerMemoryFeatureFlags) void;
pub extern fn vkCmdSetDeviceMask(commandBuffer: VkCommandBuffer, deviceMask: u32) void;
pub extern fn vkCmdDispatchBase(commandBuffer: VkCommandBuffer, baseGroupX: u32, baseGroupY: u32, baseGroupZ: u32, groupCountX: u32, groupCountY: u32, groupCountZ: u32) void;
pub extern fn vkEnumeratePhysicalDeviceGroups(instance: VkInstance, pPhysicalDeviceGroupCount: [*c]u32, pPhysicalDeviceGroupProperties: [*c]VkPhysicalDeviceGroupProperties) VkResult;
pub extern fn vkGetImageMemoryRequirements2(device: VkDevice, pInfo: [*c]const VkImageMemoryRequirementsInfo2, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetBufferMemoryRequirements2(device: VkDevice, pInfo: [*c]const VkBufferMemoryRequirementsInfo2, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetImageSparseMemoryRequirements2(device: VkDevice, pInfo: [*c]const VkImageSparseMemoryRequirementsInfo2, pSparseMemoryRequirementCount: [*c]u32, pSparseMemoryRequirements: [*c]VkSparseImageMemoryRequirements2) void;
pub extern fn vkGetPhysicalDeviceFeatures2(physicalDevice: VkPhysicalDevice, pFeatures: [*c]VkPhysicalDeviceFeatures2) void;
pub extern fn vkGetPhysicalDeviceProperties2(physicalDevice: VkPhysicalDevice, pProperties: [*c]VkPhysicalDeviceProperties2) void;
pub extern fn vkGetPhysicalDeviceFormatProperties2(physicalDevice: VkPhysicalDevice, format: VkFormat, pFormatProperties: [*c]VkFormatProperties2) void;
pub extern fn vkGetPhysicalDeviceImageFormatProperties2(physicalDevice: VkPhysicalDevice, pImageFormatInfo: [*c]const VkPhysicalDeviceImageFormatInfo2, pImageFormatProperties: [*c]VkImageFormatProperties2) VkResult;
pub extern fn vkGetPhysicalDeviceQueueFamilyProperties2(physicalDevice: VkPhysicalDevice, pQueueFamilyPropertyCount: [*c]u32, pQueueFamilyProperties: [*c]VkQueueFamilyProperties2) void;
pub extern fn vkGetPhysicalDeviceMemoryProperties2(physicalDevice: VkPhysicalDevice, pMemoryProperties: [*c]VkPhysicalDeviceMemoryProperties2) void;
pub extern fn vkGetPhysicalDeviceSparseImageFormatProperties2(physicalDevice: VkPhysicalDevice, pFormatInfo: [*c]const VkPhysicalDeviceSparseImageFormatInfo2, pPropertyCount: [*c]u32, pProperties: [*c]VkSparseImageFormatProperties2) void;
pub extern fn vkTrimCommandPool(device: VkDevice, commandPool: VkCommandPool, flags: VkCommandPoolTrimFlags) void;
pub extern fn vkGetDeviceQueue2(device: VkDevice, pQueueInfo: [*c]const VkDeviceQueueInfo2, pQueue: [*c]VkQueue) void;
pub extern fn vkCreateSamplerYcbcrConversion(device: VkDevice, pCreateInfo: [*c]const VkSamplerYcbcrConversionCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pYcbcrConversion: [*c]VkSamplerYcbcrConversion) VkResult;
pub extern fn vkDestroySamplerYcbcrConversion(device: VkDevice, ycbcrConversion: VkSamplerYcbcrConversion, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCreateDescriptorUpdateTemplate(device: VkDevice, pCreateInfo: [*c]const VkDescriptorUpdateTemplateCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pDescriptorUpdateTemplate: [*c]VkDescriptorUpdateTemplate) VkResult;
pub extern fn vkDestroyDescriptorUpdateTemplate(device: VkDevice, descriptorUpdateTemplate: VkDescriptorUpdateTemplate, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkUpdateDescriptorSetWithTemplate(device: VkDevice, descriptorSet: VkDescriptorSet, descriptorUpdateTemplate: VkDescriptorUpdateTemplate, pData: ?*const anyopaque) void;
pub extern fn vkGetPhysicalDeviceExternalBufferProperties(physicalDevice: VkPhysicalDevice, pExternalBufferInfo: [*c]const VkPhysicalDeviceExternalBufferInfo, pExternalBufferProperties: [*c]VkExternalBufferProperties) void;
pub extern fn vkGetPhysicalDeviceExternalFenceProperties(physicalDevice: VkPhysicalDevice, pExternalFenceInfo: [*c]const VkPhysicalDeviceExternalFenceInfo, pExternalFenceProperties: [*c]VkExternalFenceProperties) void;
pub extern fn vkGetPhysicalDeviceExternalSemaphoreProperties(physicalDevice: VkPhysicalDevice, pExternalSemaphoreInfo: [*c]const VkPhysicalDeviceExternalSemaphoreInfo, pExternalSemaphoreProperties: [*c]VkExternalSemaphoreProperties) void;
pub extern fn vkGetDescriptorSetLayoutSupport(device: VkDevice, pCreateInfo: [*c]const VkDescriptorSetLayoutCreateInfo, pSupport: [*c]VkDescriptorSetLayoutSupport) void;
pub const VK_DRIVER_ID_AMD_PROPRIETARY: c_int = 1;
pub const VK_DRIVER_ID_AMD_OPEN_SOURCE: c_int = 2;
pub const VK_DRIVER_ID_MESA_RADV: c_int = 3;
pub const VK_DRIVER_ID_NVIDIA_PROPRIETARY: c_int = 4;
pub const VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS: c_int = 5;
pub const VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA: c_int = 6;
pub const VK_DRIVER_ID_IMAGINATION_PROPRIETARY: c_int = 7;
pub const VK_DRIVER_ID_QUALCOMM_PROPRIETARY: c_int = 8;
pub const VK_DRIVER_ID_ARM_PROPRIETARY: c_int = 9;
pub const VK_DRIVER_ID_GOOGLE_SWIFTSHADER: c_int = 10;
pub const VK_DRIVER_ID_GGP_PROPRIETARY: c_int = 11;
pub const VK_DRIVER_ID_BROADCOM_PROPRIETARY: c_int = 12;
pub const VK_DRIVER_ID_MESA_LLVMPIPE: c_int = 13;
pub const VK_DRIVER_ID_MOLTENVK: c_int = 14;
pub const VK_DRIVER_ID_COREAVI_PROPRIETARY: c_int = 15;
pub const VK_DRIVER_ID_JUICE_PROPRIETARY: c_int = 16;
pub const VK_DRIVER_ID_VERISILICON_PROPRIETARY: c_int = 17;
pub const VK_DRIVER_ID_MESA_TURNIP: c_int = 18;
pub const VK_DRIVER_ID_MESA_V3DV: c_int = 19;
pub const VK_DRIVER_ID_MESA_PANVK: c_int = 20;
pub const VK_DRIVER_ID_SAMSUNG_PROPRIETARY: c_int = 21;
pub const VK_DRIVER_ID_MESA_VENUS: c_int = 22;
pub const VK_DRIVER_ID_MESA_DOZEN: c_int = 23;
pub const VK_DRIVER_ID_MESA_NVK: c_int = 24;
pub const VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA: c_int = 25;
pub const VK_DRIVER_ID_MESA_AGXV: c_int = 26;
pub const VK_DRIVER_ID_AMD_PROPRIETARY_KHR: c_int = 1;
pub const VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR: c_int = 2;
pub const VK_DRIVER_ID_MESA_RADV_KHR: c_int = 3;
pub const VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR: c_int = 4;
pub const VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR: c_int = 5;
pub const VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR: c_int = 6;
pub const VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR: c_int = 7;
pub const VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR: c_int = 8;
pub const VK_DRIVER_ID_ARM_PROPRIETARY_KHR: c_int = 9;
pub const VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR: c_int = 10;
pub const VK_DRIVER_ID_GGP_PROPRIETARY_KHR: c_int = 11;
pub const VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR: c_int = 12;
pub const VK_DRIVER_ID_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDriverId = c_uint;
pub const VkDriverId = enum_VkDriverId;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY: c_int = 0;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL: c_int = 1;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE: c_int = 2;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR: c_int = 0;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR: c_int = 1;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR: c_int = 2;
pub const VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkShaderFloatControlsIndependence = c_uint;
pub const VkShaderFloatControlsIndependence = enum_VkShaderFloatControlsIndependence;
pub const VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE: c_int = 0;
pub const VK_SAMPLER_REDUCTION_MODE_MIN: c_int = 1;
pub const VK_SAMPLER_REDUCTION_MODE_MAX: c_int = 2;
pub const VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_RANGECLAMP_QCOM: c_int = 1000521000;
pub const VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT: c_int = 0;
pub const VK_SAMPLER_REDUCTION_MODE_MIN_EXT: c_int = 1;
pub const VK_SAMPLER_REDUCTION_MODE_MAX_EXT: c_int = 2;
pub const VK_SAMPLER_REDUCTION_MODE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSamplerReductionMode = c_uint;
pub const VkSamplerReductionMode = enum_VkSamplerReductionMode;
pub const VK_SEMAPHORE_TYPE_BINARY: c_int = 0;
pub const VK_SEMAPHORE_TYPE_TIMELINE: c_int = 1;
pub const VK_SEMAPHORE_TYPE_BINARY_KHR: c_int = 0;
pub const VK_SEMAPHORE_TYPE_TIMELINE_KHR: c_int = 1;
pub const VK_SEMAPHORE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSemaphoreType = c_uint;
pub const VkSemaphoreType = enum_VkSemaphoreType;
pub const VK_RESOLVE_MODE_NONE: c_int = 0;
pub const VK_RESOLVE_MODE_SAMPLE_ZERO_BIT: c_int = 1;
pub const VK_RESOLVE_MODE_AVERAGE_BIT: c_int = 2;
pub const VK_RESOLVE_MODE_MIN_BIT: c_int = 4;
pub const VK_RESOLVE_MODE_MAX_BIT: c_int = 8;
pub const VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID: c_int = 16;
pub const VK_RESOLVE_MODE_NONE_KHR: c_int = 0;
pub const VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR: c_int = 1;
pub const VK_RESOLVE_MODE_AVERAGE_BIT_KHR: c_int = 2;
pub const VK_RESOLVE_MODE_MIN_BIT_KHR: c_int = 4;
pub const VK_RESOLVE_MODE_MAX_BIT_KHR: c_int = 8;
pub const VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkResolveModeFlagBits = c_uint;
pub const VkResolveModeFlagBits = enum_VkResolveModeFlagBits;
pub const VkResolveModeFlags = VkFlags;
pub const VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT: c_int = 1;
pub const VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT: c_int = 2;
pub const VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT: c_int = 4;
pub const VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT: c_int = 8;
pub const VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT: c_int = 1;
pub const VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT: c_int = 2;
pub const VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT: c_int = 4;
pub const VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT: c_int = 8;
pub const VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkDescriptorBindingFlagBits = c_uint;
pub const VkDescriptorBindingFlagBits = enum_VkDescriptorBindingFlagBits;
pub const VkDescriptorBindingFlags = VkFlags;
pub const VK_SEMAPHORE_WAIT_ANY_BIT: c_int = 1;
pub const VK_SEMAPHORE_WAIT_ANY_BIT_KHR: c_int = 1;
pub const VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSemaphoreWaitFlagBits = c_uint;
pub const VkSemaphoreWaitFlagBits = enum_VkSemaphoreWaitFlagBits;
pub const VkSemaphoreWaitFlags = VkFlags;
pub const struct_VkPhysicalDeviceVulkan11Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    storageBuffer16BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformAndStorageBuffer16BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storagePushConstant16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storageInputOutput16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiview: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiviewGeometryShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiviewTessellationShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    variablePointersStorageBuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    variablePointers: VkBool32 = @import("std").mem.zeroes(VkBool32),
    protectedMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
    samplerYcbcrConversion: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDrawParameters: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVulkan11Features = struct_VkPhysicalDeviceVulkan11Features;
pub const struct_VkPhysicalDeviceVulkan11Properties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    driverUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    deviceLUID: [8]u8 = @import("std").mem.zeroes([8]u8),
    deviceNodeMask: u32 = @import("std").mem.zeroes(u32),
    deviceLUIDValid: VkBool32 = @import("std").mem.zeroes(VkBool32),
    subgroupSize: u32 = @import("std").mem.zeroes(u32),
    subgroupSupportedStages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    subgroupSupportedOperations: VkSubgroupFeatureFlags = @import("std").mem.zeroes(VkSubgroupFeatureFlags),
    subgroupQuadOperationsInAllStages: VkBool32 = @import("std").mem.zeroes(VkBool32),
    pointClippingBehavior: VkPointClippingBehavior = @import("std").mem.zeroes(VkPointClippingBehavior),
    maxMultiviewViewCount: u32 = @import("std").mem.zeroes(u32),
    maxMultiviewInstanceIndex: u32 = @import("std").mem.zeroes(u32),
    protectedNoFault: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxPerSetDescriptors: u32 = @import("std").mem.zeroes(u32),
    maxMemoryAllocationSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceVulkan11Properties = struct_VkPhysicalDeviceVulkan11Properties;
pub const struct_VkPhysicalDeviceVulkan12Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    samplerMirrorClampToEdge: VkBool32 = @import("std").mem.zeroes(VkBool32),
    drawIndirectCount: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storageBuffer8BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformAndStorageBuffer8BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storagePushConstant8: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferInt64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedInt64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInt8: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInputAttachmentArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSampledImageArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingSampledImageUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingStorageImageUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingUpdateUnusedWhilePending: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingPartiallyBound: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingVariableDescriptorCount: VkBool32 = @import("std").mem.zeroes(VkBool32),
    runtimeDescriptorArray: VkBool32 = @import("std").mem.zeroes(VkBool32),
    samplerFilterMinmax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    scalarBlockLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
    imagelessFramebuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformBufferStandardLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSubgroupExtendedTypes: VkBool32 = @import("std").mem.zeroes(VkBool32),
    separateDepthStencilLayouts: VkBool32 = @import("std").mem.zeroes(VkBool32),
    hostQueryReset: VkBool32 = @import("std").mem.zeroes(VkBool32),
    timelineSemaphore: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddress: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddressCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddressMultiDevice: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vulkanMemoryModel: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vulkanMemoryModelDeviceScope: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderOutputViewportIndex: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderOutputLayer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    subgroupBroadcastDynamicId: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVulkan12Features = struct_VkPhysicalDeviceVulkan12Features;
pub const struct_VkConformanceVersion = extern struct {
    major: u8 = @import("std").mem.zeroes(u8),
    minor: u8 = @import("std").mem.zeroes(u8),
    subminor: u8 = @import("std").mem.zeroes(u8),
    patch: u8 = @import("std").mem.zeroes(u8),
};
pub const VkConformanceVersion = struct_VkConformanceVersion;
pub const struct_VkPhysicalDeviceVulkan12Properties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    driverID: VkDriverId = @import("std").mem.zeroes(VkDriverId),
    driverName: [256]u8 = @import("std").mem.zeroes([256]u8),
    driverInfo: [256]u8 = @import("std").mem.zeroes([256]u8),
    conformanceVersion: VkConformanceVersion = @import("std").mem.zeroes(VkConformanceVersion),
    denormBehaviorIndependence: VkShaderFloatControlsIndependence = @import("std").mem.zeroes(VkShaderFloatControlsIndependence),
    roundingModeIndependence: VkShaderFloatControlsIndependence = @import("std").mem.zeroes(VkShaderFloatControlsIndependence),
    shaderSignedZeroInfNanPreserveFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSignedZeroInfNanPreserveFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSignedZeroInfNanPreserveFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormPreserveFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormPreserveFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormPreserveFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormFlushToZeroFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormFlushToZeroFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormFlushToZeroFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTEFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTEFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTEFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTZFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTZFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTZFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxUpdateAfterBindDescriptorsInAllPools: u32 = @import("std").mem.zeroes(u32),
    shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    robustBufferAccessUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    quadDivergentImplicitLod: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxPerStageDescriptorUpdateAfterBindSamplers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindUniformBuffers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindStorageBuffers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindSampledImages: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindStorageImages: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindInputAttachments: u32 = @import("std").mem.zeroes(u32),
    maxPerStageUpdateAfterBindResources: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindSamplers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindUniformBuffers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindStorageBuffers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindSampledImages: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindStorageImages: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindInputAttachments: u32 = @import("std").mem.zeroes(u32),
    supportedDepthResolveModes: VkResolveModeFlags = @import("std").mem.zeroes(VkResolveModeFlags),
    supportedStencilResolveModes: VkResolveModeFlags = @import("std").mem.zeroes(VkResolveModeFlags),
    independentResolveNone: VkBool32 = @import("std").mem.zeroes(VkBool32),
    independentResolve: VkBool32 = @import("std").mem.zeroes(VkBool32),
    filterMinmaxSingleComponentFormats: VkBool32 = @import("std").mem.zeroes(VkBool32),
    filterMinmaxImageComponentMapping: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxTimelineSemaphoreValueDifference: u64 = @import("std").mem.zeroes(u64),
    framebufferIntegerColorSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
};
pub const VkPhysicalDeviceVulkan12Properties = struct_VkPhysicalDeviceVulkan12Properties;
pub const struct_VkImageFormatListCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    viewFormatCount: u32 = @import("std").mem.zeroes(u32),
    pViewFormats: [*c]const VkFormat = @import("std").mem.zeroes([*c]const VkFormat),
};
pub const VkImageFormatListCreateInfo = struct_VkImageFormatListCreateInfo;
pub const struct_VkAttachmentDescription2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkAttachmentDescriptionFlags = @import("std").mem.zeroes(VkAttachmentDescriptionFlags),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    samples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    loadOp: VkAttachmentLoadOp = @import("std").mem.zeroes(VkAttachmentLoadOp),
    storeOp: VkAttachmentStoreOp = @import("std").mem.zeroes(VkAttachmentStoreOp),
    stencilLoadOp: VkAttachmentLoadOp = @import("std").mem.zeroes(VkAttachmentLoadOp),
    stencilStoreOp: VkAttachmentStoreOp = @import("std").mem.zeroes(VkAttachmentStoreOp),
    initialLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    finalLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkAttachmentDescription2 = struct_VkAttachmentDescription2;
pub const struct_VkAttachmentReference2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    attachment: u32 = @import("std").mem.zeroes(u32),
    layout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    aspectMask: VkImageAspectFlags = @import("std").mem.zeroes(VkImageAspectFlags),
};
pub const VkAttachmentReference2 = struct_VkAttachmentReference2;
pub const struct_VkSubpassDescription2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkSubpassDescriptionFlags = @import("std").mem.zeroes(VkSubpassDescriptionFlags),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    viewMask: u32 = @import("std").mem.zeroes(u32),
    inputAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pInputAttachments: [*c]const VkAttachmentReference2 = @import("std").mem.zeroes([*c]const VkAttachmentReference2),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachments: [*c]const VkAttachmentReference2 = @import("std").mem.zeroes([*c]const VkAttachmentReference2),
    pResolveAttachments: [*c]const VkAttachmentReference2 = @import("std").mem.zeroes([*c]const VkAttachmentReference2),
    pDepthStencilAttachment: [*c]const VkAttachmentReference2 = @import("std").mem.zeroes([*c]const VkAttachmentReference2),
    preserveAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pPreserveAttachments: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkSubpassDescription2 = struct_VkSubpassDescription2;
pub const struct_VkSubpassDependency2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcSubpass: u32 = @import("std").mem.zeroes(u32),
    dstSubpass: u32 = @import("std").mem.zeroes(u32),
    srcStageMask: VkPipelineStageFlags = @import("std").mem.zeroes(VkPipelineStageFlags),
    dstStageMask: VkPipelineStageFlags = @import("std").mem.zeroes(VkPipelineStageFlags),
    srcAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dstAccessMask: VkAccessFlags = @import("std").mem.zeroes(VkAccessFlags),
    dependencyFlags: VkDependencyFlags = @import("std").mem.zeroes(VkDependencyFlags),
    viewOffset: i32 = @import("std").mem.zeroes(i32),
};
pub const VkSubpassDependency2 = struct_VkSubpassDependency2;
pub const struct_VkRenderPassCreateInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkRenderPassCreateFlags = @import("std").mem.zeroes(VkRenderPassCreateFlags),
    attachmentCount: u32 = @import("std").mem.zeroes(u32),
    pAttachments: [*c]const VkAttachmentDescription2 = @import("std").mem.zeroes([*c]const VkAttachmentDescription2),
    subpassCount: u32 = @import("std").mem.zeroes(u32),
    pSubpasses: [*c]const VkSubpassDescription2 = @import("std").mem.zeroes([*c]const VkSubpassDescription2),
    dependencyCount: u32 = @import("std").mem.zeroes(u32),
    pDependencies: [*c]const VkSubpassDependency2 = @import("std").mem.zeroes([*c]const VkSubpassDependency2),
    correlatedViewMaskCount: u32 = @import("std").mem.zeroes(u32),
    pCorrelatedViewMasks: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkRenderPassCreateInfo2 = struct_VkRenderPassCreateInfo2;
pub const struct_VkSubpassBeginInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    contents: VkSubpassContents = @import("std").mem.zeroes(VkSubpassContents),
};
pub const VkSubpassBeginInfo = struct_VkSubpassBeginInfo;
pub const struct_VkSubpassEndInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkSubpassEndInfo = struct_VkSubpassEndInfo;
pub const struct_VkPhysicalDevice8BitStorageFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    storageBuffer8BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformAndStorageBuffer8BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storagePushConstant8: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevice8BitStorageFeatures = struct_VkPhysicalDevice8BitStorageFeatures;
pub const struct_VkPhysicalDeviceDriverProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    driverID: VkDriverId = @import("std").mem.zeroes(VkDriverId),
    driverName: [256]u8 = @import("std").mem.zeroes([256]u8),
    driverInfo: [256]u8 = @import("std").mem.zeroes([256]u8),
    conformanceVersion: VkConformanceVersion = @import("std").mem.zeroes(VkConformanceVersion),
};
pub const VkPhysicalDeviceDriverProperties = struct_VkPhysicalDeviceDriverProperties;
pub const struct_VkPhysicalDeviceShaderAtomicInt64Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderBufferInt64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedInt64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderAtomicInt64Features = struct_VkPhysicalDeviceShaderAtomicInt64Features;
pub const struct_VkPhysicalDeviceShaderFloat16Int8Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInt8: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderFloat16Int8Features = struct_VkPhysicalDeviceShaderFloat16Int8Features;
pub const struct_VkPhysicalDeviceFloatControlsProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    denormBehaviorIndependence: VkShaderFloatControlsIndependence = @import("std").mem.zeroes(VkShaderFloatControlsIndependence),
    roundingModeIndependence: VkShaderFloatControlsIndependence = @import("std").mem.zeroes(VkShaderFloatControlsIndependence),
    shaderSignedZeroInfNanPreserveFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSignedZeroInfNanPreserveFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSignedZeroInfNanPreserveFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormPreserveFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormPreserveFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormPreserveFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormFlushToZeroFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormFlushToZeroFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDenormFlushToZeroFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTEFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTEFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTEFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTZFloat16: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTZFloat32: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderRoundingModeRTZFloat64: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFloatControlsProperties = struct_VkPhysicalDeviceFloatControlsProperties;
pub const struct_VkDescriptorSetLayoutBindingFlagsCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    bindingCount: u32 = @import("std").mem.zeroes(u32),
    pBindingFlags: [*c]const VkDescriptorBindingFlags = @import("std").mem.zeroes([*c]const VkDescriptorBindingFlags),
};
pub const VkDescriptorSetLayoutBindingFlagsCreateInfo = struct_VkDescriptorSetLayoutBindingFlagsCreateInfo;
pub const struct_VkPhysicalDeviceDescriptorIndexingFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderInputAttachmentArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSampledImageArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingSampledImageUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingStorageImageUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingUpdateUnusedWhilePending: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingPartiallyBound: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingVariableDescriptorCount: VkBool32 = @import("std").mem.zeroes(VkBool32),
    runtimeDescriptorArray: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDescriptorIndexingFeatures = struct_VkPhysicalDeviceDescriptorIndexingFeatures;
pub const struct_VkPhysicalDeviceDescriptorIndexingProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxUpdateAfterBindDescriptorsInAllPools: u32 = @import("std").mem.zeroes(u32),
    shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = @import("std").mem.zeroes(VkBool32),
    robustBufferAccessUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    quadDivergentImplicitLod: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxPerStageDescriptorUpdateAfterBindSamplers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindUniformBuffers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindStorageBuffers: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindSampledImages: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindStorageImages: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindInputAttachments: u32 = @import("std").mem.zeroes(u32),
    maxPerStageUpdateAfterBindResources: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindSamplers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindUniformBuffers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindStorageBuffers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindSampledImages: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindStorageImages: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindInputAttachments: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceDescriptorIndexingProperties = struct_VkPhysicalDeviceDescriptorIndexingProperties;
pub const struct_VkDescriptorSetVariableDescriptorCountAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    descriptorSetCount: u32 = @import("std").mem.zeroes(u32),
    pDescriptorCounts: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkDescriptorSetVariableDescriptorCountAllocateInfo = struct_VkDescriptorSetVariableDescriptorCountAllocateInfo;
pub const struct_VkDescriptorSetVariableDescriptorCountLayoutSupport = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxVariableDescriptorCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDescriptorSetVariableDescriptorCountLayoutSupport = struct_VkDescriptorSetVariableDescriptorCountLayoutSupport;
pub const struct_VkSubpassDescriptionDepthStencilResolve = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    depthResolveMode: VkResolveModeFlagBits = @import("std").mem.zeroes(VkResolveModeFlagBits),
    stencilResolveMode: VkResolveModeFlagBits = @import("std").mem.zeroes(VkResolveModeFlagBits),
    pDepthStencilResolveAttachment: [*c]const VkAttachmentReference2 = @import("std").mem.zeroes([*c]const VkAttachmentReference2),
};
pub const VkSubpassDescriptionDepthStencilResolve = struct_VkSubpassDescriptionDepthStencilResolve;
pub const struct_VkPhysicalDeviceDepthStencilResolveProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    supportedDepthResolveModes: VkResolveModeFlags = @import("std").mem.zeroes(VkResolveModeFlags),
    supportedStencilResolveModes: VkResolveModeFlags = @import("std").mem.zeroes(VkResolveModeFlags),
    independentResolveNone: VkBool32 = @import("std").mem.zeroes(VkBool32),
    independentResolve: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDepthStencilResolveProperties = struct_VkPhysicalDeviceDepthStencilResolveProperties;
pub const struct_VkPhysicalDeviceScalarBlockLayoutFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    scalarBlockLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceScalarBlockLayoutFeatures = struct_VkPhysicalDeviceScalarBlockLayoutFeatures;
pub const struct_VkImageStencilUsageCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stencilUsage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
};
pub const VkImageStencilUsageCreateInfo = struct_VkImageStencilUsageCreateInfo;
pub const struct_VkSamplerReductionModeCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    reductionMode: VkSamplerReductionMode = @import("std").mem.zeroes(VkSamplerReductionMode),
};
pub const VkSamplerReductionModeCreateInfo = struct_VkSamplerReductionModeCreateInfo;
pub const struct_VkPhysicalDeviceSamplerFilterMinmaxProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    filterMinmaxSingleComponentFormats: VkBool32 = @import("std").mem.zeroes(VkBool32),
    filterMinmaxImageComponentMapping: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSamplerFilterMinmaxProperties = struct_VkPhysicalDeviceSamplerFilterMinmaxProperties;
pub const struct_VkPhysicalDeviceVulkanMemoryModelFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    vulkanMemoryModel: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vulkanMemoryModelDeviceScope: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVulkanMemoryModelFeatures = struct_VkPhysicalDeviceVulkanMemoryModelFeatures;
pub const struct_VkPhysicalDeviceImagelessFramebufferFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imagelessFramebuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImagelessFramebufferFeatures = struct_VkPhysicalDeviceImagelessFramebufferFeatures;
pub const struct_VkFramebufferAttachmentImageInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkImageCreateFlags = @import("std").mem.zeroes(VkImageCreateFlags),
    usage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
    layerCount: u32 = @import("std").mem.zeroes(u32),
    viewFormatCount: u32 = @import("std").mem.zeroes(u32),
    pViewFormats: [*c]const VkFormat = @import("std").mem.zeroes([*c]const VkFormat),
};
pub const VkFramebufferAttachmentImageInfo = struct_VkFramebufferAttachmentImageInfo;
pub const struct_VkFramebufferAttachmentsCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    attachmentImageInfoCount: u32 = @import("std").mem.zeroes(u32),
    pAttachmentImageInfos: [*c]const VkFramebufferAttachmentImageInfo = @import("std").mem.zeroes([*c]const VkFramebufferAttachmentImageInfo),
};
pub const VkFramebufferAttachmentsCreateInfo = struct_VkFramebufferAttachmentsCreateInfo;
pub const struct_VkRenderPassAttachmentBeginInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    attachmentCount: u32 = @import("std").mem.zeroes(u32),
    pAttachments: [*c]const VkImageView = @import("std").mem.zeroes([*c]const VkImageView),
};
pub const VkRenderPassAttachmentBeginInfo = struct_VkRenderPassAttachmentBeginInfo;
pub const struct_VkPhysicalDeviceUniformBufferStandardLayoutFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    uniformBufferStandardLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceUniformBufferStandardLayoutFeatures = struct_VkPhysicalDeviceUniformBufferStandardLayoutFeatures;
pub const struct_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderSubgroupExtendedTypes: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures = struct_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures;
pub const struct_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    separateDepthStencilLayouts: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures = struct_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures;
pub const struct_VkAttachmentReferenceStencilLayout = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    stencilLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkAttachmentReferenceStencilLayout = struct_VkAttachmentReferenceStencilLayout;
pub const struct_VkAttachmentDescriptionStencilLayout = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    stencilInitialLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    stencilFinalLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkAttachmentDescriptionStencilLayout = struct_VkAttachmentDescriptionStencilLayout;
pub const struct_VkPhysicalDeviceHostQueryResetFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    hostQueryReset: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceHostQueryResetFeatures = struct_VkPhysicalDeviceHostQueryResetFeatures;
pub const struct_VkPhysicalDeviceTimelineSemaphoreFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    timelineSemaphore: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTimelineSemaphoreFeatures = struct_VkPhysicalDeviceTimelineSemaphoreFeatures;
pub const struct_VkPhysicalDeviceTimelineSemaphoreProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxTimelineSemaphoreValueDifference: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPhysicalDeviceTimelineSemaphoreProperties = struct_VkPhysicalDeviceTimelineSemaphoreProperties;
pub const struct_VkSemaphoreTypeCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    semaphoreType: VkSemaphoreType = @import("std").mem.zeroes(VkSemaphoreType),
    initialValue: u64 = @import("std").mem.zeroes(u64),
};
pub const VkSemaphoreTypeCreateInfo = struct_VkSemaphoreTypeCreateInfo;
pub const struct_VkTimelineSemaphoreSubmitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    waitSemaphoreValueCount: u32 = @import("std").mem.zeroes(u32),
    pWaitSemaphoreValues: [*c]const u64 = @import("std").mem.zeroes([*c]const u64),
    signalSemaphoreValueCount: u32 = @import("std").mem.zeroes(u32),
    pSignalSemaphoreValues: [*c]const u64 = @import("std").mem.zeroes([*c]const u64),
};
pub const VkTimelineSemaphoreSubmitInfo = struct_VkTimelineSemaphoreSubmitInfo;
pub const struct_VkSemaphoreWaitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkSemaphoreWaitFlags = @import("std").mem.zeroes(VkSemaphoreWaitFlags),
    semaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pSemaphores: [*c]const VkSemaphore = @import("std").mem.zeroes([*c]const VkSemaphore),
    pValues: [*c]const u64 = @import("std").mem.zeroes([*c]const u64),
};
pub const VkSemaphoreWaitInfo = struct_VkSemaphoreWaitInfo;
pub const struct_VkSemaphoreSignalInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    semaphore: VkSemaphore = @import("std").mem.zeroes(VkSemaphore),
    value: u64 = @import("std").mem.zeroes(u64),
};
pub const VkSemaphoreSignalInfo = struct_VkSemaphoreSignalInfo;
pub const struct_VkPhysicalDeviceBufferDeviceAddressFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    bufferDeviceAddress: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddressCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddressMultiDevice: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceBufferDeviceAddressFeatures = struct_VkPhysicalDeviceBufferDeviceAddressFeatures;
pub const struct_VkBufferDeviceAddressInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
};
pub const VkBufferDeviceAddressInfo = struct_VkBufferDeviceAddressInfo;
pub const struct_VkBufferOpaqueCaptureAddressCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    opaqueCaptureAddress: u64 = @import("std").mem.zeroes(u64),
};
pub const VkBufferOpaqueCaptureAddressCreateInfo = struct_VkBufferOpaqueCaptureAddressCreateInfo;
pub const struct_VkMemoryOpaqueCaptureAddressAllocateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    opaqueCaptureAddress: u64 = @import("std").mem.zeroes(u64),
};
pub const VkMemoryOpaqueCaptureAddressAllocateInfo = struct_VkMemoryOpaqueCaptureAddressAllocateInfo;
pub const struct_VkDeviceMemoryOpaqueCaptureAddressInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
};
pub const VkDeviceMemoryOpaqueCaptureAddressInfo = struct_VkDeviceMemoryOpaqueCaptureAddressInfo;
pub const PFN_vkCmdDrawIndirectCount = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndexedIndirectCount = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCreateRenderPass2 = ?*const fn (VkDevice, [*c]const VkRenderPassCreateInfo2, [*c]const VkAllocationCallbacks, [*c]VkRenderPass) callconv(.C) VkResult;
pub const PFN_vkCmdBeginRenderPass2 = ?*const fn (VkCommandBuffer, [*c]const VkRenderPassBeginInfo, [*c]const VkSubpassBeginInfo) callconv(.C) void;
pub const PFN_vkCmdNextSubpass2 = ?*const fn (VkCommandBuffer, [*c]const VkSubpassBeginInfo, [*c]const VkSubpassEndInfo) callconv(.C) void;
pub const PFN_vkCmdEndRenderPass2 = ?*const fn (VkCommandBuffer, [*c]const VkSubpassEndInfo) callconv(.C) void;
pub const PFN_vkResetQueryPool = ?*const fn (VkDevice, VkQueryPool, u32, u32) callconv(.C) void;
pub const PFN_vkGetSemaphoreCounterValue = ?*const fn (VkDevice, VkSemaphore, [*c]u64) callconv(.C) VkResult;
pub const PFN_vkWaitSemaphores = ?*const fn (VkDevice, [*c]const VkSemaphoreWaitInfo, u64) callconv(.C) VkResult;
pub const PFN_vkSignalSemaphore = ?*const fn (VkDevice, [*c]const VkSemaphoreSignalInfo) callconv(.C) VkResult;
pub const PFN_vkGetBufferDeviceAddress = ?*const fn (VkDevice, [*c]const VkBufferDeviceAddressInfo) callconv(.C) VkDeviceAddress;
pub const PFN_vkGetBufferOpaqueCaptureAddress = ?*const fn (VkDevice, [*c]const VkBufferDeviceAddressInfo) callconv(.C) u64;
pub const PFN_vkGetDeviceMemoryOpaqueCaptureAddress = ?*const fn (VkDevice, [*c]const VkDeviceMemoryOpaqueCaptureAddressInfo) callconv(.C) u64;
pub extern fn vkCmdDrawIndirectCount(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub extern fn vkCmdDrawIndexedIndirectCount(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub extern fn vkCreateRenderPass2(device: VkDevice, pCreateInfo: [*c]const VkRenderPassCreateInfo2, pAllocator: [*c]const VkAllocationCallbacks, pRenderPass: [*c]VkRenderPass) VkResult;
pub extern fn vkCmdBeginRenderPass2(commandBuffer: VkCommandBuffer, pRenderPassBegin: [*c]const VkRenderPassBeginInfo, pSubpassBeginInfo: [*c]const VkSubpassBeginInfo) void;
pub extern fn vkCmdNextSubpass2(commandBuffer: VkCommandBuffer, pSubpassBeginInfo: [*c]const VkSubpassBeginInfo, pSubpassEndInfo: [*c]const VkSubpassEndInfo) void;
pub extern fn vkCmdEndRenderPass2(commandBuffer: VkCommandBuffer, pSubpassEndInfo: [*c]const VkSubpassEndInfo) void;
pub extern fn vkResetQueryPool(device: VkDevice, queryPool: VkQueryPool, firstQuery: u32, queryCount: u32) void;
pub extern fn vkGetSemaphoreCounterValue(device: VkDevice, semaphore: VkSemaphore, pValue: [*c]u64) VkResult;
pub extern fn vkWaitSemaphores(device: VkDevice, pWaitInfo: [*c]const VkSemaphoreWaitInfo, timeout: u64) VkResult;
pub extern fn vkSignalSemaphore(device: VkDevice, pSignalInfo: [*c]const VkSemaphoreSignalInfo) VkResult;
pub extern fn vkGetBufferDeviceAddress(device: VkDevice, pInfo: [*c]const VkBufferDeviceAddressInfo) VkDeviceAddress;
pub extern fn vkGetBufferOpaqueCaptureAddress(device: VkDevice, pInfo: [*c]const VkBufferDeviceAddressInfo) u64;
pub extern fn vkGetDeviceMemoryOpaqueCaptureAddress(device: VkDevice, pInfo: [*c]const VkDeviceMemoryOpaqueCaptureAddressInfo) u64;
pub const VkFlags64 = u64;
pub const struct_VkPrivateDataSlot_T = opaque {};
pub const VkPrivateDataSlot = ?*struct_VkPrivateDataSlot_T;
pub const VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT: c_int = 1;
pub const VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT: c_int = 2;
pub const VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT: c_int = 4;
pub const VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT: c_int = 1;
pub const VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT: c_int = 2;
pub const VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT: c_int = 4;
pub const VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkPipelineCreationFeedbackFlagBits = c_uint;
pub const VkPipelineCreationFeedbackFlagBits = enum_VkPipelineCreationFeedbackFlagBits;
pub const VkPipelineCreationFeedbackFlags = VkFlags;
pub const VK_TOOL_PURPOSE_VALIDATION_BIT: c_int = 1;
pub const VK_TOOL_PURPOSE_PROFILING_BIT: c_int = 2;
pub const VK_TOOL_PURPOSE_TRACING_BIT: c_int = 4;
pub const VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT: c_int = 8;
pub const VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT: c_int = 16;
pub const VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT: c_int = 32;
pub const VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT: c_int = 64;
pub const VK_TOOL_PURPOSE_VALIDATION_BIT_EXT: c_int = 1;
pub const VK_TOOL_PURPOSE_PROFILING_BIT_EXT: c_int = 2;
pub const VK_TOOL_PURPOSE_TRACING_BIT_EXT: c_int = 4;
pub const VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT: c_int = 8;
pub const VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT: c_int = 16;
pub const VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkToolPurposeFlagBits = c_uint;
pub const VkToolPurposeFlagBits = enum_VkToolPurposeFlagBits;
pub const VkToolPurposeFlags = VkFlags;
pub const VkPrivateDataSlotCreateFlags = VkFlags;
pub const VkPipelineStageFlags2 = VkFlags64;
pub const VkPipelineStageFlagBits2 = VkFlags64;
pub const VK_PIPELINE_STAGE_2_NONE: VkPipelineStageFlagBits2 = 0;
pub const VK_PIPELINE_STAGE_2_NONE_KHR: VkPipelineStageFlagBits2 = 0;
pub const VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT: VkPipelineStageFlagBits2 = 1;
pub const VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR: VkPipelineStageFlagBits2 = 1;
pub const VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT: VkPipelineStageFlagBits2 = 2;
pub const VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR: VkPipelineStageFlagBits2 = 2;
pub const VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT: VkPipelineStageFlagBits2 = 4;
pub const VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR: VkPipelineStageFlagBits2 = 4;
pub const VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT: VkPipelineStageFlagBits2 = 8;
pub const VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 8;
pub const VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT: VkPipelineStageFlagBits2 = 16;
pub const VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 16;
pub const VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT: VkPipelineStageFlagBits2 = 32;
pub const VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 32;
pub const VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT: VkPipelineStageFlagBits2 = 64;
pub const VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 64;
pub const VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT: VkPipelineStageFlagBits2 = 128;
pub const VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 128;
pub const VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT: VkPipelineStageFlagBits2 = 256;
pub const VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR: VkPipelineStageFlagBits2 = 256;
pub const VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT: VkPipelineStageFlagBits2 = 512;
pub const VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR: VkPipelineStageFlagBits2 = 512;
pub const VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT: VkPipelineStageFlagBits2 = 1024;
pub const VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR: VkPipelineStageFlagBits2 = 1024;
pub const VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT: VkPipelineStageFlagBits2 = 2048;
pub const VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 2048;
pub const VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT: VkPipelineStageFlagBits2 = 4096;
pub const VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR: VkPipelineStageFlagBits2 = 4096;
pub const VK_PIPELINE_STAGE_2_TRANSFER_BIT: VkPipelineStageFlagBits2 = 4096;
pub const VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR: VkPipelineStageFlagBits2 = 4096;
pub const VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT: VkPipelineStageFlagBits2 = 8192;
pub const VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR: VkPipelineStageFlagBits2 = 8192;
pub const VK_PIPELINE_STAGE_2_HOST_BIT: VkPipelineStageFlagBits2 = 16384;
pub const VK_PIPELINE_STAGE_2_HOST_BIT_KHR: VkPipelineStageFlagBits2 = 16384;
pub const VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT: VkPipelineStageFlagBits2 = 32768;
pub const VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR: VkPipelineStageFlagBits2 = 32768;
pub const VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT: VkPipelineStageFlagBits2 = 65536;
pub const VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR: VkPipelineStageFlagBits2 = 65536;
pub const VK_PIPELINE_STAGE_2_COPY_BIT: VkPipelineStageFlagBits2 = 4294967296;
pub const VK_PIPELINE_STAGE_2_COPY_BIT_KHR: VkPipelineStageFlagBits2 = 4294967296;
pub const VK_PIPELINE_STAGE_2_RESOLVE_BIT: VkPipelineStageFlagBits2 = 8589934592;
pub const VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR: VkPipelineStageFlagBits2 = 8589934592;
pub const VK_PIPELINE_STAGE_2_BLIT_BIT: VkPipelineStageFlagBits2 = 17179869184;
pub const VK_PIPELINE_STAGE_2_BLIT_BIT_KHR: VkPipelineStageFlagBits2 = 17179869184;
pub const VK_PIPELINE_STAGE_2_CLEAR_BIT: VkPipelineStageFlagBits2 = 34359738368;
pub const VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR: VkPipelineStageFlagBits2 = 34359738368;
pub const VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT: VkPipelineStageFlagBits2 = 68719476736;
pub const VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR: VkPipelineStageFlagBits2 = 68719476736;
pub const VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT: VkPipelineStageFlagBits2 = 137438953472;
pub const VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR: VkPipelineStageFlagBits2 = 137438953472;
pub const VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT: VkPipelineStageFlagBits2 = 274877906944;
pub const VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR: VkPipelineStageFlagBits2 = 274877906944;
pub const VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR: VkPipelineStageFlagBits2 = 67108864;
pub const VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR: VkPipelineStageFlagBits2 = 134217728;
pub const VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT: VkPipelineStageFlagBits2 = 16777216;
pub const VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT: VkPipelineStageFlagBits2 = 262144;
pub const VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV: VkPipelineStageFlagBits2 = 131072;
pub const VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: VkPipelineStageFlagBits2 = 4194304;
pub const VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV: VkPipelineStageFlagBits2 = 4194304;
pub const VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR: VkPipelineStageFlagBits2 = 33554432;
pub const VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR: VkPipelineStageFlagBits2 = 2097152;
pub const VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV: VkPipelineStageFlagBits2 = 2097152;
pub const VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV: VkPipelineStageFlagBits2 = 33554432;
pub const VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT: VkPipelineStageFlagBits2 = 8388608;
pub const VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV: VkPipelineStageFlagBits2 = 524288;
pub const VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV: VkPipelineStageFlagBits2 = 1048576;
pub const VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT: VkPipelineStageFlagBits2 = 524288;
pub const VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT: VkPipelineStageFlagBits2 = 1048576;
pub const VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI: VkPipelineStageFlagBits2 = 549755813888;
pub const VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI: VkPipelineStageFlagBits2 = 549755813888;
pub const VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI: VkPipelineStageFlagBits2 = 1099511627776;
pub const VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR: VkPipelineStageFlagBits2 = 268435456;
pub const VK_PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT: VkPipelineStageFlagBits2 = 1073741824;
pub const VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI: VkPipelineStageFlagBits2 = 2199023255552;
pub const VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV: VkPipelineStageFlagBits2 = 536870912;
pub const VkAccessFlags2 = VkFlags64;
pub const VkAccessFlagBits2 = VkFlags64;
pub const VK_ACCESS_2_NONE: VkAccessFlagBits2 = 0;
pub const VK_ACCESS_2_NONE_KHR: VkAccessFlagBits2 = 0;
pub const VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT: VkAccessFlagBits2 = 1;
pub const VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR: VkAccessFlagBits2 = 1;
pub const VK_ACCESS_2_INDEX_READ_BIT: VkAccessFlagBits2 = 2;
pub const VK_ACCESS_2_INDEX_READ_BIT_KHR: VkAccessFlagBits2 = 2;
pub const VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT: VkAccessFlagBits2 = 4;
pub const VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR: VkAccessFlagBits2 = 4;
pub const VK_ACCESS_2_UNIFORM_READ_BIT: VkAccessFlagBits2 = 8;
pub const VK_ACCESS_2_UNIFORM_READ_BIT_KHR: VkAccessFlagBits2 = 8;
pub const VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT: VkAccessFlagBits2 = 16;
pub const VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR: VkAccessFlagBits2 = 16;
pub const VK_ACCESS_2_SHADER_READ_BIT: VkAccessFlagBits2 = 32;
pub const VK_ACCESS_2_SHADER_READ_BIT_KHR: VkAccessFlagBits2 = 32;
pub const VK_ACCESS_2_SHADER_WRITE_BIT: VkAccessFlagBits2 = 64;
pub const VK_ACCESS_2_SHADER_WRITE_BIT_KHR: VkAccessFlagBits2 = 64;
pub const VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT: VkAccessFlagBits2 = 128;
pub const VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR: VkAccessFlagBits2 = 128;
pub const VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT: VkAccessFlagBits2 = 256;
pub const VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR: VkAccessFlagBits2 = 256;
pub const VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT: VkAccessFlagBits2 = 512;
pub const VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR: VkAccessFlagBits2 = 512;
pub const VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT: VkAccessFlagBits2 = 1024;
pub const VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR: VkAccessFlagBits2 = 1024;
pub const VK_ACCESS_2_TRANSFER_READ_BIT: VkAccessFlagBits2 = 2048;
pub const VK_ACCESS_2_TRANSFER_READ_BIT_KHR: VkAccessFlagBits2 = 2048;
pub const VK_ACCESS_2_TRANSFER_WRITE_BIT: VkAccessFlagBits2 = 4096;
pub const VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR: VkAccessFlagBits2 = 4096;
pub const VK_ACCESS_2_HOST_READ_BIT: VkAccessFlagBits2 = 8192;
pub const VK_ACCESS_2_HOST_READ_BIT_KHR: VkAccessFlagBits2 = 8192;
pub const VK_ACCESS_2_HOST_WRITE_BIT: VkAccessFlagBits2 = 16384;
pub const VK_ACCESS_2_HOST_WRITE_BIT_KHR: VkAccessFlagBits2 = 16384;
pub const VK_ACCESS_2_MEMORY_READ_BIT: VkAccessFlagBits2 = 32768;
pub const VK_ACCESS_2_MEMORY_READ_BIT_KHR: VkAccessFlagBits2 = 32768;
pub const VK_ACCESS_2_MEMORY_WRITE_BIT: VkAccessFlagBits2 = 65536;
pub const VK_ACCESS_2_MEMORY_WRITE_BIT_KHR: VkAccessFlagBits2 = 65536;
pub const VK_ACCESS_2_SHADER_SAMPLED_READ_BIT: VkAccessFlagBits2 = 4294967296;
pub const VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR: VkAccessFlagBits2 = 4294967296;
pub const VK_ACCESS_2_SHADER_STORAGE_READ_BIT: VkAccessFlagBits2 = 8589934592;
pub const VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR: VkAccessFlagBits2 = 8589934592;
pub const VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT: VkAccessFlagBits2 = 17179869184;
pub const VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR: VkAccessFlagBits2 = 17179869184;
pub const VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR: VkAccessFlagBits2 = 34359738368;
pub const VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR: VkAccessFlagBits2 = 68719476736;
pub const VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR: VkAccessFlagBits2 = 137438953472;
pub const VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR: VkAccessFlagBits2 = 274877906944;
pub const VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT: VkAccessFlagBits2 = 33554432;
pub const VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT: VkAccessFlagBits2 = 67108864;
pub const VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT: VkAccessFlagBits2 = 134217728;
pub const VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT: VkAccessFlagBits2 = 1048576;
pub const VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV: VkAccessFlagBits2 = 131072;
pub const VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV: VkAccessFlagBits2 = 262144;
pub const VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR: VkAccessFlagBits2 = 8388608;
pub const VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV: VkAccessFlagBits2 = 8388608;
pub const VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR: VkAccessFlagBits2 = 2097152;
pub const VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR: VkAccessFlagBits2 = 4194304;
pub const VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV: VkAccessFlagBits2 = 2097152;
pub const VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV: VkAccessFlagBits2 = 4194304;
pub const VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT: VkAccessFlagBits2 = 16777216;
pub const VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT: VkAccessFlagBits2 = 524288;
pub const VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT: VkAccessFlagBits2 = 2199023255552;
pub const VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI: VkAccessFlagBits2 = 549755813888;
pub const VK_ACCESS_2_SHADER_BINDING_TABLE_READ_BIT_KHR: VkAccessFlagBits2 = 1099511627776;
pub const VK_ACCESS_2_MICROMAP_READ_BIT_EXT: VkAccessFlagBits2 = 17592186044416;
pub const VK_ACCESS_2_MICROMAP_WRITE_BIT_EXT: VkAccessFlagBits2 = 35184372088832;
pub const VK_ACCESS_2_OPTICAL_FLOW_READ_BIT_NV: VkAccessFlagBits2 = 4398046511104;
pub const VK_ACCESS_2_OPTICAL_FLOW_WRITE_BIT_NV: VkAccessFlagBits2 = 8796093022208;
pub const VK_SUBMIT_PROTECTED_BIT: c_int = 1;
pub const VK_SUBMIT_PROTECTED_BIT_KHR: c_int = 1;
pub const VK_SUBMIT_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkSubmitFlagBits = c_uint;
pub const VkSubmitFlagBits = enum_VkSubmitFlagBits;
pub const VkSubmitFlags = VkFlags;
pub const VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT: c_int = 1;
pub const VK_RENDERING_SUSPENDING_BIT: c_int = 2;
pub const VK_RENDERING_RESUMING_BIT: c_int = 4;
pub const VK_RENDERING_CONTENTS_INLINE_BIT_EXT: c_int = 16;
pub const VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT: c_int = 8;
pub const VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR: c_int = 1;
pub const VK_RENDERING_SUSPENDING_BIT_KHR: c_int = 2;
pub const VK_RENDERING_RESUMING_BIT_KHR: c_int = 4;
pub const VK_RENDERING_FLAG_BITS_MAX_ENUM: c_int = 2147483647;
pub const enum_VkRenderingFlagBits = c_uint;
pub const VkRenderingFlagBits = enum_VkRenderingFlagBits;
pub const VkRenderingFlags = VkFlags;
pub const VkFormatFeatureFlags2 = VkFlags64;
pub const VkFormatFeatureFlagBits2 = VkFlags64;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT: VkFormatFeatureFlagBits2 = 1;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR: VkFormatFeatureFlagBits2 = 1;
pub const VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT: VkFormatFeatureFlagBits2 = 2;
pub const VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR: VkFormatFeatureFlagBits2 = 2;
pub const VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT: VkFormatFeatureFlagBits2 = 4;
pub const VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR: VkFormatFeatureFlagBits2 = 4;
pub const VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT: VkFormatFeatureFlagBits2 = 8;
pub const VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR: VkFormatFeatureFlagBits2 = 8;
pub const VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT: VkFormatFeatureFlagBits2 = 16;
pub const VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR: VkFormatFeatureFlagBits2 = 16;
pub const VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT: VkFormatFeatureFlagBits2 = 32;
pub const VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR: VkFormatFeatureFlagBits2 = 32;
pub const VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT: VkFormatFeatureFlagBits2 = 64;
pub const VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR: VkFormatFeatureFlagBits2 = 64;
pub const VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT: VkFormatFeatureFlagBits2 = 128;
pub const VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR: VkFormatFeatureFlagBits2 = 128;
pub const VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT: VkFormatFeatureFlagBits2 = 256;
pub const VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR: VkFormatFeatureFlagBits2 = 256;
pub const VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT: VkFormatFeatureFlagBits2 = 512;
pub const VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR: VkFormatFeatureFlagBits2 = 512;
pub const VK_FORMAT_FEATURE_2_BLIT_SRC_BIT: VkFormatFeatureFlagBits2 = 1024;
pub const VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR: VkFormatFeatureFlagBits2 = 1024;
pub const VK_FORMAT_FEATURE_2_BLIT_DST_BIT: VkFormatFeatureFlagBits2 = 2048;
pub const VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR: VkFormatFeatureFlagBits2 = 2048;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT: VkFormatFeatureFlagBits2 = 4096;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR: VkFormatFeatureFlagBits2 = 4096;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT: VkFormatFeatureFlagBits2 = 8192;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT: VkFormatFeatureFlagBits2 = 8192;
pub const VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT: VkFormatFeatureFlagBits2 = 16384;
pub const VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR: VkFormatFeatureFlagBits2 = 16384;
pub const VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT: VkFormatFeatureFlagBits2 = 32768;
pub const VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR: VkFormatFeatureFlagBits2 = 32768;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT: VkFormatFeatureFlagBits2 = 65536;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR: VkFormatFeatureFlagBits2 = 65536;
pub const VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT: VkFormatFeatureFlagBits2 = 131072;
pub const VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR: VkFormatFeatureFlagBits2 = 131072;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT: VkFormatFeatureFlagBits2 = 262144;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR: VkFormatFeatureFlagBits2 = 262144;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT: VkFormatFeatureFlagBits2 = 524288;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR: VkFormatFeatureFlagBits2 = 524288;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT: VkFormatFeatureFlagBits2 = 1048576;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR: VkFormatFeatureFlagBits2 = 1048576;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT: VkFormatFeatureFlagBits2 = 2097152;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR: VkFormatFeatureFlagBits2 = 2097152;
pub const VK_FORMAT_FEATURE_2_DISJOINT_BIT: VkFormatFeatureFlagBits2 = 4194304;
pub const VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR: VkFormatFeatureFlagBits2 = 4194304;
pub const VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT: VkFormatFeatureFlagBits2 = 8388608;
pub const VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR: VkFormatFeatureFlagBits2 = 8388608;
pub const VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT: VkFormatFeatureFlagBits2 = 2147483648;
pub const VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR: VkFormatFeatureFlagBits2 = 2147483648;
pub const VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT: VkFormatFeatureFlagBits2 = 4294967296;
pub const VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR: VkFormatFeatureFlagBits2 = 4294967296;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT: VkFormatFeatureFlagBits2 = 8589934592;
pub const VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR: VkFormatFeatureFlagBits2 = 8589934592;
pub const VK_FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR: VkFormatFeatureFlagBits2 = 33554432;
pub const VK_FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR: VkFormatFeatureFlagBits2 = 67108864;
pub const VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR: VkFormatFeatureFlagBits2 = 536870912;
pub const VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT: VkFormatFeatureFlagBits2 = 16777216;
pub const VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: VkFormatFeatureFlagBits2 = 1073741824;
pub const VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT_EXT: VkFormatFeatureFlagBits2 = 70368744177664;
pub const VK_FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR: VkFormatFeatureFlagBits2 = 134217728;
pub const VK_FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR: VkFormatFeatureFlagBits2 = 268435456;
pub const VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV: VkFormatFeatureFlagBits2 = 274877906944;
pub const VK_FORMAT_FEATURE_2_WEIGHT_IMAGE_BIT_QCOM: VkFormatFeatureFlagBits2 = 17179869184;
pub const VK_FORMAT_FEATURE_2_WEIGHT_SAMPLED_IMAGE_BIT_QCOM: VkFormatFeatureFlagBits2 = 34359738368;
pub const VK_FORMAT_FEATURE_2_BLOCK_MATCHING_BIT_QCOM: VkFormatFeatureFlagBits2 = 68719476736;
pub const VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM: VkFormatFeatureFlagBits2 = 137438953472;
pub const VK_FORMAT_FEATURE_2_OPTICAL_FLOW_IMAGE_BIT_NV: VkFormatFeatureFlagBits2 = 1099511627776;
pub const VK_FORMAT_FEATURE_2_OPTICAL_FLOW_VECTOR_BIT_NV: VkFormatFeatureFlagBits2 = 2199023255552;
pub const VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV: VkFormatFeatureFlagBits2 = 4398046511104;
pub const struct_VkPhysicalDeviceVulkan13Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    robustImageAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    inlineUniformBlock: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
    pipelineCreationCacheControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
    privateData: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDemoteToHelperInvocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderTerminateInvocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    subgroupSizeControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
    computeFullSubgroups: VkBool32 = @import("std").mem.zeroes(VkBool32),
    synchronization2: VkBool32 = @import("std").mem.zeroes(VkBool32),
    textureCompressionASTC_HDR: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderZeroInitializeWorkgroupMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
    dynamicRendering: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderIntegerDotProduct: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maintenance4: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVulkan13Features = struct_VkPhysicalDeviceVulkan13Features;
pub const struct_VkPhysicalDeviceVulkan13Properties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minSubgroupSize: u32 = @import("std").mem.zeroes(u32),
    maxSubgroupSize: u32 = @import("std").mem.zeroes(u32),
    maxComputeWorkgroupSubgroups: u32 = @import("std").mem.zeroes(u32),
    requiredSubgroupSizeStages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    maxInlineUniformBlockSize: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxInlineUniformTotalSize: u32 = @import("std").mem.zeroes(u32),
    integerDotProduct8BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct8BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct8BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct4x8BitPackedUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct4x8BitPackedSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct4x8BitPackedMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct16BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct16BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct16BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct32BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct32BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct32BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct64BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct64BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct64BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating8BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating8BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating16BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating16BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating32BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating32BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating64BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating64BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxBufferSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceVulkan13Properties = struct_VkPhysicalDeviceVulkan13Properties;
pub const struct_VkPipelineCreationFeedback = extern struct {
    flags: VkPipelineCreationFeedbackFlags = @import("std").mem.zeroes(VkPipelineCreationFeedbackFlags),
    duration: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPipelineCreationFeedback = struct_VkPipelineCreationFeedback;
pub const struct_VkPipelineCreationFeedbackCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pPipelineCreationFeedback: [*c]VkPipelineCreationFeedback = @import("std").mem.zeroes([*c]VkPipelineCreationFeedback),
    pipelineStageCreationFeedbackCount: u32 = @import("std").mem.zeroes(u32),
    pPipelineStageCreationFeedbacks: [*c]VkPipelineCreationFeedback = @import("std").mem.zeroes([*c]VkPipelineCreationFeedback),
};
pub const VkPipelineCreationFeedbackCreateInfo = struct_VkPipelineCreationFeedbackCreateInfo;
pub const struct_VkPhysicalDeviceShaderTerminateInvocationFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderTerminateInvocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderTerminateInvocationFeatures = struct_VkPhysicalDeviceShaderTerminateInvocationFeatures;
pub const struct_VkPhysicalDeviceToolProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    name: [256]u8 = @import("std").mem.zeroes([256]u8),
    version: [256]u8 = @import("std").mem.zeroes([256]u8),
    purposes: VkToolPurposeFlags = @import("std").mem.zeroes(VkToolPurposeFlags),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    layer: [256]u8 = @import("std").mem.zeroes([256]u8),
};
pub const VkPhysicalDeviceToolProperties = struct_VkPhysicalDeviceToolProperties;
pub const struct_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderDemoteToHelperInvocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures = struct_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures;
pub const struct_VkPhysicalDevicePrivateDataFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    privateData: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePrivateDataFeatures = struct_VkPhysicalDevicePrivateDataFeatures;
pub const struct_VkDevicePrivateDataCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    privateDataSlotRequestCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDevicePrivateDataCreateInfo = struct_VkDevicePrivateDataCreateInfo;
pub const struct_VkPrivateDataSlotCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPrivateDataSlotCreateFlags = @import("std").mem.zeroes(VkPrivateDataSlotCreateFlags),
};
pub const VkPrivateDataSlotCreateInfo = struct_VkPrivateDataSlotCreateInfo;
pub const struct_VkPhysicalDevicePipelineCreationCacheControlFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineCreationCacheControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePipelineCreationCacheControlFeatures = struct_VkPhysicalDevicePipelineCreationCacheControlFeatures;
pub const struct_VkMemoryBarrier2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    srcAccessMask: VkAccessFlags2 = @import("std").mem.zeroes(VkAccessFlags2),
    dstStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    dstAccessMask: VkAccessFlags2 = @import("std").mem.zeroes(VkAccessFlags2),
};
pub const VkMemoryBarrier2 = struct_VkMemoryBarrier2;
pub const struct_VkBufferMemoryBarrier2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    srcAccessMask: VkAccessFlags2 = @import("std").mem.zeroes(VkAccessFlags2),
    dstStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    dstAccessMask: VkAccessFlags2 = @import("std").mem.zeroes(VkAccessFlags2),
    srcQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    dstQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBufferMemoryBarrier2 = struct_VkBufferMemoryBarrier2;
pub const struct_VkImageMemoryBarrier2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    srcAccessMask: VkAccessFlags2 = @import("std").mem.zeroes(VkAccessFlags2),
    dstStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    dstAccessMask: VkAccessFlags2 = @import("std").mem.zeroes(VkAccessFlags2),
    oldLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    newLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    srcQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    dstQueueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    subresourceRange: VkImageSubresourceRange = @import("std").mem.zeroes(VkImageSubresourceRange),
};
pub const VkImageMemoryBarrier2 = struct_VkImageMemoryBarrier2;
pub const struct_VkDependencyInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dependencyFlags: VkDependencyFlags = @import("std").mem.zeroes(VkDependencyFlags),
    memoryBarrierCount: u32 = @import("std").mem.zeroes(u32),
    pMemoryBarriers: [*c]const VkMemoryBarrier2 = @import("std").mem.zeroes([*c]const VkMemoryBarrier2),
    bufferMemoryBarrierCount: u32 = @import("std").mem.zeroes(u32),
    pBufferMemoryBarriers: [*c]const VkBufferMemoryBarrier2 = @import("std").mem.zeroes([*c]const VkBufferMemoryBarrier2),
    imageMemoryBarrierCount: u32 = @import("std").mem.zeroes(u32),
    pImageMemoryBarriers: [*c]const VkImageMemoryBarrier2 = @import("std").mem.zeroes([*c]const VkImageMemoryBarrier2),
};
pub const VkDependencyInfo = struct_VkDependencyInfo;
pub const struct_VkSemaphoreSubmitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    semaphore: VkSemaphore = @import("std").mem.zeroes(VkSemaphore),
    value: u64 = @import("std").mem.zeroes(u64),
    stageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    deviceIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkSemaphoreSubmitInfo = struct_VkSemaphoreSubmitInfo;
pub const struct_VkCommandBufferSubmitInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    commandBuffer: VkCommandBuffer = @import("std").mem.zeroes(VkCommandBuffer),
    deviceMask: u32 = @import("std").mem.zeroes(u32),
};
pub const VkCommandBufferSubmitInfo = struct_VkCommandBufferSubmitInfo;
pub const struct_VkSubmitInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkSubmitFlags = @import("std").mem.zeroes(VkSubmitFlags),
    waitSemaphoreInfoCount: u32 = @import("std").mem.zeroes(u32),
    pWaitSemaphoreInfos: [*c]const VkSemaphoreSubmitInfo = @import("std").mem.zeroes([*c]const VkSemaphoreSubmitInfo),
    commandBufferInfoCount: u32 = @import("std").mem.zeroes(u32),
    pCommandBufferInfos: [*c]const VkCommandBufferSubmitInfo = @import("std").mem.zeroes([*c]const VkCommandBufferSubmitInfo),
    signalSemaphoreInfoCount: u32 = @import("std").mem.zeroes(u32),
    pSignalSemaphoreInfos: [*c]const VkSemaphoreSubmitInfo = @import("std").mem.zeroes([*c]const VkSemaphoreSubmitInfo),
};
pub const VkSubmitInfo2 = struct_VkSubmitInfo2;
pub const struct_VkPhysicalDeviceSynchronization2Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    synchronization2: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSynchronization2Features = struct_VkPhysicalDeviceSynchronization2Features;
pub const struct_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderZeroInitializeWorkgroupMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures = struct_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures;
pub const struct_VkPhysicalDeviceImageRobustnessFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    robustImageAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageRobustnessFeatures = struct_VkPhysicalDeviceImageRobustnessFeatures;
pub const struct_VkBufferCopy2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    dstOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBufferCopy2 = struct_VkBufferCopy2;
pub const struct_VkCopyBufferInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    dstBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkBufferCopy2 = @import("std").mem.zeroes([*c]const VkBufferCopy2),
};
pub const VkCopyBufferInfo2 = struct_VkCopyBufferInfo2;
pub const struct_VkImageCopy2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    srcOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    dstSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    dstOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    extent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkImageCopy2 = struct_VkImageCopy2;
pub const struct_VkCopyImageInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcImage: VkImage = @import("std").mem.zeroes(VkImage),
    srcImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    dstImage: VkImage = @import("std").mem.zeroes(VkImage),
    dstImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkImageCopy2 = @import("std").mem.zeroes([*c]const VkImageCopy2),
};
pub const VkCopyImageInfo2 = struct_VkCopyImageInfo2;
pub const struct_VkBufferImageCopy2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    bufferOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    bufferRowLength: u32 = @import("std").mem.zeroes(u32),
    bufferImageHeight: u32 = @import("std").mem.zeroes(u32),
    imageSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    imageOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    imageExtent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkBufferImageCopy2 = struct_VkBufferImageCopy2;
pub const struct_VkCopyBufferToImageInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    dstImage: VkImage = @import("std").mem.zeroes(VkImage),
    dstImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkBufferImageCopy2 = @import("std").mem.zeroes([*c]const VkBufferImageCopy2),
};
pub const VkCopyBufferToImageInfo2 = struct_VkCopyBufferToImageInfo2;
pub const struct_VkCopyImageToBufferInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcImage: VkImage = @import("std").mem.zeroes(VkImage),
    srcImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    dstBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkBufferImageCopy2 = @import("std").mem.zeroes([*c]const VkBufferImageCopy2),
};
pub const VkCopyImageToBufferInfo2 = struct_VkCopyImageToBufferInfo2;
pub const struct_VkImageBlit2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    srcOffsets: [2]VkOffset3D = @import("std").mem.zeroes([2]VkOffset3D),
    dstSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    dstOffsets: [2]VkOffset3D = @import("std").mem.zeroes([2]VkOffset3D),
};
pub const VkImageBlit2 = struct_VkImageBlit2;
pub const struct_VkBlitImageInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcImage: VkImage = @import("std").mem.zeroes(VkImage),
    srcImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    dstImage: VkImage = @import("std").mem.zeroes(VkImage),
    dstImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkImageBlit2 = @import("std").mem.zeroes([*c]const VkImageBlit2),
    filter: VkFilter = @import("std").mem.zeroes(VkFilter),
};
pub const VkBlitImageInfo2 = struct_VkBlitImageInfo2;
pub const struct_VkImageResolve2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    srcOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    dstSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    dstOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    extent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkImageResolve2 = struct_VkImageResolve2;
pub const struct_VkResolveImageInfo2 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcImage: VkImage = @import("std").mem.zeroes(VkImage),
    srcImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    dstImage: VkImage = @import("std").mem.zeroes(VkImage),
    dstImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkImageResolve2 = @import("std").mem.zeroes([*c]const VkImageResolve2),
};
pub const VkResolveImageInfo2 = struct_VkResolveImageInfo2;
pub const struct_VkPhysicalDeviceSubgroupSizeControlFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    subgroupSizeControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
    computeFullSubgroups: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSubgroupSizeControlFeatures = struct_VkPhysicalDeviceSubgroupSizeControlFeatures;
pub const struct_VkPhysicalDeviceSubgroupSizeControlProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minSubgroupSize: u32 = @import("std").mem.zeroes(u32),
    maxSubgroupSize: u32 = @import("std").mem.zeroes(u32),
    maxComputeWorkgroupSubgroups: u32 = @import("std").mem.zeroes(u32),
    requiredSubgroupSizeStages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
};
pub const VkPhysicalDeviceSubgroupSizeControlProperties = struct_VkPhysicalDeviceSubgroupSizeControlProperties;
pub const struct_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    requiredSubgroupSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPipelineShaderStageRequiredSubgroupSizeCreateInfo = struct_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo;
pub const struct_VkPhysicalDeviceInlineUniformBlockFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    inlineUniformBlock: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceInlineUniformBlockFeatures = struct_VkPhysicalDeviceInlineUniformBlockFeatures;
pub const struct_VkPhysicalDeviceInlineUniformBlockProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxInlineUniformBlockSize: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindInlineUniformBlocks: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceInlineUniformBlockProperties = struct_VkPhysicalDeviceInlineUniformBlockProperties;
pub const struct_VkWriteDescriptorSetInlineUniformBlock = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dataSize: u32 = @import("std").mem.zeroes(u32),
    pData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkWriteDescriptorSetInlineUniformBlock = struct_VkWriteDescriptorSetInlineUniformBlock;
pub const struct_VkDescriptorPoolInlineUniformBlockCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxInlineUniformBlockBindings: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDescriptorPoolInlineUniformBlockCreateInfo = struct_VkDescriptorPoolInlineUniformBlockCreateInfo;
pub const struct_VkPhysicalDeviceTextureCompressionASTCHDRFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    textureCompressionASTC_HDR: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTextureCompressionASTCHDRFeatures = struct_VkPhysicalDeviceTextureCompressionASTCHDRFeatures;
pub const struct_VkRenderingAttachmentInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    imageView: VkImageView = @import("std").mem.zeroes(VkImageView),
    imageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    resolveMode: VkResolveModeFlagBits = @import("std").mem.zeroes(VkResolveModeFlagBits),
    resolveImageView: VkImageView = @import("std").mem.zeroes(VkImageView),
    resolveImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    loadOp: VkAttachmentLoadOp = @import("std").mem.zeroes(VkAttachmentLoadOp),
    storeOp: VkAttachmentStoreOp = @import("std").mem.zeroes(VkAttachmentStoreOp),
    clearValue: VkClearValue = @import("std").mem.zeroes(VkClearValue),
};
pub const VkRenderingAttachmentInfo = struct_VkRenderingAttachmentInfo;
pub const struct_VkRenderingInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkRenderingFlags = @import("std").mem.zeroes(VkRenderingFlags),
    renderArea: VkRect2D = @import("std").mem.zeroes(VkRect2D),
    layerCount: u32 = @import("std").mem.zeroes(u32),
    viewMask: u32 = @import("std").mem.zeroes(u32),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachments: [*c]const VkRenderingAttachmentInfo = @import("std").mem.zeroes([*c]const VkRenderingAttachmentInfo),
    pDepthAttachment: [*c]const VkRenderingAttachmentInfo = @import("std").mem.zeroes([*c]const VkRenderingAttachmentInfo),
    pStencilAttachment: [*c]const VkRenderingAttachmentInfo = @import("std").mem.zeroes([*c]const VkRenderingAttachmentInfo),
};
pub const VkRenderingInfo = struct_VkRenderingInfo;
pub const struct_VkPipelineRenderingCreateInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    viewMask: u32 = @import("std").mem.zeroes(u32),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachmentFormats: [*c]const VkFormat = @import("std").mem.zeroes([*c]const VkFormat),
    depthAttachmentFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    stencilAttachmentFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
};
pub const VkPipelineRenderingCreateInfo = struct_VkPipelineRenderingCreateInfo;
pub const struct_VkPhysicalDeviceDynamicRenderingFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dynamicRendering: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDynamicRenderingFeatures = struct_VkPhysicalDeviceDynamicRenderingFeatures;
pub const struct_VkCommandBufferInheritanceRenderingInfo = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkRenderingFlags = @import("std").mem.zeroes(VkRenderingFlags),
    viewMask: u32 = @import("std").mem.zeroes(u32),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachmentFormats: [*c]const VkFormat = @import("std").mem.zeroes([*c]const VkFormat),
    depthAttachmentFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    stencilAttachmentFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    rasterizationSamples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
};
pub const VkCommandBufferInheritanceRenderingInfo = struct_VkCommandBufferInheritanceRenderingInfo;
pub const struct_VkPhysicalDeviceShaderIntegerDotProductFeatures = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderIntegerDotProduct: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderIntegerDotProductFeatures = struct_VkPhysicalDeviceShaderIntegerDotProductFeatures;
pub const struct_VkPhysicalDeviceShaderIntegerDotProductProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    integerDotProduct8BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct8BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct8BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct4x8BitPackedUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct4x8BitPackedSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct4x8BitPackedMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct16BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct16BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct16BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct32BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct32BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct32BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct64BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct64BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProduct64BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating8BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating8BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating16BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating16BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating32BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating32BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating64BitUnsignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating64BitSignedAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderIntegerDotProductProperties = struct_VkPhysicalDeviceShaderIntegerDotProductProperties;
pub const struct_VkPhysicalDeviceTexelBufferAlignmentProperties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = @import("std").mem.zeroes(VkBool32),
    uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTexelBufferAlignmentProperties = struct_VkPhysicalDeviceTexelBufferAlignmentProperties;
pub const struct_VkFormatProperties3 = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    linearTilingFeatures: VkFormatFeatureFlags2 = @import("std").mem.zeroes(VkFormatFeatureFlags2),
    optimalTilingFeatures: VkFormatFeatureFlags2 = @import("std").mem.zeroes(VkFormatFeatureFlags2),
    bufferFeatures: VkFormatFeatureFlags2 = @import("std").mem.zeroes(VkFormatFeatureFlags2),
};
pub const VkFormatProperties3 = struct_VkFormatProperties3;
pub const struct_VkPhysicalDeviceMaintenance4Features = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maintenance4: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMaintenance4Features = struct_VkPhysicalDeviceMaintenance4Features;
pub const struct_VkPhysicalDeviceMaintenance4Properties = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxBufferSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceMaintenance4Properties = struct_VkPhysicalDeviceMaintenance4Properties;
pub const struct_VkDeviceBufferMemoryRequirements = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pCreateInfo: [*c]const VkBufferCreateInfo = @import("std").mem.zeroes([*c]const VkBufferCreateInfo),
};
pub const VkDeviceBufferMemoryRequirements = struct_VkDeviceBufferMemoryRequirements;
pub const struct_VkDeviceImageMemoryRequirements = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pCreateInfo: [*c]const VkImageCreateInfo = @import("std").mem.zeroes([*c]const VkImageCreateInfo),
    planeAspect: VkImageAspectFlagBits = @import("std").mem.zeroes(VkImageAspectFlagBits),
};
pub const VkDeviceImageMemoryRequirements = struct_VkDeviceImageMemoryRequirements;
pub const PFN_vkGetPhysicalDeviceToolProperties = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkPhysicalDeviceToolProperties) callconv(.C) VkResult;
pub const PFN_vkCreatePrivateDataSlot = ?*const fn (VkDevice, [*c]const VkPrivateDataSlotCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkPrivateDataSlot) callconv(.C) VkResult;
pub const PFN_vkDestroyPrivateDataSlot = ?*const fn (VkDevice, VkPrivateDataSlot, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkSetPrivateData = ?*const fn (VkDevice, VkObjectType, u64, VkPrivateDataSlot, u64) callconv(.C) VkResult;
pub const PFN_vkGetPrivateData = ?*const fn (VkDevice, VkObjectType, u64, VkPrivateDataSlot, [*c]u64) callconv(.C) void;
pub const PFN_vkCmdSetEvent2 = ?*const fn (VkCommandBuffer, VkEvent, [*c]const VkDependencyInfo) callconv(.C) void;
pub const PFN_vkCmdResetEvent2 = ?*const fn (VkCommandBuffer, VkEvent, VkPipelineStageFlags2) callconv(.C) void;
pub const PFN_vkCmdWaitEvents2 = ?*const fn (VkCommandBuffer, u32, [*c]const VkEvent, [*c]const VkDependencyInfo) callconv(.C) void;
pub const PFN_vkCmdPipelineBarrier2 = ?*const fn (VkCommandBuffer, [*c]const VkDependencyInfo) callconv(.C) void;
pub const PFN_vkCmdWriteTimestamp2 = ?*const fn (VkCommandBuffer, VkPipelineStageFlags2, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkQueueSubmit2 = ?*const fn (VkQueue, u32, [*c]const VkSubmitInfo2, VkFence) callconv(.C) VkResult;
pub const PFN_vkCmdCopyBuffer2 = ?*const fn (VkCommandBuffer, [*c]const VkCopyBufferInfo2) callconv(.C) void;
pub const PFN_vkCmdCopyImage2 = ?*const fn (VkCommandBuffer, [*c]const VkCopyImageInfo2) callconv(.C) void;
pub const PFN_vkCmdCopyBufferToImage2 = ?*const fn (VkCommandBuffer, [*c]const VkCopyBufferToImageInfo2) callconv(.C) void;
pub const PFN_vkCmdCopyImageToBuffer2 = ?*const fn (VkCommandBuffer, [*c]const VkCopyImageToBufferInfo2) callconv(.C) void;
pub const PFN_vkCmdBlitImage2 = ?*const fn (VkCommandBuffer, [*c]const VkBlitImageInfo2) callconv(.C) void;
pub const PFN_vkCmdResolveImage2 = ?*const fn (VkCommandBuffer, [*c]const VkResolveImageInfo2) callconv(.C) void;
pub const PFN_vkCmdBeginRendering = ?*const fn (VkCommandBuffer, [*c]const VkRenderingInfo) callconv(.C) void;
pub const PFN_vkCmdEndRendering = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub const PFN_vkCmdSetCullMode = ?*const fn (VkCommandBuffer, VkCullModeFlags) callconv(.C) void;
pub const PFN_vkCmdSetFrontFace = ?*const fn (VkCommandBuffer, VkFrontFace) callconv(.C) void;
pub const PFN_vkCmdSetPrimitiveTopology = ?*const fn (VkCommandBuffer, VkPrimitiveTopology) callconv(.C) void;
pub const PFN_vkCmdSetViewportWithCount = ?*const fn (VkCommandBuffer, u32, [*c]const VkViewport) callconv(.C) void;
pub const PFN_vkCmdSetScissorWithCount = ?*const fn (VkCommandBuffer, u32, [*c]const VkRect2D) callconv(.C) void;
pub const PFN_vkCmdBindVertexBuffers2 = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBuffer, [*c]const VkDeviceSize, [*c]const VkDeviceSize, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdSetDepthTestEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthWriteEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthCompareOp = ?*const fn (VkCommandBuffer, VkCompareOp) callconv(.C) void;
pub const PFN_vkCmdSetDepthBoundsTestEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetStencilTestEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetStencilOp = ?*const fn (VkCommandBuffer, VkStencilFaceFlags, VkStencilOp, VkStencilOp, VkStencilOp, VkCompareOp) callconv(.C) void;
pub const PFN_vkCmdSetRasterizerDiscardEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthBiasEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetPrimitiveRestartEnable = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkGetDeviceBufferMemoryRequirements = ?*const fn (VkDevice, [*c]const VkDeviceBufferMemoryRequirements, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetDeviceImageMemoryRequirements = ?*const fn (VkDevice, [*c]const VkDeviceImageMemoryRequirements, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetDeviceImageSparseMemoryRequirements = ?*const fn (VkDevice, [*c]const VkDeviceImageMemoryRequirements, [*c]u32, [*c]VkSparseImageMemoryRequirements2) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceToolProperties(physicalDevice: VkPhysicalDevice, pToolCount: [*c]u32, pToolProperties: [*c]VkPhysicalDeviceToolProperties) VkResult;
pub extern fn vkCreatePrivateDataSlot(device: VkDevice, pCreateInfo: [*c]const VkPrivateDataSlotCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pPrivateDataSlot: [*c]VkPrivateDataSlot) VkResult;
pub extern fn vkDestroyPrivateDataSlot(device: VkDevice, privateDataSlot: VkPrivateDataSlot, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkSetPrivateData(device: VkDevice, objectType: VkObjectType, objectHandle: u64, privateDataSlot: VkPrivateDataSlot, data: u64) VkResult;
pub extern fn vkGetPrivateData(device: VkDevice, objectType: VkObjectType, objectHandle: u64, privateDataSlot: VkPrivateDataSlot, pData: [*c]u64) void;
pub extern fn vkCmdSetEvent2(commandBuffer: VkCommandBuffer, event: VkEvent, pDependencyInfo: [*c]const VkDependencyInfo) void;
pub extern fn vkCmdResetEvent2(commandBuffer: VkCommandBuffer, event: VkEvent, stageMask: VkPipelineStageFlags2) void;
pub extern fn vkCmdWaitEvents2(commandBuffer: VkCommandBuffer, eventCount: u32, pEvents: [*c]const VkEvent, pDependencyInfos: [*c]const VkDependencyInfo) void;
pub extern fn vkCmdPipelineBarrier2(commandBuffer: VkCommandBuffer, pDependencyInfo: [*c]const VkDependencyInfo) void;
pub extern fn vkCmdWriteTimestamp2(commandBuffer: VkCommandBuffer, stage: VkPipelineStageFlags2, queryPool: VkQueryPool, query: u32) void;
pub extern fn vkQueueSubmit2(queue: VkQueue, submitCount: u32, pSubmits: [*c]const VkSubmitInfo2, fence: VkFence) VkResult;
pub extern fn vkCmdCopyBuffer2(commandBuffer: VkCommandBuffer, pCopyBufferInfo: [*c]const VkCopyBufferInfo2) void;
pub extern fn vkCmdCopyImage2(commandBuffer: VkCommandBuffer, pCopyImageInfo: [*c]const VkCopyImageInfo2) void;
pub extern fn vkCmdCopyBufferToImage2(commandBuffer: VkCommandBuffer, pCopyBufferToImageInfo: [*c]const VkCopyBufferToImageInfo2) void;
pub extern fn vkCmdCopyImageToBuffer2(commandBuffer: VkCommandBuffer, pCopyImageToBufferInfo: [*c]const VkCopyImageToBufferInfo2) void;
pub extern fn vkCmdBlitImage2(commandBuffer: VkCommandBuffer, pBlitImageInfo: [*c]const VkBlitImageInfo2) void;
pub extern fn vkCmdResolveImage2(commandBuffer: VkCommandBuffer, pResolveImageInfo: [*c]const VkResolveImageInfo2) void;
pub extern fn vkCmdBeginRendering(commandBuffer: VkCommandBuffer, pRenderingInfo: [*c]const VkRenderingInfo) void;
pub extern fn vkCmdEndRendering(commandBuffer: VkCommandBuffer) void;
pub extern fn vkCmdSetCullMode(commandBuffer: VkCommandBuffer, cullMode: VkCullModeFlags) void;
pub extern fn vkCmdSetFrontFace(commandBuffer: VkCommandBuffer, frontFace: VkFrontFace) void;
pub extern fn vkCmdSetPrimitiveTopology(commandBuffer: VkCommandBuffer, primitiveTopology: VkPrimitiveTopology) void;
pub extern fn vkCmdSetViewportWithCount(commandBuffer: VkCommandBuffer, viewportCount: u32, pViewports: [*c]const VkViewport) void;
pub extern fn vkCmdSetScissorWithCount(commandBuffer: VkCommandBuffer, scissorCount: u32, pScissors: [*c]const VkRect2D) void;
pub extern fn vkCmdBindVertexBuffers2(commandBuffer: VkCommandBuffer, firstBinding: u32, bindingCount: u32, pBuffers: [*c]const VkBuffer, pOffsets: [*c]const VkDeviceSize, pSizes: [*c]const VkDeviceSize, pStrides: [*c]const VkDeviceSize) void;
pub extern fn vkCmdSetDepthTestEnable(commandBuffer: VkCommandBuffer, depthTestEnable: VkBool32) void;
pub extern fn vkCmdSetDepthWriteEnable(commandBuffer: VkCommandBuffer, depthWriteEnable: VkBool32) void;
pub extern fn vkCmdSetDepthCompareOp(commandBuffer: VkCommandBuffer, depthCompareOp: VkCompareOp) void;
pub extern fn vkCmdSetDepthBoundsTestEnable(commandBuffer: VkCommandBuffer, depthBoundsTestEnable: VkBool32) void;
pub extern fn vkCmdSetStencilTestEnable(commandBuffer: VkCommandBuffer, stencilTestEnable: VkBool32) void;
pub extern fn vkCmdSetStencilOp(commandBuffer: VkCommandBuffer, faceMask: VkStencilFaceFlags, failOp: VkStencilOp, passOp: VkStencilOp, depthFailOp: VkStencilOp, compareOp: VkCompareOp) void;
pub extern fn vkCmdSetRasterizerDiscardEnable(commandBuffer: VkCommandBuffer, rasterizerDiscardEnable: VkBool32) void;
pub extern fn vkCmdSetDepthBiasEnable(commandBuffer: VkCommandBuffer, depthBiasEnable: VkBool32) void;
pub extern fn vkCmdSetPrimitiveRestartEnable(commandBuffer: VkCommandBuffer, primitiveRestartEnable: VkBool32) void;
pub extern fn vkGetDeviceBufferMemoryRequirements(device: VkDevice, pInfo: [*c]const VkDeviceBufferMemoryRequirements, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetDeviceImageMemoryRequirements(device: VkDevice, pInfo: [*c]const VkDeviceImageMemoryRequirements, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetDeviceImageSparseMemoryRequirements(device: VkDevice, pInfo: [*c]const VkDeviceImageMemoryRequirements, pSparseMemoryRequirementCount: [*c]u32, pSparseMemoryRequirements: [*c]VkSparseImageMemoryRequirements2) void;
pub const struct_VkSurfaceKHR_T = opaque {};
pub const VkSurfaceKHR = ?*struct_VkSurfaceKHR_T;
pub const VK_PRESENT_MODE_IMMEDIATE_KHR: c_int = 0;
pub const VK_PRESENT_MODE_MAILBOX_KHR: c_int = 1;
pub const VK_PRESENT_MODE_FIFO_KHR: c_int = 2;
pub const VK_PRESENT_MODE_FIFO_RELAXED_KHR: c_int = 3;
pub const VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR: c_int = 1000111000;
pub const VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR: c_int = 1000111001;
pub const VK_PRESENT_MODE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkPresentModeKHR = c_uint;
pub const VkPresentModeKHR = enum_VkPresentModeKHR;
pub const VK_COLOR_SPACE_SRGB_NONLINEAR_KHR: c_int = 0;
pub const VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT: c_int = 1000104001;
pub const VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT: c_int = 1000104002;
pub const VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT: c_int = 1000104003;
pub const VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT: c_int = 1000104004;
pub const VK_COLOR_SPACE_BT709_LINEAR_EXT: c_int = 1000104005;
pub const VK_COLOR_SPACE_BT709_NONLINEAR_EXT: c_int = 1000104006;
pub const VK_COLOR_SPACE_BT2020_LINEAR_EXT: c_int = 1000104007;
pub const VK_COLOR_SPACE_HDR10_ST2084_EXT: c_int = 1000104008;
pub const VK_COLOR_SPACE_DOLBYVISION_EXT: c_int = 1000104009;
pub const VK_COLOR_SPACE_HDR10_HLG_EXT: c_int = 1000104010;
pub const VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT: c_int = 1000104011;
pub const VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT: c_int = 1000104012;
pub const VK_COLOR_SPACE_PASS_THROUGH_EXT: c_int = 1000104013;
pub const VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT: c_int = 1000104014;
pub const VK_COLOR_SPACE_DISPLAY_NATIVE_AMD: c_int = 1000213000;
pub const VK_COLORSPACE_SRGB_NONLINEAR_KHR: c_int = 0;
pub const VK_COLOR_SPACE_DCI_P3_LINEAR_EXT: c_int = 1000104003;
pub const VK_COLOR_SPACE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkColorSpaceKHR = c_uint;
pub const VkColorSpaceKHR = enum_VkColorSpaceKHR;
pub const VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR: c_int = 1;
pub const VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR: c_int = 2;
pub const VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR: c_int = 4;
pub const VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR: c_int = 8;
pub const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR: c_int = 16;
pub const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR: c_int = 32;
pub const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR: c_int = 64;
pub const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR: c_int = 128;
pub const VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR: c_int = 256;
pub const VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkSurfaceTransformFlagBitsKHR = c_uint;
pub const VkSurfaceTransformFlagBitsKHR = enum_VkSurfaceTransformFlagBitsKHR;
pub const VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR: c_int = 1;
pub const VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR: c_int = 2;
pub const VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR: c_int = 4;
pub const VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR: c_int = 8;
pub const VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkCompositeAlphaFlagBitsKHR = c_uint;
pub const VkCompositeAlphaFlagBitsKHR = enum_VkCompositeAlphaFlagBitsKHR;
pub const VkCompositeAlphaFlagsKHR = VkFlags;
pub const VkSurfaceTransformFlagsKHR = VkFlags;
pub const struct_VkSurfaceCapabilitiesKHR = extern struct {
    minImageCount: u32 = @import("std").mem.zeroes(u32),
    maxImageCount: u32 = @import("std").mem.zeroes(u32),
    currentExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    minImageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxImageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxImageArrayLayers: u32 = @import("std").mem.zeroes(u32),
    supportedTransforms: VkSurfaceTransformFlagsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagsKHR),
    currentTransform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
    supportedCompositeAlpha: VkCompositeAlphaFlagsKHR = @import("std").mem.zeroes(VkCompositeAlphaFlagsKHR),
    supportedUsageFlags: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
};
pub const VkSurfaceCapabilitiesKHR = struct_VkSurfaceCapabilitiesKHR;
pub const struct_VkSurfaceFormatKHR = extern struct {
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    colorSpace: VkColorSpaceKHR = @import("std").mem.zeroes(VkColorSpaceKHR),
};
pub const VkSurfaceFormatKHR = struct_VkSurfaceFormatKHR;
pub const PFN_vkDestroySurfaceKHR = ?*const fn (VkInstance, VkSurfaceKHR, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceSurfaceSupportKHR = ?*const fn (VkPhysicalDevice, u32, VkSurfaceKHR, [*c]VkBool32) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = ?*const fn (VkPhysicalDevice, VkSurfaceKHR, [*c]VkSurfaceCapabilitiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceSurfaceFormatsKHR = ?*const fn (VkPhysicalDevice, VkSurfaceKHR, [*c]u32, [*c]VkSurfaceFormatKHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceSurfacePresentModesKHR = ?*const fn (VkPhysicalDevice, VkSurfaceKHR, [*c]u32, [*c]VkPresentModeKHR) callconv(.C) VkResult;
pub extern fn vkDestroySurfaceKHR(instance: VkInstance, surface: VkSurfaceKHR, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice: VkPhysicalDevice, queueFamilyIndex: u32, surface: VkSurfaceKHR, pSupported: [*c]VkBool32) VkResult;
pub extern fn vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice: VkPhysicalDevice, surface: VkSurfaceKHR, pSurfaceCapabilities: [*c]VkSurfaceCapabilitiesKHR) VkResult;
pub extern fn vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice: VkPhysicalDevice, surface: VkSurfaceKHR, pSurfaceFormatCount: [*c]u32, pSurfaceFormats: [*c]VkSurfaceFormatKHR) VkResult;
pub extern fn vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice: VkPhysicalDevice, surface: VkSurfaceKHR, pPresentModeCount: [*c]u32, pPresentModes: [*c]VkPresentModeKHR) VkResult;
pub const struct_VkSwapchainKHR_T = opaque {};
pub const VkSwapchainKHR = ?*struct_VkSwapchainKHR_T;
pub const VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR: c_int = 1;
pub const VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR: c_int = 2;
pub const VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR: c_int = 4;
pub const VK_SWAPCHAIN_CREATE_DEFERRED_MEMORY_ALLOCATION_BIT_EXT: c_int = 8;
pub const VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkSwapchainCreateFlagBitsKHR = c_uint;
pub const VkSwapchainCreateFlagBitsKHR = enum_VkSwapchainCreateFlagBitsKHR;
pub const VkSwapchainCreateFlagsKHR = VkFlags;
pub const VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR: c_int = 1;
pub const VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR: c_int = 2;
pub const VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR: c_int = 4;
pub const VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR: c_int = 8;
pub const VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkDeviceGroupPresentModeFlagBitsKHR = c_uint;
pub const VkDeviceGroupPresentModeFlagBitsKHR = enum_VkDeviceGroupPresentModeFlagBitsKHR;
pub const VkDeviceGroupPresentModeFlagsKHR = VkFlags;
pub const struct_VkSwapchainCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkSwapchainCreateFlagsKHR = @import("std").mem.zeroes(VkSwapchainCreateFlagsKHR),
    surface: VkSurfaceKHR = @import("std").mem.zeroes(VkSurfaceKHR),
    minImageCount: u32 = @import("std").mem.zeroes(u32),
    imageFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    imageColorSpace: VkColorSpaceKHR = @import("std").mem.zeroes(VkColorSpaceKHR),
    imageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    imageArrayLayers: u32 = @import("std").mem.zeroes(u32),
    imageUsage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    imageSharingMode: VkSharingMode = @import("std").mem.zeroes(VkSharingMode),
    queueFamilyIndexCount: u32 = @import("std").mem.zeroes(u32),
    pQueueFamilyIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    preTransform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
    compositeAlpha: VkCompositeAlphaFlagBitsKHR = @import("std").mem.zeroes(VkCompositeAlphaFlagBitsKHR),
    presentMode: VkPresentModeKHR = @import("std").mem.zeroes(VkPresentModeKHR),
    clipped: VkBool32 = @import("std").mem.zeroes(VkBool32),
    oldSwapchain: VkSwapchainKHR = @import("std").mem.zeroes(VkSwapchainKHR),
};
pub const VkSwapchainCreateInfoKHR = struct_VkSwapchainCreateInfoKHR;
pub const struct_VkPresentInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    waitSemaphoreCount: u32 = @import("std").mem.zeroes(u32),
    pWaitSemaphores: [*c]const VkSemaphore = @import("std").mem.zeroes([*c]const VkSemaphore),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pSwapchains: [*c]const VkSwapchainKHR = @import("std").mem.zeroes([*c]const VkSwapchainKHR),
    pImageIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    pResults: [*c]VkResult = @import("std").mem.zeroes([*c]VkResult),
};
pub const VkPresentInfoKHR = struct_VkPresentInfoKHR;
pub const struct_VkImageSwapchainCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchain: VkSwapchainKHR = @import("std").mem.zeroes(VkSwapchainKHR),
};
pub const VkImageSwapchainCreateInfoKHR = struct_VkImageSwapchainCreateInfoKHR;
pub const struct_VkBindImageMemorySwapchainInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchain: VkSwapchainKHR = @import("std").mem.zeroes(VkSwapchainKHR),
    imageIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkBindImageMemorySwapchainInfoKHR = struct_VkBindImageMemorySwapchainInfoKHR;
pub const struct_VkAcquireNextImageInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchain: VkSwapchainKHR = @import("std").mem.zeroes(VkSwapchainKHR),
    timeout: u64 = @import("std").mem.zeroes(u64),
    semaphore: VkSemaphore = @import("std").mem.zeroes(VkSemaphore),
    fence: VkFence = @import("std").mem.zeroes(VkFence),
    deviceMask: u32 = @import("std").mem.zeroes(u32),
};
pub const VkAcquireNextImageInfoKHR = struct_VkAcquireNextImageInfoKHR;
pub const struct_VkDeviceGroupPresentCapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentMask: [32]u32 = @import("std").mem.zeroes([32]u32),
    modes: VkDeviceGroupPresentModeFlagsKHR = @import("std").mem.zeroes(VkDeviceGroupPresentModeFlagsKHR),
};
pub const VkDeviceGroupPresentCapabilitiesKHR = struct_VkDeviceGroupPresentCapabilitiesKHR;
pub const struct_VkDeviceGroupPresentInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pDeviceMasks: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    mode: VkDeviceGroupPresentModeFlagBitsKHR = @import("std").mem.zeroes(VkDeviceGroupPresentModeFlagBitsKHR),
};
pub const VkDeviceGroupPresentInfoKHR = struct_VkDeviceGroupPresentInfoKHR;
pub const struct_VkDeviceGroupSwapchainCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    modes: VkDeviceGroupPresentModeFlagsKHR = @import("std").mem.zeroes(VkDeviceGroupPresentModeFlagsKHR),
};
pub const VkDeviceGroupSwapchainCreateInfoKHR = struct_VkDeviceGroupSwapchainCreateInfoKHR;
pub const PFN_vkCreateSwapchainKHR = ?*const fn (VkDevice, [*c]const VkSwapchainCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkSwapchainKHR) callconv(.C) VkResult;
pub const PFN_vkDestroySwapchainKHR = ?*const fn (VkDevice, VkSwapchainKHR, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetSwapchainImagesKHR = ?*const fn (VkDevice, VkSwapchainKHR, [*c]u32, [*c]VkImage) callconv(.C) VkResult;
pub const PFN_vkAcquireNextImageKHR = ?*const fn (VkDevice, VkSwapchainKHR, u64, VkSemaphore, VkFence, [*c]u32) callconv(.C) VkResult;
pub const PFN_vkQueuePresentKHR = ?*const fn (VkQueue, [*c]const VkPresentInfoKHR) callconv(.C) VkResult;
pub const PFN_vkGetDeviceGroupPresentCapabilitiesKHR = ?*const fn (VkDevice, [*c]VkDeviceGroupPresentCapabilitiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetDeviceGroupSurfacePresentModesKHR = ?*const fn (VkDevice, VkSurfaceKHR, [*c]VkDeviceGroupPresentModeFlagsKHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDevicePresentRectanglesKHR = ?*const fn (VkPhysicalDevice, VkSurfaceKHR, [*c]u32, [*c]VkRect2D) callconv(.C) VkResult;
pub const PFN_vkAcquireNextImage2KHR = ?*const fn (VkDevice, [*c]const VkAcquireNextImageInfoKHR, [*c]u32) callconv(.C) VkResult;
pub extern fn vkCreateSwapchainKHR(device: VkDevice, pCreateInfo: [*c]const VkSwapchainCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pSwapchain: [*c]VkSwapchainKHR) VkResult;
pub extern fn vkDestroySwapchainKHR(device: VkDevice, swapchain: VkSwapchainKHR, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetSwapchainImagesKHR(device: VkDevice, swapchain: VkSwapchainKHR, pSwapchainImageCount: [*c]u32, pSwapchainImages: [*c]VkImage) VkResult;
pub extern fn vkAcquireNextImageKHR(device: VkDevice, swapchain: VkSwapchainKHR, timeout: u64, semaphore: VkSemaphore, fence: VkFence, pImageIndex: [*c]u32) VkResult;
pub extern fn vkQueuePresentKHR(queue: VkQueue, pPresentInfo: [*c]const VkPresentInfoKHR) VkResult;
pub extern fn vkGetDeviceGroupPresentCapabilitiesKHR(device: VkDevice, pDeviceGroupPresentCapabilities: [*c]VkDeviceGroupPresentCapabilitiesKHR) VkResult;
pub extern fn vkGetDeviceGroupSurfacePresentModesKHR(device: VkDevice, surface: VkSurfaceKHR, pModes: [*c]VkDeviceGroupPresentModeFlagsKHR) VkResult;
pub extern fn vkGetPhysicalDevicePresentRectanglesKHR(physicalDevice: VkPhysicalDevice, surface: VkSurfaceKHR, pRectCount: [*c]u32, pRects: [*c]VkRect2D) VkResult;
pub extern fn vkAcquireNextImage2KHR(device: VkDevice, pAcquireInfo: [*c]const VkAcquireNextImageInfoKHR, pImageIndex: [*c]u32) VkResult;
pub const struct_VkDisplayKHR_T = opaque {};
pub const VkDisplayKHR = ?*struct_VkDisplayKHR_T;
pub const struct_VkDisplayModeKHR_T = opaque {};
pub const VkDisplayModeKHR = ?*struct_VkDisplayModeKHR_T;
pub const VkDisplayModeCreateFlagsKHR = VkFlags;
pub const VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR: c_int = 1;
pub const VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR: c_int = 2;
pub const VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR: c_int = 4;
pub const VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR: c_int = 8;
pub const VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkDisplayPlaneAlphaFlagBitsKHR = c_uint;
pub const VkDisplayPlaneAlphaFlagBitsKHR = enum_VkDisplayPlaneAlphaFlagBitsKHR;
pub const VkDisplayPlaneAlphaFlagsKHR = VkFlags;
pub const VkDisplaySurfaceCreateFlagsKHR = VkFlags;
pub const struct_VkDisplayModeParametersKHR = extern struct {
    visibleRegion: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    refreshRate: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDisplayModeParametersKHR = struct_VkDisplayModeParametersKHR;
pub const struct_VkDisplayModeCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDisplayModeCreateFlagsKHR = @import("std").mem.zeroes(VkDisplayModeCreateFlagsKHR),
    parameters: VkDisplayModeParametersKHR = @import("std").mem.zeroes(VkDisplayModeParametersKHR),
};
pub const VkDisplayModeCreateInfoKHR = struct_VkDisplayModeCreateInfoKHR;
pub const struct_VkDisplayModePropertiesKHR = extern struct {
    displayMode: VkDisplayModeKHR = @import("std").mem.zeroes(VkDisplayModeKHR),
    parameters: VkDisplayModeParametersKHR = @import("std").mem.zeroes(VkDisplayModeParametersKHR),
};
pub const VkDisplayModePropertiesKHR = struct_VkDisplayModePropertiesKHR;
pub const struct_VkDisplayPlaneCapabilitiesKHR = extern struct {
    supportedAlpha: VkDisplayPlaneAlphaFlagsKHR = @import("std").mem.zeroes(VkDisplayPlaneAlphaFlagsKHR),
    minSrcPosition: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    maxSrcPosition: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    minSrcExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxSrcExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    minDstPosition: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    maxDstPosition: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    minDstExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxDstExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkDisplayPlaneCapabilitiesKHR = struct_VkDisplayPlaneCapabilitiesKHR;
pub const struct_VkDisplayPlanePropertiesKHR = extern struct {
    currentDisplay: VkDisplayKHR = @import("std").mem.zeroes(VkDisplayKHR),
    currentStackIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDisplayPlanePropertiesKHR = struct_VkDisplayPlanePropertiesKHR;
pub const struct_VkDisplayPropertiesKHR = extern struct {
    display: VkDisplayKHR = @import("std").mem.zeroes(VkDisplayKHR),
    displayName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    physicalDimensions: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    physicalResolution: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    supportedTransforms: VkSurfaceTransformFlagsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagsKHR),
    planeReorderPossible: VkBool32 = @import("std").mem.zeroes(VkBool32),
    persistentContent: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDisplayPropertiesKHR = struct_VkDisplayPropertiesKHR;
pub const struct_VkDisplaySurfaceCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDisplaySurfaceCreateFlagsKHR = @import("std").mem.zeroes(VkDisplaySurfaceCreateFlagsKHR),
    displayMode: VkDisplayModeKHR = @import("std").mem.zeroes(VkDisplayModeKHR),
    planeIndex: u32 = @import("std").mem.zeroes(u32),
    planeStackIndex: u32 = @import("std").mem.zeroes(u32),
    transform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
    globalAlpha: f32 = @import("std").mem.zeroes(f32),
    alphaMode: VkDisplayPlaneAlphaFlagBitsKHR = @import("std").mem.zeroes(VkDisplayPlaneAlphaFlagBitsKHR),
    imageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkDisplaySurfaceCreateInfoKHR = struct_VkDisplaySurfaceCreateInfoKHR;
pub const PFN_vkGetPhysicalDeviceDisplayPropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkDisplayPropertiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkDisplayPlanePropertiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetDisplayPlaneSupportedDisplaysKHR = ?*const fn (VkPhysicalDevice, u32, [*c]u32, [*c]VkDisplayKHR) callconv(.C) VkResult;
pub const PFN_vkGetDisplayModePropertiesKHR = ?*const fn (VkPhysicalDevice, VkDisplayKHR, [*c]u32, [*c]VkDisplayModePropertiesKHR) callconv(.C) VkResult;
pub const PFN_vkCreateDisplayModeKHR = ?*const fn (VkPhysicalDevice, VkDisplayKHR, [*c]const VkDisplayModeCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkDisplayModeKHR) callconv(.C) VkResult;
pub const PFN_vkGetDisplayPlaneCapabilitiesKHR = ?*const fn (VkPhysicalDevice, VkDisplayModeKHR, u32, [*c]VkDisplayPlaneCapabilitiesKHR) callconv(.C) VkResult;
pub const PFN_vkCreateDisplayPlaneSurfaceKHR = ?*const fn (VkInstance, [*c]const VkDisplaySurfaceCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkSurfaceKHR) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceDisplayPropertiesKHR(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkDisplayPropertiesKHR) VkResult;
pub extern fn vkGetPhysicalDeviceDisplayPlanePropertiesKHR(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkDisplayPlanePropertiesKHR) VkResult;
pub extern fn vkGetDisplayPlaneSupportedDisplaysKHR(physicalDevice: VkPhysicalDevice, planeIndex: u32, pDisplayCount: [*c]u32, pDisplays: [*c]VkDisplayKHR) VkResult;
pub extern fn vkGetDisplayModePropertiesKHR(physicalDevice: VkPhysicalDevice, display: VkDisplayKHR, pPropertyCount: [*c]u32, pProperties: [*c]VkDisplayModePropertiesKHR) VkResult;
pub extern fn vkCreateDisplayModeKHR(physicalDevice: VkPhysicalDevice, display: VkDisplayKHR, pCreateInfo: [*c]const VkDisplayModeCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pMode: [*c]VkDisplayModeKHR) VkResult;
pub extern fn vkGetDisplayPlaneCapabilitiesKHR(physicalDevice: VkPhysicalDevice, mode: VkDisplayModeKHR, planeIndex: u32, pCapabilities: [*c]VkDisplayPlaneCapabilitiesKHR) VkResult;
pub extern fn vkCreateDisplayPlaneSurfaceKHR(instance: VkInstance, pCreateInfo: [*c]const VkDisplaySurfaceCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pSurface: [*c]VkSurfaceKHR) VkResult;
pub const struct_VkDisplayPresentInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcRect: VkRect2D = @import("std").mem.zeroes(VkRect2D),
    dstRect: VkRect2D = @import("std").mem.zeroes(VkRect2D),
    persistent: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDisplayPresentInfoKHR = struct_VkDisplayPresentInfoKHR;
pub const PFN_vkCreateSharedSwapchainsKHR = ?*const fn (VkDevice, u32, [*c]const VkSwapchainCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkSwapchainKHR) callconv(.C) VkResult;
pub extern fn vkCreateSharedSwapchainsKHR(device: VkDevice, swapchainCount: u32, pCreateInfos: [*c]const VkSwapchainCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pSwapchains: [*c]VkSwapchainKHR) VkResult;
pub const struct_VkVideoSessionKHR_T = opaque {};
pub const VkVideoSessionKHR = ?*struct_VkVideoSessionKHR_T;
pub const struct_VkVideoSessionParametersKHR_T = opaque {};
pub const VkVideoSessionParametersKHR = ?*struct_VkVideoSessionParametersKHR_T;
pub const VK_QUERY_RESULT_STATUS_ERROR_KHR: c_int = -1;
pub const VK_QUERY_RESULT_STATUS_NOT_READY_KHR: c_int = 0;
pub const VK_QUERY_RESULT_STATUS_COMPLETE_KHR: c_int = 1;
pub const VK_QUERY_RESULT_STATUS_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_KHR: c_int = -1000299000;
pub const VK_QUERY_RESULT_STATUS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkQueryResultStatusKHR = c_int;
pub const VkQueryResultStatusKHR = enum_VkQueryResultStatusKHR;
pub const VK_VIDEO_CODEC_OPERATION_NONE_KHR: c_int = 0;
pub const VK_VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_KHR: c_int = 65536;
pub const VK_VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_KHR: c_int = 131072;
pub const VK_VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR: c_int = 1;
pub const VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR: c_int = 2;
pub const VK_VIDEO_CODEC_OPERATION_DECODE_AV1_BIT_KHR: c_int = 4;
pub const VK_VIDEO_CODEC_OPERATION_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoCodecOperationFlagBitsKHR = c_uint;
pub const VkVideoCodecOperationFlagBitsKHR = enum_VkVideoCodecOperationFlagBitsKHR;
pub const VkVideoCodecOperationFlagsKHR = VkFlags;
pub const VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR: c_int = 0;
pub const VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR: c_int = 1;
pub const VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR: c_int = 2;
pub const VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR: c_int = 4;
pub const VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR: c_int = 8;
pub const VK_VIDEO_CHROMA_SUBSAMPLING_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoChromaSubsamplingFlagBitsKHR = c_uint;
pub const VkVideoChromaSubsamplingFlagBitsKHR = enum_VkVideoChromaSubsamplingFlagBitsKHR;
pub const VkVideoChromaSubsamplingFlagsKHR = VkFlags;
pub const VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR: c_int = 0;
pub const VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR: c_int = 1;
pub const VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR: c_int = 4;
pub const VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR: c_int = 16;
pub const VK_VIDEO_COMPONENT_BIT_DEPTH_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoComponentBitDepthFlagBitsKHR = c_uint;
pub const VkVideoComponentBitDepthFlagBitsKHR = enum_VkVideoComponentBitDepthFlagBitsKHR;
pub const VkVideoComponentBitDepthFlagsKHR = VkFlags;
pub const VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR: c_int = 1;
pub const VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR: c_int = 2;
pub const VK_VIDEO_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoCapabilityFlagBitsKHR = c_uint;
pub const VkVideoCapabilityFlagBitsKHR = enum_VkVideoCapabilityFlagBitsKHR;
pub const VkVideoCapabilityFlagsKHR = VkFlags;
pub const VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR: c_int = 1;
pub const VK_VIDEO_SESSION_CREATE_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_BIT_KHR: c_int = 2;
pub const VK_VIDEO_SESSION_CREATE_INLINE_QUERIES_BIT_KHR: c_int = 4;
pub const VK_VIDEO_SESSION_CREATE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoSessionCreateFlagBitsKHR = c_uint;
pub const VkVideoSessionCreateFlagBitsKHR = enum_VkVideoSessionCreateFlagBitsKHR;
pub const VkVideoSessionCreateFlagsKHR = VkFlags;
pub const VkVideoSessionParametersCreateFlagsKHR = VkFlags;
pub const VkVideoBeginCodingFlagsKHR = VkFlags;
pub const VkVideoEndCodingFlagsKHR = VkFlags;
pub const VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR: c_int = 1;
pub const VK_VIDEO_CODING_CONTROL_ENCODE_RATE_CONTROL_BIT_KHR: c_int = 2;
pub const VK_VIDEO_CODING_CONTROL_ENCODE_QUALITY_LEVEL_BIT_KHR: c_int = 4;
pub const VK_VIDEO_CODING_CONTROL_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoCodingControlFlagBitsKHR = c_uint;
pub const VkVideoCodingControlFlagBitsKHR = enum_VkVideoCodingControlFlagBitsKHR;
pub const VkVideoCodingControlFlagsKHR = VkFlags;
pub const struct_VkQueueFamilyQueryResultStatusPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    queryResultStatusSupport: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkQueueFamilyQueryResultStatusPropertiesKHR = struct_VkQueueFamilyQueryResultStatusPropertiesKHR;
pub const struct_VkQueueFamilyVideoPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    videoCodecOperations: VkVideoCodecOperationFlagsKHR = @import("std").mem.zeroes(VkVideoCodecOperationFlagsKHR),
};
pub const VkQueueFamilyVideoPropertiesKHR = struct_VkQueueFamilyVideoPropertiesKHR;
pub const struct_VkVideoProfileInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    videoCodecOperation: VkVideoCodecOperationFlagBitsKHR = @import("std").mem.zeroes(VkVideoCodecOperationFlagBitsKHR),
    chromaSubsampling: VkVideoChromaSubsamplingFlagsKHR = @import("std").mem.zeroes(VkVideoChromaSubsamplingFlagsKHR),
    lumaBitDepth: VkVideoComponentBitDepthFlagsKHR = @import("std").mem.zeroes(VkVideoComponentBitDepthFlagsKHR),
    chromaBitDepth: VkVideoComponentBitDepthFlagsKHR = @import("std").mem.zeroes(VkVideoComponentBitDepthFlagsKHR),
};
pub const VkVideoProfileInfoKHR = struct_VkVideoProfileInfoKHR;
pub const struct_VkVideoProfileListInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    profileCount: u32 = @import("std").mem.zeroes(u32),
    pProfiles: [*c]const VkVideoProfileInfoKHR = @import("std").mem.zeroes([*c]const VkVideoProfileInfoKHR),
};
pub const VkVideoProfileListInfoKHR = struct_VkVideoProfileListInfoKHR;
pub const struct_VkVideoCapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkVideoCapabilityFlagsKHR = @import("std").mem.zeroes(VkVideoCapabilityFlagsKHR),
    minBitstreamBufferOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    minBitstreamBufferSizeAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    pictureAccessGranularity: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    minCodedExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxCodedExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxDpbSlots: u32 = @import("std").mem.zeroes(u32),
    maxActiveReferencePictures: u32 = @import("std").mem.zeroes(u32),
    stdHeaderVersion: VkExtensionProperties = @import("std").mem.zeroes(VkExtensionProperties),
};
pub const VkVideoCapabilitiesKHR = struct_VkVideoCapabilitiesKHR;
pub const struct_VkPhysicalDeviceVideoFormatInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    imageUsage: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
};
pub const VkPhysicalDeviceVideoFormatInfoKHR = struct_VkPhysicalDeviceVideoFormatInfoKHR;
pub const struct_VkVideoFormatPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    componentMapping: VkComponentMapping = @import("std").mem.zeroes(VkComponentMapping),
    imageCreateFlags: VkImageCreateFlags = @import("std").mem.zeroes(VkImageCreateFlags),
    imageType: VkImageType = @import("std").mem.zeroes(VkImageType),
    imageTiling: VkImageTiling = @import("std").mem.zeroes(VkImageTiling),
    imageUsageFlags: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
};
pub const VkVideoFormatPropertiesKHR = struct_VkVideoFormatPropertiesKHR;
pub const struct_VkVideoPictureResourceInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    codedOffset: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    codedExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    baseArrayLayer: u32 = @import("std").mem.zeroes(u32),
    imageViewBinding: VkImageView = @import("std").mem.zeroes(VkImageView),
};
pub const VkVideoPictureResourceInfoKHR = struct_VkVideoPictureResourceInfoKHR;
pub const struct_VkVideoReferenceSlotInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    slotIndex: i32 = @import("std").mem.zeroes(i32),
    pPictureResource: [*c]const VkVideoPictureResourceInfoKHR = @import("std").mem.zeroes([*c]const VkVideoPictureResourceInfoKHR),
};
pub const VkVideoReferenceSlotInfoKHR = struct_VkVideoReferenceSlotInfoKHR;
pub const struct_VkVideoSessionMemoryRequirementsKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryBindIndex: u32 = @import("std").mem.zeroes(u32),
    memoryRequirements: VkMemoryRequirements = @import("std").mem.zeroes(VkMemoryRequirements),
};
pub const VkVideoSessionMemoryRequirementsKHR = struct_VkVideoSessionMemoryRequirementsKHR;
pub const struct_VkBindVideoSessionMemoryInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    memoryBindIndex: u32 = @import("std").mem.zeroes(u32),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    memoryOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    memorySize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkBindVideoSessionMemoryInfoKHR = struct_VkBindVideoSessionMemoryInfoKHR;
pub const struct_VkVideoSessionCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    queueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    flags: VkVideoSessionCreateFlagsKHR = @import("std").mem.zeroes(VkVideoSessionCreateFlagsKHR),
    pVideoProfile: [*c]const VkVideoProfileInfoKHR = @import("std").mem.zeroes([*c]const VkVideoProfileInfoKHR),
    pictureFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    maxCodedExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    referencePictureFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    maxDpbSlots: u32 = @import("std").mem.zeroes(u32),
    maxActiveReferencePictures: u32 = @import("std").mem.zeroes(u32),
    pStdHeaderVersion: [*c]const VkExtensionProperties = @import("std").mem.zeroes([*c]const VkExtensionProperties),
};
pub const VkVideoSessionCreateInfoKHR = struct_VkVideoSessionCreateInfoKHR;
pub const struct_VkVideoSessionParametersCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoSessionParametersCreateFlagsKHR = @import("std").mem.zeroes(VkVideoSessionParametersCreateFlagsKHR),
    videoSessionParametersTemplate: VkVideoSessionParametersKHR = @import("std").mem.zeroes(VkVideoSessionParametersKHR),
    videoSession: VkVideoSessionKHR = @import("std").mem.zeroes(VkVideoSessionKHR),
};
pub const VkVideoSessionParametersCreateInfoKHR = struct_VkVideoSessionParametersCreateInfoKHR;
pub const struct_VkVideoSessionParametersUpdateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    updateSequenceCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoSessionParametersUpdateInfoKHR = struct_VkVideoSessionParametersUpdateInfoKHR;
pub const struct_VkVideoBeginCodingInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoBeginCodingFlagsKHR = @import("std").mem.zeroes(VkVideoBeginCodingFlagsKHR),
    videoSession: VkVideoSessionKHR = @import("std").mem.zeroes(VkVideoSessionKHR),
    videoSessionParameters: VkVideoSessionParametersKHR = @import("std").mem.zeroes(VkVideoSessionParametersKHR),
    referenceSlotCount: u32 = @import("std").mem.zeroes(u32),
    pReferenceSlots: [*c]const VkVideoReferenceSlotInfoKHR = @import("std").mem.zeroes([*c]const VkVideoReferenceSlotInfoKHR),
};
pub const VkVideoBeginCodingInfoKHR = struct_VkVideoBeginCodingInfoKHR;
pub const struct_VkVideoEndCodingInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoEndCodingFlagsKHR = @import("std").mem.zeroes(VkVideoEndCodingFlagsKHR),
};
pub const VkVideoEndCodingInfoKHR = struct_VkVideoEndCodingInfoKHR;
pub const struct_VkVideoCodingControlInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoCodingControlFlagsKHR = @import("std").mem.zeroes(VkVideoCodingControlFlagsKHR),
};
pub const VkVideoCodingControlInfoKHR = struct_VkVideoCodingControlInfoKHR;
pub const PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkVideoProfileInfoKHR, [*c]VkVideoCapabilitiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceVideoFormatInfoKHR, [*c]u32, [*c]VkVideoFormatPropertiesKHR) callconv(.C) VkResult;
pub const PFN_vkCreateVideoSessionKHR = ?*const fn (VkDevice, [*c]const VkVideoSessionCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkVideoSessionKHR) callconv(.C) VkResult;
pub const PFN_vkDestroyVideoSessionKHR = ?*const fn (VkDevice, VkVideoSessionKHR, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetVideoSessionMemoryRequirementsKHR = ?*const fn (VkDevice, VkVideoSessionKHR, [*c]u32, [*c]VkVideoSessionMemoryRequirementsKHR) callconv(.C) VkResult;
pub const PFN_vkBindVideoSessionMemoryKHR = ?*const fn (VkDevice, VkVideoSessionKHR, u32, [*c]const VkBindVideoSessionMemoryInfoKHR) callconv(.C) VkResult;
pub const PFN_vkCreateVideoSessionParametersKHR = ?*const fn (VkDevice, [*c]const VkVideoSessionParametersCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkVideoSessionParametersKHR) callconv(.C) VkResult;
pub const PFN_vkUpdateVideoSessionParametersKHR = ?*const fn (VkDevice, VkVideoSessionParametersKHR, [*c]const VkVideoSessionParametersUpdateInfoKHR) callconv(.C) VkResult;
pub const PFN_vkDestroyVideoSessionParametersKHR = ?*const fn (VkDevice, VkVideoSessionParametersKHR, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCmdBeginVideoCodingKHR = ?*const fn (VkCommandBuffer, [*c]const VkVideoBeginCodingInfoKHR) callconv(.C) void;
pub const PFN_vkCmdEndVideoCodingKHR = ?*const fn (VkCommandBuffer, [*c]const VkVideoEndCodingInfoKHR) callconv(.C) void;
pub const PFN_vkCmdControlVideoCodingKHR = ?*const fn (VkCommandBuffer, [*c]const VkVideoCodingControlInfoKHR) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceVideoCapabilitiesKHR(physicalDevice: VkPhysicalDevice, pVideoProfile: [*c]const VkVideoProfileInfoKHR, pCapabilities: [*c]VkVideoCapabilitiesKHR) VkResult;
pub extern fn vkGetPhysicalDeviceVideoFormatPropertiesKHR(physicalDevice: VkPhysicalDevice, pVideoFormatInfo: [*c]const VkPhysicalDeviceVideoFormatInfoKHR, pVideoFormatPropertyCount: [*c]u32, pVideoFormatProperties: [*c]VkVideoFormatPropertiesKHR) VkResult;
pub extern fn vkCreateVideoSessionKHR(device: VkDevice, pCreateInfo: [*c]const VkVideoSessionCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pVideoSession: [*c]VkVideoSessionKHR) VkResult;
pub extern fn vkDestroyVideoSessionKHR(device: VkDevice, videoSession: VkVideoSessionKHR, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetVideoSessionMemoryRequirementsKHR(device: VkDevice, videoSession: VkVideoSessionKHR, pMemoryRequirementsCount: [*c]u32, pMemoryRequirements: [*c]VkVideoSessionMemoryRequirementsKHR) VkResult;
pub extern fn vkBindVideoSessionMemoryKHR(device: VkDevice, videoSession: VkVideoSessionKHR, bindSessionMemoryInfoCount: u32, pBindSessionMemoryInfos: [*c]const VkBindVideoSessionMemoryInfoKHR) VkResult;
pub extern fn vkCreateVideoSessionParametersKHR(device: VkDevice, pCreateInfo: [*c]const VkVideoSessionParametersCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pVideoSessionParameters: [*c]VkVideoSessionParametersKHR) VkResult;
pub extern fn vkUpdateVideoSessionParametersKHR(device: VkDevice, videoSessionParameters: VkVideoSessionParametersKHR, pUpdateInfo: [*c]const VkVideoSessionParametersUpdateInfoKHR) VkResult;
pub extern fn vkDestroyVideoSessionParametersKHR(device: VkDevice, videoSessionParameters: VkVideoSessionParametersKHR, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCmdBeginVideoCodingKHR(commandBuffer: VkCommandBuffer, pBeginInfo: [*c]const VkVideoBeginCodingInfoKHR) void;
pub extern fn vkCmdEndVideoCodingKHR(commandBuffer: VkCommandBuffer, pEndCodingInfo: [*c]const VkVideoEndCodingInfoKHR) void;
pub extern fn vkCmdControlVideoCodingKHR(commandBuffer: VkCommandBuffer, pCodingControlInfo: [*c]const VkVideoCodingControlInfoKHR) void;
pub const VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR: c_int = 1;
pub const VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR: c_int = 2;
pub const VK_VIDEO_DECODE_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoDecodeCapabilityFlagBitsKHR = c_uint;
pub const VkVideoDecodeCapabilityFlagBitsKHR = enum_VkVideoDecodeCapabilityFlagBitsKHR;
pub const VkVideoDecodeCapabilityFlagsKHR = VkFlags;
pub const VK_VIDEO_DECODE_USAGE_DEFAULT_KHR: c_int = 0;
pub const VK_VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR: c_int = 1;
pub const VK_VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR: c_int = 2;
pub const VK_VIDEO_DECODE_USAGE_STREAMING_BIT_KHR: c_int = 4;
pub const VK_VIDEO_DECODE_USAGE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoDecodeUsageFlagBitsKHR = c_uint;
pub const VkVideoDecodeUsageFlagBitsKHR = enum_VkVideoDecodeUsageFlagBitsKHR;
pub const VkVideoDecodeUsageFlagsKHR = VkFlags;
pub const VkVideoDecodeFlagsKHR = VkFlags;
pub const struct_VkVideoDecodeCapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkVideoDecodeCapabilityFlagsKHR = @import("std").mem.zeroes(VkVideoDecodeCapabilityFlagsKHR),
};
pub const VkVideoDecodeCapabilitiesKHR = struct_VkVideoDecodeCapabilitiesKHR;
pub const struct_VkVideoDecodeUsageInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    videoUsageHints: VkVideoDecodeUsageFlagsKHR = @import("std").mem.zeroes(VkVideoDecodeUsageFlagsKHR),
};
pub const VkVideoDecodeUsageInfoKHR = struct_VkVideoDecodeUsageInfoKHR;
pub const struct_VkVideoDecodeInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoDecodeFlagsKHR = @import("std").mem.zeroes(VkVideoDecodeFlagsKHR),
    srcBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    srcBufferOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    srcBufferRange: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    dstPictureResource: VkVideoPictureResourceInfoKHR = @import("std").mem.zeroes(VkVideoPictureResourceInfoKHR),
    pSetupReferenceSlot: [*c]const VkVideoReferenceSlotInfoKHR = @import("std").mem.zeroes([*c]const VkVideoReferenceSlotInfoKHR),
    referenceSlotCount: u32 = @import("std").mem.zeroes(u32),
    pReferenceSlots: [*c]const VkVideoReferenceSlotInfoKHR = @import("std").mem.zeroes([*c]const VkVideoReferenceSlotInfoKHR),
};
pub const VkVideoDecodeInfoKHR = struct_VkVideoDecodeInfoKHR;
pub const PFN_vkCmdDecodeVideoKHR = ?*const fn (VkCommandBuffer, [*c]const VkVideoDecodeInfoKHR) callconv(.C) void;
pub extern fn vkCmdDecodeVideoKHR(commandBuffer: VkCommandBuffer, pDecodeInfo: [*c]const VkVideoDecodeInfoKHR) void;
pub const STD_VIDEO_H264_CHROMA_FORMAT_IDC_MONOCHROME: c_int = 0;
pub const STD_VIDEO_H264_CHROMA_FORMAT_IDC_420: c_int = 1;
pub const STD_VIDEO_H264_CHROMA_FORMAT_IDC_422: c_int = 2;
pub const STD_VIDEO_H264_CHROMA_FORMAT_IDC_444: c_int = 3;
pub const STD_VIDEO_H264_CHROMA_FORMAT_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_CHROMA_FORMAT_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264ChromaFormatIdc = c_uint;
pub const StdVideoH264ChromaFormatIdc = enum_StdVideoH264ChromaFormatIdc;
pub const STD_VIDEO_H264_PROFILE_IDC_BASELINE: c_int = 66;
pub const STD_VIDEO_H264_PROFILE_IDC_MAIN: c_int = 77;
pub const STD_VIDEO_H264_PROFILE_IDC_HIGH: c_int = 100;
pub const STD_VIDEO_H264_PROFILE_IDC_HIGH_444_PREDICTIVE: c_int = 244;
pub const STD_VIDEO_H264_PROFILE_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_PROFILE_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264ProfileIdc = c_uint;
pub const StdVideoH264ProfileIdc = enum_StdVideoH264ProfileIdc;
pub const STD_VIDEO_H264_LEVEL_IDC_1_0: c_int = 0;
pub const STD_VIDEO_H264_LEVEL_IDC_1_1: c_int = 1;
pub const STD_VIDEO_H264_LEVEL_IDC_1_2: c_int = 2;
pub const STD_VIDEO_H264_LEVEL_IDC_1_3: c_int = 3;
pub const STD_VIDEO_H264_LEVEL_IDC_2_0: c_int = 4;
pub const STD_VIDEO_H264_LEVEL_IDC_2_1: c_int = 5;
pub const STD_VIDEO_H264_LEVEL_IDC_2_2: c_int = 6;
pub const STD_VIDEO_H264_LEVEL_IDC_3_0: c_int = 7;
pub const STD_VIDEO_H264_LEVEL_IDC_3_1: c_int = 8;
pub const STD_VIDEO_H264_LEVEL_IDC_3_2: c_int = 9;
pub const STD_VIDEO_H264_LEVEL_IDC_4_0: c_int = 10;
pub const STD_VIDEO_H264_LEVEL_IDC_4_1: c_int = 11;
pub const STD_VIDEO_H264_LEVEL_IDC_4_2: c_int = 12;
pub const STD_VIDEO_H264_LEVEL_IDC_5_0: c_int = 13;
pub const STD_VIDEO_H264_LEVEL_IDC_5_1: c_int = 14;
pub const STD_VIDEO_H264_LEVEL_IDC_5_2: c_int = 15;
pub const STD_VIDEO_H264_LEVEL_IDC_6_0: c_int = 16;
pub const STD_VIDEO_H264_LEVEL_IDC_6_1: c_int = 17;
pub const STD_VIDEO_H264_LEVEL_IDC_6_2: c_int = 18;
pub const STD_VIDEO_H264_LEVEL_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_LEVEL_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264LevelIdc = c_uint;
pub const StdVideoH264LevelIdc = enum_StdVideoH264LevelIdc;
pub const STD_VIDEO_H264_POC_TYPE_0: c_int = 0;
pub const STD_VIDEO_H264_POC_TYPE_1: c_int = 1;
pub const STD_VIDEO_H264_POC_TYPE_2: c_int = 2;
pub const STD_VIDEO_H264_POC_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_POC_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264PocType = c_uint;
pub const StdVideoH264PocType = enum_StdVideoH264PocType;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_UNSPECIFIED: c_int = 0;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_SQUARE: c_int = 1;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_12_11: c_int = 2;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_10_11: c_int = 3;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_16_11: c_int = 4;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_40_33: c_int = 5;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_24_11: c_int = 6;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_20_11: c_int = 7;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_32_11: c_int = 8;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_80_33: c_int = 9;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_18_11: c_int = 10;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_15_11: c_int = 11;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_64_33: c_int = 12;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_160_99: c_int = 13;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_4_3: c_int = 14;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_3_2: c_int = 15;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_2_1: c_int = 16;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_EXTENDED_SAR: c_int = 255;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_ASPECT_RATIO_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264AspectRatioIdc = c_uint;
pub const StdVideoH264AspectRatioIdc = enum_StdVideoH264AspectRatioIdc;
pub const STD_VIDEO_H264_WEIGHTED_BIPRED_IDC_DEFAULT: c_int = 0;
pub const STD_VIDEO_H264_WEIGHTED_BIPRED_IDC_EXPLICIT: c_int = 1;
pub const STD_VIDEO_H264_WEIGHTED_BIPRED_IDC_IMPLICIT: c_int = 2;
pub const STD_VIDEO_H264_WEIGHTED_BIPRED_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_WEIGHTED_BIPRED_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264WeightedBipredIdc = c_uint;
pub const StdVideoH264WeightedBipredIdc = enum_StdVideoH264WeightedBipredIdc;
pub const STD_VIDEO_H264_MODIFICATION_OF_PIC_NUMS_IDC_SHORT_TERM_SUBTRACT: c_int = 0;
pub const STD_VIDEO_H264_MODIFICATION_OF_PIC_NUMS_IDC_SHORT_TERM_ADD: c_int = 1;
pub const STD_VIDEO_H264_MODIFICATION_OF_PIC_NUMS_IDC_LONG_TERM: c_int = 2;
pub const STD_VIDEO_H264_MODIFICATION_OF_PIC_NUMS_IDC_END: c_int = 3;
pub const STD_VIDEO_H264_MODIFICATION_OF_PIC_NUMS_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_MODIFICATION_OF_PIC_NUMS_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264ModificationOfPicNumsIdc = c_uint;
pub const StdVideoH264ModificationOfPicNumsIdc = enum_StdVideoH264ModificationOfPicNumsIdc;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_END: c_int = 0;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_UNMARK_SHORT_TERM: c_int = 1;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_UNMARK_LONG_TERM: c_int = 2;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_MARK_LONG_TERM: c_int = 3;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_SET_MAX_LONG_TERM_INDEX: c_int = 4;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_UNMARK_ALL: c_int = 5;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_MARK_CURRENT_AS_LONG_TERM: c_int = 6;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_MEM_MGMT_CONTROL_OP_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264MemMgmtControlOp = c_uint;
pub const StdVideoH264MemMgmtControlOp = enum_StdVideoH264MemMgmtControlOp;
pub const STD_VIDEO_H264_CABAC_INIT_IDC_0: c_int = 0;
pub const STD_VIDEO_H264_CABAC_INIT_IDC_1: c_int = 1;
pub const STD_VIDEO_H264_CABAC_INIT_IDC_2: c_int = 2;
pub const STD_VIDEO_H264_CABAC_INIT_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_CABAC_INIT_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264CabacInitIdc = c_uint;
pub const StdVideoH264CabacInitIdc = enum_StdVideoH264CabacInitIdc;
pub const STD_VIDEO_H264_DISABLE_DEBLOCKING_FILTER_IDC_DISABLED: c_int = 0;
pub const STD_VIDEO_H264_DISABLE_DEBLOCKING_FILTER_IDC_ENABLED: c_int = 1;
pub const STD_VIDEO_H264_DISABLE_DEBLOCKING_FILTER_IDC_PARTIAL: c_int = 2;
pub const STD_VIDEO_H264_DISABLE_DEBLOCKING_FILTER_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_DISABLE_DEBLOCKING_FILTER_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264DisableDeblockingFilterIdc = c_uint;
pub const StdVideoH264DisableDeblockingFilterIdc = enum_StdVideoH264DisableDeblockingFilterIdc;
pub const STD_VIDEO_H264_SLICE_TYPE_P: c_int = 0;
pub const STD_VIDEO_H264_SLICE_TYPE_B: c_int = 1;
pub const STD_VIDEO_H264_SLICE_TYPE_I: c_int = 2;
pub const STD_VIDEO_H264_SLICE_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_SLICE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264SliceType = c_uint;
pub const StdVideoH264SliceType = enum_StdVideoH264SliceType;
pub const STD_VIDEO_H264_PICTURE_TYPE_P: c_int = 0;
pub const STD_VIDEO_H264_PICTURE_TYPE_B: c_int = 1;
pub const STD_VIDEO_H264_PICTURE_TYPE_I: c_int = 2;
pub const STD_VIDEO_H264_PICTURE_TYPE_IDR: c_int = 5;
pub const STD_VIDEO_H264_PICTURE_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_PICTURE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264PictureType = c_uint;
pub const StdVideoH264PictureType = enum_StdVideoH264PictureType;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_SPS: c_int = 0;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_PPS: c_int = 1;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_AUD: c_int = 2;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_PREFIX: c_int = 3;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_END_OF_SEQUENCE: c_int = 4;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_END_OF_STREAM: c_int = 5;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_PRECODED: c_int = 6;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H264_NON_VCL_NALU_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH264NonVclNaluType = c_uint;
pub const StdVideoH264NonVclNaluType = enum_StdVideoH264NonVclNaluType;
// /usr/local/include/vk_video/vulkan_video_codec_h264std.h:181:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH264SpsVuiFlags = opaque {};
pub const StdVideoH264SpsVuiFlags = struct_StdVideoH264SpsVuiFlags;
pub const struct_StdVideoH264HrdParameters = extern struct {
    cpb_cnt_minus1: u8 = @import("std").mem.zeroes(u8),
    bit_rate_scale: u8 = @import("std").mem.zeroes(u8),
    cpb_size_scale: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    bit_rate_value_minus1: [32]u32 = @import("std").mem.zeroes([32]u32),
    cpb_size_value_minus1: [32]u32 = @import("std").mem.zeroes([32]u32),
    cbr_flag: [32]u8 = @import("std").mem.zeroes([32]u8),
    initial_cpb_removal_delay_length_minus1: u32 = @import("std").mem.zeroes(u32),
    cpb_removal_delay_length_minus1: u32 = @import("std").mem.zeroes(u32),
    dpb_output_delay_length_minus1: u32 = @import("std").mem.zeroes(u32),
    time_offset_length: u32 = @import("std").mem.zeroes(u32),
};
pub const StdVideoH264HrdParameters = struct_StdVideoH264HrdParameters;
pub const struct_StdVideoH264SequenceParameterSetVui = extern struct {
    flags: StdVideoH264SpsVuiFlags = @import("std").mem.zeroes(StdVideoH264SpsVuiFlags),
    aspect_ratio_idc: StdVideoH264AspectRatioIdc = @import("std").mem.zeroes(StdVideoH264AspectRatioIdc),
    sar_width: u16 = @import("std").mem.zeroes(u16),
    sar_height: u16 = @import("std").mem.zeroes(u16),
    video_format: u8 = @import("std").mem.zeroes(u8),
    colour_primaries: u8 = @import("std").mem.zeroes(u8),
    transfer_characteristics: u8 = @import("std").mem.zeroes(u8),
    matrix_coefficients: u8 = @import("std").mem.zeroes(u8),
    num_units_in_tick: u32 = @import("std").mem.zeroes(u32),
    time_scale: u32 = @import("std").mem.zeroes(u32),
    max_num_reorder_frames: u8 = @import("std").mem.zeroes(u8),
    max_dec_frame_buffering: u8 = @import("std").mem.zeroes(u8),
    chroma_sample_loc_type_top_field: u8 = @import("std").mem.zeroes(u8),
    chroma_sample_loc_type_bottom_field: u8 = @import("std").mem.zeroes(u8),
    reserved1: u32 = @import("std").mem.zeroes(u32),
    pHrdParameters: [*c]const StdVideoH264HrdParameters = @import("std").mem.zeroes([*c]const StdVideoH264HrdParameters),
};
pub const StdVideoH264SequenceParameterSetVui = struct_StdVideoH264SequenceParameterSetVui;
// /usr/local/include/vk_video/vulkan_video_codec_h264std.h:229:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH264SpsFlags = opaque {};
pub const StdVideoH264SpsFlags = struct_StdVideoH264SpsFlags;
pub const struct_StdVideoH264ScalingLists = extern struct {
    scaling_list_present_mask: u16 = @import("std").mem.zeroes(u16),
    use_default_scaling_matrix_mask: u16 = @import("std").mem.zeroes(u16),
    ScalingList4x4: [6][16]u8 = @import("std").mem.zeroes([6][16]u8),
    ScalingList8x8: [6][64]u8 = @import("std").mem.zeroes([6][64]u8),
};
pub const StdVideoH264ScalingLists = struct_StdVideoH264ScalingLists;
pub const struct_StdVideoH264SequenceParameterSet = extern struct {
    flags: StdVideoH264SpsFlags = @import("std").mem.zeroes(StdVideoH264SpsFlags),
    profile_idc: StdVideoH264ProfileIdc = @import("std").mem.zeroes(StdVideoH264ProfileIdc),
    level_idc: StdVideoH264LevelIdc = @import("std").mem.zeroes(StdVideoH264LevelIdc),
    chroma_format_idc: StdVideoH264ChromaFormatIdc = @import("std").mem.zeroes(StdVideoH264ChromaFormatIdc),
    seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    bit_depth_luma_minus8: u8 = @import("std").mem.zeroes(u8),
    bit_depth_chroma_minus8: u8 = @import("std").mem.zeroes(u8),
    log2_max_frame_num_minus4: u8 = @import("std").mem.zeroes(u8),
    pic_order_cnt_type: StdVideoH264PocType = @import("std").mem.zeroes(StdVideoH264PocType),
    offset_for_non_ref_pic: i32 = @import("std").mem.zeroes(i32),
    offset_for_top_to_bottom_field: i32 = @import("std").mem.zeroes(i32),
    log2_max_pic_order_cnt_lsb_minus4: u8 = @import("std").mem.zeroes(u8),
    num_ref_frames_in_pic_order_cnt_cycle: u8 = @import("std").mem.zeroes(u8),
    max_num_ref_frames: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    pic_width_in_mbs_minus1: u32 = @import("std").mem.zeroes(u32),
    pic_height_in_map_units_minus1: u32 = @import("std").mem.zeroes(u32),
    frame_crop_left_offset: u32 = @import("std").mem.zeroes(u32),
    frame_crop_right_offset: u32 = @import("std").mem.zeroes(u32),
    frame_crop_top_offset: u32 = @import("std").mem.zeroes(u32),
    frame_crop_bottom_offset: u32 = @import("std").mem.zeroes(u32),
    reserved2: u32 = @import("std").mem.zeroes(u32),
    pOffsetForRefFrame: [*c]const i32 = @import("std").mem.zeroes([*c]const i32),
    pScalingLists: [*c]const StdVideoH264ScalingLists = @import("std").mem.zeroes([*c]const StdVideoH264ScalingLists),
    pSequenceParameterSetVui: ?*const StdVideoH264SequenceParameterSetVui = @import("std").mem.zeroes(?*const StdVideoH264SequenceParameterSetVui),
};
pub const StdVideoH264SequenceParameterSet = struct_StdVideoH264SequenceParameterSet;
// /usr/local/include/vk_video/vulkan_video_codec_h264std.h:283:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH264PpsFlags = opaque {};
pub const StdVideoH264PpsFlags = struct_StdVideoH264PpsFlags;
pub const struct_StdVideoH264PictureParameterSet = extern struct {
    flags: StdVideoH264PpsFlags = @import("std").mem.zeroes(StdVideoH264PpsFlags),
    seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pic_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    num_ref_idx_l0_default_active_minus1: u8 = @import("std").mem.zeroes(u8),
    num_ref_idx_l1_default_active_minus1: u8 = @import("std").mem.zeroes(u8),
    weighted_bipred_idc: StdVideoH264WeightedBipredIdc = @import("std").mem.zeroes(StdVideoH264WeightedBipredIdc),
    pic_init_qp_minus26: i8 = @import("std").mem.zeroes(i8),
    pic_init_qs_minus26: i8 = @import("std").mem.zeroes(i8),
    chroma_qp_index_offset: i8 = @import("std").mem.zeroes(i8),
    second_chroma_qp_index_offset: i8 = @import("std").mem.zeroes(i8),
    pScalingLists: [*c]const StdVideoH264ScalingLists = @import("std").mem.zeroes([*c]const StdVideoH264ScalingLists),
};
pub const StdVideoH264PictureParameterSet = struct_StdVideoH264PictureParameterSet;
pub const struct_StdVideoEncodeH264WeightTableFlags = extern struct {
    luma_weight_l0_flag: u32 = @import("std").mem.zeroes(u32),
    chroma_weight_l0_flag: u32 = @import("std").mem.zeroes(u32),
    luma_weight_l1_flag: u32 = @import("std").mem.zeroes(u32),
    chroma_weight_l1_flag: u32 = @import("std").mem.zeroes(u32),
};
pub const StdVideoEncodeH264WeightTableFlags = struct_StdVideoEncodeH264WeightTableFlags;
pub const struct_StdVideoEncodeH264WeightTable = extern struct {
    flags: StdVideoEncodeH264WeightTableFlags = @import("std").mem.zeroes(StdVideoEncodeH264WeightTableFlags),
    luma_log2_weight_denom: u8 = @import("std").mem.zeroes(u8),
    chroma_log2_weight_denom: u8 = @import("std").mem.zeroes(u8),
    luma_weight_l0: [32]i8 = @import("std").mem.zeroes([32]i8),
    luma_offset_l0: [32]i8 = @import("std").mem.zeroes([32]i8),
    chroma_weight_l0: [32][2]i8 = @import("std").mem.zeroes([32][2]i8),
    chroma_offset_l0: [32][2]i8 = @import("std").mem.zeroes([32][2]i8),
    luma_weight_l1: [32]i8 = @import("std").mem.zeroes([32]i8),
    luma_offset_l1: [32]i8 = @import("std").mem.zeroes([32]i8),
    chroma_weight_l1: [32][2]i8 = @import("std").mem.zeroes([32][2]i8),
    chroma_offset_l1: [32][2]i8 = @import("std").mem.zeroes([32][2]i8),
};
pub const StdVideoEncodeH264WeightTable = struct_StdVideoEncodeH264WeightTable;
// /usr/local/include/vk_video/vulkan_video_codec_h264std_encode.h:52:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH264SliceHeaderFlags = opaque {};
pub const StdVideoEncodeH264SliceHeaderFlags = struct_StdVideoEncodeH264SliceHeaderFlags;
// /usr/local/include/vk_video/vulkan_video_codec_h264std_encode.h:58:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH264PictureInfoFlags = opaque {};
pub const StdVideoEncodeH264PictureInfoFlags = struct_StdVideoEncodeH264PictureInfoFlags;
// /usr/local/include/vk_video/vulkan_video_codec_h264std_encode.h:67:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH264ReferenceInfoFlags = opaque {};
pub const StdVideoEncodeH264ReferenceInfoFlags = struct_StdVideoEncodeH264ReferenceInfoFlags;
// /usr/local/include/vk_video/vulkan_video_codec_h264std_encode.h:72:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH264ReferenceListsInfoFlags = opaque {};
pub const StdVideoEncodeH264ReferenceListsInfoFlags = struct_StdVideoEncodeH264ReferenceListsInfoFlags;
pub const struct_StdVideoEncodeH264RefListModEntry = extern struct {
    modification_of_pic_nums_idc: StdVideoH264ModificationOfPicNumsIdc = @import("std").mem.zeroes(StdVideoH264ModificationOfPicNumsIdc),
    abs_diff_pic_num_minus1: u16 = @import("std").mem.zeroes(u16),
    long_term_pic_num: u16 = @import("std").mem.zeroes(u16),
};
pub const StdVideoEncodeH264RefListModEntry = struct_StdVideoEncodeH264RefListModEntry;
pub const struct_StdVideoEncodeH264RefPicMarkingEntry = extern struct {
    memory_management_control_operation: StdVideoH264MemMgmtControlOp = @import("std").mem.zeroes(StdVideoH264MemMgmtControlOp),
    difference_of_pic_nums_minus1: u16 = @import("std").mem.zeroes(u16),
    long_term_pic_num: u16 = @import("std").mem.zeroes(u16),
    long_term_frame_idx: u16 = @import("std").mem.zeroes(u16),
    max_long_term_frame_idx_plus1: u16 = @import("std").mem.zeroes(u16),
};
pub const StdVideoEncodeH264RefPicMarkingEntry = struct_StdVideoEncodeH264RefPicMarkingEntry;
pub const struct_StdVideoEncodeH264ReferenceListsInfo = extern struct {
    flags: StdVideoEncodeH264ReferenceListsInfoFlags = @import("std").mem.zeroes(StdVideoEncodeH264ReferenceListsInfoFlags),
    num_ref_idx_l0_active_minus1: u8 = @import("std").mem.zeroes(u8),
    num_ref_idx_l1_active_minus1: u8 = @import("std").mem.zeroes(u8),
    RefPicList0: [32]u8 = @import("std").mem.zeroes([32]u8),
    RefPicList1: [32]u8 = @import("std").mem.zeroes([32]u8),
    refList0ModOpCount: u8 = @import("std").mem.zeroes(u8),
    refList1ModOpCount: u8 = @import("std").mem.zeroes(u8),
    refPicMarkingOpCount: u8 = @import("std").mem.zeroes(u8),
    reserved1: [7]u8 = @import("std").mem.zeroes([7]u8),
    pRefList0ModOperations: [*c]const StdVideoEncodeH264RefListModEntry = @import("std").mem.zeroes([*c]const StdVideoEncodeH264RefListModEntry),
    pRefList1ModOperations: [*c]const StdVideoEncodeH264RefListModEntry = @import("std").mem.zeroes([*c]const StdVideoEncodeH264RefListModEntry),
    pRefPicMarkingOperations: [*c]const StdVideoEncodeH264RefPicMarkingEntry = @import("std").mem.zeroes([*c]const StdVideoEncodeH264RefPicMarkingEntry),
};
pub const StdVideoEncodeH264ReferenceListsInfo = struct_StdVideoEncodeH264ReferenceListsInfo;
pub const struct_StdVideoEncodeH264PictureInfo = extern struct {
    flags: StdVideoEncodeH264PictureInfoFlags = @import("std").mem.zeroes(StdVideoEncodeH264PictureInfoFlags),
    seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pic_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    idr_pic_id: u16 = @import("std").mem.zeroes(u16),
    primary_pic_type: StdVideoH264PictureType = @import("std").mem.zeroes(StdVideoH264PictureType),
    frame_num: u32 = @import("std").mem.zeroes(u32),
    PicOrderCnt: i32 = @import("std").mem.zeroes(i32),
    temporal_id: u8 = @import("std").mem.zeroes(u8),
    reserved1: [3]u8 = @import("std").mem.zeroes([3]u8),
    pRefLists: ?*const StdVideoEncodeH264ReferenceListsInfo = @import("std").mem.zeroes(?*const StdVideoEncodeH264ReferenceListsInfo),
};
pub const StdVideoEncodeH264PictureInfo = struct_StdVideoEncodeH264PictureInfo;
pub const struct_StdVideoEncodeH264ReferenceInfo = extern struct {
    flags: StdVideoEncodeH264ReferenceInfoFlags = @import("std").mem.zeroes(StdVideoEncodeH264ReferenceInfoFlags),
    primary_pic_type: StdVideoH264PictureType = @import("std").mem.zeroes(StdVideoH264PictureType),
    FrameNum: u32 = @import("std").mem.zeroes(u32),
    PicOrderCnt: i32 = @import("std").mem.zeroes(i32),
    long_term_pic_num: u16 = @import("std").mem.zeroes(u16),
    long_term_frame_idx: u16 = @import("std").mem.zeroes(u16),
    temporal_id: u8 = @import("std").mem.zeroes(u8),
};
pub const StdVideoEncodeH264ReferenceInfo = struct_StdVideoEncodeH264ReferenceInfo;
pub const struct_StdVideoEncodeH264SliceHeader = extern struct {
    flags: StdVideoEncodeH264SliceHeaderFlags = @import("std").mem.zeroes(StdVideoEncodeH264SliceHeaderFlags),
    first_mb_in_slice: u32 = @import("std").mem.zeroes(u32),
    slice_type: StdVideoH264SliceType = @import("std").mem.zeroes(StdVideoH264SliceType),
    slice_alpha_c0_offset_div2: i8 = @import("std").mem.zeroes(i8),
    slice_beta_offset_div2: i8 = @import("std").mem.zeroes(i8),
    slice_qp_delta: i8 = @import("std").mem.zeroes(i8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    cabac_init_idc: StdVideoH264CabacInitIdc = @import("std").mem.zeroes(StdVideoH264CabacInitIdc),
    disable_deblocking_filter_idc: StdVideoH264DisableDeblockingFilterIdc = @import("std").mem.zeroes(StdVideoH264DisableDeblockingFilterIdc),
    pWeightTable: [*c]const StdVideoEncodeH264WeightTable = @import("std").mem.zeroes([*c]const StdVideoEncodeH264WeightTable),
};
pub const StdVideoEncodeH264SliceHeader = struct_StdVideoEncodeH264SliceHeader;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR: c_int = 16;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR: c_int = 32;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR: c_int = 64;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR: c_int = 128;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR: c_int = 256;
pub const VK_VIDEO_ENCODE_H264_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH264CapabilityFlagBitsKHR = c_uint;
pub const VkVideoEncodeH264CapabilityFlagBitsKHR = enum_VkVideoEncodeH264CapabilityFlagBitsKHR;
pub const VkVideoEncodeH264CapabilityFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR: c_int = 16;
pub const VK_VIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHR: c_int = 32;
pub const VK_VIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR: c_int = 64;
pub const VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR: c_int = 128;
pub const VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR: c_int = 256;
pub const VK_VIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR: c_int = 512;
pub const VK_VIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR: c_int = 1024;
pub const VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR: c_int = 2048;
pub const VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR: c_int = 4096;
pub const VK_VIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR: c_int = 8192;
pub const VK_VIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR: c_int = 16384;
pub const VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHR: c_int = 32768;
pub const VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHR: c_int = 65536;
pub const VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHR: c_int = 131072;
pub const VK_VIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHR: c_int = 524288;
pub const VK_VIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR: c_int = 1048576;
pub const VK_VIDEO_ENCODE_H264_STD_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH264StdFlagBitsKHR = c_uint;
pub const VkVideoEncodeH264StdFlagBitsKHR = enum_VkVideoEncodeH264StdFlagBitsKHR;
pub const VkVideoEncodeH264StdFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR: c_int = 16;
pub const VK_VIDEO_ENCODE_H264_RATE_CONTROL_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH264RateControlFlagBitsKHR = c_uint;
pub const VkVideoEncodeH264RateControlFlagBitsKHR = enum_VkVideoEncodeH264RateControlFlagBitsKHR;
pub const VkVideoEncodeH264RateControlFlagsKHR = VkFlags;
pub const struct_VkVideoEncodeH264CapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkVideoEncodeH264CapabilityFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH264CapabilityFlagsKHR),
    maxLevelIdc: StdVideoH264LevelIdc = @import("std").mem.zeroes(StdVideoH264LevelIdc),
    maxSliceCount: u32 = @import("std").mem.zeroes(u32),
    maxPPictureL0ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    maxBPictureL0ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    maxL1ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    maxTemporalLayerCount: u32 = @import("std").mem.zeroes(u32),
    expectDyadicTemporalLayerPattern: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minQp: i32 = @import("std").mem.zeroes(i32),
    maxQp: i32 = @import("std").mem.zeroes(i32),
    prefersGopRemainingFrames: VkBool32 = @import("std").mem.zeroes(VkBool32),
    requiresGopRemainingFrames: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stdSyntaxFlags: VkVideoEncodeH264StdFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH264StdFlagsKHR),
};
pub const VkVideoEncodeH264CapabilitiesKHR = struct_VkVideoEncodeH264CapabilitiesKHR;
pub const struct_VkVideoEncodeH264QpKHR = extern struct {
    qpI: i32 = @import("std").mem.zeroes(i32),
    qpP: i32 = @import("std").mem.zeroes(i32),
    qpB: i32 = @import("std").mem.zeroes(i32),
};
pub const VkVideoEncodeH264QpKHR = struct_VkVideoEncodeH264QpKHR;
pub const struct_VkVideoEncodeH264QualityLevelPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    preferredRateControlFlags: VkVideoEncodeH264RateControlFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH264RateControlFlagsKHR),
    preferredGopFrameCount: u32 = @import("std").mem.zeroes(u32),
    preferredIdrPeriod: u32 = @import("std").mem.zeroes(u32),
    preferredConsecutiveBFrameCount: u32 = @import("std").mem.zeroes(u32),
    preferredTemporalLayerCount: u32 = @import("std").mem.zeroes(u32),
    preferredConstantQp: VkVideoEncodeH264QpKHR = @import("std").mem.zeroes(VkVideoEncodeH264QpKHR),
    preferredMaxL0ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    preferredMaxL1ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    preferredStdEntropyCodingModeFlag: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkVideoEncodeH264QualityLevelPropertiesKHR = struct_VkVideoEncodeH264QualityLevelPropertiesKHR;
pub const struct_VkVideoEncodeH264SessionCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    useMaxLevelIdc: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxLevelIdc: StdVideoH264LevelIdc = @import("std").mem.zeroes(StdVideoH264LevelIdc),
};
pub const VkVideoEncodeH264SessionCreateInfoKHR = struct_VkVideoEncodeH264SessionCreateInfoKHR;
pub const struct_VkVideoEncodeH264SessionParametersAddInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdSPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdSPSs: ?*const StdVideoH264SequenceParameterSet = @import("std").mem.zeroes(?*const StdVideoH264SequenceParameterSet),
    stdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdPPSs: ?*const StdVideoH264PictureParameterSet = @import("std").mem.zeroes(?*const StdVideoH264PictureParameterSet),
};
pub const VkVideoEncodeH264SessionParametersAddInfoKHR = struct_VkVideoEncodeH264SessionParametersAddInfoKHR;
pub const struct_VkVideoEncodeH264SessionParametersCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxStdSPSCount: u32 = @import("std").mem.zeroes(u32),
    maxStdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pParametersAddInfo: [*c]const VkVideoEncodeH264SessionParametersAddInfoKHR = @import("std").mem.zeroes([*c]const VkVideoEncodeH264SessionParametersAddInfoKHR),
};
pub const VkVideoEncodeH264SessionParametersCreateInfoKHR = struct_VkVideoEncodeH264SessionParametersCreateInfoKHR;
pub const struct_VkVideoEncodeH264SessionParametersGetInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    writeStdSPS: VkBool32 = @import("std").mem.zeroes(VkBool32),
    writeStdPPS: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stdSPSId: u32 = @import("std").mem.zeroes(u32),
    stdPPSId: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH264SessionParametersGetInfoKHR = struct_VkVideoEncodeH264SessionParametersGetInfoKHR;
pub const struct_VkVideoEncodeH264SessionParametersFeedbackInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    hasStdSPSOverrides: VkBool32 = @import("std").mem.zeroes(VkBool32),
    hasStdPPSOverrides: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkVideoEncodeH264SessionParametersFeedbackInfoKHR = struct_VkVideoEncodeH264SessionParametersFeedbackInfoKHR;
pub const struct_VkVideoEncodeH264NaluSliceInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    constantQp: i32 = @import("std").mem.zeroes(i32),
    pStdSliceHeader: ?*const StdVideoEncodeH264SliceHeader = @import("std").mem.zeroes(?*const StdVideoEncodeH264SliceHeader),
};
pub const VkVideoEncodeH264NaluSliceInfoKHR = struct_VkVideoEncodeH264NaluSliceInfoKHR;
pub const struct_VkVideoEncodeH264PictureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    naluSliceEntryCount: u32 = @import("std").mem.zeroes(u32),
    pNaluSliceEntries: [*c]const VkVideoEncodeH264NaluSliceInfoKHR = @import("std").mem.zeroes([*c]const VkVideoEncodeH264NaluSliceInfoKHR),
    pStdPictureInfo: ?*const StdVideoEncodeH264PictureInfo = @import("std").mem.zeroes(?*const StdVideoEncodeH264PictureInfo),
    generatePrefixNalu: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkVideoEncodeH264PictureInfoKHR = struct_VkVideoEncodeH264PictureInfoKHR;
pub const struct_VkVideoEncodeH264DpbSlotInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdReferenceInfo: ?*const StdVideoEncodeH264ReferenceInfo = @import("std").mem.zeroes(?*const StdVideoEncodeH264ReferenceInfo),
};
pub const VkVideoEncodeH264DpbSlotInfoKHR = struct_VkVideoEncodeH264DpbSlotInfoKHR;
pub const struct_VkVideoEncodeH264ProfileInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdProfileIdc: StdVideoH264ProfileIdc = @import("std").mem.zeroes(StdVideoH264ProfileIdc),
};
pub const VkVideoEncodeH264ProfileInfoKHR = struct_VkVideoEncodeH264ProfileInfoKHR;
pub const struct_VkVideoEncodeH264RateControlInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoEncodeH264RateControlFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH264RateControlFlagsKHR),
    gopFrameCount: u32 = @import("std").mem.zeroes(u32),
    idrPeriod: u32 = @import("std").mem.zeroes(u32),
    consecutiveBFrameCount: u32 = @import("std").mem.zeroes(u32),
    temporalLayerCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH264RateControlInfoKHR = struct_VkVideoEncodeH264RateControlInfoKHR;
pub const struct_VkVideoEncodeH264FrameSizeKHR = extern struct {
    frameISize: u32 = @import("std").mem.zeroes(u32),
    framePSize: u32 = @import("std").mem.zeroes(u32),
    frameBSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH264FrameSizeKHR = struct_VkVideoEncodeH264FrameSizeKHR;
pub const struct_VkVideoEncodeH264RateControlLayerInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    useMinQp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minQp: VkVideoEncodeH264QpKHR = @import("std").mem.zeroes(VkVideoEncodeH264QpKHR),
    useMaxQp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxQp: VkVideoEncodeH264QpKHR = @import("std").mem.zeroes(VkVideoEncodeH264QpKHR),
    useMaxFrameSize: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxFrameSize: VkVideoEncodeH264FrameSizeKHR = @import("std").mem.zeroes(VkVideoEncodeH264FrameSizeKHR),
};
pub const VkVideoEncodeH264RateControlLayerInfoKHR = struct_VkVideoEncodeH264RateControlLayerInfoKHR;
pub const struct_VkVideoEncodeH264GopRemainingFrameInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    useGopRemainingFrames: VkBool32 = @import("std").mem.zeroes(VkBool32),
    gopRemainingI: u32 = @import("std").mem.zeroes(u32),
    gopRemainingP: u32 = @import("std").mem.zeroes(u32),
    gopRemainingB: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH264GopRemainingFrameInfoKHR = struct_VkVideoEncodeH264GopRemainingFrameInfoKHR;
pub const STD_VIDEO_H265_CHROMA_FORMAT_IDC_MONOCHROME: c_int = 0;
pub const STD_VIDEO_H265_CHROMA_FORMAT_IDC_420: c_int = 1;
pub const STD_VIDEO_H265_CHROMA_FORMAT_IDC_422: c_int = 2;
pub const STD_VIDEO_H265_CHROMA_FORMAT_IDC_444: c_int = 3;
pub const STD_VIDEO_H265_CHROMA_FORMAT_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H265_CHROMA_FORMAT_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH265ChromaFormatIdc = c_uint;
pub const StdVideoH265ChromaFormatIdc = enum_StdVideoH265ChromaFormatIdc;
pub const STD_VIDEO_H265_PROFILE_IDC_MAIN: c_int = 1;
pub const STD_VIDEO_H265_PROFILE_IDC_MAIN_10: c_int = 2;
pub const STD_VIDEO_H265_PROFILE_IDC_MAIN_STILL_PICTURE: c_int = 3;
pub const STD_VIDEO_H265_PROFILE_IDC_FORMAT_RANGE_EXTENSIONS: c_int = 4;
pub const STD_VIDEO_H265_PROFILE_IDC_SCC_EXTENSIONS: c_int = 9;
pub const STD_VIDEO_H265_PROFILE_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H265_PROFILE_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH265ProfileIdc = c_uint;
pub const StdVideoH265ProfileIdc = enum_StdVideoH265ProfileIdc;
pub const STD_VIDEO_H265_LEVEL_IDC_1_0: c_int = 0;
pub const STD_VIDEO_H265_LEVEL_IDC_2_0: c_int = 1;
pub const STD_VIDEO_H265_LEVEL_IDC_2_1: c_int = 2;
pub const STD_VIDEO_H265_LEVEL_IDC_3_0: c_int = 3;
pub const STD_VIDEO_H265_LEVEL_IDC_3_1: c_int = 4;
pub const STD_VIDEO_H265_LEVEL_IDC_4_0: c_int = 5;
pub const STD_VIDEO_H265_LEVEL_IDC_4_1: c_int = 6;
pub const STD_VIDEO_H265_LEVEL_IDC_5_0: c_int = 7;
pub const STD_VIDEO_H265_LEVEL_IDC_5_1: c_int = 8;
pub const STD_VIDEO_H265_LEVEL_IDC_5_2: c_int = 9;
pub const STD_VIDEO_H265_LEVEL_IDC_6_0: c_int = 10;
pub const STD_VIDEO_H265_LEVEL_IDC_6_1: c_int = 11;
pub const STD_VIDEO_H265_LEVEL_IDC_6_2: c_int = 12;
pub const STD_VIDEO_H265_LEVEL_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H265_LEVEL_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH265LevelIdc = c_uint;
pub const StdVideoH265LevelIdc = enum_StdVideoH265LevelIdc;
pub const STD_VIDEO_H265_SLICE_TYPE_B: c_int = 0;
pub const STD_VIDEO_H265_SLICE_TYPE_P: c_int = 1;
pub const STD_VIDEO_H265_SLICE_TYPE_I: c_int = 2;
pub const STD_VIDEO_H265_SLICE_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H265_SLICE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH265SliceType = c_uint;
pub const StdVideoH265SliceType = enum_StdVideoH265SliceType;
pub const STD_VIDEO_H265_PICTURE_TYPE_P: c_int = 0;
pub const STD_VIDEO_H265_PICTURE_TYPE_B: c_int = 1;
pub const STD_VIDEO_H265_PICTURE_TYPE_I: c_int = 2;
pub const STD_VIDEO_H265_PICTURE_TYPE_IDR: c_int = 3;
pub const STD_VIDEO_H265_PICTURE_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H265_PICTURE_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH265PictureType = c_uint;
pub const StdVideoH265PictureType = enum_StdVideoH265PictureType;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_UNSPECIFIED: c_int = 0;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_SQUARE: c_int = 1;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_12_11: c_int = 2;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_10_11: c_int = 3;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_16_11: c_int = 4;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_40_33: c_int = 5;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_24_11: c_int = 6;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_20_11: c_int = 7;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_32_11: c_int = 8;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_80_33: c_int = 9;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_18_11: c_int = 10;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_15_11: c_int = 11;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_64_33: c_int = 12;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_160_99: c_int = 13;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_4_3: c_int = 14;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_3_2: c_int = 15;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_2_1: c_int = 16;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_EXTENDED_SAR: c_int = 255;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_INVALID: c_int = 2147483647;
pub const STD_VIDEO_H265_ASPECT_RATIO_IDC_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoH265AspectRatioIdc = c_uint;
pub const StdVideoH265AspectRatioIdc = enum_StdVideoH265AspectRatioIdc;
pub const struct_StdVideoH265DecPicBufMgr = extern struct {
    max_latency_increase_plus1: [7]u32 = @import("std").mem.zeroes([7]u32),
    max_dec_pic_buffering_minus1: [7]u8 = @import("std").mem.zeroes([7]u8),
    max_num_reorder_pics: [7]u8 = @import("std").mem.zeroes([7]u8),
};
pub const StdVideoH265DecPicBufMgr = struct_StdVideoH265DecPicBufMgr;
pub const struct_StdVideoH265SubLayerHrdParameters = extern struct {
    bit_rate_value_minus1: [32]u32 = @import("std").mem.zeroes([32]u32),
    cpb_size_value_minus1: [32]u32 = @import("std").mem.zeroes([32]u32),
    cpb_size_du_value_minus1: [32]u32 = @import("std").mem.zeroes([32]u32),
    bit_rate_du_value_minus1: [32]u32 = @import("std").mem.zeroes([32]u32),
    cbr_flag: u32 = @import("std").mem.zeroes(u32),
};
pub const StdVideoH265SubLayerHrdParameters = struct_StdVideoH265SubLayerHrdParameters;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:140:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265HrdFlags = opaque {};
pub const StdVideoH265HrdFlags = struct_StdVideoH265HrdFlags;
pub const struct_StdVideoH265HrdParameters = extern struct {
    flags: StdVideoH265HrdFlags = @import("std").mem.zeroes(StdVideoH265HrdFlags),
    tick_divisor_minus2: u8 = @import("std").mem.zeroes(u8),
    du_cpb_removal_delay_increment_length_minus1: u8 = @import("std").mem.zeroes(u8),
    dpb_output_delay_du_length_minus1: u8 = @import("std").mem.zeroes(u8),
    bit_rate_scale: u8 = @import("std").mem.zeroes(u8),
    cpb_size_scale: u8 = @import("std").mem.zeroes(u8),
    cpb_size_du_scale: u8 = @import("std").mem.zeroes(u8),
    initial_cpb_removal_delay_length_minus1: u8 = @import("std").mem.zeroes(u8),
    au_cpb_removal_delay_length_minus1: u8 = @import("std").mem.zeroes(u8),
    dpb_output_delay_length_minus1: u8 = @import("std").mem.zeroes(u8),
    cpb_cnt_minus1: [7]u8 = @import("std").mem.zeroes([7]u8),
    elemental_duration_in_tc_minus1: [7]u16 = @import("std").mem.zeroes([7]u16),
    reserved: [3]u16 = @import("std").mem.zeroes([3]u16),
    pSubLayerHrdParametersNal: [*c]const StdVideoH265SubLayerHrdParameters = @import("std").mem.zeroes([*c]const StdVideoH265SubLayerHrdParameters),
    pSubLayerHrdParametersVcl: [*c]const StdVideoH265SubLayerHrdParameters = @import("std").mem.zeroes([*c]const StdVideoH265SubLayerHrdParameters),
};
pub const StdVideoH265HrdParameters = struct_StdVideoH265HrdParameters;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:168:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265VpsFlags = opaque {};
pub const StdVideoH265VpsFlags = struct_StdVideoH265VpsFlags;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:175:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265ProfileTierLevelFlags = opaque {};
pub const StdVideoH265ProfileTierLevelFlags = struct_StdVideoH265ProfileTierLevelFlags;
pub const struct_StdVideoH265ProfileTierLevel = extern struct {
    flags: StdVideoH265ProfileTierLevelFlags = @import("std").mem.zeroes(StdVideoH265ProfileTierLevelFlags),
    general_profile_idc: StdVideoH265ProfileIdc = @import("std").mem.zeroes(StdVideoH265ProfileIdc),
    general_level_idc: StdVideoH265LevelIdc = @import("std").mem.zeroes(StdVideoH265LevelIdc),
};
pub const StdVideoH265ProfileTierLevel = struct_StdVideoH265ProfileTierLevel;
pub const struct_StdVideoH265VideoParameterSet = extern struct {
    flags: StdVideoH265VpsFlags = @import("std").mem.zeroes(StdVideoH265VpsFlags),
    vps_video_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    vps_max_sub_layers_minus1: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    reserved2: u8 = @import("std").mem.zeroes(u8),
    vps_num_units_in_tick: u32 = @import("std").mem.zeroes(u32),
    vps_time_scale: u32 = @import("std").mem.zeroes(u32),
    vps_num_ticks_poc_diff_one_minus1: u32 = @import("std").mem.zeroes(u32),
    reserved3: u32 = @import("std").mem.zeroes(u32),
    pDecPicBufMgr: [*c]const StdVideoH265DecPicBufMgr = @import("std").mem.zeroes([*c]const StdVideoH265DecPicBufMgr),
    pHrdParameters: ?*const StdVideoH265HrdParameters = @import("std").mem.zeroes(?*const StdVideoH265HrdParameters),
    pProfileTierLevel: ?*const StdVideoH265ProfileTierLevel = @import("std").mem.zeroes(?*const StdVideoH265ProfileTierLevel),
};
pub const StdVideoH265VideoParameterSet = struct_StdVideoH265VideoParameterSet;
pub const struct_StdVideoH265ScalingLists = extern struct {
    ScalingList4x4: [6][16]u8 = @import("std").mem.zeroes([6][16]u8),
    ScalingList8x8: [6][64]u8 = @import("std").mem.zeroes([6][64]u8),
    ScalingList16x16: [6][64]u8 = @import("std").mem.zeroes([6][64]u8),
    ScalingList32x32: [2][64]u8 = @import("std").mem.zeroes([2][64]u8),
    ScalingListDCCoef16x16: [6]u8 = @import("std").mem.zeroes([6]u8),
    ScalingListDCCoef32x32: [2]u8 = @import("std").mem.zeroes([2]u8),
};
pub const StdVideoH265ScalingLists = struct_StdVideoH265ScalingLists;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:213:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265SpsVuiFlags = opaque {};
pub const StdVideoH265SpsVuiFlags = struct_StdVideoH265SpsVuiFlags;
pub const struct_StdVideoH265SequenceParameterSetVui = extern struct {
    flags: StdVideoH265SpsVuiFlags = @import("std").mem.zeroes(StdVideoH265SpsVuiFlags),
    aspect_ratio_idc: StdVideoH265AspectRatioIdc = @import("std").mem.zeroes(StdVideoH265AspectRatioIdc),
    sar_width: u16 = @import("std").mem.zeroes(u16),
    sar_height: u16 = @import("std").mem.zeroes(u16),
    video_format: u8 = @import("std").mem.zeroes(u8),
    colour_primaries: u8 = @import("std").mem.zeroes(u8),
    transfer_characteristics: u8 = @import("std").mem.zeroes(u8),
    matrix_coeffs: u8 = @import("std").mem.zeroes(u8),
    chroma_sample_loc_type_top_field: u8 = @import("std").mem.zeroes(u8),
    chroma_sample_loc_type_bottom_field: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    reserved2: u8 = @import("std").mem.zeroes(u8),
    def_disp_win_left_offset: u16 = @import("std").mem.zeroes(u16),
    def_disp_win_right_offset: u16 = @import("std").mem.zeroes(u16),
    def_disp_win_top_offset: u16 = @import("std").mem.zeroes(u16),
    def_disp_win_bottom_offset: u16 = @import("std").mem.zeroes(u16),
    vui_num_units_in_tick: u32 = @import("std").mem.zeroes(u32),
    vui_time_scale: u32 = @import("std").mem.zeroes(u32),
    vui_num_ticks_poc_diff_one_minus1: u32 = @import("std").mem.zeroes(u32),
    min_spatial_segmentation_idc: u16 = @import("std").mem.zeroes(u16),
    reserved3: u16 = @import("std").mem.zeroes(u16),
    max_bytes_per_pic_denom: u8 = @import("std").mem.zeroes(u8),
    max_bits_per_min_cu_denom: u8 = @import("std").mem.zeroes(u8),
    log2_max_mv_length_horizontal: u8 = @import("std").mem.zeroes(u8),
    log2_max_mv_length_vertical: u8 = @import("std").mem.zeroes(u8),
    pHrdParameters: ?*const StdVideoH265HrdParameters = @import("std").mem.zeroes(?*const StdVideoH265HrdParameters),
};
pub const StdVideoH265SequenceParameterSetVui = struct_StdVideoH265SequenceParameterSetVui;
pub const struct_StdVideoH265PredictorPaletteEntries = extern struct {
    PredictorPaletteEntries: [3][128]u16 = @import("std").mem.zeroes([3][128]u16),
};
pub const StdVideoH265PredictorPaletteEntries = struct_StdVideoH265PredictorPaletteEntries;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:267:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265SpsFlags = opaque {};
pub const StdVideoH265SpsFlags = struct_StdVideoH265SpsFlags;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:300:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265ShortTermRefPicSetFlags = opaque {};
pub const StdVideoH265ShortTermRefPicSetFlags = struct_StdVideoH265ShortTermRefPicSetFlags;
pub const struct_StdVideoH265ShortTermRefPicSet = extern struct {
    flags: StdVideoH265ShortTermRefPicSetFlags = @import("std").mem.zeroes(StdVideoH265ShortTermRefPicSetFlags),
    delta_idx_minus1: u32 = @import("std").mem.zeroes(u32),
    use_delta_flag: u16 = @import("std").mem.zeroes(u16),
    abs_delta_rps_minus1: u16 = @import("std").mem.zeroes(u16),
    used_by_curr_pic_flag: u16 = @import("std").mem.zeroes(u16),
    used_by_curr_pic_s0_flag: u16 = @import("std").mem.zeroes(u16),
    used_by_curr_pic_s1_flag: u16 = @import("std").mem.zeroes(u16),
    reserved1: u16 = @import("std").mem.zeroes(u16),
    reserved2: u8 = @import("std").mem.zeroes(u8),
    reserved3: u8 = @import("std").mem.zeroes(u8),
    num_negative_pics: u8 = @import("std").mem.zeroes(u8),
    num_positive_pics: u8 = @import("std").mem.zeroes(u8),
    delta_poc_s0_minus1: [16]u16 = @import("std").mem.zeroes([16]u16),
    delta_poc_s1_minus1: [16]u16 = @import("std").mem.zeroes([16]u16),
};
pub const StdVideoH265ShortTermRefPicSet = struct_StdVideoH265ShortTermRefPicSet;
pub const struct_StdVideoH265LongTermRefPicsSps = extern struct {
    used_by_curr_pic_lt_sps_flag: u32 = @import("std").mem.zeroes(u32),
    lt_ref_pic_poc_lsb_sps: [32]u32 = @import("std").mem.zeroes([32]u32),
};
pub const StdVideoH265LongTermRefPicsSps = struct_StdVideoH265LongTermRefPicsSps;
pub const struct_StdVideoH265SequenceParameterSet = extern struct {
    flags: StdVideoH265SpsFlags = @import("std").mem.zeroes(StdVideoH265SpsFlags),
    chroma_format_idc: StdVideoH265ChromaFormatIdc = @import("std").mem.zeroes(StdVideoH265ChromaFormatIdc),
    pic_width_in_luma_samples: u32 = @import("std").mem.zeroes(u32),
    pic_height_in_luma_samples: u32 = @import("std").mem.zeroes(u32),
    sps_video_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    sps_max_sub_layers_minus1: u8 = @import("std").mem.zeroes(u8),
    sps_seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    bit_depth_luma_minus8: u8 = @import("std").mem.zeroes(u8),
    bit_depth_chroma_minus8: u8 = @import("std").mem.zeroes(u8),
    log2_max_pic_order_cnt_lsb_minus4: u8 = @import("std").mem.zeroes(u8),
    log2_min_luma_coding_block_size_minus3: u8 = @import("std").mem.zeroes(u8),
    log2_diff_max_min_luma_coding_block_size: u8 = @import("std").mem.zeroes(u8),
    log2_min_luma_transform_block_size_minus2: u8 = @import("std").mem.zeroes(u8),
    log2_diff_max_min_luma_transform_block_size: u8 = @import("std").mem.zeroes(u8),
    max_transform_hierarchy_depth_inter: u8 = @import("std").mem.zeroes(u8),
    max_transform_hierarchy_depth_intra: u8 = @import("std").mem.zeroes(u8),
    num_short_term_ref_pic_sets: u8 = @import("std").mem.zeroes(u8),
    num_long_term_ref_pics_sps: u8 = @import("std").mem.zeroes(u8),
    pcm_sample_bit_depth_luma_minus1: u8 = @import("std").mem.zeroes(u8),
    pcm_sample_bit_depth_chroma_minus1: u8 = @import("std").mem.zeroes(u8),
    log2_min_pcm_luma_coding_block_size_minus3: u8 = @import("std").mem.zeroes(u8),
    log2_diff_max_min_pcm_luma_coding_block_size: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    reserved2: u8 = @import("std").mem.zeroes(u8),
    palette_max_size: u8 = @import("std").mem.zeroes(u8),
    delta_palette_max_predictor_size: u8 = @import("std").mem.zeroes(u8),
    motion_vector_resolution_control_idc: u8 = @import("std").mem.zeroes(u8),
    sps_num_palette_predictor_initializers_minus1: u8 = @import("std").mem.zeroes(u8),
    conf_win_left_offset: u32 = @import("std").mem.zeroes(u32),
    conf_win_right_offset: u32 = @import("std").mem.zeroes(u32),
    conf_win_top_offset: u32 = @import("std").mem.zeroes(u32),
    conf_win_bottom_offset: u32 = @import("std").mem.zeroes(u32),
    pProfileTierLevel: ?*const StdVideoH265ProfileTierLevel = @import("std").mem.zeroes(?*const StdVideoH265ProfileTierLevel),
    pDecPicBufMgr: [*c]const StdVideoH265DecPicBufMgr = @import("std").mem.zeroes([*c]const StdVideoH265DecPicBufMgr),
    pScalingLists: [*c]const StdVideoH265ScalingLists = @import("std").mem.zeroes([*c]const StdVideoH265ScalingLists),
    pShortTermRefPicSet: ?*const StdVideoH265ShortTermRefPicSet = @import("std").mem.zeroes(?*const StdVideoH265ShortTermRefPicSet),
    pLongTermRefPicsSps: [*c]const StdVideoH265LongTermRefPicsSps = @import("std").mem.zeroes([*c]const StdVideoH265LongTermRefPicsSps),
    pSequenceParameterSetVui: ?*const StdVideoH265SequenceParameterSetVui = @import("std").mem.zeroes(?*const StdVideoH265SequenceParameterSetVui),
    pPredictorPaletteEntries: [*c]const StdVideoH265PredictorPaletteEntries = @import("std").mem.zeroes([*c]const StdVideoH265PredictorPaletteEntries),
};
pub const StdVideoH265SequenceParameterSet = struct_StdVideoH265SequenceParameterSet;
// /usr/local/include/vk_video/vulkan_video_codec_h265std.h:369:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoH265PpsFlags = opaque {};
pub const StdVideoH265PpsFlags = struct_StdVideoH265PpsFlags;
pub const struct_StdVideoH265PictureParameterSet = extern struct {
    flags: StdVideoH265PpsFlags = @import("std").mem.zeroes(StdVideoH265PpsFlags),
    pps_pic_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pps_seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    sps_video_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    num_extra_slice_header_bits: u8 = @import("std").mem.zeroes(u8),
    num_ref_idx_l0_default_active_minus1: u8 = @import("std").mem.zeroes(u8),
    num_ref_idx_l1_default_active_minus1: u8 = @import("std").mem.zeroes(u8),
    init_qp_minus26: i8 = @import("std").mem.zeroes(i8),
    diff_cu_qp_delta_depth: u8 = @import("std").mem.zeroes(u8),
    pps_cb_qp_offset: i8 = @import("std").mem.zeroes(i8),
    pps_cr_qp_offset: i8 = @import("std").mem.zeroes(i8),
    pps_beta_offset_div2: i8 = @import("std").mem.zeroes(i8),
    pps_tc_offset_div2: i8 = @import("std").mem.zeroes(i8),
    log2_parallel_merge_level_minus2: u8 = @import("std").mem.zeroes(u8),
    log2_max_transform_skip_block_size_minus2: u8 = @import("std").mem.zeroes(u8),
    diff_cu_chroma_qp_offset_depth: u8 = @import("std").mem.zeroes(u8),
    chroma_qp_offset_list_len_minus1: u8 = @import("std").mem.zeroes(u8),
    cb_qp_offset_list: [6]i8 = @import("std").mem.zeroes([6]i8),
    cr_qp_offset_list: [6]i8 = @import("std").mem.zeroes([6]i8),
    log2_sao_offset_scale_luma: u8 = @import("std").mem.zeroes(u8),
    log2_sao_offset_scale_chroma: u8 = @import("std").mem.zeroes(u8),
    pps_act_y_qp_offset_plus5: i8 = @import("std").mem.zeroes(i8),
    pps_act_cb_qp_offset_plus5: i8 = @import("std").mem.zeroes(i8),
    pps_act_cr_qp_offset_plus3: i8 = @import("std").mem.zeroes(i8),
    pps_num_palette_predictor_initializers: u8 = @import("std").mem.zeroes(u8),
    luma_bit_depth_entry_minus8: u8 = @import("std").mem.zeroes(u8),
    chroma_bit_depth_entry_minus8: u8 = @import("std").mem.zeroes(u8),
    num_tile_columns_minus1: u8 = @import("std").mem.zeroes(u8),
    num_tile_rows_minus1: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    reserved2: u8 = @import("std").mem.zeroes(u8),
    column_width_minus1: [19]u16 = @import("std").mem.zeroes([19]u16),
    row_height_minus1: [21]u16 = @import("std").mem.zeroes([21]u16),
    reserved3: u32 = @import("std").mem.zeroes(u32),
    pScalingLists: [*c]const StdVideoH265ScalingLists = @import("std").mem.zeroes([*c]const StdVideoH265ScalingLists),
    pPredictorPaletteEntries: [*c]const StdVideoH265PredictorPaletteEntries = @import("std").mem.zeroes([*c]const StdVideoH265PredictorPaletteEntries),
};
pub const StdVideoH265PictureParameterSet = struct_StdVideoH265PictureParameterSet;
pub const struct_StdVideoEncodeH265WeightTableFlags = extern struct {
    luma_weight_l0_flag: u16 = @import("std").mem.zeroes(u16),
    chroma_weight_l0_flag: u16 = @import("std").mem.zeroes(u16),
    luma_weight_l1_flag: u16 = @import("std").mem.zeroes(u16),
    chroma_weight_l1_flag: u16 = @import("std").mem.zeroes(u16),
};
pub const StdVideoEncodeH265WeightTableFlags = struct_StdVideoEncodeH265WeightTableFlags;
pub const struct_StdVideoEncodeH265WeightTable = extern struct {
    flags: StdVideoEncodeH265WeightTableFlags = @import("std").mem.zeroes(StdVideoEncodeH265WeightTableFlags),
    luma_log2_weight_denom: u8 = @import("std").mem.zeroes(u8),
    delta_chroma_log2_weight_denom: i8 = @import("std").mem.zeroes(i8),
    delta_luma_weight_l0: [15]i8 = @import("std").mem.zeroes([15]i8),
    luma_offset_l0: [15]i8 = @import("std").mem.zeroes([15]i8),
    delta_chroma_weight_l0: [15][2]i8 = @import("std").mem.zeroes([15][2]i8),
    delta_chroma_offset_l0: [15][2]i8 = @import("std").mem.zeroes([15][2]i8),
    delta_luma_weight_l1: [15]i8 = @import("std").mem.zeroes([15]i8),
    luma_offset_l1: [15]i8 = @import("std").mem.zeroes([15]i8),
    delta_chroma_weight_l1: [15][2]i8 = @import("std").mem.zeroes([15][2]i8),
    delta_chroma_offset_l1: [15][2]i8 = @import("std").mem.zeroes([15][2]i8),
};
pub const StdVideoEncodeH265WeightTable = struct_StdVideoEncodeH265WeightTable;
// /usr/local/include/vk_video/vulkan_video_codec_h265std_encode.h:52:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH265SliceSegmentHeaderFlags = opaque {};
pub const StdVideoEncodeH265SliceSegmentHeaderFlags = struct_StdVideoEncodeH265SliceSegmentHeaderFlags;
pub const struct_StdVideoEncodeH265SliceSegmentHeader = extern struct {
    flags: StdVideoEncodeH265SliceSegmentHeaderFlags = @import("std").mem.zeroes(StdVideoEncodeH265SliceSegmentHeaderFlags),
    slice_type: StdVideoH265SliceType = @import("std").mem.zeroes(StdVideoH265SliceType),
    slice_segment_address: u32 = @import("std").mem.zeroes(u32),
    collocated_ref_idx: u8 = @import("std").mem.zeroes(u8),
    MaxNumMergeCand: u8 = @import("std").mem.zeroes(u8),
    slice_cb_qp_offset: i8 = @import("std").mem.zeroes(i8),
    slice_cr_qp_offset: i8 = @import("std").mem.zeroes(i8),
    slice_beta_offset_div2: i8 = @import("std").mem.zeroes(i8),
    slice_tc_offset_div2: i8 = @import("std").mem.zeroes(i8),
    slice_act_y_qp_offset: i8 = @import("std").mem.zeroes(i8),
    slice_act_cb_qp_offset: i8 = @import("std").mem.zeroes(i8),
    slice_act_cr_qp_offset: i8 = @import("std").mem.zeroes(i8),
    slice_qp_delta: i8 = @import("std").mem.zeroes(i8),
    reserved1: u16 = @import("std").mem.zeroes(u16),
    pWeightTable: [*c]const StdVideoEncodeH265WeightTable = @import("std").mem.zeroes([*c]const StdVideoEncodeH265WeightTable),
};
pub const StdVideoEncodeH265SliceSegmentHeader = struct_StdVideoEncodeH265SliceSegmentHeader;
// /usr/local/include/vk_video/vulkan_video_codec_h265std_encode.h:86:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH265ReferenceListsInfoFlags = opaque {};
pub const StdVideoEncodeH265ReferenceListsInfoFlags = struct_StdVideoEncodeH265ReferenceListsInfoFlags;
pub const struct_StdVideoEncodeH265ReferenceListsInfo = extern struct {
    flags: StdVideoEncodeH265ReferenceListsInfoFlags = @import("std").mem.zeroes(StdVideoEncodeH265ReferenceListsInfoFlags),
    num_ref_idx_l0_active_minus1: u8 = @import("std").mem.zeroes(u8),
    num_ref_idx_l1_active_minus1: u8 = @import("std").mem.zeroes(u8),
    RefPicList0: [15]u8 = @import("std").mem.zeroes([15]u8),
    RefPicList1: [15]u8 = @import("std").mem.zeroes([15]u8),
    list_entry_l0: [15]u8 = @import("std").mem.zeroes([15]u8),
    list_entry_l1: [15]u8 = @import("std").mem.zeroes([15]u8),
};
pub const StdVideoEncodeH265ReferenceListsInfo = struct_StdVideoEncodeH265ReferenceListsInfo;
// /usr/local/include/vk_video/vulkan_video_codec_h265std_encode.h:102:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH265PictureInfoFlags = opaque {};
pub const StdVideoEncodeH265PictureInfoFlags = struct_StdVideoEncodeH265PictureInfoFlags;
pub const struct_StdVideoEncodeH265LongTermRefPics = extern struct {
    num_long_term_sps: u8 = @import("std").mem.zeroes(u8),
    num_long_term_pics: u8 = @import("std").mem.zeroes(u8),
    lt_idx_sps: [32]u8 = @import("std").mem.zeroes([32]u8),
    poc_lsb_lt: [16]u8 = @import("std").mem.zeroes([16]u8),
    used_by_curr_pic_lt_flag: u16 = @import("std").mem.zeroes(u16),
    delta_poc_msb_present_flag: [48]u8 = @import("std").mem.zeroes([48]u8),
    delta_poc_msb_cycle_lt: [48]u8 = @import("std").mem.zeroes([48]u8),
};
pub const StdVideoEncodeH265LongTermRefPics = struct_StdVideoEncodeH265LongTermRefPics;
pub const struct_StdVideoEncodeH265PictureInfo = extern struct {
    flags: StdVideoEncodeH265PictureInfoFlags = @import("std").mem.zeroes(StdVideoEncodeH265PictureInfoFlags),
    pic_type: StdVideoH265PictureType = @import("std").mem.zeroes(StdVideoH265PictureType),
    sps_video_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pps_seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pps_pic_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    short_term_ref_pic_set_idx: u8 = @import("std").mem.zeroes(u8),
    PicOrderCntVal: i32 = @import("std").mem.zeroes(i32),
    TemporalId: u8 = @import("std").mem.zeroes(u8),
    reserved1: [7]u8 = @import("std").mem.zeroes([7]u8),
    pRefLists: ?*const StdVideoEncodeH265ReferenceListsInfo = @import("std").mem.zeroes(?*const StdVideoEncodeH265ReferenceListsInfo),
    pShortTermRefPicSet: ?*const StdVideoH265ShortTermRefPicSet = @import("std").mem.zeroes(?*const StdVideoH265ShortTermRefPicSet),
    pLongTermRefPics: [*c]const StdVideoEncodeH265LongTermRefPics = @import("std").mem.zeroes([*c]const StdVideoEncodeH265LongTermRefPics),
};
pub const StdVideoEncodeH265PictureInfo = struct_StdVideoEncodeH265PictureInfo;
// /usr/local/include/vk_video/vulkan_video_codec_h265std_encode.h:140:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoEncodeH265ReferenceInfoFlags = opaque {};
pub const StdVideoEncodeH265ReferenceInfoFlags = struct_StdVideoEncodeH265ReferenceInfoFlags;
pub const struct_StdVideoEncodeH265ReferenceInfo = extern struct {
    flags: StdVideoEncodeH265ReferenceInfoFlags = @import("std").mem.zeroes(StdVideoEncodeH265ReferenceInfoFlags),
    pic_type: StdVideoH265PictureType = @import("std").mem.zeroes(StdVideoH265PictureType),
    PicOrderCntVal: i32 = @import("std").mem.zeroes(i32),
    TemporalId: u8 = @import("std").mem.zeroes(u8),
};
pub const StdVideoEncodeH265ReferenceInfo = struct_StdVideoEncodeH265ReferenceInfo;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR: c_int = 16;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR: c_int = 32;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR: c_int = 64;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR: c_int = 128;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR: c_int = 256;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR: c_int = 512;
pub const VK_VIDEO_ENCODE_H265_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH265CapabilityFlagBitsKHR = c_uint;
pub const VkVideoEncodeH265CapabilityFlagBitsKHR = enum_VkVideoEncodeH265CapabilityFlagBitsKHR;
pub const VkVideoEncodeH265CapabilityFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR: c_int = 16;
pub const VK_VIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHR: c_int = 32;
pub const VK_VIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR: c_int = 64;
pub const VK_VIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR: c_int = 128;
pub const VK_VIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR: c_int = 256;
pub const VK_VIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR: c_int = 512;
pub const VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR: c_int = 1024;
pub const VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR: c_int = 2048;
pub const VK_VIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR: c_int = 4096;
pub const VK_VIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR: c_int = 8192;
pub const VK_VIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR: c_int = 16384;
pub const VK_VIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR: c_int = 32768;
pub const VK_VIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR: c_int = 65536;
pub const VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR: c_int = 131072;
pub const VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR: c_int = 262144;
pub const VK_VIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHR: c_int = 524288;
pub const VK_VIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR: c_int = 1048576;
pub const VK_VIDEO_ENCODE_H265_STD_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH265StdFlagBitsKHR = c_uint;
pub const VkVideoEncodeH265StdFlagBitsKHR = enum_VkVideoEncodeH265StdFlagBitsKHR;
pub const VkVideoEncodeH265StdFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H265_CTB_SIZE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH265CtbSizeFlagBitsKHR = c_uint;
pub const VkVideoEncodeH265CtbSizeFlagBitsKHR = enum_VkVideoEncodeH265CtbSizeFlagBitsKHR;
pub const VkVideoEncodeH265CtbSizeFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH265TransformBlockSizeFlagBitsKHR = c_uint;
pub const VkVideoEncodeH265TransformBlockSizeFlagBitsKHR = enum_VkVideoEncodeH265TransformBlockSizeFlagBitsKHR;
pub const VkVideoEncodeH265TransformBlockSizeFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR: c_int = 16;
pub const VK_VIDEO_ENCODE_H265_RATE_CONTROL_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeH265RateControlFlagBitsKHR = c_uint;
pub const VkVideoEncodeH265RateControlFlagBitsKHR = enum_VkVideoEncodeH265RateControlFlagBitsKHR;
pub const VkVideoEncodeH265RateControlFlagsKHR = VkFlags;
pub const struct_VkVideoEncodeH265CapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkVideoEncodeH265CapabilityFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH265CapabilityFlagsKHR),
    maxLevelIdc: StdVideoH265LevelIdc = @import("std").mem.zeroes(StdVideoH265LevelIdc),
    maxSliceSegmentCount: u32 = @import("std").mem.zeroes(u32),
    maxTiles: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    ctbSizes: VkVideoEncodeH265CtbSizeFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH265CtbSizeFlagsKHR),
    transformBlockSizes: VkVideoEncodeH265TransformBlockSizeFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH265TransformBlockSizeFlagsKHR),
    maxPPictureL0ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    maxBPictureL0ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    maxL1ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    maxSubLayerCount: u32 = @import("std").mem.zeroes(u32),
    expectDyadicTemporalSubLayerPattern: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minQp: i32 = @import("std").mem.zeroes(i32),
    maxQp: i32 = @import("std").mem.zeroes(i32),
    prefersGopRemainingFrames: VkBool32 = @import("std").mem.zeroes(VkBool32),
    requiresGopRemainingFrames: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stdSyntaxFlags: VkVideoEncodeH265StdFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH265StdFlagsKHR),
};
pub const VkVideoEncodeH265CapabilitiesKHR = struct_VkVideoEncodeH265CapabilitiesKHR;
pub const struct_VkVideoEncodeH265SessionCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    useMaxLevelIdc: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxLevelIdc: StdVideoH265LevelIdc = @import("std").mem.zeroes(StdVideoH265LevelIdc),
};
pub const VkVideoEncodeH265SessionCreateInfoKHR = struct_VkVideoEncodeH265SessionCreateInfoKHR;
pub const struct_VkVideoEncodeH265QpKHR = extern struct {
    qpI: i32 = @import("std").mem.zeroes(i32),
    qpP: i32 = @import("std").mem.zeroes(i32),
    qpB: i32 = @import("std").mem.zeroes(i32),
};
pub const VkVideoEncodeH265QpKHR = struct_VkVideoEncodeH265QpKHR;
pub const struct_VkVideoEncodeH265QualityLevelPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    preferredRateControlFlags: VkVideoEncodeH265RateControlFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH265RateControlFlagsKHR),
    preferredGopFrameCount: u32 = @import("std").mem.zeroes(u32),
    preferredIdrPeriod: u32 = @import("std").mem.zeroes(u32),
    preferredConsecutiveBFrameCount: u32 = @import("std").mem.zeroes(u32),
    preferredSubLayerCount: u32 = @import("std").mem.zeroes(u32),
    preferredConstantQp: VkVideoEncodeH265QpKHR = @import("std").mem.zeroes(VkVideoEncodeH265QpKHR),
    preferredMaxL0ReferenceCount: u32 = @import("std").mem.zeroes(u32),
    preferredMaxL1ReferenceCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH265QualityLevelPropertiesKHR = struct_VkVideoEncodeH265QualityLevelPropertiesKHR;
pub const struct_VkVideoEncodeH265SessionParametersAddInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdVPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdVPSs: ?*const StdVideoH265VideoParameterSet = @import("std").mem.zeroes(?*const StdVideoH265VideoParameterSet),
    stdSPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdSPSs: ?*const StdVideoH265SequenceParameterSet = @import("std").mem.zeroes(?*const StdVideoH265SequenceParameterSet),
    stdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdPPSs: ?*const StdVideoH265PictureParameterSet = @import("std").mem.zeroes(?*const StdVideoH265PictureParameterSet),
};
pub const VkVideoEncodeH265SessionParametersAddInfoKHR = struct_VkVideoEncodeH265SessionParametersAddInfoKHR;
pub const struct_VkVideoEncodeH265SessionParametersCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxStdVPSCount: u32 = @import("std").mem.zeroes(u32),
    maxStdSPSCount: u32 = @import("std").mem.zeroes(u32),
    maxStdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pParametersAddInfo: [*c]const VkVideoEncodeH265SessionParametersAddInfoKHR = @import("std").mem.zeroes([*c]const VkVideoEncodeH265SessionParametersAddInfoKHR),
};
pub const VkVideoEncodeH265SessionParametersCreateInfoKHR = struct_VkVideoEncodeH265SessionParametersCreateInfoKHR;
pub const struct_VkVideoEncodeH265SessionParametersGetInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    writeStdVPS: VkBool32 = @import("std").mem.zeroes(VkBool32),
    writeStdSPS: VkBool32 = @import("std").mem.zeroes(VkBool32),
    writeStdPPS: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stdVPSId: u32 = @import("std").mem.zeroes(u32),
    stdSPSId: u32 = @import("std").mem.zeroes(u32),
    stdPPSId: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH265SessionParametersGetInfoKHR = struct_VkVideoEncodeH265SessionParametersGetInfoKHR;
pub const struct_VkVideoEncodeH265SessionParametersFeedbackInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    hasStdVPSOverrides: VkBool32 = @import("std").mem.zeroes(VkBool32),
    hasStdSPSOverrides: VkBool32 = @import("std").mem.zeroes(VkBool32),
    hasStdPPSOverrides: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkVideoEncodeH265SessionParametersFeedbackInfoKHR = struct_VkVideoEncodeH265SessionParametersFeedbackInfoKHR;
pub const struct_VkVideoEncodeH265NaluSliceSegmentInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    constantQp: i32 = @import("std").mem.zeroes(i32),
    pStdSliceSegmentHeader: ?*const StdVideoEncodeH265SliceSegmentHeader = @import("std").mem.zeroes(?*const StdVideoEncodeH265SliceSegmentHeader),
};
pub const VkVideoEncodeH265NaluSliceSegmentInfoKHR = struct_VkVideoEncodeH265NaluSliceSegmentInfoKHR;
pub const struct_VkVideoEncodeH265PictureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    naluSliceSegmentEntryCount: u32 = @import("std").mem.zeroes(u32),
    pNaluSliceSegmentEntries: [*c]const VkVideoEncodeH265NaluSliceSegmentInfoKHR = @import("std").mem.zeroes([*c]const VkVideoEncodeH265NaluSliceSegmentInfoKHR),
    pStdPictureInfo: ?*const StdVideoEncodeH265PictureInfo = @import("std").mem.zeroes(?*const StdVideoEncodeH265PictureInfo),
};
pub const VkVideoEncodeH265PictureInfoKHR = struct_VkVideoEncodeH265PictureInfoKHR;
pub const struct_VkVideoEncodeH265DpbSlotInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdReferenceInfo: ?*const StdVideoEncodeH265ReferenceInfo = @import("std").mem.zeroes(?*const StdVideoEncodeH265ReferenceInfo),
};
pub const VkVideoEncodeH265DpbSlotInfoKHR = struct_VkVideoEncodeH265DpbSlotInfoKHR;
pub const struct_VkVideoEncodeH265ProfileInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdProfileIdc: StdVideoH265ProfileIdc = @import("std").mem.zeroes(StdVideoH265ProfileIdc),
};
pub const VkVideoEncodeH265ProfileInfoKHR = struct_VkVideoEncodeH265ProfileInfoKHR;
pub const struct_VkVideoEncodeH265RateControlInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoEncodeH265RateControlFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeH265RateControlFlagsKHR),
    gopFrameCount: u32 = @import("std").mem.zeroes(u32),
    idrPeriod: u32 = @import("std").mem.zeroes(u32),
    consecutiveBFrameCount: u32 = @import("std").mem.zeroes(u32),
    subLayerCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH265RateControlInfoKHR = struct_VkVideoEncodeH265RateControlInfoKHR;
pub const struct_VkVideoEncodeH265FrameSizeKHR = extern struct {
    frameISize: u32 = @import("std").mem.zeroes(u32),
    framePSize: u32 = @import("std").mem.zeroes(u32),
    frameBSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH265FrameSizeKHR = struct_VkVideoEncodeH265FrameSizeKHR;
pub const struct_VkVideoEncodeH265RateControlLayerInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    useMinQp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minQp: VkVideoEncodeH265QpKHR = @import("std").mem.zeroes(VkVideoEncodeH265QpKHR),
    useMaxQp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxQp: VkVideoEncodeH265QpKHR = @import("std").mem.zeroes(VkVideoEncodeH265QpKHR),
    useMaxFrameSize: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxFrameSize: VkVideoEncodeH265FrameSizeKHR = @import("std").mem.zeroes(VkVideoEncodeH265FrameSizeKHR),
};
pub const VkVideoEncodeH265RateControlLayerInfoKHR = struct_VkVideoEncodeH265RateControlLayerInfoKHR;
pub const struct_VkVideoEncodeH265GopRemainingFrameInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    useGopRemainingFrames: VkBool32 = @import("std").mem.zeroes(VkBool32),
    gopRemainingI: u32 = @import("std").mem.zeroes(u32),
    gopRemainingP: u32 = @import("std").mem.zeroes(u32),
    gopRemainingB: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeH265GopRemainingFrameInfoKHR = struct_VkVideoEncodeH265GopRemainingFrameInfoKHR;
pub const STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_TOP: c_int = 0;
pub const STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_BOTTOM: c_int = 1;
pub const STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_INVALID: c_int = 2147483647;
pub const STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoDecodeH264FieldOrderCount = c_uint;
pub const StdVideoDecodeH264FieldOrderCount = enum_StdVideoDecodeH264FieldOrderCount;
// /usr/local/include/vk_video/vulkan_video_codec_h264std_decode.h:39:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoDecodeH264PictureInfoFlags = opaque {};
pub const StdVideoDecodeH264PictureInfoFlags = struct_StdVideoDecodeH264PictureInfoFlags;
pub const struct_StdVideoDecodeH264PictureInfo = extern struct {
    flags: StdVideoDecodeH264PictureInfoFlags = @import("std").mem.zeroes(StdVideoDecodeH264PictureInfoFlags),
    seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pic_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    reserved2: u8 = @import("std").mem.zeroes(u8),
    frame_num: u16 = @import("std").mem.zeroes(u16),
    idr_pic_id: u16 = @import("std").mem.zeroes(u16),
    PicOrderCnt: [2]i32 = @import("std").mem.zeroes([2]i32),
};
pub const StdVideoDecodeH264PictureInfo = struct_StdVideoDecodeH264PictureInfo;
// /usr/local/include/vk_video/vulkan_video_codec_h264std_decode.h:59:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoDecodeH264ReferenceInfoFlags = opaque {};
pub const StdVideoDecodeH264ReferenceInfoFlags = struct_StdVideoDecodeH264ReferenceInfoFlags;
pub const struct_StdVideoDecodeH264ReferenceInfo = extern struct {
    flags: StdVideoDecodeH264ReferenceInfoFlags = @import("std").mem.zeroes(StdVideoDecodeH264ReferenceInfoFlags),
    FrameNum: u16 = @import("std").mem.zeroes(u16),
    reserved: u16 = @import("std").mem.zeroes(u16),
    PicOrderCnt: [2]i32 = @import("std").mem.zeroes([2]i32),
};
pub const StdVideoDecodeH264ReferenceInfo = struct_StdVideoDecodeH264ReferenceInfo;
pub const VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR: c_int = 0;
pub const VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR: c_int = 1;
pub const VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR: c_int = 2;
pub const VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoDecodeH264PictureLayoutFlagBitsKHR = c_uint;
pub const VkVideoDecodeH264PictureLayoutFlagBitsKHR = enum_VkVideoDecodeH264PictureLayoutFlagBitsKHR;
pub const VkVideoDecodeH264PictureLayoutFlagsKHR = VkFlags;
pub const struct_VkVideoDecodeH264ProfileInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdProfileIdc: StdVideoH264ProfileIdc = @import("std").mem.zeroes(StdVideoH264ProfileIdc),
    pictureLayout: VkVideoDecodeH264PictureLayoutFlagBitsKHR = @import("std").mem.zeroes(VkVideoDecodeH264PictureLayoutFlagBitsKHR),
};
pub const VkVideoDecodeH264ProfileInfoKHR = struct_VkVideoDecodeH264ProfileInfoKHR;
pub const struct_VkVideoDecodeH264CapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxLevelIdc: StdVideoH264LevelIdc = @import("std").mem.zeroes(StdVideoH264LevelIdc),
    fieldOffsetGranularity: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
};
pub const VkVideoDecodeH264CapabilitiesKHR = struct_VkVideoDecodeH264CapabilitiesKHR;
pub const struct_VkVideoDecodeH264SessionParametersAddInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdSPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdSPSs: ?*const StdVideoH264SequenceParameterSet = @import("std").mem.zeroes(?*const StdVideoH264SequenceParameterSet),
    stdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdPPSs: ?*const StdVideoH264PictureParameterSet = @import("std").mem.zeroes(?*const StdVideoH264PictureParameterSet),
};
pub const VkVideoDecodeH264SessionParametersAddInfoKHR = struct_VkVideoDecodeH264SessionParametersAddInfoKHR;
pub const struct_VkVideoDecodeH264SessionParametersCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxStdSPSCount: u32 = @import("std").mem.zeroes(u32),
    maxStdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pParametersAddInfo: [*c]const VkVideoDecodeH264SessionParametersAddInfoKHR = @import("std").mem.zeroes([*c]const VkVideoDecodeH264SessionParametersAddInfoKHR),
};
pub const VkVideoDecodeH264SessionParametersCreateInfoKHR = struct_VkVideoDecodeH264SessionParametersCreateInfoKHR;
pub const struct_VkVideoDecodeH264PictureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdPictureInfo: ?*const StdVideoDecodeH264PictureInfo = @import("std").mem.zeroes(?*const StdVideoDecodeH264PictureInfo),
    sliceCount: u32 = @import("std").mem.zeroes(u32),
    pSliceOffsets: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkVideoDecodeH264PictureInfoKHR = struct_VkVideoDecodeH264PictureInfoKHR;
pub const struct_VkVideoDecodeH264DpbSlotInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdReferenceInfo: ?*const StdVideoDecodeH264ReferenceInfo = @import("std").mem.zeroes(?*const StdVideoDecodeH264ReferenceInfo),
};
pub const VkVideoDecodeH264DpbSlotInfoKHR = struct_VkVideoDecodeH264DpbSlotInfoKHR;
pub const VkRenderingFlagsKHR = VkRenderingFlags;
pub const VkRenderingFlagBitsKHR = VkRenderingFlagBits;
pub const VkRenderingInfoKHR = VkRenderingInfo;
pub const VkRenderingAttachmentInfoKHR = VkRenderingAttachmentInfo;
pub const VkPipelineRenderingCreateInfoKHR = VkPipelineRenderingCreateInfo;
pub const VkPhysicalDeviceDynamicRenderingFeaturesKHR = VkPhysicalDeviceDynamicRenderingFeatures;
pub const VkCommandBufferInheritanceRenderingInfoKHR = VkCommandBufferInheritanceRenderingInfo;
pub const struct_VkRenderingFragmentShadingRateAttachmentInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    imageView: VkImageView = @import("std").mem.zeroes(VkImageView),
    imageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    shadingRateAttachmentTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkRenderingFragmentShadingRateAttachmentInfoKHR = struct_VkRenderingFragmentShadingRateAttachmentInfoKHR;
pub const struct_VkRenderingFragmentDensityMapAttachmentInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    imageView: VkImageView = @import("std").mem.zeroes(VkImageView),
    imageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
};
pub const VkRenderingFragmentDensityMapAttachmentInfoEXT = struct_VkRenderingFragmentDensityMapAttachmentInfoEXT;
pub const struct_VkAttachmentSampleCountInfoAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachmentSamples: [*c]const VkSampleCountFlagBits = @import("std").mem.zeroes([*c]const VkSampleCountFlagBits),
    depthStencilAttachmentSamples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
};
pub const VkAttachmentSampleCountInfoAMD = struct_VkAttachmentSampleCountInfoAMD;
pub const VkAttachmentSampleCountInfoNV = VkAttachmentSampleCountInfoAMD;
pub const struct_VkMultiviewPerViewAttributesInfoNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    perViewAttributes: VkBool32 = @import("std").mem.zeroes(VkBool32),
    perViewAttributesPositionXOnly: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkMultiviewPerViewAttributesInfoNVX = struct_VkMultiviewPerViewAttributesInfoNVX;
pub const PFN_vkCmdBeginRenderingKHR = ?*const fn (VkCommandBuffer, [*c]const VkRenderingInfo) callconv(.C) void;
pub const PFN_vkCmdEndRenderingKHR = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub extern fn vkCmdBeginRenderingKHR(commandBuffer: VkCommandBuffer, pRenderingInfo: [*c]const VkRenderingInfo) void;
pub extern fn vkCmdEndRenderingKHR(commandBuffer: VkCommandBuffer) void;
pub const VkRenderPassMultiviewCreateInfoKHR = VkRenderPassMultiviewCreateInfo;
pub const VkPhysicalDeviceMultiviewFeaturesKHR = VkPhysicalDeviceMultiviewFeatures;
pub const VkPhysicalDeviceMultiviewPropertiesKHR = VkPhysicalDeviceMultiviewProperties;
pub const VkPhysicalDeviceFeatures2KHR = VkPhysicalDeviceFeatures2;
pub const VkPhysicalDeviceProperties2KHR = VkPhysicalDeviceProperties2;
pub const VkFormatProperties2KHR = VkFormatProperties2;
pub const VkImageFormatProperties2KHR = VkImageFormatProperties2;
pub const VkPhysicalDeviceImageFormatInfo2KHR = VkPhysicalDeviceImageFormatInfo2;
pub const VkQueueFamilyProperties2KHR = VkQueueFamilyProperties2;
pub const VkPhysicalDeviceMemoryProperties2KHR = VkPhysicalDeviceMemoryProperties2;
pub const VkSparseImageFormatProperties2KHR = VkSparseImageFormatProperties2;
pub const VkPhysicalDeviceSparseImageFormatInfo2KHR = VkPhysicalDeviceSparseImageFormatInfo2;
pub const PFN_vkGetPhysicalDeviceFeatures2KHR = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceFeatures2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceFormatProperties2KHR = ?*const fn (VkPhysicalDevice, VkFormat, [*c]VkFormatProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceImageFormatProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceImageFormatInfo2, [*c]VkImageFormatProperties2) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkQueueFamilyProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceMemoryProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]VkPhysicalDeviceMemoryProperties2) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceSparseImageFormatInfo2, [*c]u32, [*c]VkSparseImageFormatProperties2) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceFeatures2KHR(physicalDevice: VkPhysicalDevice, pFeatures: [*c]VkPhysicalDeviceFeatures2) void;
pub extern fn vkGetPhysicalDeviceProperties2KHR(physicalDevice: VkPhysicalDevice, pProperties: [*c]VkPhysicalDeviceProperties2) void;
pub extern fn vkGetPhysicalDeviceFormatProperties2KHR(physicalDevice: VkPhysicalDevice, format: VkFormat, pFormatProperties: [*c]VkFormatProperties2) void;
pub extern fn vkGetPhysicalDeviceImageFormatProperties2KHR(physicalDevice: VkPhysicalDevice, pImageFormatInfo: [*c]const VkPhysicalDeviceImageFormatInfo2, pImageFormatProperties: [*c]VkImageFormatProperties2) VkResult;
pub extern fn vkGetPhysicalDeviceQueueFamilyProperties2KHR(physicalDevice: VkPhysicalDevice, pQueueFamilyPropertyCount: [*c]u32, pQueueFamilyProperties: [*c]VkQueueFamilyProperties2) void;
pub extern fn vkGetPhysicalDeviceMemoryProperties2KHR(physicalDevice: VkPhysicalDevice, pMemoryProperties: [*c]VkPhysicalDeviceMemoryProperties2) void;
pub extern fn vkGetPhysicalDeviceSparseImageFormatProperties2KHR(physicalDevice: VkPhysicalDevice, pFormatInfo: [*c]const VkPhysicalDeviceSparseImageFormatInfo2, pPropertyCount: [*c]u32, pProperties: [*c]VkSparseImageFormatProperties2) void;
pub const VkPeerMemoryFeatureFlagsKHR = VkPeerMemoryFeatureFlags;
pub const VkPeerMemoryFeatureFlagBitsKHR = VkPeerMemoryFeatureFlagBits;
pub const VkMemoryAllocateFlagsKHR = VkMemoryAllocateFlags;
pub const VkMemoryAllocateFlagBitsKHR = VkMemoryAllocateFlagBits;
pub const VkMemoryAllocateFlagsInfoKHR = VkMemoryAllocateFlagsInfo;
pub const VkDeviceGroupRenderPassBeginInfoKHR = VkDeviceGroupRenderPassBeginInfo;
pub const VkDeviceGroupCommandBufferBeginInfoKHR = VkDeviceGroupCommandBufferBeginInfo;
pub const VkDeviceGroupSubmitInfoKHR = VkDeviceGroupSubmitInfo;
pub const VkDeviceGroupBindSparseInfoKHR = VkDeviceGroupBindSparseInfo;
pub const VkBindBufferMemoryDeviceGroupInfoKHR = VkBindBufferMemoryDeviceGroupInfo;
pub const VkBindImageMemoryDeviceGroupInfoKHR = VkBindImageMemoryDeviceGroupInfo;
pub const PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR = ?*const fn (VkDevice, u32, u32, u32, [*c]VkPeerMemoryFeatureFlags) callconv(.C) void;
pub const PFN_vkCmdSetDeviceMaskKHR = ?*const fn (VkCommandBuffer, u32) callconv(.C) void;
pub const PFN_vkCmdDispatchBaseKHR = ?*const fn (VkCommandBuffer, u32, u32, u32, u32, u32, u32) callconv(.C) void;
pub extern fn vkGetDeviceGroupPeerMemoryFeaturesKHR(device: VkDevice, heapIndex: u32, localDeviceIndex: u32, remoteDeviceIndex: u32, pPeerMemoryFeatures: [*c]VkPeerMemoryFeatureFlags) void;
pub extern fn vkCmdSetDeviceMaskKHR(commandBuffer: VkCommandBuffer, deviceMask: u32) void;
pub extern fn vkCmdDispatchBaseKHR(commandBuffer: VkCommandBuffer, baseGroupX: u32, baseGroupY: u32, baseGroupZ: u32, groupCountX: u32, groupCountY: u32, groupCountZ: u32) void;
pub const VkCommandPoolTrimFlagsKHR = VkCommandPoolTrimFlags;
pub const PFN_vkTrimCommandPoolKHR = ?*const fn (VkDevice, VkCommandPool, VkCommandPoolTrimFlags) callconv(.C) void;
pub extern fn vkTrimCommandPoolKHR(device: VkDevice, commandPool: VkCommandPool, flags: VkCommandPoolTrimFlags) void;
pub const VkPhysicalDeviceGroupPropertiesKHR = VkPhysicalDeviceGroupProperties;
pub const VkDeviceGroupDeviceCreateInfoKHR = VkDeviceGroupDeviceCreateInfo;
pub const PFN_vkEnumeratePhysicalDeviceGroupsKHR = ?*const fn (VkInstance, [*c]u32, [*c]VkPhysicalDeviceGroupProperties) callconv(.C) VkResult;
pub extern fn vkEnumeratePhysicalDeviceGroupsKHR(instance: VkInstance, pPhysicalDeviceGroupCount: [*c]u32, pPhysicalDeviceGroupProperties: [*c]VkPhysicalDeviceGroupProperties) VkResult;
pub const VkExternalMemoryHandleTypeFlagsKHR = VkExternalMemoryHandleTypeFlags;
pub const VkExternalMemoryHandleTypeFlagBitsKHR = VkExternalMemoryHandleTypeFlagBits;
pub const VkExternalMemoryFeatureFlagsKHR = VkExternalMemoryFeatureFlags;
pub const VkExternalMemoryFeatureFlagBitsKHR = VkExternalMemoryFeatureFlagBits;
pub const VkExternalMemoryPropertiesKHR = VkExternalMemoryProperties;
pub const VkPhysicalDeviceExternalImageFormatInfoKHR = VkPhysicalDeviceExternalImageFormatInfo;
pub const VkExternalImageFormatPropertiesKHR = VkExternalImageFormatProperties;
pub const VkPhysicalDeviceExternalBufferInfoKHR = VkPhysicalDeviceExternalBufferInfo;
pub const VkExternalBufferPropertiesKHR = VkExternalBufferProperties;
pub const VkPhysicalDeviceIDPropertiesKHR = VkPhysicalDeviceIDProperties;
pub const PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceExternalBufferInfo, [*c]VkExternalBufferProperties) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceExternalBufferPropertiesKHR(physicalDevice: VkPhysicalDevice, pExternalBufferInfo: [*c]const VkPhysicalDeviceExternalBufferInfo, pExternalBufferProperties: [*c]VkExternalBufferProperties) void;
pub const VkExternalMemoryImageCreateInfoKHR = VkExternalMemoryImageCreateInfo;
pub const VkExternalMemoryBufferCreateInfoKHR = VkExternalMemoryBufferCreateInfo;
pub const VkExportMemoryAllocateInfoKHR = VkExportMemoryAllocateInfo;
pub const struct_VkImportMemoryFdInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleType: VkExternalMemoryHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagBits),
    fd: c_int = @import("std").mem.zeroes(c_int),
};
pub const VkImportMemoryFdInfoKHR = struct_VkImportMemoryFdInfoKHR;
pub const struct_VkMemoryFdPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryTypeBits: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMemoryFdPropertiesKHR = struct_VkMemoryFdPropertiesKHR;
pub const struct_VkMemoryGetFdInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    handleType: VkExternalMemoryHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagBits),
};
pub const VkMemoryGetFdInfoKHR = struct_VkMemoryGetFdInfoKHR;
pub const PFN_vkGetMemoryFdKHR = ?*const fn (VkDevice, [*c]const VkMemoryGetFdInfoKHR, [*c]c_int) callconv(.C) VkResult;
pub const PFN_vkGetMemoryFdPropertiesKHR = ?*const fn (VkDevice, VkExternalMemoryHandleTypeFlagBits, c_int, [*c]VkMemoryFdPropertiesKHR) callconv(.C) VkResult;
pub extern fn vkGetMemoryFdKHR(device: VkDevice, pGetFdInfo: [*c]const VkMemoryGetFdInfoKHR, pFd: [*c]c_int) VkResult;
pub extern fn vkGetMemoryFdPropertiesKHR(device: VkDevice, handleType: VkExternalMemoryHandleTypeFlagBits, fd: c_int, pMemoryFdProperties: [*c]VkMemoryFdPropertiesKHR) VkResult;
pub const VkExternalSemaphoreHandleTypeFlagsKHR = VkExternalSemaphoreHandleTypeFlags;
pub const VkExternalSemaphoreHandleTypeFlagBitsKHR = VkExternalSemaphoreHandleTypeFlagBits;
pub const VkExternalSemaphoreFeatureFlagsKHR = VkExternalSemaphoreFeatureFlags;
pub const VkExternalSemaphoreFeatureFlagBitsKHR = VkExternalSemaphoreFeatureFlagBits;
pub const VkPhysicalDeviceExternalSemaphoreInfoKHR = VkPhysicalDeviceExternalSemaphoreInfo;
pub const VkExternalSemaphorePropertiesKHR = VkExternalSemaphoreProperties;
pub const PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceExternalSemaphoreInfo, [*c]VkExternalSemaphoreProperties) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(physicalDevice: VkPhysicalDevice, pExternalSemaphoreInfo: [*c]const VkPhysicalDeviceExternalSemaphoreInfo, pExternalSemaphoreProperties: [*c]VkExternalSemaphoreProperties) void;
pub const VkSemaphoreImportFlagsKHR = VkSemaphoreImportFlags;
pub const VkSemaphoreImportFlagBitsKHR = VkSemaphoreImportFlagBits;
pub const VkExportSemaphoreCreateInfoKHR = VkExportSemaphoreCreateInfo;
pub const struct_VkImportSemaphoreFdInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    semaphore: VkSemaphore = @import("std").mem.zeroes(VkSemaphore),
    flags: VkSemaphoreImportFlags = @import("std").mem.zeroes(VkSemaphoreImportFlags),
    handleType: VkExternalSemaphoreHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalSemaphoreHandleTypeFlagBits),
    fd: c_int = @import("std").mem.zeroes(c_int),
};
pub const VkImportSemaphoreFdInfoKHR = struct_VkImportSemaphoreFdInfoKHR;
pub const struct_VkSemaphoreGetFdInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    semaphore: VkSemaphore = @import("std").mem.zeroes(VkSemaphore),
    handleType: VkExternalSemaphoreHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalSemaphoreHandleTypeFlagBits),
};
pub const VkSemaphoreGetFdInfoKHR = struct_VkSemaphoreGetFdInfoKHR;
pub const PFN_vkImportSemaphoreFdKHR = ?*const fn (VkDevice, [*c]const VkImportSemaphoreFdInfoKHR) callconv(.C) VkResult;
pub const PFN_vkGetSemaphoreFdKHR = ?*const fn (VkDevice, [*c]const VkSemaphoreGetFdInfoKHR, [*c]c_int) callconv(.C) VkResult;
pub extern fn vkImportSemaphoreFdKHR(device: VkDevice, pImportSemaphoreFdInfo: [*c]const VkImportSemaphoreFdInfoKHR) VkResult;
pub extern fn vkGetSemaphoreFdKHR(device: VkDevice, pGetFdInfo: [*c]const VkSemaphoreGetFdInfoKHR, pFd: [*c]c_int) VkResult;
pub const struct_VkPhysicalDevicePushDescriptorPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxPushDescriptors: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDevicePushDescriptorPropertiesKHR = struct_VkPhysicalDevicePushDescriptorPropertiesKHR;
pub const PFN_vkCmdPushDescriptorSetKHR = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, u32, u32, [*c]const VkWriteDescriptorSet) callconv(.C) void;
pub const PFN_vkCmdPushDescriptorSetWithTemplateKHR = ?*const fn (VkCommandBuffer, VkDescriptorUpdateTemplate, VkPipelineLayout, u32, ?*const anyopaque) callconv(.C) void;
pub extern fn vkCmdPushDescriptorSetKHR(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, layout: VkPipelineLayout, set: u32, descriptorWriteCount: u32, pDescriptorWrites: [*c]const VkWriteDescriptorSet) void;
pub extern fn vkCmdPushDescriptorSetWithTemplateKHR(commandBuffer: VkCommandBuffer, descriptorUpdateTemplate: VkDescriptorUpdateTemplate, layout: VkPipelineLayout, set: u32, pData: ?*const anyopaque) void;
pub const VkPhysicalDeviceShaderFloat16Int8FeaturesKHR = VkPhysicalDeviceShaderFloat16Int8Features;
pub const VkPhysicalDeviceFloat16Int8FeaturesKHR = VkPhysicalDeviceShaderFloat16Int8Features;
pub const VkPhysicalDevice16BitStorageFeaturesKHR = VkPhysicalDevice16BitStorageFeatures;
pub const struct_VkRectLayerKHR = extern struct {
    offset: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    extent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    layer: u32 = @import("std").mem.zeroes(u32),
};
pub const VkRectLayerKHR = struct_VkRectLayerKHR;
pub const struct_VkPresentRegionKHR = extern struct {
    rectangleCount: u32 = @import("std").mem.zeroes(u32),
    pRectangles: [*c]const VkRectLayerKHR = @import("std").mem.zeroes([*c]const VkRectLayerKHR),
};
pub const VkPresentRegionKHR = struct_VkPresentRegionKHR;
pub const struct_VkPresentRegionsKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkPresentRegionKHR = @import("std").mem.zeroes([*c]const VkPresentRegionKHR),
};
pub const VkPresentRegionsKHR = struct_VkPresentRegionsKHR;
pub const VkDescriptorUpdateTemplateKHR = VkDescriptorUpdateTemplate;
pub const VkDescriptorUpdateTemplateTypeKHR = VkDescriptorUpdateTemplateType;
pub const VkDescriptorUpdateTemplateCreateFlagsKHR = VkDescriptorUpdateTemplateCreateFlags;
pub const VkDescriptorUpdateTemplateEntryKHR = VkDescriptorUpdateTemplateEntry;
pub const VkDescriptorUpdateTemplateCreateInfoKHR = VkDescriptorUpdateTemplateCreateInfo;
pub const PFN_vkCreateDescriptorUpdateTemplateKHR = ?*const fn (VkDevice, [*c]const VkDescriptorUpdateTemplateCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkDescriptorUpdateTemplate) callconv(.C) VkResult;
pub const PFN_vkDestroyDescriptorUpdateTemplateKHR = ?*const fn (VkDevice, VkDescriptorUpdateTemplate, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkUpdateDescriptorSetWithTemplateKHR = ?*const fn (VkDevice, VkDescriptorSet, VkDescriptorUpdateTemplate, ?*const anyopaque) callconv(.C) void;
pub extern fn vkCreateDescriptorUpdateTemplateKHR(device: VkDevice, pCreateInfo: [*c]const VkDescriptorUpdateTemplateCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pDescriptorUpdateTemplate: [*c]VkDescriptorUpdateTemplate) VkResult;
pub extern fn vkDestroyDescriptorUpdateTemplateKHR(device: VkDevice, descriptorUpdateTemplate: VkDescriptorUpdateTemplate, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkUpdateDescriptorSetWithTemplateKHR(device: VkDevice, descriptorSet: VkDescriptorSet, descriptorUpdateTemplate: VkDescriptorUpdateTemplate, pData: ?*const anyopaque) void;
pub const VkPhysicalDeviceImagelessFramebufferFeaturesKHR = VkPhysicalDeviceImagelessFramebufferFeatures;
pub const VkFramebufferAttachmentsCreateInfoKHR = VkFramebufferAttachmentsCreateInfo;
pub const VkFramebufferAttachmentImageInfoKHR = VkFramebufferAttachmentImageInfo;
pub const VkRenderPassAttachmentBeginInfoKHR = VkRenderPassAttachmentBeginInfo;
pub const VkRenderPassCreateInfo2KHR = VkRenderPassCreateInfo2;
pub const VkAttachmentDescription2KHR = VkAttachmentDescription2;
pub const VkAttachmentReference2KHR = VkAttachmentReference2;
pub const VkSubpassDescription2KHR = VkSubpassDescription2;
pub const VkSubpassDependency2KHR = VkSubpassDependency2;
pub const VkSubpassBeginInfoKHR = VkSubpassBeginInfo;
pub const VkSubpassEndInfoKHR = VkSubpassEndInfo;
pub const PFN_vkCreateRenderPass2KHR = ?*const fn (VkDevice, [*c]const VkRenderPassCreateInfo2, [*c]const VkAllocationCallbacks, [*c]VkRenderPass) callconv(.C) VkResult;
pub const PFN_vkCmdBeginRenderPass2KHR = ?*const fn (VkCommandBuffer, [*c]const VkRenderPassBeginInfo, [*c]const VkSubpassBeginInfo) callconv(.C) void;
pub const PFN_vkCmdNextSubpass2KHR = ?*const fn (VkCommandBuffer, [*c]const VkSubpassBeginInfo, [*c]const VkSubpassEndInfo) callconv(.C) void;
pub const PFN_vkCmdEndRenderPass2KHR = ?*const fn (VkCommandBuffer, [*c]const VkSubpassEndInfo) callconv(.C) void;
pub extern fn vkCreateRenderPass2KHR(device: VkDevice, pCreateInfo: [*c]const VkRenderPassCreateInfo2, pAllocator: [*c]const VkAllocationCallbacks, pRenderPass: [*c]VkRenderPass) VkResult;
pub extern fn vkCmdBeginRenderPass2KHR(commandBuffer: VkCommandBuffer, pRenderPassBegin: [*c]const VkRenderPassBeginInfo, pSubpassBeginInfo: [*c]const VkSubpassBeginInfo) void;
pub extern fn vkCmdNextSubpass2KHR(commandBuffer: VkCommandBuffer, pSubpassBeginInfo: [*c]const VkSubpassBeginInfo, pSubpassEndInfo: [*c]const VkSubpassEndInfo) void;
pub extern fn vkCmdEndRenderPass2KHR(commandBuffer: VkCommandBuffer, pSubpassEndInfo: [*c]const VkSubpassEndInfo) void;
pub const struct_VkSharedPresentSurfaceCapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    sharedPresentSupportedUsageFlags: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
};
pub const VkSharedPresentSurfaceCapabilitiesKHR = struct_VkSharedPresentSurfaceCapabilitiesKHR;
pub const PFN_vkGetSwapchainStatusKHR = ?*const fn (VkDevice, VkSwapchainKHR) callconv(.C) VkResult;
pub extern fn vkGetSwapchainStatusKHR(device: VkDevice, swapchain: VkSwapchainKHR) VkResult;
pub const VkExternalFenceHandleTypeFlagsKHR = VkExternalFenceHandleTypeFlags;
pub const VkExternalFenceHandleTypeFlagBitsKHR = VkExternalFenceHandleTypeFlagBits;
pub const VkExternalFenceFeatureFlagsKHR = VkExternalFenceFeatureFlags;
pub const VkExternalFenceFeatureFlagBitsKHR = VkExternalFenceFeatureFlagBits;
pub const VkPhysicalDeviceExternalFenceInfoKHR = VkPhysicalDeviceExternalFenceInfo;
pub const VkExternalFencePropertiesKHR = VkExternalFenceProperties;
pub const PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceExternalFenceInfo, [*c]VkExternalFenceProperties) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceExternalFencePropertiesKHR(physicalDevice: VkPhysicalDevice, pExternalFenceInfo: [*c]const VkPhysicalDeviceExternalFenceInfo, pExternalFenceProperties: [*c]VkExternalFenceProperties) void;
pub const VkFenceImportFlagsKHR = VkFenceImportFlags;
pub const VkFenceImportFlagBitsKHR = VkFenceImportFlagBits;
pub const VkExportFenceCreateInfoKHR = VkExportFenceCreateInfo;
pub const struct_VkImportFenceFdInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    fence: VkFence = @import("std").mem.zeroes(VkFence),
    flags: VkFenceImportFlags = @import("std").mem.zeroes(VkFenceImportFlags),
    handleType: VkExternalFenceHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalFenceHandleTypeFlagBits),
    fd: c_int = @import("std").mem.zeroes(c_int),
};
pub const VkImportFenceFdInfoKHR = struct_VkImportFenceFdInfoKHR;
pub const struct_VkFenceGetFdInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    fence: VkFence = @import("std").mem.zeroes(VkFence),
    handleType: VkExternalFenceHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalFenceHandleTypeFlagBits),
};
pub const VkFenceGetFdInfoKHR = struct_VkFenceGetFdInfoKHR;
pub const PFN_vkImportFenceFdKHR = ?*const fn (VkDevice, [*c]const VkImportFenceFdInfoKHR) callconv(.C) VkResult;
pub const PFN_vkGetFenceFdKHR = ?*const fn (VkDevice, [*c]const VkFenceGetFdInfoKHR, [*c]c_int) callconv(.C) VkResult;
pub extern fn vkImportFenceFdKHR(device: VkDevice, pImportFenceFdInfo: [*c]const VkImportFenceFdInfoKHR) VkResult;
pub extern fn vkGetFenceFdKHR(device: VkDevice, pGetFdInfo: [*c]const VkFenceGetFdInfoKHR, pFd: [*c]c_int) VkResult;
pub const VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR: c_int = 0;
pub const VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR: c_int = 1;
pub const VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR: c_int = 2;
pub const VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR: c_int = 3;
pub const VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR: c_int = 4;
pub const VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR: c_int = 5;
pub const VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR: c_int = 6;
pub const VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR: c_int = 7;
pub const VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR: c_int = 8;
pub const VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR: c_int = 9;
pub const VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR: c_int = 10;
pub const VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkPerformanceCounterUnitKHR = c_uint;
pub const VkPerformanceCounterUnitKHR = enum_VkPerformanceCounterUnitKHR;
pub const VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR: c_int = 0;
pub const VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR: c_int = 1;
pub const VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR: c_int = 2;
pub const VK_QUERY_SCOPE_COMMAND_BUFFER_KHR: c_int = 0;
pub const VK_QUERY_SCOPE_RENDER_PASS_KHR: c_int = 1;
pub const VK_QUERY_SCOPE_COMMAND_KHR: c_int = 2;
pub const VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkPerformanceCounterScopeKHR = c_uint;
pub const VkPerformanceCounterScopeKHR = enum_VkPerformanceCounterScopeKHR;
pub const VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR: c_int = 0;
pub const VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR: c_int = 1;
pub const VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR: c_int = 2;
pub const VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR: c_int = 3;
pub const VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR: c_int = 4;
pub const VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR: c_int = 5;
pub const VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkPerformanceCounterStorageKHR = c_uint;
pub const VkPerformanceCounterStorageKHR = enum_VkPerformanceCounterStorageKHR;
pub const VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR: c_int = 1;
pub const VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR: c_int = 2;
pub const VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR: c_int = 1;
pub const VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR: c_int = 2;
pub const VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkPerformanceCounterDescriptionFlagBitsKHR = c_uint;
pub const VkPerformanceCounterDescriptionFlagBitsKHR = enum_VkPerformanceCounterDescriptionFlagBitsKHR;
pub const VkPerformanceCounterDescriptionFlagsKHR = VkFlags;
pub const VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkAcquireProfilingLockFlagBitsKHR = c_uint;
pub const VkAcquireProfilingLockFlagBitsKHR = enum_VkAcquireProfilingLockFlagBitsKHR;
pub const VkAcquireProfilingLockFlagsKHR = VkFlags;
pub const struct_VkPhysicalDevicePerformanceQueryFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    performanceCounterQueryPools: VkBool32 = @import("std").mem.zeroes(VkBool32),
    performanceCounterMultipleQueryPools: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePerformanceQueryFeaturesKHR = struct_VkPhysicalDevicePerformanceQueryFeaturesKHR;
pub const struct_VkPhysicalDevicePerformanceQueryPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    allowCommandBufferQueryCopies: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePerformanceQueryPropertiesKHR = struct_VkPhysicalDevicePerformanceQueryPropertiesKHR;
pub const struct_VkPerformanceCounterKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    unit: VkPerformanceCounterUnitKHR = @import("std").mem.zeroes(VkPerformanceCounterUnitKHR),
    scope: VkPerformanceCounterScopeKHR = @import("std").mem.zeroes(VkPerformanceCounterScopeKHR),
    storage: VkPerformanceCounterStorageKHR = @import("std").mem.zeroes(VkPerformanceCounterStorageKHR),
    uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const VkPerformanceCounterKHR = struct_VkPerformanceCounterKHR;
pub const struct_VkPerformanceCounterDescriptionKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkPerformanceCounterDescriptionFlagsKHR = @import("std").mem.zeroes(VkPerformanceCounterDescriptionFlagsKHR),
    name: [256]u8 = @import("std").mem.zeroes([256]u8),
    category: [256]u8 = @import("std").mem.zeroes([256]u8),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
};
pub const VkPerformanceCounterDescriptionKHR = struct_VkPerformanceCounterDescriptionKHR;
pub const struct_VkQueryPoolPerformanceCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    queueFamilyIndex: u32 = @import("std").mem.zeroes(u32),
    counterIndexCount: u32 = @import("std").mem.zeroes(u32),
    pCounterIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkQueryPoolPerformanceCreateInfoKHR = struct_VkQueryPoolPerformanceCreateInfoKHR;
pub const union_VkPerformanceCounterResultKHR = extern union {
    int32: i32,
    int64: i64,
    uint32: u32,
    uint64: u64,
    float32: f32,
    float64: f64,
};
pub const VkPerformanceCounterResultKHR = union_VkPerformanceCounterResultKHR;
pub const struct_VkAcquireProfilingLockInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkAcquireProfilingLockFlagsKHR = @import("std").mem.zeroes(VkAcquireProfilingLockFlagsKHR),
    timeout: u64 = @import("std").mem.zeroes(u64),
};
pub const VkAcquireProfilingLockInfoKHR = struct_VkAcquireProfilingLockInfoKHR;
pub const struct_VkPerformanceQuerySubmitInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    counterPassIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPerformanceQuerySubmitInfoKHR = struct_VkPerformanceQuerySubmitInfoKHR;
pub const PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = ?*const fn (VkPhysicalDevice, u32, [*c]u32, [*c]VkPerformanceCounterKHR, [*c]VkPerformanceCounterDescriptionKHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkQueryPoolPerformanceCreateInfoKHR, [*c]u32) callconv(.C) void;
pub const PFN_vkAcquireProfilingLockKHR = ?*const fn (VkDevice, [*c]const VkAcquireProfilingLockInfoKHR) callconv(.C) VkResult;
pub const PFN_vkReleaseProfilingLockKHR = ?*const fn (VkDevice) callconv(.C) void;
pub extern fn vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(physicalDevice: VkPhysicalDevice, queueFamilyIndex: u32, pCounterCount: [*c]u32, pCounters: [*c]VkPerformanceCounterKHR, pCounterDescriptions: [*c]VkPerformanceCounterDescriptionKHR) VkResult;
pub extern fn vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(physicalDevice: VkPhysicalDevice, pPerformanceQueryCreateInfo: [*c]const VkQueryPoolPerformanceCreateInfoKHR, pNumPasses: [*c]u32) void;
pub extern fn vkAcquireProfilingLockKHR(device: VkDevice, pInfo: [*c]const VkAcquireProfilingLockInfoKHR) VkResult;
pub extern fn vkReleaseProfilingLockKHR(device: VkDevice) void;
pub const VkPointClippingBehaviorKHR = VkPointClippingBehavior;
pub const VkTessellationDomainOriginKHR = VkTessellationDomainOrigin;
pub const VkPhysicalDevicePointClippingPropertiesKHR = VkPhysicalDevicePointClippingProperties;
pub const VkRenderPassInputAttachmentAspectCreateInfoKHR = VkRenderPassInputAttachmentAspectCreateInfo;
pub const VkInputAttachmentAspectReferenceKHR = VkInputAttachmentAspectReference;
pub const VkImageViewUsageCreateInfoKHR = VkImageViewUsageCreateInfo;
pub const VkPipelineTessellationDomainOriginStateCreateInfoKHR = VkPipelineTessellationDomainOriginStateCreateInfo;
pub const struct_VkPhysicalDeviceSurfaceInfo2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    surface: VkSurfaceKHR = @import("std").mem.zeroes(VkSurfaceKHR),
};
pub const VkPhysicalDeviceSurfaceInfo2KHR = struct_VkPhysicalDeviceSurfaceInfo2KHR;
pub const struct_VkSurfaceCapabilities2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    surfaceCapabilities: VkSurfaceCapabilitiesKHR = @import("std").mem.zeroes(VkSurfaceCapabilitiesKHR),
};
pub const VkSurfaceCapabilities2KHR = struct_VkSurfaceCapabilities2KHR;
pub const struct_VkSurfaceFormat2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    surfaceFormat: VkSurfaceFormatKHR = @import("std").mem.zeroes(VkSurfaceFormatKHR),
};
pub const VkSurfaceFormat2KHR = struct_VkSurfaceFormat2KHR;
pub const PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceSurfaceInfo2KHR, [*c]VkSurfaceCapabilities2KHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceSurfaceFormats2KHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceSurfaceInfo2KHR, [*c]u32, [*c]VkSurfaceFormat2KHR) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceSurfaceCapabilities2KHR(physicalDevice: VkPhysicalDevice, pSurfaceInfo: [*c]const VkPhysicalDeviceSurfaceInfo2KHR, pSurfaceCapabilities: [*c]VkSurfaceCapabilities2KHR) VkResult;
pub extern fn vkGetPhysicalDeviceSurfaceFormats2KHR(physicalDevice: VkPhysicalDevice, pSurfaceInfo: [*c]const VkPhysicalDeviceSurfaceInfo2KHR, pSurfaceFormatCount: [*c]u32, pSurfaceFormats: [*c]VkSurfaceFormat2KHR) VkResult;
pub const VkPhysicalDeviceVariablePointerFeaturesKHR = VkPhysicalDeviceVariablePointersFeatures;
pub const VkPhysicalDeviceVariablePointersFeaturesKHR = VkPhysicalDeviceVariablePointersFeatures;
pub const struct_VkDisplayProperties2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    displayProperties: VkDisplayPropertiesKHR = @import("std").mem.zeroes(VkDisplayPropertiesKHR),
};
pub const VkDisplayProperties2KHR = struct_VkDisplayProperties2KHR;
pub const struct_VkDisplayPlaneProperties2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    displayPlaneProperties: VkDisplayPlanePropertiesKHR = @import("std").mem.zeroes(VkDisplayPlanePropertiesKHR),
};
pub const VkDisplayPlaneProperties2KHR = struct_VkDisplayPlaneProperties2KHR;
pub const struct_VkDisplayModeProperties2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    displayModeProperties: VkDisplayModePropertiesKHR = @import("std").mem.zeroes(VkDisplayModePropertiesKHR),
};
pub const VkDisplayModeProperties2KHR = struct_VkDisplayModeProperties2KHR;
pub const struct_VkDisplayPlaneInfo2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    mode: VkDisplayModeKHR = @import("std").mem.zeroes(VkDisplayModeKHR),
    planeIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDisplayPlaneInfo2KHR = struct_VkDisplayPlaneInfo2KHR;
pub const struct_VkDisplayPlaneCapabilities2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    capabilities: VkDisplayPlaneCapabilitiesKHR = @import("std").mem.zeroes(VkDisplayPlaneCapabilitiesKHR),
};
pub const VkDisplayPlaneCapabilities2KHR = struct_VkDisplayPlaneCapabilities2KHR;
pub const PFN_vkGetPhysicalDeviceDisplayProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkDisplayProperties2KHR) callconv(.C) VkResult;
pub const PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkDisplayPlaneProperties2KHR) callconv(.C) VkResult;
pub const PFN_vkGetDisplayModeProperties2KHR = ?*const fn (VkPhysicalDevice, VkDisplayKHR, [*c]u32, [*c]VkDisplayModeProperties2KHR) callconv(.C) VkResult;
pub const PFN_vkGetDisplayPlaneCapabilities2KHR = ?*const fn (VkPhysicalDevice, [*c]const VkDisplayPlaneInfo2KHR, [*c]VkDisplayPlaneCapabilities2KHR) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceDisplayProperties2KHR(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkDisplayProperties2KHR) VkResult;
pub extern fn vkGetPhysicalDeviceDisplayPlaneProperties2KHR(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkDisplayPlaneProperties2KHR) VkResult;
pub extern fn vkGetDisplayModeProperties2KHR(physicalDevice: VkPhysicalDevice, display: VkDisplayKHR, pPropertyCount: [*c]u32, pProperties: [*c]VkDisplayModeProperties2KHR) VkResult;
pub extern fn vkGetDisplayPlaneCapabilities2KHR(physicalDevice: VkPhysicalDevice, pDisplayPlaneInfo: [*c]const VkDisplayPlaneInfo2KHR, pCapabilities: [*c]VkDisplayPlaneCapabilities2KHR) VkResult;
pub const VkMemoryDedicatedRequirementsKHR = VkMemoryDedicatedRequirements;
pub const VkMemoryDedicatedAllocateInfoKHR = VkMemoryDedicatedAllocateInfo;
pub const VkBufferMemoryRequirementsInfo2KHR = VkBufferMemoryRequirementsInfo2;
pub const VkImageMemoryRequirementsInfo2KHR = VkImageMemoryRequirementsInfo2;
pub const VkImageSparseMemoryRequirementsInfo2KHR = VkImageSparseMemoryRequirementsInfo2;
pub const VkMemoryRequirements2KHR = VkMemoryRequirements2;
pub const VkSparseImageMemoryRequirements2KHR = VkSparseImageMemoryRequirements2;
pub const PFN_vkGetImageMemoryRequirements2KHR = ?*const fn (VkDevice, [*c]const VkImageMemoryRequirementsInfo2, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetBufferMemoryRequirements2KHR = ?*const fn (VkDevice, [*c]const VkBufferMemoryRequirementsInfo2, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetImageSparseMemoryRequirements2KHR = ?*const fn (VkDevice, [*c]const VkImageSparseMemoryRequirementsInfo2, [*c]u32, [*c]VkSparseImageMemoryRequirements2) callconv(.C) void;
pub extern fn vkGetImageMemoryRequirements2KHR(device: VkDevice, pInfo: [*c]const VkImageMemoryRequirementsInfo2, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetBufferMemoryRequirements2KHR(device: VkDevice, pInfo: [*c]const VkBufferMemoryRequirementsInfo2, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetImageSparseMemoryRequirements2KHR(device: VkDevice, pInfo: [*c]const VkImageSparseMemoryRequirementsInfo2, pSparseMemoryRequirementCount: [*c]u32, pSparseMemoryRequirements: [*c]VkSparseImageMemoryRequirements2) void;
pub const VkImageFormatListCreateInfoKHR = VkImageFormatListCreateInfo;
pub const VkSamplerYcbcrConversionKHR = VkSamplerYcbcrConversion;
pub const VkSamplerYcbcrModelConversionKHR = VkSamplerYcbcrModelConversion;
pub const VkSamplerYcbcrRangeKHR = VkSamplerYcbcrRange;
pub const VkChromaLocationKHR = VkChromaLocation;
pub const VkSamplerYcbcrConversionCreateInfoKHR = VkSamplerYcbcrConversionCreateInfo;
pub const VkSamplerYcbcrConversionInfoKHR = VkSamplerYcbcrConversionInfo;
pub const VkBindImagePlaneMemoryInfoKHR = VkBindImagePlaneMemoryInfo;
pub const VkImagePlaneMemoryRequirementsInfoKHR = VkImagePlaneMemoryRequirementsInfo;
pub const VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR = VkPhysicalDeviceSamplerYcbcrConversionFeatures;
pub const VkSamplerYcbcrConversionImageFormatPropertiesKHR = VkSamplerYcbcrConversionImageFormatProperties;
pub const PFN_vkCreateSamplerYcbcrConversionKHR = ?*const fn (VkDevice, [*c]const VkSamplerYcbcrConversionCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkSamplerYcbcrConversion) callconv(.C) VkResult;
pub const PFN_vkDestroySamplerYcbcrConversionKHR = ?*const fn (VkDevice, VkSamplerYcbcrConversion, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub extern fn vkCreateSamplerYcbcrConversionKHR(device: VkDevice, pCreateInfo: [*c]const VkSamplerYcbcrConversionCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pYcbcrConversion: [*c]VkSamplerYcbcrConversion) VkResult;
pub extern fn vkDestroySamplerYcbcrConversionKHR(device: VkDevice, ycbcrConversion: VkSamplerYcbcrConversion, pAllocator: [*c]const VkAllocationCallbacks) void;
pub const VkBindBufferMemoryInfoKHR = VkBindBufferMemoryInfo;
pub const VkBindImageMemoryInfoKHR = VkBindImageMemoryInfo;
pub const PFN_vkBindBufferMemory2KHR = ?*const fn (VkDevice, u32, [*c]const VkBindBufferMemoryInfo) callconv(.C) VkResult;
pub const PFN_vkBindImageMemory2KHR = ?*const fn (VkDevice, u32, [*c]const VkBindImageMemoryInfo) callconv(.C) VkResult;
pub extern fn vkBindBufferMemory2KHR(device: VkDevice, bindInfoCount: u32, pBindInfos: [*c]const VkBindBufferMemoryInfo) VkResult;
pub extern fn vkBindImageMemory2KHR(device: VkDevice, bindInfoCount: u32, pBindInfos: [*c]const VkBindImageMemoryInfo) VkResult;
pub const VkPhysicalDeviceMaintenance3PropertiesKHR = VkPhysicalDeviceMaintenance3Properties;
pub const VkDescriptorSetLayoutSupportKHR = VkDescriptorSetLayoutSupport;
pub const PFN_vkGetDescriptorSetLayoutSupportKHR = ?*const fn (VkDevice, [*c]const VkDescriptorSetLayoutCreateInfo, [*c]VkDescriptorSetLayoutSupport) callconv(.C) void;
pub extern fn vkGetDescriptorSetLayoutSupportKHR(device: VkDevice, pCreateInfo: [*c]const VkDescriptorSetLayoutCreateInfo, pSupport: [*c]VkDescriptorSetLayoutSupport) void;
pub const PFN_vkCmdDrawIndirectCountKHR = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndexedIndirectCountKHR = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub extern fn vkCmdDrawIndirectCountKHR(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub extern fn vkCmdDrawIndexedIndirectCountKHR(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub const VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR = VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures;
pub const VkPhysicalDevice8BitStorageFeaturesKHR = VkPhysicalDevice8BitStorageFeatures;
pub const VkPhysicalDeviceShaderAtomicInt64FeaturesKHR = VkPhysicalDeviceShaderAtomicInt64Features;
pub const struct_VkPhysicalDeviceShaderClockFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderSubgroupClock: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderDeviceClock: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderClockFeaturesKHR = struct_VkPhysicalDeviceShaderClockFeaturesKHR;
// /usr/local/include/vk_video/vulkan_video_codec_h265std_decode.h:32:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoDecodeH265PictureInfoFlags = opaque {};
pub const StdVideoDecodeH265PictureInfoFlags = struct_StdVideoDecodeH265PictureInfoFlags;
pub const struct_StdVideoDecodeH265PictureInfo = extern struct {
    flags: StdVideoDecodeH265PictureInfoFlags = @import("std").mem.zeroes(StdVideoDecodeH265PictureInfoFlags),
    sps_video_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pps_seq_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    pps_pic_parameter_set_id: u8 = @import("std").mem.zeroes(u8),
    NumDeltaPocsOfRefRpsIdx: u8 = @import("std").mem.zeroes(u8),
    PicOrderCntVal: i32 = @import("std").mem.zeroes(i32),
    NumBitsForSTRefPicSetInSlice: u16 = @import("std").mem.zeroes(u16),
    reserved: u16 = @import("std").mem.zeroes(u16),
    RefPicSetStCurrBefore: [8]u8 = @import("std").mem.zeroes([8]u8),
    RefPicSetStCurrAfter: [8]u8 = @import("std").mem.zeroes([8]u8),
    RefPicSetLtCurr: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const StdVideoDecodeH265PictureInfo = struct_StdVideoDecodeH265PictureInfo;
// /usr/local/include/vk_video/vulkan_video_codec_h265std_decode.h:53:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoDecodeH265ReferenceInfoFlags = opaque {};
pub const StdVideoDecodeH265ReferenceInfoFlags = struct_StdVideoDecodeH265ReferenceInfoFlags;
pub const struct_StdVideoDecodeH265ReferenceInfo = extern struct {
    flags: StdVideoDecodeH265ReferenceInfoFlags = @import("std").mem.zeroes(StdVideoDecodeH265ReferenceInfoFlags),
    PicOrderCntVal: i32 = @import("std").mem.zeroes(i32),
};
pub const StdVideoDecodeH265ReferenceInfo = struct_StdVideoDecodeH265ReferenceInfo;
pub const struct_VkVideoDecodeH265ProfileInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdProfileIdc: StdVideoH265ProfileIdc = @import("std").mem.zeroes(StdVideoH265ProfileIdc),
};
pub const VkVideoDecodeH265ProfileInfoKHR = struct_VkVideoDecodeH265ProfileInfoKHR;
pub const struct_VkVideoDecodeH265CapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxLevelIdc: StdVideoH265LevelIdc = @import("std").mem.zeroes(StdVideoH265LevelIdc),
};
pub const VkVideoDecodeH265CapabilitiesKHR = struct_VkVideoDecodeH265CapabilitiesKHR;
pub const struct_VkVideoDecodeH265SessionParametersAddInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdVPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdVPSs: ?*const StdVideoH265VideoParameterSet = @import("std").mem.zeroes(?*const StdVideoH265VideoParameterSet),
    stdSPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdSPSs: ?*const StdVideoH265SequenceParameterSet = @import("std").mem.zeroes(?*const StdVideoH265SequenceParameterSet),
    stdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pStdPPSs: ?*const StdVideoH265PictureParameterSet = @import("std").mem.zeroes(?*const StdVideoH265PictureParameterSet),
};
pub const VkVideoDecodeH265SessionParametersAddInfoKHR = struct_VkVideoDecodeH265SessionParametersAddInfoKHR;
pub const struct_VkVideoDecodeH265SessionParametersCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxStdVPSCount: u32 = @import("std").mem.zeroes(u32),
    maxStdSPSCount: u32 = @import("std").mem.zeroes(u32),
    maxStdPPSCount: u32 = @import("std").mem.zeroes(u32),
    pParametersAddInfo: [*c]const VkVideoDecodeH265SessionParametersAddInfoKHR = @import("std").mem.zeroes([*c]const VkVideoDecodeH265SessionParametersAddInfoKHR),
};
pub const VkVideoDecodeH265SessionParametersCreateInfoKHR = struct_VkVideoDecodeH265SessionParametersCreateInfoKHR;
pub const struct_VkVideoDecodeH265PictureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdPictureInfo: ?*const StdVideoDecodeH265PictureInfo = @import("std").mem.zeroes(?*const StdVideoDecodeH265PictureInfo),
    sliceSegmentCount: u32 = @import("std").mem.zeroes(u32),
    pSliceSegmentOffsets: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkVideoDecodeH265PictureInfoKHR = struct_VkVideoDecodeH265PictureInfoKHR;
pub const struct_VkVideoDecodeH265DpbSlotInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdReferenceInfo: ?*const StdVideoDecodeH265ReferenceInfo = @import("std").mem.zeroes(?*const StdVideoDecodeH265ReferenceInfo),
};
pub const VkVideoDecodeH265DpbSlotInfoKHR = struct_VkVideoDecodeH265DpbSlotInfoKHR;
pub const VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR: c_int = 128;
pub const VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR: c_int = 256;
pub const VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR: c_int = 512;
pub const VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR: c_int = 1024;
pub const VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT: c_int = 128;
pub const VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT: c_int = 256;
pub const VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT: c_int = 512;
pub const VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT: c_int = 1024;
pub const VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkQueueGlobalPriorityKHR = c_uint;
pub const VkQueueGlobalPriorityKHR = enum_VkQueueGlobalPriorityKHR;
pub const struct_VkDeviceQueueGlobalPriorityCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    globalPriority: VkQueueGlobalPriorityKHR = @import("std").mem.zeroes(VkQueueGlobalPriorityKHR),
};
pub const VkDeviceQueueGlobalPriorityCreateInfoKHR = struct_VkDeviceQueueGlobalPriorityCreateInfoKHR;
pub const struct_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    globalPriorityQuery: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR = struct_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR;
pub const struct_VkQueueFamilyGlobalPriorityPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    priorityCount: u32 = @import("std").mem.zeroes(u32),
    priorities: [16]VkQueueGlobalPriorityKHR = @import("std").mem.zeroes([16]VkQueueGlobalPriorityKHR),
};
pub const VkQueueFamilyGlobalPriorityPropertiesKHR = struct_VkQueueFamilyGlobalPriorityPropertiesKHR;
pub const VkDriverIdKHR = VkDriverId;
pub const VkConformanceVersionKHR = VkConformanceVersion;
pub const VkPhysicalDeviceDriverPropertiesKHR = VkPhysicalDeviceDriverProperties;
pub const VkShaderFloatControlsIndependenceKHR = VkShaderFloatControlsIndependence;
pub const VkPhysicalDeviceFloatControlsPropertiesKHR = VkPhysicalDeviceFloatControlsProperties;
pub const VkResolveModeFlagBitsKHR = VkResolveModeFlagBits;
pub const VkResolveModeFlagsKHR = VkResolveModeFlags;
pub const VkSubpassDescriptionDepthStencilResolveKHR = VkSubpassDescriptionDepthStencilResolve;
pub const VkPhysicalDeviceDepthStencilResolvePropertiesKHR = VkPhysicalDeviceDepthStencilResolveProperties;
pub const VkSemaphoreTypeKHR = VkSemaphoreType;
pub const VkSemaphoreWaitFlagBitsKHR = VkSemaphoreWaitFlagBits;
pub const VkSemaphoreWaitFlagsKHR = VkSemaphoreWaitFlags;
pub const VkPhysicalDeviceTimelineSemaphoreFeaturesKHR = VkPhysicalDeviceTimelineSemaphoreFeatures;
pub const VkPhysicalDeviceTimelineSemaphorePropertiesKHR = VkPhysicalDeviceTimelineSemaphoreProperties;
pub const VkSemaphoreTypeCreateInfoKHR = VkSemaphoreTypeCreateInfo;
pub const VkTimelineSemaphoreSubmitInfoKHR = VkTimelineSemaphoreSubmitInfo;
pub const VkSemaphoreWaitInfoKHR = VkSemaphoreWaitInfo;
pub const VkSemaphoreSignalInfoKHR = VkSemaphoreSignalInfo;
pub const PFN_vkGetSemaphoreCounterValueKHR = ?*const fn (VkDevice, VkSemaphore, [*c]u64) callconv(.C) VkResult;
pub const PFN_vkWaitSemaphoresKHR = ?*const fn (VkDevice, [*c]const VkSemaphoreWaitInfo, u64) callconv(.C) VkResult;
pub const PFN_vkSignalSemaphoreKHR = ?*const fn (VkDevice, [*c]const VkSemaphoreSignalInfo) callconv(.C) VkResult;
pub extern fn vkGetSemaphoreCounterValueKHR(device: VkDevice, semaphore: VkSemaphore, pValue: [*c]u64) VkResult;
pub extern fn vkWaitSemaphoresKHR(device: VkDevice, pWaitInfo: [*c]const VkSemaphoreWaitInfo, timeout: u64) VkResult;
pub extern fn vkSignalSemaphoreKHR(device: VkDevice, pSignalInfo: [*c]const VkSemaphoreSignalInfo) VkResult;
pub const VkPhysicalDeviceVulkanMemoryModelFeaturesKHR = VkPhysicalDeviceVulkanMemoryModelFeatures;
pub const VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR = VkPhysicalDeviceShaderTerminateInvocationFeatures;
pub const VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR: c_int = 0;
pub const VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR: c_int = 1;
pub const VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR: c_int = 2;
pub const VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR: c_int = 3;
pub const VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR: c_int = 4;
pub const VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkFragmentShadingRateCombinerOpKHR = c_uint;
pub const VkFragmentShadingRateCombinerOpKHR = enum_VkFragmentShadingRateCombinerOpKHR;
pub const struct_VkFragmentShadingRateAttachmentInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pFragmentShadingRateAttachment: [*c]const VkAttachmentReference2 = @import("std").mem.zeroes([*c]const VkAttachmentReference2),
    shadingRateAttachmentTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkFragmentShadingRateAttachmentInfoKHR = struct_VkFragmentShadingRateAttachmentInfoKHR;
pub const struct_VkPipelineFragmentShadingRateStateCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    fragmentSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    combinerOps: [2]VkFragmentShadingRateCombinerOpKHR = @import("std").mem.zeroes([2]VkFragmentShadingRateCombinerOpKHR),
};
pub const VkPipelineFragmentShadingRateStateCreateInfoKHR = struct_VkPipelineFragmentShadingRateStateCreateInfoKHR;
pub const struct_VkPhysicalDeviceFragmentShadingRateFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineFragmentShadingRate: VkBool32 = @import("std").mem.zeroes(VkBool32),
    primitiveFragmentShadingRate: VkBool32 = @import("std").mem.zeroes(VkBool32),
    attachmentFragmentShadingRate: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentShadingRateFeaturesKHR = struct_VkPhysicalDeviceFragmentShadingRateFeaturesKHR;
pub const struct_VkPhysicalDeviceFragmentShadingRatePropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minFragmentShadingRateAttachmentTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxFragmentShadingRateAttachmentTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxFragmentShadingRateAttachmentTexelSizeAspectRatio: u32 = @import("std").mem.zeroes(u32),
    primitiveFragmentShadingRateWithMultipleViewports: VkBool32 = @import("std").mem.zeroes(VkBool32),
    layeredShadingRateAttachments: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateNonTrivialCombinerOps: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxFragmentSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxFragmentSizeAspectRatio: u32 = @import("std").mem.zeroes(u32),
    maxFragmentShadingRateCoverageSamples: u32 = @import("std").mem.zeroes(u32),
    maxFragmentShadingRateRasterizationSamples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    fragmentShadingRateWithShaderDepthStencilWrites: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateWithSampleMask: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateWithShaderSampleMask: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateWithConservativeRasterization: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateWithFragmentShaderInterlock: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateWithCustomSampleLocations: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShadingRateStrictMultiplyCombiner: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentShadingRatePropertiesKHR = struct_VkPhysicalDeviceFragmentShadingRatePropertiesKHR;
pub const struct_VkPhysicalDeviceFragmentShadingRateKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    sampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    fragmentSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkPhysicalDeviceFragmentShadingRateKHR = struct_VkPhysicalDeviceFragmentShadingRateKHR;
pub const PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkPhysicalDeviceFragmentShadingRateKHR) callconv(.C) VkResult;
pub const PFN_vkCmdSetFragmentShadingRateKHR = ?*const fn (VkCommandBuffer, [*c]const VkExtent2D, [*c]const VkFragmentShadingRateCombinerOpKHR) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceFragmentShadingRatesKHR(physicalDevice: VkPhysicalDevice, pFragmentShadingRateCount: [*c]u32, pFragmentShadingRates: [*c]VkPhysicalDeviceFragmentShadingRateKHR) VkResult;
pub extern fn vkCmdSetFragmentShadingRateKHR(commandBuffer: VkCommandBuffer, pFragmentSize: [*c]const VkExtent2D, combinerOps: [*c]const VkFragmentShadingRateCombinerOpKHR) void;
pub const struct_VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dynamicRenderingLocalRead: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR = struct_VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR;
pub const struct_VkRenderingAttachmentLocationInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachmentLocations: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkRenderingAttachmentLocationInfoKHR = struct_VkRenderingAttachmentLocationInfoKHR;
pub const struct_VkRenderingInputAttachmentIndexInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachmentInputIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    pDepthInputAttachmentIndex: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    pStencilInputAttachmentIndex: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkRenderingInputAttachmentIndexInfoKHR = struct_VkRenderingInputAttachmentIndexInfoKHR;
pub const PFN_vkCmdSetRenderingAttachmentLocationsKHR = ?*const fn (VkCommandBuffer, [*c]const VkRenderingAttachmentLocationInfoKHR) callconv(.C) void;
pub const PFN_vkCmdSetRenderingInputAttachmentIndicesKHR = ?*const fn (VkCommandBuffer, [*c]const VkRenderingInputAttachmentIndexInfoKHR) callconv(.C) void;
pub extern fn vkCmdSetRenderingAttachmentLocationsKHR(commandBuffer: VkCommandBuffer, pLocationInfo: [*c]const VkRenderingAttachmentLocationInfoKHR) void;
pub extern fn vkCmdSetRenderingInputAttachmentIndicesKHR(commandBuffer: VkCommandBuffer, pLocationInfo: [*c]const VkRenderingInputAttachmentIndexInfoKHR) void;
pub const struct_VkPhysicalDeviceShaderQuadControlFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderQuadControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderQuadControlFeaturesKHR = struct_VkPhysicalDeviceShaderQuadControlFeaturesKHR;
pub const struct_VkSurfaceProtectedCapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    supportsProtected: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSurfaceProtectedCapabilitiesKHR = struct_VkSurfaceProtectedCapabilitiesKHR;
pub const VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR = VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures;
pub const VkAttachmentReferenceStencilLayoutKHR = VkAttachmentReferenceStencilLayout;
pub const VkAttachmentDescriptionStencilLayoutKHR = VkAttachmentDescriptionStencilLayout;
pub const struct_VkPhysicalDevicePresentWaitFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentWait: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePresentWaitFeaturesKHR = struct_VkPhysicalDevicePresentWaitFeaturesKHR;
pub const PFN_vkWaitForPresentKHR = ?*const fn (VkDevice, VkSwapchainKHR, u64, u64) callconv(.C) VkResult;
pub extern fn vkWaitForPresentKHR(device: VkDevice, swapchain: VkSwapchainKHR, presentId: u64, timeout: u64) VkResult;
pub const VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR = VkPhysicalDeviceUniformBufferStandardLayoutFeatures;
pub const VkPhysicalDeviceBufferDeviceAddressFeaturesKHR = VkPhysicalDeviceBufferDeviceAddressFeatures;
pub const VkBufferDeviceAddressInfoKHR = VkBufferDeviceAddressInfo;
pub const VkBufferOpaqueCaptureAddressCreateInfoKHR = VkBufferOpaqueCaptureAddressCreateInfo;
pub const VkMemoryOpaqueCaptureAddressAllocateInfoKHR = VkMemoryOpaqueCaptureAddressAllocateInfo;
pub const VkDeviceMemoryOpaqueCaptureAddressInfoKHR = VkDeviceMemoryOpaqueCaptureAddressInfo;
pub const PFN_vkGetBufferDeviceAddressKHR = ?*const fn (VkDevice, [*c]const VkBufferDeviceAddressInfo) callconv(.C) VkDeviceAddress;
pub const PFN_vkGetBufferOpaqueCaptureAddressKHR = ?*const fn (VkDevice, [*c]const VkBufferDeviceAddressInfo) callconv(.C) u64;
pub const PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR = ?*const fn (VkDevice, [*c]const VkDeviceMemoryOpaqueCaptureAddressInfo) callconv(.C) u64;
pub extern fn vkGetBufferDeviceAddressKHR(device: VkDevice, pInfo: [*c]const VkBufferDeviceAddressInfo) VkDeviceAddress;
pub extern fn vkGetBufferOpaqueCaptureAddressKHR(device: VkDevice, pInfo: [*c]const VkBufferDeviceAddressInfo) u64;
pub extern fn vkGetDeviceMemoryOpaqueCaptureAddressKHR(device: VkDevice, pInfo: [*c]const VkDeviceMemoryOpaqueCaptureAddressInfo) u64;
pub const struct_VkDeferredOperationKHR_T = opaque {};
pub const VkDeferredOperationKHR = ?*struct_VkDeferredOperationKHR_T;
pub const PFN_vkCreateDeferredOperationKHR = ?*const fn (VkDevice, [*c]const VkAllocationCallbacks, [*c]VkDeferredOperationKHR) callconv(.C) VkResult;
pub const PFN_vkDestroyDeferredOperationKHR = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetDeferredOperationMaxConcurrencyKHR = ?*const fn (VkDevice, VkDeferredOperationKHR) callconv(.C) u32;
pub const PFN_vkGetDeferredOperationResultKHR = ?*const fn (VkDevice, VkDeferredOperationKHR) callconv(.C) VkResult;
pub const PFN_vkDeferredOperationJoinKHR = ?*const fn (VkDevice, VkDeferredOperationKHR) callconv(.C) VkResult;
pub extern fn vkCreateDeferredOperationKHR(device: VkDevice, pAllocator: [*c]const VkAllocationCallbacks, pDeferredOperation: [*c]VkDeferredOperationKHR) VkResult;
pub extern fn vkDestroyDeferredOperationKHR(device: VkDevice, operation: VkDeferredOperationKHR, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetDeferredOperationMaxConcurrencyKHR(device: VkDevice, operation: VkDeferredOperationKHR) u32;
pub extern fn vkGetDeferredOperationResultKHR(device: VkDevice, operation: VkDeferredOperationKHR) VkResult;
pub extern fn vkDeferredOperationJoinKHR(device: VkDevice, operation: VkDeferredOperationKHR) VkResult;
pub const VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR: c_int = 0;
pub const VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR: c_int = 1;
pub const VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR: c_int = 2;
pub const VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR: c_int = 3;
pub const VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkPipelineExecutableStatisticFormatKHR = c_uint;
pub const VkPipelineExecutableStatisticFormatKHR = enum_VkPipelineExecutableStatisticFormatKHR;
pub const struct_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineExecutableInfo: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR = struct_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR;
pub const struct_VkPipelineInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pipeline: VkPipeline = @import("std").mem.zeroes(VkPipeline),
};
pub const VkPipelineInfoKHR = struct_VkPipelineInfoKHR;
pub const struct_VkPipelineExecutablePropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    stages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    name: [256]u8 = @import("std").mem.zeroes([256]u8),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    subgroupSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPipelineExecutablePropertiesKHR = struct_VkPipelineExecutablePropertiesKHR;
pub const struct_VkPipelineExecutableInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pipeline: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    executableIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPipelineExecutableInfoKHR = struct_VkPipelineExecutableInfoKHR;
pub const union_VkPipelineExecutableStatisticValueKHR = extern union {
    b32: VkBool32,
    i64: i64,
    u64: u64,
    f64: f64,
};
pub const VkPipelineExecutableStatisticValueKHR = union_VkPipelineExecutableStatisticValueKHR;
pub const struct_VkPipelineExecutableStatisticKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    name: [256]u8 = @import("std").mem.zeroes([256]u8),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    format: VkPipelineExecutableStatisticFormatKHR = @import("std").mem.zeroes(VkPipelineExecutableStatisticFormatKHR),
    value: VkPipelineExecutableStatisticValueKHR = @import("std").mem.zeroes(VkPipelineExecutableStatisticValueKHR),
};
pub const VkPipelineExecutableStatisticKHR = struct_VkPipelineExecutableStatisticKHR;
pub const struct_VkPipelineExecutableInternalRepresentationKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    name: [256]u8 = @import("std").mem.zeroes([256]u8),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    isText: VkBool32 = @import("std").mem.zeroes(VkBool32),
    dataSize: usize = @import("std").mem.zeroes(usize),
    pData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkPipelineExecutableInternalRepresentationKHR = struct_VkPipelineExecutableInternalRepresentationKHR;
pub const PFN_vkGetPipelineExecutablePropertiesKHR = ?*const fn (VkDevice, [*c]const VkPipelineInfoKHR, [*c]u32, [*c]VkPipelineExecutablePropertiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetPipelineExecutableStatisticsKHR = ?*const fn (VkDevice, [*c]const VkPipelineExecutableInfoKHR, [*c]u32, [*c]VkPipelineExecutableStatisticKHR) callconv(.C) VkResult;
pub const PFN_vkGetPipelineExecutableInternalRepresentationsKHR = ?*const fn (VkDevice, [*c]const VkPipelineExecutableInfoKHR, [*c]u32, [*c]VkPipelineExecutableInternalRepresentationKHR) callconv(.C) VkResult;
pub extern fn vkGetPipelineExecutablePropertiesKHR(device: VkDevice, pPipelineInfo: [*c]const VkPipelineInfoKHR, pExecutableCount: [*c]u32, pProperties: [*c]VkPipelineExecutablePropertiesKHR) VkResult;
pub extern fn vkGetPipelineExecutableStatisticsKHR(device: VkDevice, pExecutableInfo: [*c]const VkPipelineExecutableInfoKHR, pStatisticCount: [*c]u32, pStatistics: [*c]VkPipelineExecutableStatisticKHR) VkResult;
pub extern fn vkGetPipelineExecutableInternalRepresentationsKHR(device: VkDevice, pExecutableInfo: [*c]const VkPipelineExecutableInfoKHR, pInternalRepresentationCount: [*c]u32, pInternalRepresentations: [*c]VkPipelineExecutableInternalRepresentationKHR) VkResult;
pub const VK_MEMORY_UNMAP_RESERVE_BIT_EXT: c_int = 1;
pub const VK_MEMORY_UNMAP_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkMemoryUnmapFlagBitsKHR = c_uint;
pub const VkMemoryUnmapFlagBitsKHR = enum_VkMemoryUnmapFlagBitsKHR;
pub const VkMemoryUnmapFlagsKHR = VkFlags;
pub const struct_VkMemoryMapInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkMemoryMapFlags = @import("std").mem.zeroes(VkMemoryMapFlags),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkMemoryMapInfoKHR = struct_VkMemoryMapInfoKHR;
pub const struct_VkMemoryUnmapInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkMemoryUnmapFlagsKHR = @import("std").mem.zeroes(VkMemoryUnmapFlagsKHR),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
};
pub const VkMemoryUnmapInfoKHR = struct_VkMemoryUnmapInfoKHR;
pub const PFN_vkMapMemory2KHR = ?*const fn (VkDevice, [*c]const VkMemoryMapInfoKHR, [*c]?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkUnmapMemory2KHR = ?*const fn (VkDevice, [*c]const VkMemoryUnmapInfoKHR) callconv(.C) VkResult;
pub extern fn vkMapMemory2KHR(device: VkDevice, pMemoryMapInfo: [*c]const VkMemoryMapInfoKHR, ppData: [*c]?*anyopaque) VkResult;
pub extern fn vkUnmapMemory2KHR(device: VkDevice, pMemoryUnmapInfo: [*c]const VkMemoryUnmapInfoKHR) VkResult;
pub const VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR = VkPhysicalDeviceShaderIntegerDotProductFeatures;
pub const VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR = VkPhysicalDeviceShaderIntegerDotProductProperties;
pub const struct_VkPipelineLibraryCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    libraryCount: u32 = @import("std").mem.zeroes(u32),
    pLibraries: [*c]const VkPipeline = @import("std").mem.zeroes([*c]const VkPipeline),
};
pub const VkPipelineLibraryCreateInfoKHR = struct_VkPipelineLibraryCreateInfoKHR;
pub const struct_VkPresentIdKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pPresentIds: [*c]const u64 = @import("std").mem.zeroes([*c]const u64),
};
pub const VkPresentIdKHR = struct_VkPresentIdKHR;
pub const struct_VkPhysicalDevicePresentIdFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentId: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePresentIdFeaturesKHR = struct_VkPhysicalDevicePresentIdFeaturesKHR;
pub const VK_VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHR: c_int = 0;
pub const VK_VIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHR: c_int = 3;
pub const VK_VIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_TUNING_MODE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeTuningModeKHR = c_uint;
pub const VkVideoEncodeTuningModeKHR = enum_VkVideoEncodeTuningModeKHR;
pub const VK_VIDEO_ENCODE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeFlagBitsKHR = c_uint;
pub const VkVideoEncodeFlagBitsKHR = enum_VkVideoEncodeFlagBitsKHR;
pub const VkVideoEncodeFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeCapabilityFlagBitsKHR = c_uint;
pub const VkVideoEncodeCapabilityFlagBitsKHR = enum_VkVideoEncodeCapabilityFlagBitsKHR;
pub const VkVideoEncodeCapabilityFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHR: c_int = 0;
pub const VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_RATE_CONTROL_MODE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeRateControlModeFlagBitsKHR = c_uint;
pub const VkVideoEncodeRateControlModeFlagBitsKHR = enum_VkVideoEncodeRateControlModeFlagBitsKHR;
pub const VkVideoEncodeRateControlModeFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_FEEDBACK_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeFeedbackFlagBitsKHR = c_uint;
pub const VkVideoEncodeFeedbackFlagBitsKHR = enum_VkVideoEncodeFeedbackFlagBitsKHR;
pub const VkVideoEncodeFeedbackFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_USAGE_DEFAULT_KHR: c_int = 0;
pub const VK_VIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_USAGE_STREAMING_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR: c_int = 8;
pub const VK_VIDEO_ENCODE_USAGE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeUsageFlagBitsKHR = c_uint;
pub const VkVideoEncodeUsageFlagBitsKHR = enum_VkVideoEncodeUsageFlagBitsKHR;
pub const VkVideoEncodeUsageFlagsKHR = VkFlags;
pub const VK_VIDEO_ENCODE_CONTENT_DEFAULT_KHR: c_int = 0;
pub const VK_VIDEO_ENCODE_CONTENT_CAMERA_BIT_KHR: c_int = 1;
pub const VK_VIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR: c_int = 2;
pub const VK_VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR: c_int = 4;
pub const VK_VIDEO_ENCODE_CONTENT_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkVideoEncodeContentFlagBitsKHR = c_uint;
pub const VkVideoEncodeContentFlagBitsKHR = enum_VkVideoEncodeContentFlagBitsKHR;
pub const VkVideoEncodeContentFlagsKHR = VkFlags;
pub const VkVideoEncodeRateControlFlagsKHR = VkFlags;
pub const struct_VkVideoEncodeInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoEncodeFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeFlagsKHR),
    dstBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    dstBufferOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    dstBufferRange: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    srcPictureResource: VkVideoPictureResourceInfoKHR = @import("std").mem.zeroes(VkVideoPictureResourceInfoKHR),
    pSetupReferenceSlot: [*c]const VkVideoReferenceSlotInfoKHR = @import("std").mem.zeroes([*c]const VkVideoReferenceSlotInfoKHR),
    referenceSlotCount: u32 = @import("std").mem.zeroes(u32),
    pReferenceSlots: [*c]const VkVideoReferenceSlotInfoKHR = @import("std").mem.zeroes([*c]const VkVideoReferenceSlotInfoKHR),
    precedingExternallyEncodedBytes: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeInfoKHR = struct_VkVideoEncodeInfoKHR;
pub const struct_VkVideoEncodeCapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkVideoEncodeCapabilityFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeCapabilityFlagsKHR),
    rateControlModes: VkVideoEncodeRateControlModeFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeRateControlModeFlagsKHR),
    maxRateControlLayers: u32 = @import("std").mem.zeroes(u32),
    maxBitrate: u64 = @import("std").mem.zeroes(u64),
    maxQualityLevels: u32 = @import("std").mem.zeroes(u32),
    encodeInputPictureGranularity: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    supportedEncodeFeedbackFlags: VkVideoEncodeFeedbackFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeFeedbackFlagsKHR),
};
pub const VkVideoEncodeCapabilitiesKHR = struct_VkVideoEncodeCapabilitiesKHR;
pub const struct_VkQueryPoolVideoEncodeFeedbackCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    encodeFeedbackFlags: VkVideoEncodeFeedbackFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeFeedbackFlagsKHR),
};
pub const VkQueryPoolVideoEncodeFeedbackCreateInfoKHR = struct_VkQueryPoolVideoEncodeFeedbackCreateInfoKHR;
pub const struct_VkVideoEncodeUsageInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    videoUsageHints: VkVideoEncodeUsageFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeUsageFlagsKHR),
    videoContentHints: VkVideoEncodeContentFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeContentFlagsKHR),
    tuningMode: VkVideoEncodeTuningModeKHR = @import("std").mem.zeroes(VkVideoEncodeTuningModeKHR),
};
pub const VkVideoEncodeUsageInfoKHR = struct_VkVideoEncodeUsageInfoKHR;
pub const struct_VkVideoEncodeRateControlLayerInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    averageBitrate: u64 = @import("std").mem.zeroes(u64),
    maxBitrate: u64 = @import("std").mem.zeroes(u64),
    frameRateNumerator: u32 = @import("std").mem.zeroes(u32),
    frameRateDenominator: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeRateControlLayerInfoKHR = struct_VkVideoEncodeRateControlLayerInfoKHR;
pub const struct_VkVideoEncodeRateControlInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkVideoEncodeRateControlFlagsKHR = @import("std").mem.zeroes(VkVideoEncodeRateControlFlagsKHR),
    rateControlMode: VkVideoEncodeRateControlModeFlagBitsKHR = @import("std").mem.zeroes(VkVideoEncodeRateControlModeFlagBitsKHR),
    layerCount: u32 = @import("std").mem.zeroes(u32),
    pLayers: [*c]const VkVideoEncodeRateControlLayerInfoKHR = @import("std").mem.zeroes([*c]const VkVideoEncodeRateControlLayerInfoKHR),
    virtualBufferSizeInMs: u32 = @import("std").mem.zeroes(u32),
    initialVirtualBufferSizeInMs: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeRateControlInfoKHR = struct_VkVideoEncodeRateControlInfoKHR;
pub const struct_VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pVideoProfile: [*c]const VkVideoProfileInfoKHR = @import("std").mem.zeroes([*c]const VkVideoProfileInfoKHR),
    qualityLevel: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR = struct_VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR;
pub const struct_VkVideoEncodeQualityLevelPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    preferredRateControlMode: VkVideoEncodeRateControlModeFlagBitsKHR = @import("std").mem.zeroes(VkVideoEncodeRateControlModeFlagBitsKHR),
    preferredRateControlLayerCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeQualityLevelPropertiesKHR = struct_VkVideoEncodeQualityLevelPropertiesKHR;
pub const struct_VkVideoEncodeQualityLevelInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    qualityLevel: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoEncodeQualityLevelInfoKHR = struct_VkVideoEncodeQualityLevelInfoKHR;
pub const struct_VkVideoEncodeSessionParametersGetInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    videoSessionParameters: VkVideoSessionParametersKHR = @import("std").mem.zeroes(VkVideoSessionParametersKHR),
};
pub const VkVideoEncodeSessionParametersGetInfoKHR = struct_VkVideoEncodeSessionParametersGetInfoKHR;
pub const struct_VkVideoEncodeSessionParametersFeedbackInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    hasOverrides: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkVideoEncodeSessionParametersFeedbackInfoKHR = struct_VkVideoEncodeSessionParametersFeedbackInfoKHR;
pub const PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR, [*c]VkVideoEncodeQualityLevelPropertiesKHR) callconv(.C) VkResult;
pub const PFN_vkGetEncodedVideoSessionParametersKHR = ?*const fn (VkDevice, [*c]const VkVideoEncodeSessionParametersGetInfoKHR, [*c]VkVideoEncodeSessionParametersFeedbackInfoKHR, [*c]usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkCmdEncodeVideoKHR = ?*const fn (VkCommandBuffer, [*c]const VkVideoEncodeInfoKHR) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR(physicalDevice: VkPhysicalDevice, pQualityLevelInfo: [*c]const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR, pQualityLevelProperties: [*c]VkVideoEncodeQualityLevelPropertiesKHR) VkResult;
pub extern fn vkGetEncodedVideoSessionParametersKHR(device: VkDevice, pVideoSessionParametersInfo: [*c]const VkVideoEncodeSessionParametersGetInfoKHR, pFeedbackInfo: [*c]VkVideoEncodeSessionParametersFeedbackInfoKHR, pDataSize: [*c]usize, pData: ?*anyopaque) VkResult;
pub extern fn vkCmdEncodeVideoKHR(commandBuffer: VkCommandBuffer, pEncodeInfo: [*c]const VkVideoEncodeInfoKHR) void;
pub const VkPipelineStageFlags2KHR = VkPipelineStageFlags2;
pub const VkPipelineStageFlagBits2KHR = VkPipelineStageFlagBits2;
pub const VkAccessFlags2KHR = VkAccessFlags2;
pub const VkAccessFlagBits2KHR = VkAccessFlagBits2;
pub const VkSubmitFlagBitsKHR = VkSubmitFlagBits;
pub const VkSubmitFlagsKHR = VkSubmitFlags;
pub const VkMemoryBarrier2KHR = VkMemoryBarrier2;
pub const VkBufferMemoryBarrier2KHR = VkBufferMemoryBarrier2;
pub const VkImageMemoryBarrier2KHR = VkImageMemoryBarrier2;
pub const VkDependencyInfoKHR = VkDependencyInfo;
pub const VkSubmitInfo2KHR = VkSubmitInfo2;
pub const VkSemaphoreSubmitInfoKHR = VkSemaphoreSubmitInfo;
pub const VkCommandBufferSubmitInfoKHR = VkCommandBufferSubmitInfo;
pub const VkPhysicalDeviceSynchronization2FeaturesKHR = VkPhysicalDeviceSynchronization2Features;
pub const struct_VkQueueFamilyCheckpointProperties2NV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    checkpointExecutionStageMask: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
};
pub const VkQueueFamilyCheckpointProperties2NV = struct_VkQueueFamilyCheckpointProperties2NV;
pub const struct_VkCheckpointData2NV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    stage: VkPipelineStageFlags2 = @import("std").mem.zeroes(VkPipelineStageFlags2),
    pCheckpointMarker: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkCheckpointData2NV = struct_VkCheckpointData2NV;
pub const PFN_vkCmdSetEvent2KHR = ?*const fn (VkCommandBuffer, VkEvent, [*c]const VkDependencyInfo) callconv(.C) void;
pub const PFN_vkCmdResetEvent2KHR = ?*const fn (VkCommandBuffer, VkEvent, VkPipelineStageFlags2) callconv(.C) void;
pub const PFN_vkCmdWaitEvents2KHR = ?*const fn (VkCommandBuffer, u32, [*c]const VkEvent, [*c]const VkDependencyInfo) callconv(.C) void;
pub const PFN_vkCmdPipelineBarrier2KHR = ?*const fn (VkCommandBuffer, [*c]const VkDependencyInfo) callconv(.C) void;
pub const PFN_vkCmdWriteTimestamp2KHR = ?*const fn (VkCommandBuffer, VkPipelineStageFlags2, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkQueueSubmit2KHR = ?*const fn (VkQueue, u32, [*c]const VkSubmitInfo2, VkFence) callconv(.C) VkResult;
pub const PFN_vkCmdWriteBufferMarker2AMD = ?*const fn (VkCommandBuffer, VkPipelineStageFlags2, VkBuffer, VkDeviceSize, u32) callconv(.C) void;
pub const PFN_vkGetQueueCheckpointData2NV = ?*const fn (VkQueue, [*c]u32, [*c]VkCheckpointData2NV) callconv(.C) void;
pub extern fn vkCmdSetEvent2KHR(commandBuffer: VkCommandBuffer, event: VkEvent, pDependencyInfo: [*c]const VkDependencyInfo) void;
pub extern fn vkCmdResetEvent2KHR(commandBuffer: VkCommandBuffer, event: VkEvent, stageMask: VkPipelineStageFlags2) void;
pub extern fn vkCmdWaitEvents2KHR(commandBuffer: VkCommandBuffer, eventCount: u32, pEvents: [*c]const VkEvent, pDependencyInfos: [*c]const VkDependencyInfo) void;
pub extern fn vkCmdPipelineBarrier2KHR(commandBuffer: VkCommandBuffer, pDependencyInfo: [*c]const VkDependencyInfo) void;
pub extern fn vkCmdWriteTimestamp2KHR(commandBuffer: VkCommandBuffer, stage: VkPipelineStageFlags2, queryPool: VkQueryPool, query: u32) void;
pub extern fn vkQueueSubmit2KHR(queue: VkQueue, submitCount: u32, pSubmits: [*c]const VkSubmitInfo2, fence: VkFence) VkResult;
pub extern fn vkCmdWriteBufferMarker2AMD(commandBuffer: VkCommandBuffer, stage: VkPipelineStageFlags2, dstBuffer: VkBuffer, dstOffset: VkDeviceSize, marker: u32) void;
pub extern fn vkGetQueueCheckpointData2NV(queue: VkQueue, pCheckpointDataCount: [*c]u32, pCheckpointData: [*c]VkCheckpointData2NV) void;
pub const struct_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentShaderBarycentric: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR = struct_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR;
pub const struct_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    triStripVertexOrderIndependentOfProvokingVertex: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR = struct_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR;
pub const struct_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderSubgroupUniformControlFlow: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR = struct_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR;
pub const VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR = VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures;
pub const struct_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    workgroupMemoryExplicitLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
    workgroupMemoryExplicitLayoutScalarBlockLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
    workgroupMemoryExplicitLayout8BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    workgroupMemoryExplicitLayout16BitAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR = struct_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR;
pub const VkCopyBufferInfo2KHR = VkCopyBufferInfo2;
pub const VkCopyImageInfo2KHR = VkCopyImageInfo2;
pub const VkCopyBufferToImageInfo2KHR = VkCopyBufferToImageInfo2;
pub const VkCopyImageToBufferInfo2KHR = VkCopyImageToBufferInfo2;
pub const VkBlitImageInfo2KHR = VkBlitImageInfo2;
pub const VkResolveImageInfo2KHR = VkResolveImageInfo2;
pub const VkBufferCopy2KHR = VkBufferCopy2;
pub const VkImageCopy2KHR = VkImageCopy2;
pub const VkImageBlit2KHR = VkImageBlit2;
pub const VkBufferImageCopy2KHR = VkBufferImageCopy2;
pub const VkImageResolve2KHR = VkImageResolve2;
pub const PFN_vkCmdCopyBuffer2KHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyBufferInfo2) callconv(.C) void;
pub const PFN_vkCmdCopyImage2KHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyImageInfo2) callconv(.C) void;
pub const PFN_vkCmdCopyBufferToImage2KHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyBufferToImageInfo2) callconv(.C) void;
pub const PFN_vkCmdCopyImageToBuffer2KHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyImageToBufferInfo2) callconv(.C) void;
pub const PFN_vkCmdBlitImage2KHR = ?*const fn (VkCommandBuffer, [*c]const VkBlitImageInfo2) callconv(.C) void;
pub const PFN_vkCmdResolveImage2KHR = ?*const fn (VkCommandBuffer, [*c]const VkResolveImageInfo2) callconv(.C) void;
pub extern fn vkCmdCopyBuffer2KHR(commandBuffer: VkCommandBuffer, pCopyBufferInfo: [*c]const VkCopyBufferInfo2) void;
pub extern fn vkCmdCopyImage2KHR(commandBuffer: VkCommandBuffer, pCopyImageInfo: [*c]const VkCopyImageInfo2) void;
pub extern fn vkCmdCopyBufferToImage2KHR(commandBuffer: VkCommandBuffer, pCopyBufferToImageInfo: [*c]const VkCopyBufferToImageInfo2) void;
pub extern fn vkCmdCopyImageToBuffer2KHR(commandBuffer: VkCommandBuffer, pCopyImageToBufferInfo: [*c]const VkCopyImageToBufferInfo2) void;
pub extern fn vkCmdBlitImage2KHR(commandBuffer: VkCommandBuffer, pBlitImageInfo: [*c]const VkBlitImageInfo2) void;
pub extern fn vkCmdResolveImage2KHR(commandBuffer: VkCommandBuffer, pResolveImageInfo: [*c]const VkResolveImageInfo2) void;
pub const VkFormatFeatureFlags2KHR = VkFormatFeatureFlags2;
pub const VkFormatFeatureFlagBits2KHR = VkFormatFeatureFlagBits2;
pub const VkFormatProperties3KHR = VkFormatProperties3;
pub const struct_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingMaintenance1: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rayTracingPipelineTraceRaysIndirect2: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR = struct_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR;
pub const struct_VkTraceRaysIndirectCommand2KHR = extern struct {
    raygenShaderRecordAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    raygenShaderRecordSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    missShaderBindingTableAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    missShaderBindingTableSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    missShaderBindingTableStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    hitShaderBindingTableAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    hitShaderBindingTableSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    hitShaderBindingTableStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    callableShaderBindingTableAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    callableShaderBindingTableSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    callableShaderBindingTableStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
    depth: u32 = @import("std").mem.zeroes(u32),
};
pub const VkTraceRaysIndirectCommand2KHR = struct_VkTraceRaysIndirectCommand2KHR;
pub const PFN_vkCmdTraceRaysIndirect2KHR = ?*const fn (VkCommandBuffer, VkDeviceAddress) callconv(.C) void;
pub extern fn vkCmdTraceRaysIndirect2KHR(commandBuffer: VkCommandBuffer, indirectDeviceAddress: VkDeviceAddress) void;
pub const VkPhysicalDeviceMaintenance4FeaturesKHR = VkPhysicalDeviceMaintenance4Features;
pub const VkPhysicalDeviceMaintenance4PropertiesKHR = VkPhysicalDeviceMaintenance4Properties;
pub const VkDeviceBufferMemoryRequirementsKHR = VkDeviceBufferMemoryRequirements;
pub const VkDeviceImageMemoryRequirementsKHR = VkDeviceImageMemoryRequirements;
pub const PFN_vkGetDeviceBufferMemoryRequirementsKHR = ?*const fn (VkDevice, [*c]const VkDeviceBufferMemoryRequirements, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetDeviceImageMemoryRequirementsKHR = ?*const fn (VkDevice, [*c]const VkDeviceImageMemoryRequirements, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkGetDeviceImageSparseMemoryRequirementsKHR = ?*const fn (VkDevice, [*c]const VkDeviceImageMemoryRequirements, [*c]u32, [*c]VkSparseImageMemoryRequirements2) callconv(.C) void;
pub extern fn vkGetDeviceBufferMemoryRequirementsKHR(device: VkDevice, pInfo: [*c]const VkDeviceBufferMemoryRequirements, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetDeviceImageMemoryRequirementsKHR(device: VkDevice, pInfo: [*c]const VkDeviceImageMemoryRequirements, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkGetDeviceImageSparseMemoryRequirementsKHR(device: VkDevice, pInfo: [*c]const VkDeviceImageMemoryRequirements, pSparseMemoryRequirementCount: [*c]u32, pSparseMemoryRequirements: [*c]VkSparseImageMemoryRequirements2) void;
pub const struct_VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderSubgroupRotate: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSubgroupRotateClustered: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR = struct_VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR;
pub const struct_VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderMaximalReconvergence: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR = struct_VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR;
pub const VkPipelineCreateFlags2KHR = VkFlags64;
pub const VkPipelineCreateFlagBits2KHR = VkFlags64;
pub const VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT_KHR: VkPipelineCreateFlagBits2KHR = 1;
pub const VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT_KHR: VkPipelineCreateFlagBits2KHR = 2;
pub const VK_PIPELINE_CREATE_2_DERIVATIVE_BIT_KHR: VkPipelineCreateFlagBits2KHR = 4;
pub const VK_PIPELINE_CREATE_2_ENABLE_LEGACY_DITHERING_BIT_EXT: VkPipelineCreateFlagBits2KHR = 17179869184;
pub const VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR: VkPipelineCreateFlagBits2KHR = 8;
pub const VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT_KHR: VkPipelineCreateFlagBits2KHR = 16;
pub const VK_PIPELINE_CREATE_2_DEFER_COMPILE_BIT_NV: VkPipelineCreateFlagBits2KHR = 32;
pub const VK_PIPELINE_CREATE_2_CAPTURE_STATISTICS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 64;
pub const VK_PIPELINE_CREATE_2_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 128;
pub const VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_KHR: VkPipelineCreateFlagBits2KHR = 256;
pub const VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT_KHR: VkPipelineCreateFlagBits2KHR = 512;
pub const VK_PIPELINE_CREATE_2_LINK_TIME_OPTIMIZATION_BIT_EXT: VkPipelineCreateFlagBits2KHR = 1024;
pub const VK_PIPELINE_CREATE_2_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT: VkPipelineCreateFlagBits2KHR = 8388608;
pub const VK_PIPELINE_CREATE_2_LIBRARY_BIT_KHR: VkPipelineCreateFlagBits2KHR = 2048;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR: VkPipelineCreateFlagBits2KHR = 4096;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_AABBS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 8192;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 16384;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 32768;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 65536;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR: VkPipelineCreateFlagBits2KHR = 131072;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR: VkPipelineCreateFlagBits2KHR = 524288;
pub const VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_NV: VkPipelineCreateFlagBits2KHR = 262144;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_MOTION_BIT_NV: VkPipelineCreateFlagBits2KHR = 1048576;
pub const VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR: VkPipelineCreateFlagBits2KHR = 2097152;
pub const VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT: VkPipelineCreateFlagBits2KHR = 4194304;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT: VkPipelineCreateFlagBits2KHR = 16777216;
pub const VK_PIPELINE_CREATE_2_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT: VkPipelineCreateFlagBits2KHR = 33554432;
pub const VK_PIPELINE_CREATE_2_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT: VkPipelineCreateFlagBits2KHR = 67108864;
pub const VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT_EXT: VkPipelineCreateFlagBits2KHR = 134217728;
pub const VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT_EXT: VkPipelineCreateFlagBits2KHR = 1073741824;
pub const VK_PIPELINE_CREATE_2_RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV: VkPipelineCreateFlagBits2KHR = 268435456;
pub const VK_PIPELINE_CREATE_2_DESCRIPTOR_BUFFER_BIT_EXT: VkPipelineCreateFlagBits2KHR = 536870912;
pub const VkBufferUsageFlags2KHR = VkFlags64;
pub const VkBufferUsageFlagBits2KHR = VkFlags64;
pub const VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT_KHR: VkBufferUsageFlagBits2KHR = 1;
pub const VK_BUFFER_USAGE_2_TRANSFER_DST_BIT_KHR: VkBufferUsageFlagBits2KHR = 2;
pub const VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 4;
pub const VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 8;
pub const VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 16;
pub const VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 32;
pub const VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 64;
pub const VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 128;
pub const VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT_KHR: VkBufferUsageFlagBits2KHR = 256;
pub const VK_BUFFER_USAGE_2_EXECUTION_GRAPH_SCRATCH_BIT_AMDX: VkBufferUsageFlagBits2KHR = 33554432;
pub const VK_BUFFER_USAGE_2_CONDITIONAL_RENDERING_BIT_EXT: VkBufferUsageFlagBits2KHR = 512;
pub const VK_BUFFER_USAGE_2_SHADER_BINDING_TABLE_BIT_KHR: VkBufferUsageFlagBits2KHR = 1024;
pub const VK_BUFFER_USAGE_2_RAY_TRACING_BIT_NV: VkBufferUsageFlagBits2KHR = 1024;
pub const VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT: VkBufferUsageFlagBits2KHR = 2048;
pub const VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT: VkBufferUsageFlagBits2KHR = 4096;
pub const VK_BUFFER_USAGE_2_VIDEO_DECODE_SRC_BIT_KHR: VkBufferUsageFlagBits2KHR = 8192;
pub const VK_BUFFER_USAGE_2_VIDEO_DECODE_DST_BIT_KHR: VkBufferUsageFlagBits2KHR = 16384;
pub const VK_BUFFER_USAGE_2_VIDEO_ENCODE_DST_BIT_KHR: VkBufferUsageFlagBits2KHR = 32768;
pub const VK_BUFFER_USAGE_2_VIDEO_ENCODE_SRC_BIT_KHR: VkBufferUsageFlagBits2KHR = 65536;
pub const VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT_KHR: VkBufferUsageFlagBits2KHR = 131072;
pub const VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR: VkBufferUsageFlagBits2KHR = 524288;
pub const VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR: VkBufferUsageFlagBits2KHR = 1048576;
pub const VK_BUFFER_USAGE_2_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT: VkBufferUsageFlagBits2KHR = 2097152;
pub const VK_BUFFER_USAGE_2_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT: VkBufferUsageFlagBits2KHR = 4194304;
pub const VK_BUFFER_USAGE_2_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT: VkBufferUsageFlagBits2KHR = 67108864;
pub const VK_BUFFER_USAGE_2_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT: VkBufferUsageFlagBits2KHR = 8388608;
pub const VK_BUFFER_USAGE_2_MICROMAP_STORAGE_BIT_EXT: VkBufferUsageFlagBits2KHR = 16777216;
pub const struct_VkPhysicalDeviceMaintenance5FeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maintenance5: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMaintenance5FeaturesKHR = struct_VkPhysicalDeviceMaintenance5FeaturesKHR;
pub const struct_VkPhysicalDeviceMaintenance5PropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    earlyFragmentMultisampleCoverageAfterSampleCounting: VkBool32 = @import("std").mem.zeroes(VkBool32),
    earlyFragmentSampleMaskTestBeforeSampleCounting: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthStencilSwizzleOneSupport: VkBool32 = @import("std").mem.zeroes(VkBool32),
    polygonModePointSize: VkBool32 = @import("std").mem.zeroes(VkBool32),
    nonStrictSinglePixelWideLinesUseParallelogram: VkBool32 = @import("std").mem.zeroes(VkBool32),
    nonStrictWideLinesUseParallelogram: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMaintenance5PropertiesKHR = struct_VkPhysicalDeviceMaintenance5PropertiesKHR;
pub const struct_VkRenderingAreaInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    viewMask: u32 = @import("std").mem.zeroes(u32),
    colorAttachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorAttachmentFormats: [*c]const VkFormat = @import("std").mem.zeroes([*c]const VkFormat),
    depthAttachmentFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    stencilAttachmentFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
};
pub const VkRenderingAreaInfoKHR = struct_VkRenderingAreaInfoKHR;
pub const struct_VkImageSubresource2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageSubresource: VkImageSubresource = @import("std").mem.zeroes(VkImageSubresource),
};
pub const VkImageSubresource2KHR = struct_VkImageSubresource2KHR;
pub const struct_VkDeviceImageSubresourceInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pCreateInfo: [*c]const VkImageCreateInfo = @import("std").mem.zeroes([*c]const VkImageCreateInfo),
    pSubresource: [*c]const VkImageSubresource2KHR = @import("std").mem.zeroes([*c]const VkImageSubresource2KHR),
};
pub const VkDeviceImageSubresourceInfoKHR = struct_VkDeviceImageSubresourceInfoKHR;
pub const struct_VkSubresourceLayout2KHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    subresourceLayout: VkSubresourceLayout = @import("std").mem.zeroes(VkSubresourceLayout),
};
pub const VkSubresourceLayout2KHR = struct_VkSubresourceLayout2KHR;
pub const struct_VkPipelineCreateFlags2CreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCreateFlags2KHR = @import("std").mem.zeroes(VkPipelineCreateFlags2KHR),
};
pub const VkPipelineCreateFlags2CreateInfoKHR = struct_VkPipelineCreateFlags2CreateInfoKHR;
pub const struct_VkBufferUsageFlags2CreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    usage: VkBufferUsageFlags2KHR = @import("std").mem.zeroes(VkBufferUsageFlags2KHR),
};
pub const VkBufferUsageFlags2CreateInfoKHR = struct_VkBufferUsageFlags2CreateInfoKHR;
pub const PFN_vkCmdBindIndexBuffer2KHR = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkDeviceSize, VkIndexType) callconv(.C) void;
pub const PFN_vkGetRenderingAreaGranularityKHR = ?*const fn (VkDevice, [*c]const VkRenderingAreaInfoKHR, [*c]VkExtent2D) callconv(.C) void;
pub const PFN_vkGetDeviceImageSubresourceLayoutKHR = ?*const fn (VkDevice, [*c]const VkDeviceImageSubresourceInfoKHR, [*c]VkSubresourceLayout2KHR) callconv(.C) void;
pub const PFN_vkGetImageSubresourceLayout2KHR = ?*const fn (VkDevice, VkImage, [*c]const VkImageSubresource2KHR, [*c]VkSubresourceLayout2KHR) callconv(.C) void;
pub extern fn vkCmdBindIndexBuffer2KHR(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, size: VkDeviceSize, indexType: VkIndexType) void;
pub extern fn vkGetRenderingAreaGranularityKHR(device: VkDevice, pRenderingAreaInfo: [*c]const VkRenderingAreaInfoKHR, pGranularity: [*c]VkExtent2D) void;
pub extern fn vkGetDeviceImageSubresourceLayoutKHR(device: VkDevice, pInfo: [*c]const VkDeviceImageSubresourceInfoKHR, pLayout: [*c]VkSubresourceLayout2KHR) void;
pub extern fn vkGetImageSubresourceLayout2KHR(device: VkDevice, image: VkImage, pSubresource: [*c]const VkImageSubresource2KHR, pLayout: [*c]VkSubresourceLayout2KHR) void;
pub const struct_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingPositionFetch: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR = struct_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR;
pub const VK_COMPONENT_TYPE_FLOAT16_KHR: c_int = 0;
pub const VK_COMPONENT_TYPE_FLOAT32_KHR: c_int = 1;
pub const VK_COMPONENT_TYPE_FLOAT64_KHR: c_int = 2;
pub const VK_COMPONENT_TYPE_SINT8_KHR: c_int = 3;
pub const VK_COMPONENT_TYPE_SINT16_KHR: c_int = 4;
pub const VK_COMPONENT_TYPE_SINT32_KHR: c_int = 5;
pub const VK_COMPONENT_TYPE_SINT64_KHR: c_int = 6;
pub const VK_COMPONENT_TYPE_UINT8_KHR: c_int = 7;
pub const VK_COMPONENT_TYPE_UINT16_KHR: c_int = 8;
pub const VK_COMPONENT_TYPE_UINT32_KHR: c_int = 9;
pub const VK_COMPONENT_TYPE_UINT64_KHR: c_int = 10;
pub const VK_COMPONENT_TYPE_FLOAT16_NV: c_int = 0;
pub const VK_COMPONENT_TYPE_FLOAT32_NV: c_int = 1;
pub const VK_COMPONENT_TYPE_FLOAT64_NV: c_int = 2;
pub const VK_COMPONENT_TYPE_SINT8_NV: c_int = 3;
pub const VK_COMPONENT_TYPE_SINT16_NV: c_int = 4;
pub const VK_COMPONENT_TYPE_SINT32_NV: c_int = 5;
pub const VK_COMPONENT_TYPE_SINT64_NV: c_int = 6;
pub const VK_COMPONENT_TYPE_UINT8_NV: c_int = 7;
pub const VK_COMPONENT_TYPE_UINT16_NV: c_int = 8;
pub const VK_COMPONENT_TYPE_UINT32_NV: c_int = 9;
pub const VK_COMPONENT_TYPE_UINT64_NV: c_int = 10;
pub const VK_COMPONENT_TYPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkComponentTypeKHR = c_uint;
pub const VkComponentTypeKHR = enum_VkComponentTypeKHR;
pub const VK_SCOPE_DEVICE_KHR: c_int = 1;
pub const VK_SCOPE_WORKGROUP_KHR: c_int = 2;
pub const VK_SCOPE_SUBGROUP_KHR: c_int = 3;
pub const VK_SCOPE_QUEUE_FAMILY_KHR: c_int = 5;
pub const VK_SCOPE_DEVICE_NV: c_int = 1;
pub const VK_SCOPE_WORKGROUP_NV: c_int = 2;
pub const VK_SCOPE_SUBGROUP_NV: c_int = 3;
pub const VK_SCOPE_QUEUE_FAMILY_NV: c_int = 5;
pub const VK_SCOPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkScopeKHR = c_uint;
pub const VkScopeKHR = enum_VkScopeKHR;
pub const struct_VkCooperativeMatrixPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    MSize: u32 = @import("std").mem.zeroes(u32),
    NSize: u32 = @import("std").mem.zeroes(u32),
    KSize: u32 = @import("std").mem.zeroes(u32),
    AType: VkComponentTypeKHR = @import("std").mem.zeroes(VkComponentTypeKHR),
    BType: VkComponentTypeKHR = @import("std").mem.zeroes(VkComponentTypeKHR),
    CType: VkComponentTypeKHR = @import("std").mem.zeroes(VkComponentTypeKHR),
    ResultType: VkComponentTypeKHR = @import("std").mem.zeroes(VkComponentTypeKHR),
    saturatingAccumulation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    scope: VkScopeKHR = @import("std").mem.zeroes(VkScopeKHR),
};
pub const VkCooperativeMatrixPropertiesKHR = struct_VkCooperativeMatrixPropertiesKHR;
pub const struct_VkPhysicalDeviceCooperativeMatrixFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cooperativeMatrix: VkBool32 = @import("std").mem.zeroes(VkBool32),
    cooperativeMatrixRobustBufferAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCooperativeMatrixFeaturesKHR = struct_VkPhysicalDeviceCooperativeMatrixFeaturesKHR;
pub const struct_VkPhysicalDeviceCooperativeMatrixPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cooperativeMatrixSupportedStages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
};
pub const VkPhysicalDeviceCooperativeMatrixPropertiesKHR = struct_VkPhysicalDeviceCooperativeMatrixPropertiesKHR;
pub const PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkCooperativeMatrixPropertiesKHR) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkCooperativeMatrixPropertiesKHR) VkResult;
pub const STD_VIDEO_AV1_PROFILE_MAIN: c_int = 0;
pub const STD_VIDEO_AV1_PROFILE_HIGH: c_int = 1;
pub const STD_VIDEO_AV1_PROFILE_PROFESSIONAL: c_int = 2;
pub const STD_VIDEO_AV1_PROFILE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_PROFILE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1Profile = c_uint;
pub const StdVideoAV1Profile = enum_StdVideoAV1Profile;
pub const STD_VIDEO_AV1_LEVEL_2_0: c_int = 0;
pub const STD_VIDEO_AV1_LEVEL_2_1: c_int = 1;
pub const STD_VIDEO_AV1_LEVEL_2_2: c_int = 2;
pub const STD_VIDEO_AV1_LEVEL_2_3: c_int = 3;
pub const STD_VIDEO_AV1_LEVEL_3_0: c_int = 4;
pub const STD_VIDEO_AV1_LEVEL_3_1: c_int = 5;
pub const STD_VIDEO_AV1_LEVEL_3_2: c_int = 6;
pub const STD_VIDEO_AV1_LEVEL_3_3: c_int = 7;
pub const STD_VIDEO_AV1_LEVEL_4_0: c_int = 8;
pub const STD_VIDEO_AV1_LEVEL_4_1: c_int = 9;
pub const STD_VIDEO_AV1_LEVEL_4_2: c_int = 10;
pub const STD_VIDEO_AV1_LEVEL_4_3: c_int = 11;
pub const STD_VIDEO_AV1_LEVEL_5_0: c_int = 12;
pub const STD_VIDEO_AV1_LEVEL_5_1: c_int = 13;
pub const STD_VIDEO_AV1_LEVEL_5_2: c_int = 14;
pub const STD_VIDEO_AV1_LEVEL_5_3: c_int = 15;
pub const STD_VIDEO_AV1_LEVEL_6_0: c_int = 16;
pub const STD_VIDEO_AV1_LEVEL_6_1: c_int = 17;
pub const STD_VIDEO_AV1_LEVEL_6_2: c_int = 18;
pub const STD_VIDEO_AV1_LEVEL_6_3: c_int = 19;
pub const STD_VIDEO_AV1_LEVEL_7_0: c_int = 20;
pub const STD_VIDEO_AV1_LEVEL_7_1: c_int = 21;
pub const STD_VIDEO_AV1_LEVEL_7_2: c_int = 22;
pub const STD_VIDEO_AV1_LEVEL_7_3: c_int = 23;
pub const STD_VIDEO_AV1_LEVEL_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_LEVEL_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1Level = c_uint;
pub const StdVideoAV1Level = enum_StdVideoAV1Level;
pub const STD_VIDEO_AV1_FRAME_TYPE_KEY: c_int = 0;
pub const STD_VIDEO_AV1_FRAME_TYPE_INTER: c_int = 1;
pub const STD_VIDEO_AV1_FRAME_TYPE_INTRA_ONLY: c_int = 2;
pub const STD_VIDEO_AV1_FRAME_TYPE_SWITCH: c_int = 3;
pub const STD_VIDEO_AV1_FRAME_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_FRAME_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1FrameType = c_uint;
pub const StdVideoAV1FrameType = enum_StdVideoAV1FrameType;
pub const STD_VIDEO_AV1_REFERENCE_NAME_INTRA_FRAME: c_int = 0;
pub const STD_VIDEO_AV1_REFERENCE_NAME_LAST_FRAME: c_int = 1;
pub const STD_VIDEO_AV1_REFERENCE_NAME_LAST2_FRAME: c_int = 2;
pub const STD_VIDEO_AV1_REFERENCE_NAME_LAST3_FRAME: c_int = 3;
pub const STD_VIDEO_AV1_REFERENCE_NAME_GOLDEN_FRAME: c_int = 4;
pub const STD_VIDEO_AV1_REFERENCE_NAME_BWDREF_FRAME: c_int = 5;
pub const STD_VIDEO_AV1_REFERENCE_NAME_ALTREF2_FRAME: c_int = 6;
pub const STD_VIDEO_AV1_REFERENCE_NAME_ALTREF_FRAME: c_int = 7;
pub const STD_VIDEO_AV1_REFERENCE_NAME_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_REFERENCE_NAME_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1ReferenceName = c_uint;
pub const StdVideoAV1ReferenceName = enum_StdVideoAV1ReferenceName;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP: c_int = 0;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SMOOTH: c_int = 1;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_EIGHTTAP_SHARP: c_int = 2;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_BILINEAR: c_int = 3;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_SWITCHABLE: c_int = 4;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_INTERPOLATION_FILTER_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1InterpolationFilter = c_uint;
pub const StdVideoAV1InterpolationFilter = enum_StdVideoAV1InterpolationFilter;
pub const STD_VIDEO_AV1_TX_MODE_ONLY_4X4: c_int = 0;
pub const STD_VIDEO_AV1_TX_MODE_LARGEST: c_int = 1;
pub const STD_VIDEO_AV1_TX_MODE_SELECT: c_int = 2;
pub const STD_VIDEO_AV1_TX_MODE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_TX_MODE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1TxMode = c_uint;
pub const StdVideoAV1TxMode = enum_StdVideoAV1TxMode;
pub const STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_NONE: c_int = 0;
pub const STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_WIENER: c_int = 1;
pub const STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SGRPROJ: c_int = 2;
pub const STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_SWITCHABLE: c_int = 3;
pub const STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_FRAME_RESTORATION_TYPE_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1FrameRestorationType = c_uint;
pub const StdVideoAV1FrameRestorationType = enum_StdVideoAV1FrameRestorationType;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_BT_709: c_int = 1;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_BT_UNSPECIFIED: c_int = 2;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_M: c_int = 4;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_BT_470_B_G: c_int = 5;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_BT_601: c_int = 6;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_240: c_int = 7;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_GENERIC_FILM: c_int = 8;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_BT_2020: c_int = 9;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_XYZ: c_int = 10;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_431: c_int = 11;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_SMPTE_432: c_int = 12;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_EBU_3213: c_int = 22;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_COLOR_PRIMARIES_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1ColorPrimaries = c_uint;
pub const StdVideoAV1ColorPrimaries = enum_StdVideoAV1ColorPrimaries;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_0: c_int = 0;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_709: c_int = 1;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_UNSPECIFIED: c_int = 2;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_RESERVED_3: c_int = 3;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_M: c_int = 4;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_470_B_G: c_int = 5;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_601: c_int = 6;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_240: c_int = 7;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LINEAR: c_int = 8;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100: c_int = 9;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_LOG_100_SQRT10: c_int = 10;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_IEC_61966: c_int = 11;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_1361: c_int = 12;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SRGB: c_int = 13;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_10_BIT: c_int = 14;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_BT_2020_12_BIT: c_int = 15;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_2084: c_int = 16;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_SMPTE_428: c_int = 17;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_HLG: c_int = 18;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_TRANSFER_CHARACTERISTICS_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1TransferCharacteristics = c_uint;
pub const StdVideoAV1TransferCharacteristics = enum_StdVideoAV1TransferCharacteristics;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_IDENTITY: c_int = 0;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_709: c_int = 1;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_UNSPECIFIED: c_int = 2;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_RESERVED_3: c_int = 3;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_FCC: c_int = 4;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_470_B_G: c_int = 5;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_601: c_int = 6;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_240: c_int = 7;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_YCGCO: c_int = 8;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_NCL: c_int = 9;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_BT_2020_CL: c_int = 10;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_SMPTE_2085: c_int = 11;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_NCL: c_int = 12;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_CHROMAT_CL: c_int = 13;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_ICTCP: c_int = 14;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_MATRIX_COEFFICIENTS_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1MatrixCoefficients = c_uint;
pub const StdVideoAV1MatrixCoefficients = enum_StdVideoAV1MatrixCoefficients;
pub const STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_UNKNOWN: c_int = 0;
pub const STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_VERTICAL: c_int = 1;
pub const STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_COLOCATED: c_int = 2;
pub const STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_RESERVED: c_int = 3;
pub const STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_INVALID: c_int = 2147483647;
pub const STD_VIDEO_AV1_CHROMA_SAMPLE_POSITION_MAX_ENUM: c_int = 2147483647;
pub const enum_StdVideoAV1ChromaSamplePosition = c_uint;
pub const StdVideoAV1ChromaSamplePosition = enum_StdVideoAV1ChromaSamplePosition;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:203:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1ColorConfigFlags = opaque {};
pub const StdVideoAV1ColorConfigFlags = struct_StdVideoAV1ColorConfigFlags;
pub const struct_StdVideoAV1ColorConfig = extern struct {
    flags: StdVideoAV1ColorConfigFlags = @import("std").mem.zeroes(StdVideoAV1ColorConfigFlags),
    BitDepth: u8 = @import("std").mem.zeroes(u8),
    subsampling_x: u8 = @import("std").mem.zeroes(u8),
    subsampling_y: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    color_primaries: StdVideoAV1ColorPrimaries = @import("std").mem.zeroes(StdVideoAV1ColorPrimaries),
    transfer_characteristics: StdVideoAV1TransferCharacteristics = @import("std").mem.zeroes(StdVideoAV1TransferCharacteristics),
    matrix_coefficients: StdVideoAV1MatrixCoefficients = @import("std").mem.zeroes(StdVideoAV1MatrixCoefficients),
    chroma_sample_position: StdVideoAV1ChromaSamplePosition = @import("std").mem.zeroes(StdVideoAV1ChromaSamplePosition),
};
pub const StdVideoAV1ColorConfig = struct_StdVideoAV1ColorConfig;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:223:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1TimingInfoFlags = opaque {};
pub const StdVideoAV1TimingInfoFlags = struct_StdVideoAV1TimingInfoFlags;
pub const struct_StdVideoAV1TimingInfo = extern struct {
    flags: StdVideoAV1TimingInfoFlags = @import("std").mem.zeroes(StdVideoAV1TimingInfoFlags),
    num_units_in_display_tick: u32 = @import("std").mem.zeroes(u32),
    time_scale: u32 = @import("std").mem.zeroes(u32),
    num_ticks_per_picture_minus_1: u32 = @import("std").mem.zeroes(u32),
};
pub const StdVideoAV1TimingInfo = struct_StdVideoAV1TimingInfo;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:235:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1LoopFilterFlags = opaque {};
pub const StdVideoAV1LoopFilterFlags = struct_StdVideoAV1LoopFilterFlags;
pub const struct_StdVideoAV1LoopFilter = extern struct {
    flags: StdVideoAV1LoopFilterFlags = @import("std").mem.zeroes(StdVideoAV1LoopFilterFlags),
    loop_filter_level: [4]u8 = @import("std").mem.zeroes([4]u8),
    loop_filter_sharpness: u8 = @import("std").mem.zeroes(u8),
    update_ref_delta: u8 = @import("std").mem.zeroes(u8),
    loop_filter_ref_deltas: [8]i8 = @import("std").mem.zeroes([8]i8),
    update_mode_delta: u8 = @import("std").mem.zeroes(u8),
    loop_filter_mode_deltas: [2]i8 = @import("std").mem.zeroes([2]i8),
};
pub const StdVideoAV1LoopFilter = struct_StdVideoAV1LoopFilter;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:251:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1QuantizationFlags = opaque {};
pub const StdVideoAV1QuantizationFlags = struct_StdVideoAV1QuantizationFlags;
pub const struct_StdVideoAV1Quantization = extern struct {
    flags: StdVideoAV1QuantizationFlags = @import("std").mem.zeroes(StdVideoAV1QuantizationFlags),
    base_q_idx: u8 = @import("std").mem.zeroes(u8),
    DeltaQYDc: i8 = @import("std").mem.zeroes(i8),
    DeltaQUDc: i8 = @import("std").mem.zeroes(i8),
    DeltaQUAc: i8 = @import("std").mem.zeroes(i8),
    DeltaQVDc: i8 = @import("std").mem.zeroes(i8),
    DeltaQVAc: i8 = @import("std").mem.zeroes(i8),
    qm_y: u8 = @import("std").mem.zeroes(u8),
    qm_u: u8 = @import("std").mem.zeroes(u8),
    qm_v: u8 = @import("std").mem.zeroes(u8),
};
pub const StdVideoAV1Quantization = struct_StdVideoAV1Quantization;
pub const struct_StdVideoAV1Segmentation = extern struct {
    FeatureEnabled: [8]u8 = @import("std").mem.zeroes([8]u8),
    FeatureData: [8][8]i16 = @import("std").mem.zeroes([8][8]i16),
};
pub const StdVideoAV1Segmentation = struct_StdVideoAV1Segmentation;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:275:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1TileInfoFlags = opaque {};
pub const StdVideoAV1TileInfoFlags = struct_StdVideoAV1TileInfoFlags;
pub const struct_StdVideoAV1TileInfo = extern struct {
    flags: StdVideoAV1TileInfoFlags = @import("std").mem.zeroes(StdVideoAV1TileInfoFlags),
    TileCols: u8 = @import("std").mem.zeroes(u8),
    TileRows: u8 = @import("std").mem.zeroes(u8),
    context_update_tile_id: u16 = @import("std").mem.zeroes(u16),
    tile_size_bytes_minus_1: u8 = @import("std").mem.zeroes(u8),
    reserved1: [7]u8 = @import("std").mem.zeroes([7]u8),
    pMiColStarts: [*c]const u16 = @import("std").mem.zeroes([*c]const u16),
    pMiRowStarts: [*c]const u16 = @import("std").mem.zeroes([*c]const u16),
    pWidthInSbsMinus1: [*c]const u16 = @import("std").mem.zeroes([*c]const u16),
    pHeightInSbsMinus1: [*c]const u16 = @import("std").mem.zeroes([*c]const u16),
};
pub const StdVideoAV1TileInfo = struct_StdVideoAV1TileInfo;
pub const struct_StdVideoAV1CDEF = extern struct {
    cdef_damping_minus_3: u8 = @import("std").mem.zeroes(u8),
    cdef_bits: u8 = @import("std").mem.zeroes(u8),
    cdef_y_pri_strength: [8]u8 = @import("std").mem.zeroes([8]u8),
    cdef_y_sec_strength: [8]u8 = @import("std").mem.zeroes([8]u8),
    cdef_uv_pri_strength: [8]u8 = @import("std").mem.zeroes([8]u8),
    cdef_uv_sec_strength: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const StdVideoAV1CDEF = struct_StdVideoAV1CDEF;
pub const struct_StdVideoAV1LoopRestoration = extern struct {
    FrameRestorationType: [3]StdVideoAV1FrameRestorationType = @import("std").mem.zeroes([3]StdVideoAV1FrameRestorationType),
    LoopRestorationSize: [3]u16 = @import("std").mem.zeroes([3]u16),
};
pub const StdVideoAV1LoopRestoration = struct_StdVideoAV1LoopRestoration;
pub const struct_StdVideoAV1GlobalMotion = extern struct {
    GmType: [8]u8 = @import("std").mem.zeroes([8]u8),
    gm_params: [8][6]i32 = @import("std").mem.zeroes([8][6]i32),
};
pub const StdVideoAV1GlobalMotion = struct_StdVideoAV1GlobalMotion;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:312:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1FilmGrainFlags = opaque {};
pub const StdVideoAV1FilmGrainFlags = struct_StdVideoAV1FilmGrainFlags;
pub const struct_StdVideoAV1FilmGrain = extern struct {
    flags: StdVideoAV1FilmGrainFlags = @import("std").mem.zeroes(StdVideoAV1FilmGrainFlags),
    grain_scaling_minus_8: u8 = @import("std").mem.zeroes(u8),
    ar_coeff_lag: u8 = @import("std").mem.zeroes(u8),
    ar_coeff_shift_minus_6: u8 = @import("std").mem.zeroes(u8),
    grain_scale_shift: u8 = @import("std").mem.zeroes(u8),
    grain_seed: u16 = @import("std").mem.zeroes(u16),
    film_grain_params_ref_idx: u8 = @import("std").mem.zeroes(u8),
    num_y_points: u8 = @import("std").mem.zeroes(u8),
    point_y_value: [14]u8 = @import("std").mem.zeroes([14]u8),
    point_y_scaling: [14]u8 = @import("std").mem.zeroes([14]u8),
    num_cb_points: u8 = @import("std").mem.zeroes(u8),
    point_cb_value: [10]u8 = @import("std").mem.zeroes([10]u8),
    point_cb_scaling: [10]u8 = @import("std").mem.zeroes([10]u8),
    num_cr_points: u8 = @import("std").mem.zeroes(u8),
    point_cr_value: [10]u8 = @import("std").mem.zeroes([10]u8),
    point_cr_scaling: [10]u8 = @import("std").mem.zeroes([10]u8),
    ar_coeffs_y_plus_128: [24]i8 = @import("std").mem.zeroes([24]i8),
    ar_coeffs_cb_plus_128: [25]i8 = @import("std").mem.zeroes([25]i8),
    ar_coeffs_cr_plus_128: [25]i8 = @import("std").mem.zeroes([25]i8),
    cb_mult: u8 = @import("std").mem.zeroes(u8),
    cb_luma_mult: u8 = @import("std").mem.zeroes(u8),
    cb_offset: u16 = @import("std").mem.zeroes(u16),
    cr_mult: u8 = @import("std").mem.zeroes(u8),
    cr_luma_mult: u8 = @import("std").mem.zeroes(u8),
    cr_offset: u16 = @import("std").mem.zeroes(u16),
};
pub const StdVideoAV1FilmGrain = struct_StdVideoAV1FilmGrain;
// /usr/local/include/vk_video/vulkan_video_codec_av1std.h:348:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoAV1SequenceHeaderFlags = opaque {};
pub const StdVideoAV1SequenceHeaderFlags = struct_StdVideoAV1SequenceHeaderFlags;
pub const struct_StdVideoAV1SequenceHeader = extern struct {
    flags: StdVideoAV1SequenceHeaderFlags = @import("std").mem.zeroes(StdVideoAV1SequenceHeaderFlags),
    seq_profile: StdVideoAV1Profile = @import("std").mem.zeroes(StdVideoAV1Profile),
    frame_width_bits_minus_1: u8 = @import("std").mem.zeroes(u8),
    frame_height_bits_minus_1: u8 = @import("std").mem.zeroes(u8),
    max_frame_width_minus_1: u16 = @import("std").mem.zeroes(u16),
    max_frame_height_minus_1: u16 = @import("std").mem.zeroes(u16),
    delta_frame_id_length_minus_2: u8 = @import("std").mem.zeroes(u8),
    additional_frame_id_length_minus_1: u8 = @import("std").mem.zeroes(u8),
    order_hint_bits_minus_1: u8 = @import("std").mem.zeroes(u8),
    seq_force_integer_mv: u8 = @import("std").mem.zeroes(u8),
    seq_force_screen_content_tools: u8 = @import("std").mem.zeroes(u8),
    reserved1: [5]u8 = @import("std").mem.zeroes([5]u8),
    pColorConfig: ?*const StdVideoAV1ColorConfig = @import("std").mem.zeroes(?*const StdVideoAV1ColorConfig),
    pTimingInfo: ?*const StdVideoAV1TimingInfo = @import("std").mem.zeroes(?*const StdVideoAV1TimingInfo),
};
pub const StdVideoAV1SequenceHeader = struct_StdVideoAV1SequenceHeader;
// /usr/local/include/vk_video/vulkan_video_codec_av1std_decode.h:31:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoDecodeAV1PictureInfoFlags = opaque {};
pub const StdVideoDecodeAV1PictureInfoFlags = struct_StdVideoDecodeAV1PictureInfoFlags;
pub const struct_StdVideoDecodeAV1PictureInfo = extern struct {
    flags: StdVideoDecodeAV1PictureInfoFlags = @import("std").mem.zeroes(StdVideoDecodeAV1PictureInfoFlags),
    frame_type: StdVideoAV1FrameType = @import("std").mem.zeroes(StdVideoAV1FrameType),
    current_frame_id: u32 = @import("std").mem.zeroes(u32),
    OrderHint: u8 = @import("std").mem.zeroes(u8),
    primary_ref_frame: u8 = @import("std").mem.zeroes(u8),
    refresh_frame_flags: u8 = @import("std").mem.zeroes(u8),
    reserved1: u8 = @import("std").mem.zeroes(u8),
    interpolation_filter: StdVideoAV1InterpolationFilter = @import("std").mem.zeroes(StdVideoAV1InterpolationFilter),
    TxMode: StdVideoAV1TxMode = @import("std").mem.zeroes(StdVideoAV1TxMode),
    delta_q_res: u8 = @import("std").mem.zeroes(u8),
    delta_lf_res: u8 = @import("std").mem.zeroes(u8),
    SkipModeFrame: [2]u8 = @import("std").mem.zeroes([2]u8),
    coded_denom: u8 = @import("std").mem.zeroes(u8),
    reserved2: [3]u8 = @import("std").mem.zeroes([3]u8),
    OrderHints: [8]u8 = @import("std").mem.zeroes([8]u8),
    expectedFrameId: [8]u32 = @import("std").mem.zeroes([8]u32),
    pTileInfo: ?*const StdVideoAV1TileInfo = @import("std").mem.zeroes(?*const StdVideoAV1TileInfo),
    pQuantization: ?*const StdVideoAV1Quantization = @import("std").mem.zeroes(?*const StdVideoAV1Quantization),
    pSegmentation: [*c]const StdVideoAV1Segmentation = @import("std").mem.zeroes([*c]const StdVideoAV1Segmentation),
    pLoopFilter: ?*const StdVideoAV1LoopFilter = @import("std").mem.zeroes(?*const StdVideoAV1LoopFilter),
    pCDEF: [*c]const StdVideoAV1CDEF = @import("std").mem.zeroes([*c]const StdVideoAV1CDEF),
    pLoopRestoration: [*c]const StdVideoAV1LoopRestoration = @import("std").mem.zeroes([*c]const StdVideoAV1LoopRestoration),
    pGlobalMotion: [*c]const StdVideoAV1GlobalMotion = @import("std").mem.zeroes([*c]const StdVideoAV1GlobalMotion),
    pFilmGrain: ?*const StdVideoAV1FilmGrain = @import("std").mem.zeroes(?*const StdVideoAV1FilmGrain),
};
pub const StdVideoDecodeAV1PictureInfo = struct_StdVideoDecodeAV1PictureInfo;
// /usr/local/include/vk_video/vulkan_video_codec_av1std_decode.h:91:17: warning: struct demoted to opaque type - has bitfield
pub const struct_StdVideoDecodeAV1ReferenceInfoFlags = opaque {};
pub const StdVideoDecodeAV1ReferenceInfoFlags = struct_StdVideoDecodeAV1ReferenceInfoFlags;
pub const struct_StdVideoDecodeAV1ReferenceInfo = extern struct {
    flags: StdVideoDecodeAV1ReferenceInfoFlags = @import("std").mem.zeroes(StdVideoDecodeAV1ReferenceInfoFlags),
    frame_type: u8 = @import("std").mem.zeroes(u8),
    RefFrameSignBias: u8 = @import("std").mem.zeroes(u8),
    OrderHint: u8 = @import("std").mem.zeroes(u8),
    SavedOrderHints: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const StdVideoDecodeAV1ReferenceInfo = struct_StdVideoDecodeAV1ReferenceInfo;
pub const struct_VkVideoDecodeAV1ProfileInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stdProfile: StdVideoAV1Profile = @import("std").mem.zeroes(StdVideoAV1Profile),
    filmGrainSupport: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkVideoDecodeAV1ProfileInfoKHR = struct_VkVideoDecodeAV1ProfileInfoKHR;
pub const struct_VkVideoDecodeAV1CapabilitiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxLevel: StdVideoAV1Level = @import("std").mem.zeroes(StdVideoAV1Level),
};
pub const VkVideoDecodeAV1CapabilitiesKHR = struct_VkVideoDecodeAV1CapabilitiesKHR;
pub const struct_VkVideoDecodeAV1SessionParametersCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdSequenceHeader: ?*const StdVideoAV1SequenceHeader = @import("std").mem.zeroes(?*const StdVideoAV1SequenceHeader),
};
pub const VkVideoDecodeAV1SessionParametersCreateInfoKHR = struct_VkVideoDecodeAV1SessionParametersCreateInfoKHR;
pub const struct_VkVideoDecodeAV1PictureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdPictureInfo: ?*const StdVideoDecodeAV1PictureInfo = @import("std").mem.zeroes(?*const StdVideoDecodeAV1PictureInfo),
    referenceNameSlotIndices: [7]i32 = @import("std").mem.zeroes([7]i32),
    frameHeaderOffset: u32 = @import("std").mem.zeroes(u32),
    tileCount: u32 = @import("std").mem.zeroes(u32),
    pTileOffsets: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    pTileSizes: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkVideoDecodeAV1PictureInfoKHR = struct_VkVideoDecodeAV1PictureInfoKHR;
pub const struct_VkVideoDecodeAV1DpbSlotInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pStdReferenceInfo: ?*const StdVideoDecodeAV1ReferenceInfo = @import("std").mem.zeroes(?*const StdVideoDecodeAV1ReferenceInfo),
};
pub const VkVideoDecodeAV1DpbSlotInfoKHR = struct_VkVideoDecodeAV1DpbSlotInfoKHR;
pub const struct_VkPhysicalDeviceVideoMaintenance1FeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    videoMaintenance1: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVideoMaintenance1FeaturesKHR = struct_VkPhysicalDeviceVideoMaintenance1FeaturesKHR;
pub const struct_VkVideoInlineQueryInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    queryPool: VkQueryPool = @import("std").mem.zeroes(VkQueryPool),
    firstQuery: u32 = @import("std").mem.zeroes(u32),
    queryCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVideoInlineQueryInfoKHR = struct_VkVideoInlineQueryInfoKHR;
pub const struct_VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxVertexAttribDivisor: u32 = @import("std").mem.zeroes(u32),
    supportsNonZeroFirstInstance: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR = struct_VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR;
pub const struct_VkVertexInputBindingDivisorDescriptionKHR = extern struct {
    binding: u32 = @import("std").mem.zeroes(u32),
    divisor: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVertexInputBindingDivisorDescriptionKHR = struct_VkVertexInputBindingDivisorDescriptionKHR;
pub const struct_VkPipelineVertexInputDivisorStateCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    vertexBindingDivisorCount: u32 = @import("std").mem.zeroes(u32),
    pVertexBindingDivisors: [*c]const VkVertexInputBindingDivisorDescriptionKHR = @import("std").mem.zeroes([*c]const VkVertexInputBindingDivisorDescriptionKHR),
};
pub const VkPipelineVertexInputDivisorStateCreateInfoKHR = struct_VkPipelineVertexInputDivisorStateCreateInfoKHR;
pub const struct_VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    vertexAttributeInstanceRateDivisor: VkBool32 = @import("std").mem.zeroes(VkBool32),
    vertexAttributeInstanceRateZeroDivisor: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR = struct_VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR;
pub const struct_VkPhysicalDeviceShaderFloatControls2FeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderFloatControls2: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderFloatControls2FeaturesKHR = struct_VkPhysicalDeviceShaderFloatControls2FeaturesKHR;
pub const struct_VkPhysicalDeviceIndexTypeUint8FeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    indexTypeUint8: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceIndexTypeUint8FeaturesKHR = struct_VkPhysicalDeviceIndexTypeUint8FeaturesKHR;
pub const VK_LINE_RASTERIZATION_MODE_DEFAULT_KHR: c_int = 0;
pub const VK_LINE_RASTERIZATION_MODE_RECTANGULAR_KHR: c_int = 1;
pub const VK_LINE_RASTERIZATION_MODE_BRESENHAM_KHR: c_int = 2;
pub const VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_KHR: c_int = 3;
pub const VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT: c_int = 0;
pub const VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT: c_int = 1;
pub const VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT: c_int = 2;
pub const VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT: c_int = 3;
pub const VK_LINE_RASTERIZATION_MODE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkLineRasterizationModeKHR = c_uint;
pub const VkLineRasterizationModeKHR = enum_VkLineRasterizationModeKHR;
pub const struct_VkPhysicalDeviceLineRasterizationFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rectangularLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bresenhamLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    smoothLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stippledRectangularLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stippledBresenhamLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    stippledSmoothLines: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceLineRasterizationFeaturesKHR = struct_VkPhysicalDeviceLineRasterizationFeaturesKHR;
pub const struct_VkPhysicalDeviceLineRasterizationPropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    lineSubPixelPrecisionBits: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceLineRasterizationPropertiesKHR = struct_VkPhysicalDeviceLineRasterizationPropertiesKHR;
pub const struct_VkPipelineRasterizationLineStateCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    lineRasterizationMode: VkLineRasterizationModeKHR = @import("std").mem.zeroes(VkLineRasterizationModeKHR),
    stippledLineEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    lineStippleFactor: u32 = @import("std").mem.zeroes(u32),
    lineStipplePattern: u16 = @import("std").mem.zeroes(u16),
};
pub const VkPipelineRasterizationLineStateCreateInfoKHR = struct_VkPipelineRasterizationLineStateCreateInfoKHR;
pub const PFN_vkCmdSetLineStippleKHR = ?*const fn (VkCommandBuffer, u32, u16) callconv(.C) void;
pub extern fn vkCmdSetLineStippleKHR(commandBuffer: VkCommandBuffer, lineStippleFactor: u32, lineStipplePattern: u16) void;
pub const VK_TIME_DOMAIN_DEVICE_KHR: c_int = 0;
pub const VK_TIME_DOMAIN_CLOCK_MONOTONIC_KHR: c_int = 1;
pub const VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHR: c_int = 2;
pub const VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR: c_int = 3;
pub const VK_TIME_DOMAIN_DEVICE_EXT: c_int = 0;
pub const VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT: c_int = 1;
pub const VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT: c_int = 2;
pub const VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT: c_int = 3;
pub const VK_TIME_DOMAIN_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkTimeDomainKHR = c_uint;
pub const VkTimeDomainKHR = enum_VkTimeDomainKHR;
pub const struct_VkCalibratedTimestampInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    timeDomain: VkTimeDomainKHR = @import("std").mem.zeroes(VkTimeDomainKHR),
};
pub const VkCalibratedTimestampInfoKHR = struct_VkCalibratedTimestampInfoKHR;
pub const PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkTimeDomainKHR) callconv(.C) VkResult;
pub const PFN_vkGetCalibratedTimestampsKHR = ?*const fn (VkDevice, u32, [*c]const VkCalibratedTimestampInfoKHR, [*c]u64, [*c]u64) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceCalibrateableTimeDomainsKHR(physicalDevice: VkPhysicalDevice, pTimeDomainCount: [*c]u32, pTimeDomains: [*c]VkTimeDomainKHR) VkResult;
pub extern fn vkGetCalibratedTimestampsKHR(device: VkDevice, timestampCount: u32, pTimestampInfos: [*c]const VkCalibratedTimestampInfoKHR, pTimestamps: [*c]u64, pMaxDeviation: [*c]u64) VkResult;
pub const struct_VkPhysicalDeviceShaderExpectAssumeFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderExpectAssume: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderExpectAssumeFeaturesKHR = struct_VkPhysicalDeviceShaderExpectAssumeFeaturesKHR;
pub const struct_VkPhysicalDeviceMaintenance6FeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maintenance6: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMaintenance6FeaturesKHR = struct_VkPhysicalDeviceMaintenance6FeaturesKHR;
pub const struct_VkPhysicalDeviceMaintenance6PropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    blockTexelViewCompatibleMultipleLayers: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxCombinedImageSamplerDescriptorCount: u32 = @import("std").mem.zeroes(u32),
    fragmentShadingRateClampCombinerInputs: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMaintenance6PropertiesKHR = struct_VkPhysicalDeviceMaintenance6PropertiesKHR;
pub const struct_VkBindMemoryStatusKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pResult: [*c]VkResult = @import("std").mem.zeroes([*c]VkResult),
};
pub const VkBindMemoryStatusKHR = struct_VkBindMemoryStatusKHR;
pub const struct_VkBindDescriptorSetsInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    firstSet: u32 = @import("std").mem.zeroes(u32),
    descriptorSetCount: u32 = @import("std").mem.zeroes(u32),
    pDescriptorSets: [*c]const VkDescriptorSet = @import("std").mem.zeroes([*c]const VkDescriptorSet),
    dynamicOffsetCount: u32 = @import("std").mem.zeroes(u32),
    pDynamicOffsets: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkBindDescriptorSetsInfoKHR = struct_VkBindDescriptorSetsInfoKHR;
pub const struct_VkPushConstantsInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    offset: u32 = @import("std").mem.zeroes(u32),
    size: u32 = @import("std").mem.zeroes(u32),
    pValues: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkPushConstantsInfoKHR = struct_VkPushConstantsInfoKHR;
pub const struct_VkPushDescriptorSetInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    set: u32 = @import("std").mem.zeroes(u32),
    descriptorWriteCount: u32 = @import("std").mem.zeroes(u32),
    pDescriptorWrites: [*c]const VkWriteDescriptorSet = @import("std").mem.zeroes([*c]const VkWriteDescriptorSet),
};
pub const VkPushDescriptorSetInfoKHR = struct_VkPushDescriptorSetInfoKHR;
pub const struct_VkPushDescriptorSetWithTemplateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    descriptorUpdateTemplate: VkDescriptorUpdateTemplate = @import("std").mem.zeroes(VkDescriptorUpdateTemplate),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    set: u32 = @import("std").mem.zeroes(u32),
    pData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkPushDescriptorSetWithTemplateInfoKHR = struct_VkPushDescriptorSetWithTemplateInfoKHR;
pub const struct_VkSetDescriptorBufferOffsetsInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    firstSet: u32 = @import("std").mem.zeroes(u32),
    setCount: u32 = @import("std").mem.zeroes(u32),
    pBufferIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
    pOffsets: [*c]const VkDeviceSize = @import("std").mem.zeroes([*c]const VkDeviceSize),
};
pub const VkSetDescriptorBufferOffsetsInfoEXT = struct_VkSetDescriptorBufferOffsetsInfoEXT;
pub const struct_VkBindDescriptorBufferEmbeddedSamplersInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    set: u32 = @import("std").mem.zeroes(u32),
};
pub const VkBindDescriptorBufferEmbeddedSamplersInfoEXT = struct_VkBindDescriptorBufferEmbeddedSamplersInfoEXT;
pub const PFN_vkCmdBindDescriptorSets2KHR = ?*const fn (VkCommandBuffer, [*c]const VkBindDescriptorSetsInfoKHR) callconv(.C) void;
pub const PFN_vkCmdPushConstants2KHR = ?*const fn (VkCommandBuffer, [*c]const VkPushConstantsInfoKHR) callconv(.C) void;
pub const PFN_vkCmdPushDescriptorSet2KHR = ?*const fn (VkCommandBuffer, [*c]const VkPushDescriptorSetInfoKHR) callconv(.C) void;
pub const PFN_vkCmdPushDescriptorSetWithTemplate2KHR = ?*const fn (VkCommandBuffer, [*c]const VkPushDescriptorSetWithTemplateInfoKHR) callconv(.C) void;
pub const PFN_vkCmdSetDescriptorBufferOffsets2EXT = ?*const fn (VkCommandBuffer, [*c]const VkSetDescriptorBufferOffsetsInfoEXT) callconv(.C) void;
pub const PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = ?*const fn (VkCommandBuffer, [*c]const VkBindDescriptorBufferEmbeddedSamplersInfoEXT) callconv(.C) void;
pub extern fn vkCmdBindDescriptorSets2KHR(commandBuffer: VkCommandBuffer, pBindDescriptorSetsInfo: [*c]const VkBindDescriptorSetsInfoKHR) void;
pub extern fn vkCmdPushConstants2KHR(commandBuffer: VkCommandBuffer, pPushConstantsInfo: [*c]const VkPushConstantsInfoKHR) void;
pub extern fn vkCmdPushDescriptorSet2KHR(commandBuffer: VkCommandBuffer, pPushDescriptorSetInfo: [*c]const VkPushDescriptorSetInfoKHR) void;
pub extern fn vkCmdPushDescriptorSetWithTemplate2KHR(commandBuffer: VkCommandBuffer, pPushDescriptorSetWithTemplateInfo: [*c]const VkPushDescriptorSetWithTemplateInfoKHR) void;
pub extern fn vkCmdSetDescriptorBufferOffsets2EXT(commandBuffer: VkCommandBuffer, pSetDescriptorBufferOffsetsInfo: [*c]const VkSetDescriptorBufferOffsetsInfoEXT) void;
pub extern fn vkCmdBindDescriptorBufferEmbeddedSamplers2EXT(commandBuffer: VkCommandBuffer, pBindDescriptorBufferEmbeddedSamplersInfo: [*c]const VkBindDescriptorBufferEmbeddedSamplersInfoEXT) void;
pub const struct_VkDebugReportCallbackEXT_T = opaque {};
pub const VkDebugReportCallbackEXT = ?*struct_VkDebugReportCallbackEXT_T;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT: c_int = 0;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT: c_int = 1;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT: c_int = 2;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT: c_int = 3;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT: c_int = 4;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT: c_int = 5;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT: c_int = 6;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT: c_int = 7;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT: c_int = 8;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT: c_int = 9;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT: c_int = 10;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT: c_int = 11;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT: c_int = 12;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT: c_int = 13;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT: c_int = 14;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT: c_int = 15;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT: c_int = 16;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT: c_int = 17;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT: c_int = 18;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT: c_int = 19;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT: c_int = 20;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT: c_int = 21;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT: c_int = 22;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT: c_int = 23;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT: c_int = 24;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT: c_int = 25;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT: c_int = 26;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT: c_int = 27;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT: c_int = 28;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT: c_int = 29;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT: c_int = 30;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT: c_int = 33;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT: c_int = 1000156000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT: c_int = 1000085000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT: c_int = 1000029000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT: c_int = 1000029001;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT: c_int = 1000150000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT: c_int = 1000165000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_MODULE_NV_EXT: c_int = 1000307000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_FUNCTION_NV_EXT: c_int = 1000307001;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT: c_int = 1000366000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT: c_int = 28;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT: c_int = 33;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT: c_int = 1000085000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT: c_int = 1000156000;
pub const VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDebugReportObjectTypeEXT = c_uint;
pub const VkDebugReportObjectTypeEXT = enum_VkDebugReportObjectTypeEXT;
pub const VK_DEBUG_REPORT_INFORMATION_BIT_EXT: c_int = 1;
pub const VK_DEBUG_REPORT_WARNING_BIT_EXT: c_int = 2;
pub const VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT: c_int = 4;
pub const VK_DEBUG_REPORT_ERROR_BIT_EXT: c_int = 8;
pub const VK_DEBUG_REPORT_DEBUG_BIT_EXT: c_int = 16;
pub const VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDebugReportFlagBitsEXT = c_uint;
pub const VkDebugReportFlagBitsEXT = enum_VkDebugReportFlagBitsEXT;
pub const VkDebugReportFlagsEXT = VkFlags;
pub const PFN_vkDebugReportCallbackEXT = ?*const fn (VkDebugReportFlagsEXT, VkDebugReportObjectTypeEXT, u64, usize, i32, [*c]const u8, [*c]const u8, ?*anyopaque) callconv(.C) VkBool32;
pub const struct_VkDebugReportCallbackCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDebugReportFlagsEXT = @import("std").mem.zeroes(VkDebugReportFlagsEXT),
    pfnCallback: PFN_vkDebugReportCallbackEXT = @import("std").mem.zeroes(PFN_vkDebugReportCallbackEXT),
    pUserData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkDebugReportCallbackCreateInfoEXT = struct_VkDebugReportCallbackCreateInfoEXT;
pub const PFN_vkCreateDebugReportCallbackEXT = ?*const fn (VkInstance, [*c]const VkDebugReportCallbackCreateInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkDebugReportCallbackEXT) callconv(.C) VkResult;
pub const PFN_vkDestroyDebugReportCallbackEXT = ?*const fn (VkInstance, VkDebugReportCallbackEXT, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkDebugReportMessageEXT = ?*const fn (VkInstance, VkDebugReportFlagsEXT, VkDebugReportObjectTypeEXT, u64, usize, i32, [*c]const u8, [*c]const u8) callconv(.C) void;
pub extern fn vkCreateDebugReportCallbackEXT(instance: VkInstance, pCreateInfo: [*c]const VkDebugReportCallbackCreateInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pCallback: [*c]VkDebugReportCallbackEXT) VkResult;
pub extern fn vkDestroyDebugReportCallbackEXT(instance: VkInstance, callback: VkDebugReportCallbackEXT, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkDebugReportMessageEXT(instance: VkInstance, flags: VkDebugReportFlagsEXT, objectType: VkDebugReportObjectTypeEXT, object: u64, location: usize, messageCode: i32, pLayerPrefix: [*c]const u8, pMessage: [*c]const u8) void;
pub const VK_RASTERIZATION_ORDER_STRICT_AMD: c_int = 0;
pub const VK_RASTERIZATION_ORDER_RELAXED_AMD: c_int = 1;
pub const VK_RASTERIZATION_ORDER_MAX_ENUM_AMD: c_int = 2147483647;
pub const enum_VkRasterizationOrderAMD = c_uint;
pub const VkRasterizationOrderAMD = enum_VkRasterizationOrderAMD;
pub const struct_VkPipelineRasterizationStateRasterizationOrderAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    rasterizationOrder: VkRasterizationOrderAMD = @import("std").mem.zeroes(VkRasterizationOrderAMD),
};
pub const VkPipelineRasterizationStateRasterizationOrderAMD = struct_VkPipelineRasterizationStateRasterizationOrderAMD;
pub const struct_VkDebugMarkerObjectNameInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    objectType: VkDebugReportObjectTypeEXT = @import("std").mem.zeroes(VkDebugReportObjectTypeEXT),
    object: u64 = @import("std").mem.zeroes(u64),
    pObjectName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkDebugMarkerObjectNameInfoEXT = struct_VkDebugMarkerObjectNameInfoEXT;
pub const struct_VkDebugMarkerObjectTagInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    objectType: VkDebugReportObjectTypeEXT = @import("std").mem.zeroes(VkDebugReportObjectTypeEXT),
    object: u64 = @import("std").mem.zeroes(u64),
    tagName: u64 = @import("std").mem.zeroes(u64),
    tagSize: usize = @import("std").mem.zeroes(usize),
    pTag: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkDebugMarkerObjectTagInfoEXT = struct_VkDebugMarkerObjectTagInfoEXT;
pub const struct_VkDebugMarkerMarkerInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pMarkerName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    color: [4]f32 = @import("std").mem.zeroes([4]f32),
};
pub const VkDebugMarkerMarkerInfoEXT = struct_VkDebugMarkerMarkerInfoEXT;
pub const PFN_vkDebugMarkerSetObjectTagEXT = ?*const fn (VkDevice, [*c]const VkDebugMarkerObjectTagInfoEXT) callconv(.C) VkResult;
pub const PFN_vkDebugMarkerSetObjectNameEXT = ?*const fn (VkDevice, [*c]const VkDebugMarkerObjectNameInfoEXT) callconv(.C) VkResult;
pub const PFN_vkCmdDebugMarkerBeginEXT = ?*const fn (VkCommandBuffer, [*c]const VkDebugMarkerMarkerInfoEXT) callconv(.C) void;
pub const PFN_vkCmdDebugMarkerEndEXT = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub const PFN_vkCmdDebugMarkerInsertEXT = ?*const fn (VkCommandBuffer, [*c]const VkDebugMarkerMarkerInfoEXT) callconv(.C) void;
pub extern fn vkDebugMarkerSetObjectTagEXT(device: VkDevice, pTagInfo: [*c]const VkDebugMarkerObjectTagInfoEXT) VkResult;
pub extern fn vkDebugMarkerSetObjectNameEXT(device: VkDevice, pNameInfo: [*c]const VkDebugMarkerObjectNameInfoEXT) VkResult;
pub extern fn vkCmdDebugMarkerBeginEXT(commandBuffer: VkCommandBuffer, pMarkerInfo: [*c]const VkDebugMarkerMarkerInfoEXT) void;
pub extern fn vkCmdDebugMarkerEndEXT(commandBuffer: VkCommandBuffer) void;
pub extern fn vkCmdDebugMarkerInsertEXT(commandBuffer: VkCommandBuffer, pMarkerInfo: [*c]const VkDebugMarkerMarkerInfoEXT) void;
pub const struct_VkDedicatedAllocationImageCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dedicatedAllocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDedicatedAllocationImageCreateInfoNV = struct_VkDedicatedAllocationImageCreateInfoNV;
pub const struct_VkDedicatedAllocationBufferCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dedicatedAllocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDedicatedAllocationBufferCreateInfoNV = struct_VkDedicatedAllocationBufferCreateInfoNV;
pub const struct_VkDedicatedAllocationMemoryAllocateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
};
pub const VkDedicatedAllocationMemoryAllocateInfoNV = struct_VkDedicatedAllocationMemoryAllocateInfoNV;
pub const VkPipelineRasterizationStateStreamCreateFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceTransformFeedbackFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    transformFeedback: VkBool32 = @import("std").mem.zeroes(VkBool32),
    geometryStreams: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTransformFeedbackFeaturesEXT = struct_VkPhysicalDeviceTransformFeedbackFeaturesEXT;
pub const struct_VkPhysicalDeviceTransformFeedbackPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxTransformFeedbackStreams: u32 = @import("std").mem.zeroes(u32),
    maxTransformFeedbackBuffers: u32 = @import("std").mem.zeroes(u32),
    maxTransformFeedbackBufferSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    maxTransformFeedbackStreamDataSize: u32 = @import("std").mem.zeroes(u32),
    maxTransformFeedbackBufferDataSize: u32 = @import("std").mem.zeroes(u32),
    maxTransformFeedbackBufferDataStride: u32 = @import("std").mem.zeroes(u32),
    transformFeedbackQueries: VkBool32 = @import("std").mem.zeroes(VkBool32),
    transformFeedbackStreamsLinesTriangles: VkBool32 = @import("std").mem.zeroes(VkBool32),
    transformFeedbackRasterizationStreamSelect: VkBool32 = @import("std").mem.zeroes(VkBool32),
    transformFeedbackDraw: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTransformFeedbackPropertiesEXT = struct_VkPhysicalDeviceTransformFeedbackPropertiesEXT;
pub const struct_VkPipelineRasterizationStateStreamCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineRasterizationStateStreamCreateFlagsEXT = @import("std").mem.zeroes(VkPipelineRasterizationStateStreamCreateFlagsEXT),
    rasterizationStream: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPipelineRasterizationStateStreamCreateInfoEXT = struct_VkPipelineRasterizationStateStreamCreateInfoEXT;
pub const PFN_vkCmdBindTransformFeedbackBuffersEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBuffer, [*c]const VkDeviceSize, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdBeginTransformFeedbackEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBuffer, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdEndTransformFeedbackEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBuffer, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdBeginQueryIndexedEXT = ?*const fn (VkCommandBuffer, VkQueryPool, u32, VkQueryControlFlags, u32) callconv(.C) void;
pub const PFN_vkCmdEndQueryIndexedEXT = ?*const fn (VkCommandBuffer, VkQueryPool, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndirectByteCountEXT = ?*const fn (VkCommandBuffer, u32, u32, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub extern fn vkCmdBindTransformFeedbackBuffersEXT(commandBuffer: VkCommandBuffer, firstBinding: u32, bindingCount: u32, pBuffers: [*c]const VkBuffer, pOffsets: [*c]const VkDeviceSize, pSizes: [*c]const VkDeviceSize) void;
pub extern fn vkCmdBeginTransformFeedbackEXT(commandBuffer: VkCommandBuffer, firstCounterBuffer: u32, counterBufferCount: u32, pCounterBuffers: [*c]const VkBuffer, pCounterBufferOffsets: [*c]const VkDeviceSize) void;
pub extern fn vkCmdEndTransformFeedbackEXT(commandBuffer: VkCommandBuffer, firstCounterBuffer: u32, counterBufferCount: u32, pCounterBuffers: [*c]const VkBuffer, pCounterBufferOffsets: [*c]const VkDeviceSize) void;
pub extern fn vkCmdBeginQueryIndexedEXT(commandBuffer: VkCommandBuffer, queryPool: VkQueryPool, query: u32, flags: VkQueryControlFlags, index: u32) void;
pub extern fn vkCmdEndQueryIndexedEXT(commandBuffer: VkCommandBuffer, queryPool: VkQueryPool, query: u32, index: u32) void;
pub extern fn vkCmdDrawIndirectByteCountEXT(commandBuffer: VkCommandBuffer, instanceCount: u32, firstInstance: u32, counterBuffer: VkBuffer, counterBufferOffset: VkDeviceSize, counterOffset: u32, vertexStride: u32) void;
pub const struct_VkCuModuleNVX_T = opaque {};
pub const VkCuModuleNVX = ?*struct_VkCuModuleNVX_T;
pub const struct_VkCuFunctionNVX_T = opaque {};
pub const VkCuFunctionNVX = ?*struct_VkCuFunctionNVX_T;
pub const struct_VkCuModuleCreateInfoNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dataSize: usize = @import("std").mem.zeroes(usize),
    pData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkCuModuleCreateInfoNVX = struct_VkCuModuleCreateInfoNVX;
pub const struct_VkCuFunctionCreateInfoNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    module: VkCuModuleNVX = @import("std").mem.zeroes(VkCuModuleNVX),
    pName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkCuFunctionCreateInfoNVX = struct_VkCuFunctionCreateInfoNVX;
pub const struct_VkCuLaunchInfoNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    function: VkCuFunctionNVX = @import("std").mem.zeroes(VkCuFunctionNVX),
    gridDimX: u32 = @import("std").mem.zeroes(u32),
    gridDimY: u32 = @import("std").mem.zeroes(u32),
    gridDimZ: u32 = @import("std").mem.zeroes(u32),
    blockDimX: u32 = @import("std").mem.zeroes(u32),
    blockDimY: u32 = @import("std").mem.zeroes(u32),
    blockDimZ: u32 = @import("std").mem.zeroes(u32),
    sharedMemBytes: u32 = @import("std").mem.zeroes(u32),
    paramCount: usize = @import("std").mem.zeroes(usize),
    pParams: [*c]const ?*const anyopaque = @import("std").mem.zeroes([*c]const ?*const anyopaque),
    extraCount: usize = @import("std").mem.zeroes(usize),
    pExtras: [*c]const ?*const anyopaque = @import("std").mem.zeroes([*c]const ?*const anyopaque),
};
pub const VkCuLaunchInfoNVX = struct_VkCuLaunchInfoNVX;
pub const PFN_vkCreateCuModuleNVX = ?*const fn (VkDevice, [*c]const VkCuModuleCreateInfoNVX, [*c]const VkAllocationCallbacks, [*c]VkCuModuleNVX) callconv(.C) VkResult;
pub const PFN_vkCreateCuFunctionNVX = ?*const fn (VkDevice, [*c]const VkCuFunctionCreateInfoNVX, [*c]const VkAllocationCallbacks, [*c]VkCuFunctionNVX) callconv(.C) VkResult;
pub const PFN_vkDestroyCuModuleNVX = ?*const fn (VkDevice, VkCuModuleNVX, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkDestroyCuFunctionNVX = ?*const fn (VkDevice, VkCuFunctionNVX, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCmdCuLaunchKernelNVX = ?*const fn (VkCommandBuffer, [*c]const VkCuLaunchInfoNVX) callconv(.C) void;
pub extern fn vkCreateCuModuleNVX(device: VkDevice, pCreateInfo: [*c]const VkCuModuleCreateInfoNVX, pAllocator: [*c]const VkAllocationCallbacks, pModule: [*c]VkCuModuleNVX) VkResult;
pub extern fn vkCreateCuFunctionNVX(device: VkDevice, pCreateInfo: [*c]const VkCuFunctionCreateInfoNVX, pAllocator: [*c]const VkAllocationCallbacks, pFunction: [*c]VkCuFunctionNVX) VkResult;
pub extern fn vkDestroyCuModuleNVX(device: VkDevice, module: VkCuModuleNVX, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkDestroyCuFunctionNVX(device: VkDevice, function: VkCuFunctionNVX, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCmdCuLaunchKernelNVX(commandBuffer: VkCommandBuffer, pLaunchInfo: [*c]const VkCuLaunchInfoNVX) void;
pub const struct_VkImageViewHandleInfoNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    imageView: VkImageView = @import("std").mem.zeroes(VkImageView),
    descriptorType: VkDescriptorType = @import("std").mem.zeroes(VkDescriptorType),
    sampler: VkSampler = @import("std").mem.zeroes(VkSampler),
};
pub const VkImageViewHandleInfoNVX = struct_VkImageViewHandleInfoNVX;
pub const struct_VkImageViewAddressPropertiesNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkImageViewAddressPropertiesNVX = struct_VkImageViewAddressPropertiesNVX;
pub const PFN_vkGetImageViewHandleNVX = ?*const fn (VkDevice, [*c]const VkImageViewHandleInfoNVX) callconv(.C) u32;
pub const PFN_vkGetImageViewAddressNVX = ?*const fn (VkDevice, VkImageView, [*c]VkImageViewAddressPropertiesNVX) callconv(.C) VkResult;
pub extern fn vkGetImageViewHandleNVX(device: VkDevice, pInfo: [*c]const VkImageViewHandleInfoNVX) u32;
pub extern fn vkGetImageViewAddressNVX(device: VkDevice, imageView: VkImageView, pProperties: [*c]VkImageViewAddressPropertiesNVX) VkResult;
pub const PFN_vkCmdDrawIndirectCountAMD = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawIndexedIndirectCountAMD = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub extern fn vkCmdDrawIndirectCountAMD(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub extern fn vkCmdDrawIndexedIndirectCountAMD(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub const struct_VkTextureLODGatherFormatPropertiesAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    supportsTextureGatherLODBiasAMD: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkTextureLODGatherFormatPropertiesAMD = struct_VkTextureLODGatherFormatPropertiesAMD;
pub const VK_SHADER_INFO_TYPE_STATISTICS_AMD: c_int = 0;
pub const VK_SHADER_INFO_TYPE_BINARY_AMD: c_int = 1;
pub const VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD: c_int = 2;
pub const VK_SHADER_INFO_TYPE_MAX_ENUM_AMD: c_int = 2147483647;
pub const enum_VkShaderInfoTypeAMD = c_uint;
pub const VkShaderInfoTypeAMD = enum_VkShaderInfoTypeAMD;
pub const struct_VkShaderResourceUsageAMD = extern struct {
    numUsedVgprs: u32 = @import("std").mem.zeroes(u32),
    numUsedSgprs: u32 = @import("std").mem.zeroes(u32),
    ldsSizePerLocalWorkGroup: u32 = @import("std").mem.zeroes(u32),
    ldsUsageSizeInBytes: usize = @import("std").mem.zeroes(usize),
    scratchMemUsageInBytes: usize = @import("std").mem.zeroes(usize),
};
pub const VkShaderResourceUsageAMD = struct_VkShaderResourceUsageAMD;
pub const struct_VkShaderStatisticsInfoAMD = extern struct {
    shaderStageMask: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    resourceUsage: VkShaderResourceUsageAMD = @import("std").mem.zeroes(VkShaderResourceUsageAMD),
    numPhysicalVgprs: u32 = @import("std").mem.zeroes(u32),
    numPhysicalSgprs: u32 = @import("std").mem.zeroes(u32),
    numAvailableVgprs: u32 = @import("std").mem.zeroes(u32),
    numAvailableSgprs: u32 = @import("std").mem.zeroes(u32),
    computeWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
};
pub const VkShaderStatisticsInfoAMD = struct_VkShaderStatisticsInfoAMD;
pub const PFN_vkGetShaderInfoAMD = ?*const fn (VkDevice, VkPipeline, VkShaderStageFlagBits, VkShaderInfoTypeAMD, [*c]usize, ?*anyopaque) callconv(.C) VkResult;
pub extern fn vkGetShaderInfoAMD(device: VkDevice, pipeline: VkPipeline, shaderStage: VkShaderStageFlagBits, infoType: VkShaderInfoTypeAMD, pInfoSize: [*c]usize, pInfo: ?*anyopaque) VkResult;
pub const struct_VkPhysicalDeviceCornerSampledImageFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cornerSampledImage: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCornerSampledImageFeaturesNV = struct_VkPhysicalDeviceCornerSampledImageFeaturesNV;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV: c_int = 1;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV: c_int = 2;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV: c_int = 4;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV: c_int = 8;
pub const VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkExternalMemoryHandleTypeFlagBitsNV = c_uint;
pub const VkExternalMemoryHandleTypeFlagBitsNV = enum_VkExternalMemoryHandleTypeFlagBitsNV;
pub const VkExternalMemoryHandleTypeFlagsNV = VkFlags;
pub const VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV: c_int = 1;
pub const VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV: c_int = 2;
pub const VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV: c_int = 4;
pub const VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkExternalMemoryFeatureFlagBitsNV = c_uint;
pub const VkExternalMemoryFeatureFlagBitsNV = enum_VkExternalMemoryFeatureFlagBitsNV;
pub const VkExternalMemoryFeatureFlagsNV = VkFlags;
pub const struct_VkExternalImageFormatPropertiesNV = extern struct {
    imageFormatProperties: VkImageFormatProperties = @import("std").mem.zeroes(VkImageFormatProperties),
    externalMemoryFeatures: VkExternalMemoryFeatureFlagsNV = @import("std").mem.zeroes(VkExternalMemoryFeatureFlagsNV),
    exportFromImportedHandleTypes: VkExternalMemoryHandleTypeFlagsNV = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagsNV),
    compatibleHandleTypes: VkExternalMemoryHandleTypeFlagsNV = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagsNV),
};
pub const VkExternalImageFormatPropertiesNV = struct_VkExternalImageFormatPropertiesNV;
pub const PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = ?*const fn (VkPhysicalDevice, VkFormat, VkImageType, VkImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkExternalMemoryHandleTypeFlagsNV, [*c]VkExternalImageFormatPropertiesNV) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceExternalImageFormatPropertiesNV(physicalDevice: VkPhysicalDevice, format: VkFormat, @"type": VkImageType, tiling: VkImageTiling, usage: VkImageUsageFlags, flags: VkImageCreateFlags, externalHandleType: VkExternalMemoryHandleTypeFlagsNV, pExternalImageFormatProperties: [*c]VkExternalImageFormatPropertiesNV) VkResult;
pub const struct_VkExternalMemoryImageCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalMemoryHandleTypeFlagsNV = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagsNV),
};
pub const VkExternalMemoryImageCreateInfoNV = struct_VkExternalMemoryImageCreateInfoNV;
pub const struct_VkExportMemoryAllocateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleTypes: VkExternalMemoryHandleTypeFlagsNV = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagsNV),
};
pub const VkExportMemoryAllocateInfoNV = struct_VkExportMemoryAllocateInfoNV;
pub const VK_VALIDATION_CHECK_ALL_EXT: c_int = 0;
pub const VK_VALIDATION_CHECK_SHADERS_EXT: c_int = 1;
pub const VK_VALIDATION_CHECK_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkValidationCheckEXT = c_uint;
pub const VkValidationCheckEXT = enum_VkValidationCheckEXT;
pub const struct_VkValidationFlagsEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    disabledValidationCheckCount: u32 = @import("std").mem.zeroes(u32),
    pDisabledValidationChecks: [*c]const VkValidationCheckEXT = @import("std").mem.zeroes([*c]const VkValidationCheckEXT),
};
pub const VkValidationFlagsEXT = struct_VkValidationFlagsEXT;
pub const VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT = VkPhysicalDeviceTextureCompressionASTCHDRFeatures;
pub const struct_VkImageViewASTCDecodeModeEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    decodeMode: VkFormat = @import("std").mem.zeroes(VkFormat),
};
pub const VkImageViewASTCDecodeModeEXT = struct_VkImageViewASTCDecodeModeEXT;
pub const struct_VkPhysicalDeviceASTCDecodeFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    decodeModeSharedExponent: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceASTCDecodeFeaturesEXT = struct_VkPhysicalDeviceASTCDecodeFeaturesEXT;
pub const VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT: c_int = 0;
pub const VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT: c_int = 1;
pub const VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT: c_int = 2;
pub const VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT: c_int = 3;
pub const VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkPipelineRobustnessBufferBehaviorEXT = c_uint;
pub const VkPipelineRobustnessBufferBehaviorEXT = enum_VkPipelineRobustnessBufferBehaviorEXT;
pub const VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT: c_int = 0;
pub const VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT: c_int = 1;
pub const VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT: c_int = 2;
pub const VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT: c_int = 3;
pub const VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkPipelineRobustnessImageBehaviorEXT = c_uint;
pub const VkPipelineRobustnessImageBehaviorEXT = enum_VkPipelineRobustnessImageBehaviorEXT;
pub const struct_VkPhysicalDevicePipelineRobustnessFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineRobustness: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePipelineRobustnessFeaturesEXT = struct_VkPhysicalDevicePipelineRobustnessFeaturesEXT;
pub const struct_VkPhysicalDevicePipelineRobustnessPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    defaultRobustnessStorageBuffers: VkPipelineRobustnessBufferBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessBufferBehaviorEXT),
    defaultRobustnessUniformBuffers: VkPipelineRobustnessBufferBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessBufferBehaviorEXT),
    defaultRobustnessVertexInputs: VkPipelineRobustnessBufferBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessBufferBehaviorEXT),
    defaultRobustnessImages: VkPipelineRobustnessImageBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessImageBehaviorEXT),
};
pub const VkPhysicalDevicePipelineRobustnessPropertiesEXT = struct_VkPhysicalDevicePipelineRobustnessPropertiesEXT;
pub const struct_VkPipelineRobustnessCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    storageBuffers: VkPipelineRobustnessBufferBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessBufferBehaviorEXT),
    uniformBuffers: VkPipelineRobustnessBufferBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessBufferBehaviorEXT),
    vertexInputs: VkPipelineRobustnessBufferBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessBufferBehaviorEXT),
    images: VkPipelineRobustnessImageBehaviorEXT = @import("std").mem.zeroes(VkPipelineRobustnessImageBehaviorEXT),
};
pub const VkPipelineRobustnessCreateInfoEXT = struct_VkPipelineRobustnessCreateInfoEXT;
pub const VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT: c_int = 1;
pub const VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkConditionalRenderingFlagBitsEXT = c_uint;
pub const VkConditionalRenderingFlagBitsEXT = enum_VkConditionalRenderingFlagBitsEXT;
pub const VkConditionalRenderingFlagsEXT = VkFlags;
pub const struct_VkConditionalRenderingBeginInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    flags: VkConditionalRenderingFlagsEXT = @import("std").mem.zeroes(VkConditionalRenderingFlagsEXT),
};
pub const VkConditionalRenderingBeginInfoEXT = struct_VkConditionalRenderingBeginInfoEXT;
pub const struct_VkPhysicalDeviceConditionalRenderingFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    conditionalRendering: VkBool32 = @import("std").mem.zeroes(VkBool32),
    inheritedConditionalRendering: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceConditionalRenderingFeaturesEXT = struct_VkPhysicalDeviceConditionalRenderingFeaturesEXT;
pub const struct_VkCommandBufferInheritanceConditionalRenderingInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    conditionalRenderingEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkCommandBufferInheritanceConditionalRenderingInfoEXT = struct_VkCommandBufferInheritanceConditionalRenderingInfoEXT;
pub const PFN_vkCmdBeginConditionalRenderingEXT = ?*const fn (VkCommandBuffer, [*c]const VkConditionalRenderingBeginInfoEXT) callconv(.C) void;
pub const PFN_vkCmdEndConditionalRenderingEXT = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub extern fn vkCmdBeginConditionalRenderingEXT(commandBuffer: VkCommandBuffer, pConditionalRenderingBegin: [*c]const VkConditionalRenderingBeginInfoEXT) void;
pub extern fn vkCmdEndConditionalRenderingEXT(commandBuffer: VkCommandBuffer) void;
pub const struct_VkViewportWScalingNV = extern struct {
    xcoeff: f32 = @import("std").mem.zeroes(f32),
    ycoeff: f32 = @import("std").mem.zeroes(f32),
};
pub const VkViewportWScalingNV = struct_VkViewportWScalingNV;
pub const struct_VkPipelineViewportWScalingStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    viewportWScalingEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    viewportCount: u32 = @import("std").mem.zeroes(u32),
    pViewportWScalings: [*c]const VkViewportWScalingNV = @import("std").mem.zeroes([*c]const VkViewportWScalingNV),
};
pub const VkPipelineViewportWScalingStateCreateInfoNV = struct_VkPipelineViewportWScalingStateCreateInfoNV;
pub const PFN_vkCmdSetViewportWScalingNV = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkViewportWScalingNV) callconv(.C) void;
pub extern fn vkCmdSetViewportWScalingNV(commandBuffer: VkCommandBuffer, firstViewport: u32, viewportCount: u32, pViewportWScalings: [*c]const VkViewportWScalingNV) void;
pub const PFN_vkReleaseDisplayEXT = ?*const fn (VkPhysicalDevice, VkDisplayKHR) callconv(.C) VkResult;
pub extern fn vkReleaseDisplayEXT(physicalDevice: VkPhysicalDevice, display: VkDisplayKHR) VkResult;
pub const VK_SURFACE_COUNTER_VBLANK_BIT_EXT: c_int = 1;
pub const VK_SURFACE_COUNTER_VBLANK_EXT: c_int = 1;
pub const VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkSurfaceCounterFlagBitsEXT = c_uint;
pub const VkSurfaceCounterFlagBitsEXT = enum_VkSurfaceCounterFlagBitsEXT;
pub const VkSurfaceCounterFlagsEXT = VkFlags;
pub const struct_VkSurfaceCapabilities2EXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minImageCount: u32 = @import("std").mem.zeroes(u32),
    maxImageCount: u32 = @import("std").mem.zeroes(u32),
    currentExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    minImageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxImageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxImageArrayLayers: u32 = @import("std").mem.zeroes(u32),
    supportedTransforms: VkSurfaceTransformFlagsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagsKHR),
    currentTransform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
    supportedCompositeAlpha: VkCompositeAlphaFlagsKHR = @import("std").mem.zeroes(VkCompositeAlphaFlagsKHR),
    supportedUsageFlags: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    supportedSurfaceCounters: VkSurfaceCounterFlagsEXT = @import("std").mem.zeroes(VkSurfaceCounterFlagsEXT),
};
pub const VkSurfaceCapabilities2EXT = struct_VkSurfaceCapabilities2EXT;
pub const PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT = ?*const fn (VkPhysicalDevice, VkSurfaceKHR, [*c]VkSurfaceCapabilities2EXT) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceSurfaceCapabilities2EXT(physicalDevice: VkPhysicalDevice, surface: VkSurfaceKHR, pSurfaceCapabilities: [*c]VkSurfaceCapabilities2EXT) VkResult;
pub const VK_DISPLAY_POWER_STATE_OFF_EXT: c_int = 0;
pub const VK_DISPLAY_POWER_STATE_SUSPEND_EXT: c_int = 1;
pub const VK_DISPLAY_POWER_STATE_ON_EXT: c_int = 2;
pub const VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDisplayPowerStateEXT = c_uint;
pub const VkDisplayPowerStateEXT = enum_VkDisplayPowerStateEXT;
pub const VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT: c_int = 0;
pub const VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDeviceEventTypeEXT = c_uint;
pub const VkDeviceEventTypeEXT = enum_VkDeviceEventTypeEXT;
pub const VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT: c_int = 0;
pub const VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDisplayEventTypeEXT = c_uint;
pub const VkDisplayEventTypeEXT = enum_VkDisplayEventTypeEXT;
pub const struct_VkDisplayPowerInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    powerState: VkDisplayPowerStateEXT = @import("std").mem.zeroes(VkDisplayPowerStateEXT),
};
pub const VkDisplayPowerInfoEXT = struct_VkDisplayPowerInfoEXT;
pub const struct_VkDeviceEventInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceEvent: VkDeviceEventTypeEXT = @import("std").mem.zeroes(VkDeviceEventTypeEXT),
};
pub const VkDeviceEventInfoEXT = struct_VkDeviceEventInfoEXT;
pub const struct_VkDisplayEventInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    displayEvent: VkDisplayEventTypeEXT = @import("std").mem.zeroes(VkDisplayEventTypeEXT),
};
pub const VkDisplayEventInfoEXT = struct_VkDisplayEventInfoEXT;
pub const struct_VkSwapchainCounterCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    surfaceCounters: VkSurfaceCounterFlagsEXT = @import("std").mem.zeroes(VkSurfaceCounterFlagsEXT),
};
pub const VkSwapchainCounterCreateInfoEXT = struct_VkSwapchainCounterCreateInfoEXT;
pub const PFN_vkDisplayPowerControlEXT = ?*const fn (VkDevice, VkDisplayKHR, [*c]const VkDisplayPowerInfoEXT) callconv(.C) VkResult;
pub const PFN_vkRegisterDeviceEventEXT = ?*const fn (VkDevice, [*c]const VkDeviceEventInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkFence) callconv(.C) VkResult;
pub const PFN_vkRegisterDisplayEventEXT = ?*const fn (VkDevice, VkDisplayKHR, [*c]const VkDisplayEventInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkFence) callconv(.C) VkResult;
pub const PFN_vkGetSwapchainCounterEXT = ?*const fn (VkDevice, VkSwapchainKHR, VkSurfaceCounterFlagBitsEXT, [*c]u64) callconv(.C) VkResult;
pub extern fn vkDisplayPowerControlEXT(device: VkDevice, display: VkDisplayKHR, pDisplayPowerInfo: [*c]const VkDisplayPowerInfoEXT) VkResult;
pub extern fn vkRegisterDeviceEventEXT(device: VkDevice, pDeviceEventInfo: [*c]const VkDeviceEventInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pFence: [*c]VkFence) VkResult;
pub extern fn vkRegisterDisplayEventEXT(device: VkDevice, display: VkDisplayKHR, pDisplayEventInfo: [*c]const VkDisplayEventInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pFence: [*c]VkFence) VkResult;
pub extern fn vkGetSwapchainCounterEXT(device: VkDevice, swapchain: VkSwapchainKHR, counter: VkSurfaceCounterFlagBitsEXT, pCounterValue: [*c]u64) VkResult;
pub const struct_VkRefreshCycleDurationGOOGLE = extern struct {
    refreshDuration: u64 = @import("std").mem.zeroes(u64),
};
pub const VkRefreshCycleDurationGOOGLE = struct_VkRefreshCycleDurationGOOGLE;
pub const struct_VkPastPresentationTimingGOOGLE = extern struct {
    presentID: u32 = @import("std").mem.zeroes(u32),
    desiredPresentTime: u64 = @import("std").mem.zeroes(u64),
    actualPresentTime: u64 = @import("std").mem.zeroes(u64),
    earliestPresentTime: u64 = @import("std").mem.zeroes(u64),
    presentMargin: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPastPresentationTimingGOOGLE = struct_VkPastPresentationTimingGOOGLE;
pub const struct_VkPresentTimeGOOGLE = extern struct {
    presentID: u32 = @import("std").mem.zeroes(u32),
    desiredPresentTime: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPresentTimeGOOGLE = struct_VkPresentTimeGOOGLE;
pub const struct_VkPresentTimesInfoGOOGLE = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pTimes: [*c]const VkPresentTimeGOOGLE = @import("std").mem.zeroes([*c]const VkPresentTimeGOOGLE),
};
pub const VkPresentTimesInfoGOOGLE = struct_VkPresentTimesInfoGOOGLE;
pub const PFN_vkGetRefreshCycleDurationGOOGLE = ?*const fn (VkDevice, VkSwapchainKHR, [*c]VkRefreshCycleDurationGOOGLE) callconv(.C) VkResult;
pub const PFN_vkGetPastPresentationTimingGOOGLE = ?*const fn (VkDevice, VkSwapchainKHR, [*c]u32, [*c]VkPastPresentationTimingGOOGLE) callconv(.C) VkResult;
pub extern fn vkGetRefreshCycleDurationGOOGLE(device: VkDevice, swapchain: VkSwapchainKHR, pDisplayTimingProperties: [*c]VkRefreshCycleDurationGOOGLE) VkResult;
pub extern fn vkGetPastPresentationTimingGOOGLE(device: VkDevice, swapchain: VkSwapchainKHR, pPresentationTimingCount: [*c]u32, pPresentationTimings: [*c]VkPastPresentationTimingGOOGLE) VkResult;
pub const struct_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    perViewPositionAllComponents: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX = struct_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV: c_int = 0;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV: c_int = 1;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV: c_int = 2;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV: c_int = 3;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV: c_int = 4;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV: c_int = 5;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV: c_int = 6;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV: c_int = 7;
pub const VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkViewportCoordinateSwizzleNV = c_uint;
pub const VkViewportCoordinateSwizzleNV = enum_VkViewportCoordinateSwizzleNV;
pub const VkPipelineViewportSwizzleStateCreateFlagsNV = VkFlags;
pub const struct_VkViewportSwizzleNV = extern struct {
    x: VkViewportCoordinateSwizzleNV = @import("std").mem.zeroes(VkViewportCoordinateSwizzleNV),
    y: VkViewportCoordinateSwizzleNV = @import("std").mem.zeroes(VkViewportCoordinateSwizzleNV),
    z: VkViewportCoordinateSwizzleNV = @import("std").mem.zeroes(VkViewportCoordinateSwizzleNV),
    w: VkViewportCoordinateSwizzleNV = @import("std").mem.zeroes(VkViewportCoordinateSwizzleNV),
};
pub const VkViewportSwizzleNV = struct_VkViewportSwizzleNV;
pub const struct_VkPipelineViewportSwizzleStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineViewportSwizzleStateCreateFlagsNV = @import("std").mem.zeroes(VkPipelineViewportSwizzleStateCreateFlagsNV),
    viewportCount: u32 = @import("std").mem.zeroes(u32),
    pViewportSwizzles: [*c]const VkViewportSwizzleNV = @import("std").mem.zeroes([*c]const VkViewportSwizzleNV),
};
pub const VkPipelineViewportSwizzleStateCreateInfoNV = struct_VkPipelineViewportSwizzleStateCreateInfoNV;
pub const VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT: c_int = 0;
pub const VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT: c_int = 1;
pub const VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDiscardRectangleModeEXT = c_uint;
pub const VkDiscardRectangleModeEXT = enum_VkDiscardRectangleModeEXT;
pub const VkPipelineDiscardRectangleStateCreateFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceDiscardRectanglePropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxDiscardRectangles: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceDiscardRectanglePropertiesEXT = struct_VkPhysicalDeviceDiscardRectanglePropertiesEXT;
pub const struct_VkPipelineDiscardRectangleStateCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineDiscardRectangleStateCreateFlagsEXT = @import("std").mem.zeroes(VkPipelineDiscardRectangleStateCreateFlagsEXT),
    discardRectangleMode: VkDiscardRectangleModeEXT = @import("std").mem.zeroes(VkDiscardRectangleModeEXT),
    discardRectangleCount: u32 = @import("std").mem.zeroes(u32),
    pDiscardRectangles: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkPipelineDiscardRectangleStateCreateInfoEXT = struct_VkPipelineDiscardRectangleStateCreateInfoEXT;
pub const PFN_vkCmdSetDiscardRectangleEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkRect2D) callconv(.C) void;
pub const PFN_vkCmdSetDiscardRectangleEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDiscardRectangleModeEXT = ?*const fn (VkCommandBuffer, VkDiscardRectangleModeEXT) callconv(.C) void;
pub extern fn vkCmdSetDiscardRectangleEXT(commandBuffer: VkCommandBuffer, firstDiscardRectangle: u32, discardRectangleCount: u32, pDiscardRectangles: [*c]const VkRect2D) void;
pub extern fn vkCmdSetDiscardRectangleEnableEXT(commandBuffer: VkCommandBuffer, discardRectangleEnable: VkBool32) void;
pub extern fn vkCmdSetDiscardRectangleModeEXT(commandBuffer: VkCommandBuffer, discardRectangleMode: VkDiscardRectangleModeEXT) void;
pub const VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT: c_int = 0;
pub const VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT: c_int = 1;
pub const VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT: c_int = 2;
pub const VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkConservativeRasterizationModeEXT = c_uint;
pub const VkConservativeRasterizationModeEXT = enum_VkConservativeRasterizationModeEXT;
pub const VkPipelineRasterizationConservativeStateCreateFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceConservativeRasterizationPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    primitiveOverestimationSize: f32 = @import("std").mem.zeroes(f32),
    maxExtraPrimitiveOverestimationSize: f32 = @import("std").mem.zeroes(f32),
    extraPrimitiveOverestimationSizeGranularity: f32 = @import("std").mem.zeroes(f32),
    primitiveUnderestimation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    conservativePointAndLineRasterization: VkBool32 = @import("std").mem.zeroes(VkBool32),
    degenerateTrianglesRasterized: VkBool32 = @import("std").mem.zeroes(VkBool32),
    degenerateLinesRasterized: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fullyCoveredFragmentShaderInputVariable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    conservativeRasterizationPostDepthCoverage: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceConservativeRasterizationPropertiesEXT = struct_VkPhysicalDeviceConservativeRasterizationPropertiesEXT;
pub const struct_VkPipelineRasterizationConservativeStateCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineRasterizationConservativeStateCreateFlagsEXT = @import("std").mem.zeroes(VkPipelineRasterizationConservativeStateCreateFlagsEXT),
    conservativeRasterizationMode: VkConservativeRasterizationModeEXT = @import("std").mem.zeroes(VkConservativeRasterizationModeEXT),
    extraPrimitiveOverestimationSize: f32 = @import("std").mem.zeroes(f32),
};
pub const VkPipelineRasterizationConservativeStateCreateInfoEXT = struct_VkPipelineRasterizationConservativeStateCreateInfoEXT;
pub const VkPipelineRasterizationDepthClipStateCreateFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceDepthClipEnableFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    depthClipEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDepthClipEnableFeaturesEXT = struct_VkPhysicalDeviceDepthClipEnableFeaturesEXT;
pub const struct_VkPipelineRasterizationDepthClipStateCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineRasterizationDepthClipStateCreateFlagsEXT = @import("std").mem.zeroes(VkPipelineRasterizationDepthClipStateCreateFlagsEXT),
    depthClipEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPipelineRasterizationDepthClipStateCreateInfoEXT = struct_VkPipelineRasterizationDepthClipStateCreateInfoEXT;
pub const struct_VkXYColorEXT = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
};
pub const VkXYColorEXT = struct_VkXYColorEXT;
pub const struct_VkHdrMetadataEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    displayPrimaryRed: VkXYColorEXT = @import("std").mem.zeroes(VkXYColorEXT),
    displayPrimaryGreen: VkXYColorEXT = @import("std").mem.zeroes(VkXYColorEXT),
    displayPrimaryBlue: VkXYColorEXT = @import("std").mem.zeroes(VkXYColorEXT),
    whitePoint: VkXYColorEXT = @import("std").mem.zeroes(VkXYColorEXT),
    maxLuminance: f32 = @import("std").mem.zeroes(f32),
    minLuminance: f32 = @import("std").mem.zeroes(f32),
    maxContentLightLevel: f32 = @import("std").mem.zeroes(f32),
    maxFrameAverageLightLevel: f32 = @import("std").mem.zeroes(f32),
};
pub const VkHdrMetadataEXT = struct_VkHdrMetadataEXT;
pub const PFN_vkSetHdrMetadataEXT = ?*const fn (VkDevice, u32, [*c]const VkSwapchainKHR, [*c]const VkHdrMetadataEXT) callconv(.C) void;
pub extern fn vkSetHdrMetadataEXT(device: VkDevice, swapchainCount: u32, pSwapchains: [*c]const VkSwapchainKHR, pMetadata: [*c]const VkHdrMetadataEXT) void;
pub const struct_VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    relaxedLineRasterization: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG = struct_VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG;
pub const struct_VkDebugUtilsMessengerEXT_T = opaque {};
pub const VkDebugUtilsMessengerEXT = ?*struct_VkDebugUtilsMessengerEXT_T;
pub const VkDebugUtilsMessengerCallbackDataFlagsEXT = VkFlags;
pub const VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT: c_int = 1;
pub const VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT: c_int = 16;
pub const VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT: c_int = 256;
pub const VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT: c_int = 4096;
pub const VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDebugUtilsMessageSeverityFlagBitsEXT = c_uint;
pub const VkDebugUtilsMessageSeverityFlagBitsEXT = enum_VkDebugUtilsMessageSeverityFlagBitsEXT;
pub const VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT: c_int = 1;
pub const VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT: c_int = 2;
pub const VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT: c_int = 4;
pub const VK_DEBUG_UTILS_MESSAGE_TYPE_DEVICE_ADDRESS_BINDING_BIT_EXT: c_int = 8;
pub const VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDebugUtilsMessageTypeFlagBitsEXT = c_uint;
pub const VkDebugUtilsMessageTypeFlagBitsEXT = enum_VkDebugUtilsMessageTypeFlagBitsEXT;
pub const VkDebugUtilsMessageTypeFlagsEXT = VkFlags;
pub const VkDebugUtilsMessageSeverityFlagsEXT = VkFlags;
pub const VkDebugUtilsMessengerCreateFlagsEXT = VkFlags;
pub const struct_VkDebugUtilsLabelEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pLabelName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    color: [4]f32 = @import("std").mem.zeroes([4]f32),
};
pub const VkDebugUtilsLabelEXT = struct_VkDebugUtilsLabelEXT;
pub const struct_VkDebugUtilsObjectNameInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    objectType: VkObjectType = @import("std").mem.zeroes(VkObjectType),
    objectHandle: u64 = @import("std").mem.zeroes(u64),
    pObjectName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkDebugUtilsObjectNameInfoEXT = struct_VkDebugUtilsObjectNameInfoEXT;
pub const struct_VkDebugUtilsMessengerCallbackDataEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDebugUtilsMessengerCallbackDataFlagsEXT = @import("std").mem.zeroes(VkDebugUtilsMessengerCallbackDataFlagsEXT),
    pMessageIdName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    messageIdNumber: i32 = @import("std").mem.zeroes(i32),
    pMessage: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    queueLabelCount: u32 = @import("std").mem.zeroes(u32),
    pQueueLabels: [*c]const VkDebugUtilsLabelEXT = @import("std").mem.zeroes([*c]const VkDebugUtilsLabelEXT),
    cmdBufLabelCount: u32 = @import("std").mem.zeroes(u32),
    pCmdBufLabels: [*c]const VkDebugUtilsLabelEXT = @import("std").mem.zeroes([*c]const VkDebugUtilsLabelEXT),
    objectCount: u32 = @import("std").mem.zeroes(u32),
    pObjects: [*c]const VkDebugUtilsObjectNameInfoEXT = @import("std").mem.zeroes([*c]const VkDebugUtilsObjectNameInfoEXT),
};
pub const VkDebugUtilsMessengerCallbackDataEXT = struct_VkDebugUtilsMessengerCallbackDataEXT;
pub const PFN_vkDebugUtilsMessengerCallbackEXT = ?*const fn (VkDebugUtilsMessageSeverityFlagBitsEXT, VkDebugUtilsMessageTypeFlagsEXT, [*c]const VkDebugUtilsMessengerCallbackDataEXT, ?*anyopaque) callconv(.C) VkBool32;
pub const struct_VkDebugUtilsMessengerCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDebugUtilsMessengerCreateFlagsEXT = @import("std").mem.zeroes(VkDebugUtilsMessengerCreateFlagsEXT),
    messageSeverity: VkDebugUtilsMessageSeverityFlagsEXT = @import("std").mem.zeroes(VkDebugUtilsMessageSeverityFlagsEXT),
    messageType: VkDebugUtilsMessageTypeFlagsEXT = @import("std").mem.zeroes(VkDebugUtilsMessageTypeFlagsEXT),
    pfnUserCallback: PFN_vkDebugUtilsMessengerCallbackEXT = @import("std").mem.zeroes(PFN_vkDebugUtilsMessengerCallbackEXT),
    pUserData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkDebugUtilsMessengerCreateInfoEXT = struct_VkDebugUtilsMessengerCreateInfoEXT;
pub const struct_VkDebugUtilsObjectTagInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    objectType: VkObjectType = @import("std").mem.zeroes(VkObjectType),
    objectHandle: u64 = @import("std").mem.zeroes(u64),
    tagName: u64 = @import("std").mem.zeroes(u64),
    tagSize: usize = @import("std").mem.zeroes(usize),
    pTag: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkDebugUtilsObjectTagInfoEXT = struct_VkDebugUtilsObjectTagInfoEXT;
pub const PFN_vkSetDebugUtilsObjectNameEXT = ?*const fn (VkDevice, [*c]const VkDebugUtilsObjectNameInfoEXT) callconv(.C) VkResult;
pub const PFN_vkSetDebugUtilsObjectTagEXT = ?*const fn (VkDevice, [*c]const VkDebugUtilsObjectTagInfoEXT) callconv(.C) VkResult;
pub const PFN_vkQueueBeginDebugUtilsLabelEXT = ?*const fn (VkQueue, [*c]const VkDebugUtilsLabelEXT) callconv(.C) void;
pub const PFN_vkQueueEndDebugUtilsLabelEXT = ?*const fn (VkQueue) callconv(.C) void;
pub const PFN_vkQueueInsertDebugUtilsLabelEXT = ?*const fn (VkQueue, [*c]const VkDebugUtilsLabelEXT) callconv(.C) void;
pub const PFN_vkCmdBeginDebugUtilsLabelEXT = ?*const fn (VkCommandBuffer, [*c]const VkDebugUtilsLabelEXT) callconv(.C) void;
pub const PFN_vkCmdEndDebugUtilsLabelEXT = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub const PFN_vkCmdInsertDebugUtilsLabelEXT = ?*const fn (VkCommandBuffer, [*c]const VkDebugUtilsLabelEXT) callconv(.C) void;
pub const PFN_vkCreateDebugUtilsMessengerEXT = ?*const fn (VkInstance, [*c]const VkDebugUtilsMessengerCreateInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkDebugUtilsMessengerEXT) callconv(.C) VkResult;
pub const PFN_vkDestroyDebugUtilsMessengerEXT = ?*const fn (VkInstance, VkDebugUtilsMessengerEXT, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkSubmitDebugUtilsMessageEXT = ?*const fn (VkInstance, VkDebugUtilsMessageSeverityFlagBitsEXT, VkDebugUtilsMessageTypeFlagsEXT, [*c]const VkDebugUtilsMessengerCallbackDataEXT) callconv(.C) void;
pub extern fn vkSetDebugUtilsObjectNameEXT(device: VkDevice, pNameInfo: [*c]const VkDebugUtilsObjectNameInfoEXT) VkResult;
pub extern fn vkSetDebugUtilsObjectTagEXT(device: VkDevice, pTagInfo: [*c]const VkDebugUtilsObjectTagInfoEXT) VkResult;
pub extern fn vkQueueBeginDebugUtilsLabelEXT(queue: VkQueue, pLabelInfo: [*c]const VkDebugUtilsLabelEXT) void;
pub extern fn vkQueueEndDebugUtilsLabelEXT(queue: VkQueue) void;
pub extern fn vkQueueInsertDebugUtilsLabelEXT(queue: VkQueue, pLabelInfo: [*c]const VkDebugUtilsLabelEXT) void;
pub extern fn vkCmdBeginDebugUtilsLabelEXT(commandBuffer: VkCommandBuffer, pLabelInfo: [*c]const VkDebugUtilsLabelEXT) void;
pub extern fn vkCmdEndDebugUtilsLabelEXT(commandBuffer: VkCommandBuffer) void;
pub extern fn vkCmdInsertDebugUtilsLabelEXT(commandBuffer: VkCommandBuffer, pLabelInfo: [*c]const VkDebugUtilsLabelEXT) void;
pub extern fn vkCreateDebugUtilsMessengerEXT(instance: VkInstance, pCreateInfo: [*c]const VkDebugUtilsMessengerCreateInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pMessenger: [*c]VkDebugUtilsMessengerEXT) VkResult;
pub extern fn vkDestroyDebugUtilsMessengerEXT(instance: VkInstance, messenger: VkDebugUtilsMessengerEXT, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkSubmitDebugUtilsMessageEXT(instance: VkInstance, messageSeverity: VkDebugUtilsMessageSeverityFlagBitsEXT, messageTypes: VkDebugUtilsMessageTypeFlagsEXT, pCallbackData: [*c]const VkDebugUtilsMessengerCallbackDataEXT) void;
pub const VkSamplerReductionModeEXT = VkSamplerReductionMode;
pub const VkSamplerReductionModeCreateInfoEXT = VkSamplerReductionModeCreateInfo;
pub const VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT = VkPhysicalDeviceSamplerFilterMinmaxProperties;
pub const VkPhysicalDeviceInlineUniformBlockFeaturesEXT = VkPhysicalDeviceInlineUniformBlockFeatures;
pub const VkPhysicalDeviceInlineUniformBlockPropertiesEXT = VkPhysicalDeviceInlineUniformBlockProperties;
pub const VkWriteDescriptorSetInlineUniformBlockEXT = VkWriteDescriptorSetInlineUniformBlock;
pub const VkDescriptorPoolInlineUniformBlockCreateInfoEXT = VkDescriptorPoolInlineUniformBlockCreateInfo;
pub const struct_VkSampleLocationEXT = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
};
pub const VkSampleLocationEXT = struct_VkSampleLocationEXT;
pub const struct_VkSampleLocationsInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    sampleLocationsPerPixel: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    sampleLocationGridSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    sampleLocationsCount: u32 = @import("std").mem.zeroes(u32),
    pSampleLocations: [*c]const VkSampleLocationEXT = @import("std").mem.zeroes([*c]const VkSampleLocationEXT),
};
pub const VkSampleLocationsInfoEXT = struct_VkSampleLocationsInfoEXT;
pub const struct_VkAttachmentSampleLocationsEXT = extern struct {
    attachmentIndex: u32 = @import("std").mem.zeroes(u32),
    sampleLocationsInfo: VkSampleLocationsInfoEXT = @import("std").mem.zeroes(VkSampleLocationsInfoEXT),
};
pub const VkAttachmentSampleLocationsEXT = struct_VkAttachmentSampleLocationsEXT;
pub const struct_VkSubpassSampleLocationsEXT = extern struct {
    subpassIndex: u32 = @import("std").mem.zeroes(u32),
    sampleLocationsInfo: VkSampleLocationsInfoEXT = @import("std").mem.zeroes(VkSampleLocationsInfoEXT),
};
pub const VkSubpassSampleLocationsEXT = struct_VkSubpassSampleLocationsEXT;
pub const struct_VkRenderPassSampleLocationsBeginInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    attachmentInitialSampleLocationsCount: u32 = @import("std").mem.zeroes(u32),
    pAttachmentInitialSampleLocations: [*c]const VkAttachmentSampleLocationsEXT = @import("std").mem.zeroes([*c]const VkAttachmentSampleLocationsEXT),
    postSubpassSampleLocationsCount: u32 = @import("std").mem.zeroes(u32),
    pPostSubpassSampleLocations: [*c]const VkSubpassSampleLocationsEXT = @import("std").mem.zeroes([*c]const VkSubpassSampleLocationsEXT),
};
pub const VkRenderPassSampleLocationsBeginInfoEXT = struct_VkRenderPassSampleLocationsBeginInfoEXT;
pub const struct_VkPipelineSampleLocationsStateCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    sampleLocationsEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sampleLocationsInfo: VkSampleLocationsInfoEXT = @import("std").mem.zeroes(VkSampleLocationsInfoEXT),
};
pub const VkPipelineSampleLocationsStateCreateInfoEXT = struct_VkPipelineSampleLocationsStateCreateInfoEXT;
pub const struct_VkPhysicalDeviceSampleLocationsPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    sampleLocationSampleCounts: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    maxSampleLocationGridSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    sampleLocationCoordinateRange: [2]f32 = @import("std").mem.zeroes([2]f32),
    sampleLocationSubPixelBits: u32 = @import("std").mem.zeroes(u32),
    variableSampleLocations: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSampleLocationsPropertiesEXT = struct_VkPhysicalDeviceSampleLocationsPropertiesEXT;
pub const struct_VkMultisamplePropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxSampleLocationGridSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkMultisamplePropertiesEXT = struct_VkMultisamplePropertiesEXT;
pub const PFN_vkCmdSetSampleLocationsEXT = ?*const fn (VkCommandBuffer, [*c]const VkSampleLocationsInfoEXT) callconv(.C) void;
pub const PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT = ?*const fn (VkPhysicalDevice, VkSampleCountFlagBits, [*c]VkMultisamplePropertiesEXT) callconv(.C) void;
pub extern fn vkCmdSetSampleLocationsEXT(commandBuffer: VkCommandBuffer, pSampleLocationsInfo: [*c]const VkSampleLocationsInfoEXT) void;
pub extern fn vkGetPhysicalDeviceMultisamplePropertiesEXT(physicalDevice: VkPhysicalDevice, samples: VkSampleCountFlagBits, pMultisampleProperties: [*c]VkMultisamplePropertiesEXT) void;
pub const VK_BLEND_OVERLAP_UNCORRELATED_EXT: c_int = 0;
pub const VK_BLEND_OVERLAP_DISJOINT_EXT: c_int = 1;
pub const VK_BLEND_OVERLAP_CONJOINT_EXT: c_int = 2;
pub const VK_BLEND_OVERLAP_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkBlendOverlapEXT = c_uint;
pub const VkBlendOverlapEXT = enum_VkBlendOverlapEXT;
pub const struct_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    advancedBlendCoherentOperations: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT = struct_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT;
pub const struct_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    advancedBlendMaxColorAttachments: u32 = @import("std").mem.zeroes(u32),
    advancedBlendIndependentBlend: VkBool32 = @import("std").mem.zeroes(VkBool32),
    advancedBlendNonPremultipliedSrcColor: VkBool32 = @import("std").mem.zeroes(VkBool32),
    advancedBlendNonPremultipliedDstColor: VkBool32 = @import("std").mem.zeroes(VkBool32),
    advancedBlendCorrelatedOverlap: VkBool32 = @import("std").mem.zeroes(VkBool32),
    advancedBlendAllOperations: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT = struct_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT;
pub const struct_VkPipelineColorBlendAdvancedStateCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    srcPremultiplied: VkBool32 = @import("std").mem.zeroes(VkBool32),
    dstPremultiplied: VkBool32 = @import("std").mem.zeroes(VkBool32),
    blendOverlap: VkBlendOverlapEXT = @import("std").mem.zeroes(VkBlendOverlapEXT),
};
pub const VkPipelineColorBlendAdvancedStateCreateInfoEXT = struct_VkPipelineColorBlendAdvancedStateCreateInfoEXT;
pub const VkPipelineCoverageToColorStateCreateFlagsNV = VkFlags;
pub const struct_VkPipelineCoverageToColorStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCoverageToColorStateCreateFlagsNV = @import("std").mem.zeroes(VkPipelineCoverageToColorStateCreateFlagsNV),
    coverageToColorEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    coverageToColorLocation: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPipelineCoverageToColorStateCreateInfoNV = struct_VkPipelineCoverageToColorStateCreateInfoNV;
pub const VK_COVERAGE_MODULATION_MODE_NONE_NV: c_int = 0;
pub const VK_COVERAGE_MODULATION_MODE_RGB_NV: c_int = 1;
pub const VK_COVERAGE_MODULATION_MODE_ALPHA_NV: c_int = 2;
pub const VK_COVERAGE_MODULATION_MODE_RGBA_NV: c_int = 3;
pub const VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkCoverageModulationModeNV = c_uint;
pub const VkCoverageModulationModeNV = enum_VkCoverageModulationModeNV;
pub const VkPipelineCoverageModulationStateCreateFlagsNV = VkFlags;
pub const struct_VkPipelineCoverageModulationStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCoverageModulationStateCreateFlagsNV = @import("std").mem.zeroes(VkPipelineCoverageModulationStateCreateFlagsNV),
    coverageModulationMode: VkCoverageModulationModeNV = @import("std").mem.zeroes(VkCoverageModulationModeNV),
    coverageModulationTableEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    coverageModulationTableCount: u32 = @import("std").mem.zeroes(u32),
    pCoverageModulationTable: [*c]const f32 = @import("std").mem.zeroes([*c]const f32),
};
pub const VkPipelineCoverageModulationStateCreateInfoNV = struct_VkPipelineCoverageModulationStateCreateInfoNV;
pub const struct_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderSMCount: u32 = @import("std").mem.zeroes(u32),
    shaderWarpsPerSM: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShaderSMBuiltinsPropertiesNV = struct_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV;
pub const struct_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderSMBuiltins: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderSMBuiltinsFeaturesNV = struct_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV;
pub const struct_VkDrmFormatModifierPropertiesEXT = extern struct {
    drmFormatModifier: u64 = @import("std").mem.zeroes(u64),
    drmFormatModifierPlaneCount: u32 = @import("std").mem.zeroes(u32),
    drmFormatModifierTilingFeatures: VkFormatFeatureFlags = @import("std").mem.zeroes(VkFormatFeatureFlags),
};
pub const VkDrmFormatModifierPropertiesEXT = struct_VkDrmFormatModifierPropertiesEXT;
pub const struct_VkDrmFormatModifierPropertiesListEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    drmFormatModifierCount: u32 = @import("std").mem.zeroes(u32),
    pDrmFormatModifierProperties: [*c]VkDrmFormatModifierPropertiesEXT = @import("std").mem.zeroes([*c]VkDrmFormatModifierPropertiesEXT),
};
pub const VkDrmFormatModifierPropertiesListEXT = struct_VkDrmFormatModifierPropertiesListEXT;
pub const struct_VkPhysicalDeviceImageDrmFormatModifierInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    drmFormatModifier: u64 = @import("std").mem.zeroes(u64),
    sharingMode: VkSharingMode = @import("std").mem.zeroes(VkSharingMode),
    queueFamilyIndexCount: u32 = @import("std").mem.zeroes(u32),
    pQueueFamilyIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkPhysicalDeviceImageDrmFormatModifierInfoEXT = struct_VkPhysicalDeviceImageDrmFormatModifierInfoEXT;
pub const struct_VkImageDrmFormatModifierListCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    drmFormatModifierCount: u32 = @import("std").mem.zeroes(u32),
    pDrmFormatModifiers: [*c]const u64 = @import("std").mem.zeroes([*c]const u64),
};
pub const VkImageDrmFormatModifierListCreateInfoEXT = struct_VkImageDrmFormatModifierListCreateInfoEXT;
pub const struct_VkImageDrmFormatModifierExplicitCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    drmFormatModifier: u64 = @import("std").mem.zeroes(u64),
    drmFormatModifierPlaneCount: u32 = @import("std").mem.zeroes(u32),
    pPlaneLayouts: [*c]const VkSubresourceLayout = @import("std").mem.zeroes([*c]const VkSubresourceLayout),
};
pub const VkImageDrmFormatModifierExplicitCreateInfoEXT = struct_VkImageDrmFormatModifierExplicitCreateInfoEXT;
pub const struct_VkImageDrmFormatModifierPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    drmFormatModifier: u64 = @import("std").mem.zeroes(u64),
};
pub const VkImageDrmFormatModifierPropertiesEXT = struct_VkImageDrmFormatModifierPropertiesEXT;
pub const struct_VkDrmFormatModifierProperties2EXT = extern struct {
    drmFormatModifier: u64 = @import("std").mem.zeroes(u64),
    drmFormatModifierPlaneCount: u32 = @import("std").mem.zeroes(u32),
    drmFormatModifierTilingFeatures: VkFormatFeatureFlags2 = @import("std").mem.zeroes(VkFormatFeatureFlags2),
};
pub const VkDrmFormatModifierProperties2EXT = struct_VkDrmFormatModifierProperties2EXT;
pub const struct_VkDrmFormatModifierPropertiesList2EXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    drmFormatModifierCount: u32 = @import("std").mem.zeroes(u32),
    pDrmFormatModifierProperties: [*c]VkDrmFormatModifierProperties2EXT = @import("std").mem.zeroes([*c]VkDrmFormatModifierProperties2EXT),
};
pub const VkDrmFormatModifierPropertiesList2EXT = struct_VkDrmFormatModifierPropertiesList2EXT;
pub const PFN_vkGetImageDrmFormatModifierPropertiesEXT = ?*const fn (VkDevice, VkImage, [*c]VkImageDrmFormatModifierPropertiesEXT) callconv(.C) VkResult;
pub extern fn vkGetImageDrmFormatModifierPropertiesEXT(device: VkDevice, image: VkImage, pProperties: [*c]VkImageDrmFormatModifierPropertiesEXT) VkResult;
pub const struct_VkValidationCacheEXT_T = opaque {};
pub const VkValidationCacheEXT = ?*struct_VkValidationCacheEXT_T;
pub const VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT: c_int = 1;
pub const VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkValidationCacheHeaderVersionEXT = c_uint;
pub const VkValidationCacheHeaderVersionEXT = enum_VkValidationCacheHeaderVersionEXT;
pub const VkValidationCacheCreateFlagsEXT = VkFlags;
pub const struct_VkValidationCacheCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkValidationCacheCreateFlagsEXT = @import("std").mem.zeroes(VkValidationCacheCreateFlagsEXT),
    initialDataSize: usize = @import("std").mem.zeroes(usize),
    pInitialData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkValidationCacheCreateInfoEXT = struct_VkValidationCacheCreateInfoEXT;
pub const struct_VkShaderModuleValidationCacheCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    validationCache: VkValidationCacheEXT = @import("std").mem.zeroes(VkValidationCacheEXT),
};
pub const VkShaderModuleValidationCacheCreateInfoEXT = struct_VkShaderModuleValidationCacheCreateInfoEXT;
pub const PFN_vkCreateValidationCacheEXT = ?*const fn (VkDevice, [*c]const VkValidationCacheCreateInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkValidationCacheEXT) callconv(.C) VkResult;
pub const PFN_vkDestroyValidationCacheEXT = ?*const fn (VkDevice, VkValidationCacheEXT, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkMergeValidationCachesEXT = ?*const fn (VkDevice, VkValidationCacheEXT, u32, [*c]const VkValidationCacheEXT) callconv(.C) VkResult;
pub const PFN_vkGetValidationCacheDataEXT = ?*const fn (VkDevice, VkValidationCacheEXT, [*c]usize, ?*anyopaque) callconv(.C) VkResult;
pub extern fn vkCreateValidationCacheEXT(device: VkDevice, pCreateInfo: [*c]const VkValidationCacheCreateInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pValidationCache: [*c]VkValidationCacheEXT) VkResult;
pub extern fn vkDestroyValidationCacheEXT(device: VkDevice, validationCache: VkValidationCacheEXT, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkMergeValidationCachesEXT(device: VkDevice, dstCache: VkValidationCacheEXT, srcCacheCount: u32, pSrcCaches: [*c]const VkValidationCacheEXT) VkResult;
pub extern fn vkGetValidationCacheDataEXT(device: VkDevice, validationCache: VkValidationCacheEXT, pDataSize: [*c]usize, pData: ?*anyopaque) VkResult;
pub const VkDescriptorBindingFlagBitsEXT = VkDescriptorBindingFlagBits;
pub const VkDescriptorBindingFlagsEXT = VkDescriptorBindingFlags;
pub const VkDescriptorSetLayoutBindingFlagsCreateInfoEXT = VkDescriptorSetLayoutBindingFlagsCreateInfo;
pub const VkPhysicalDeviceDescriptorIndexingFeaturesEXT = VkPhysicalDeviceDescriptorIndexingFeatures;
pub const VkPhysicalDeviceDescriptorIndexingPropertiesEXT = VkPhysicalDeviceDescriptorIndexingProperties;
pub const VkDescriptorSetVariableDescriptorCountAllocateInfoEXT = VkDescriptorSetVariableDescriptorCountAllocateInfo;
pub const VkDescriptorSetVariableDescriptorCountLayoutSupportEXT = VkDescriptorSetVariableDescriptorCountLayoutSupport;
pub const VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV: c_int = 0;
pub const VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV: c_int = 1;
pub const VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV: c_int = 2;
pub const VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV: c_int = 3;
pub const VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV: c_int = 4;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV: c_int = 5;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV: c_int = 6;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV: c_int = 7;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV: c_int = 8;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV: c_int = 9;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV: c_int = 10;
pub const VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV: c_int = 11;
pub const VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkShadingRatePaletteEntryNV = c_uint;
pub const VkShadingRatePaletteEntryNV = enum_VkShadingRatePaletteEntryNV;
pub const VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV: c_int = 0;
pub const VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV: c_int = 1;
pub const VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV: c_int = 2;
pub const VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV: c_int = 3;
pub const VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkCoarseSampleOrderTypeNV = c_uint;
pub const VkCoarseSampleOrderTypeNV = enum_VkCoarseSampleOrderTypeNV;
pub const struct_VkShadingRatePaletteNV = extern struct {
    shadingRatePaletteEntryCount: u32 = @import("std").mem.zeroes(u32),
    pShadingRatePaletteEntries: [*c]const VkShadingRatePaletteEntryNV = @import("std").mem.zeroes([*c]const VkShadingRatePaletteEntryNV),
};
pub const VkShadingRatePaletteNV = struct_VkShadingRatePaletteNV;
pub const struct_VkPipelineViewportShadingRateImageStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    shadingRateImageEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    viewportCount: u32 = @import("std").mem.zeroes(u32),
    pShadingRatePalettes: [*c]const VkShadingRatePaletteNV = @import("std").mem.zeroes([*c]const VkShadingRatePaletteNV),
};
pub const VkPipelineViewportShadingRateImageStateCreateInfoNV = struct_VkPipelineViewportShadingRateImageStateCreateInfoNV;
pub const struct_VkPhysicalDeviceShadingRateImageFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shadingRateImage: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shadingRateCoarseSampleOrder: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShadingRateImageFeaturesNV = struct_VkPhysicalDeviceShadingRateImageFeaturesNV;
pub const struct_VkPhysicalDeviceShadingRateImagePropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shadingRateTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    shadingRatePaletteSize: u32 = @import("std").mem.zeroes(u32),
    shadingRateMaxCoarseSamples: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShadingRateImagePropertiesNV = struct_VkPhysicalDeviceShadingRateImagePropertiesNV;
pub const struct_VkCoarseSampleLocationNV = extern struct {
    pixelX: u32 = @import("std").mem.zeroes(u32),
    pixelY: u32 = @import("std").mem.zeroes(u32),
    sample: u32 = @import("std").mem.zeroes(u32),
};
pub const VkCoarseSampleLocationNV = struct_VkCoarseSampleLocationNV;
pub const struct_VkCoarseSampleOrderCustomNV = extern struct {
    shadingRate: VkShadingRatePaletteEntryNV = @import("std").mem.zeroes(VkShadingRatePaletteEntryNV),
    sampleCount: u32 = @import("std").mem.zeroes(u32),
    sampleLocationCount: u32 = @import("std").mem.zeroes(u32),
    pSampleLocations: [*c]const VkCoarseSampleLocationNV = @import("std").mem.zeroes([*c]const VkCoarseSampleLocationNV),
};
pub const VkCoarseSampleOrderCustomNV = struct_VkCoarseSampleOrderCustomNV;
pub const struct_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    sampleOrderType: VkCoarseSampleOrderTypeNV = @import("std").mem.zeroes(VkCoarseSampleOrderTypeNV),
    customSampleOrderCount: u32 = @import("std").mem.zeroes(u32),
    pCustomSampleOrders: [*c]const VkCoarseSampleOrderCustomNV = @import("std").mem.zeroes([*c]const VkCoarseSampleOrderCustomNV),
};
pub const VkPipelineViewportCoarseSampleOrderStateCreateInfoNV = struct_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV;
pub const PFN_vkCmdBindShadingRateImageNV = ?*const fn (VkCommandBuffer, VkImageView, VkImageLayout) callconv(.C) void;
pub const PFN_vkCmdSetViewportShadingRatePaletteNV = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkShadingRatePaletteNV) callconv(.C) void;
pub const PFN_vkCmdSetCoarseSampleOrderNV = ?*const fn (VkCommandBuffer, VkCoarseSampleOrderTypeNV, u32, [*c]const VkCoarseSampleOrderCustomNV) callconv(.C) void;
pub extern fn vkCmdBindShadingRateImageNV(commandBuffer: VkCommandBuffer, imageView: VkImageView, imageLayout: VkImageLayout) void;
pub extern fn vkCmdSetViewportShadingRatePaletteNV(commandBuffer: VkCommandBuffer, firstViewport: u32, viewportCount: u32, pShadingRatePalettes: [*c]const VkShadingRatePaletteNV) void;
pub extern fn vkCmdSetCoarseSampleOrderNV(commandBuffer: VkCommandBuffer, sampleOrderType: VkCoarseSampleOrderTypeNV, customSampleOrderCount: u32, pCustomSampleOrders: [*c]const VkCoarseSampleOrderCustomNV) void;
pub const struct_VkAccelerationStructureNV_T = opaque {};
pub const VkAccelerationStructureNV = ?*struct_VkAccelerationStructureNV_T;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR: c_int = 0;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR: c_int = 1;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR: c_int = 2;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV: c_int = 0;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV: c_int = 1;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV: c_int = 2;
pub const VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkRayTracingShaderGroupTypeKHR = c_uint;
pub const VkRayTracingShaderGroupTypeKHR = enum_VkRayTracingShaderGroupTypeKHR;
pub const VkRayTracingShaderGroupTypeNV = VkRayTracingShaderGroupTypeKHR;
pub const VK_GEOMETRY_TYPE_TRIANGLES_KHR: c_int = 0;
pub const VK_GEOMETRY_TYPE_AABBS_KHR: c_int = 1;
pub const VK_GEOMETRY_TYPE_INSTANCES_KHR: c_int = 2;
pub const VK_GEOMETRY_TYPE_TRIANGLES_NV: c_int = 0;
pub const VK_GEOMETRY_TYPE_AABBS_NV: c_int = 1;
pub const VK_GEOMETRY_TYPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkGeometryTypeKHR = c_uint;
pub const VkGeometryTypeKHR = enum_VkGeometryTypeKHR;
pub const VkGeometryTypeNV = VkGeometryTypeKHR;
pub const VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR: c_int = 0;
pub const VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR: c_int = 2;
pub const VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV: c_int = 0;
pub const VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkAccelerationStructureTypeKHR = c_uint;
pub const VkAccelerationStructureTypeKHR = enum_VkAccelerationStructureTypeKHR;
pub const VkAccelerationStructureTypeNV = VkAccelerationStructureTypeKHR;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR: c_int = 0;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR: c_int = 1;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR: c_int = 2;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR: c_int = 3;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV: c_int = 0;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV: c_int = 1;
pub const VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkCopyAccelerationStructureModeKHR = c_uint;
pub const VkCopyAccelerationStructureModeKHR = enum_VkCopyAccelerationStructureModeKHR;
pub const VkCopyAccelerationStructureModeNV = VkCopyAccelerationStructureModeKHR;
pub const VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV: c_int = 0;
pub const VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV: c_int = 2;
pub const VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkAccelerationStructureMemoryRequirementsTypeNV = c_uint;
pub const VkAccelerationStructureMemoryRequirementsTypeNV = enum_VkAccelerationStructureMemoryRequirementsTypeNV;
pub const VK_GEOMETRY_OPAQUE_BIT_KHR: c_int = 1;
pub const VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR: c_int = 2;
pub const VK_GEOMETRY_OPAQUE_BIT_NV: c_int = 1;
pub const VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV: c_int = 2;
pub const VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkGeometryFlagBitsKHR = c_uint;
pub const VkGeometryFlagBitsKHR = enum_VkGeometryFlagBitsKHR;
pub const VkGeometryFlagsKHR = VkFlags;
pub const VkGeometryFlagsNV = VkGeometryFlagsKHR;
pub const VkGeometryFlagBitsNV = VkGeometryFlagBitsKHR;
pub const VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR: c_int = 1;
pub const VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR: c_int = 2;
pub const VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR: c_int = 4;
pub const VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR: c_int = 8;
pub const VK_GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT: c_int = 16;
pub const VK_GEOMETRY_INSTANCE_DISABLE_OPACITY_MICROMAPS_EXT: c_int = 32;
pub const VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR: c_int = 2;
pub const VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV: c_int = 1;
pub const VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV: c_int = 2;
pub const VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV: c_int = 4;
pub const VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV: c_int = 8;
pub const VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkGeometryInstanceFlagBitsKHR = c_uint;
pub const VkGeometryInstanceFlagBitsKHR = enum_VkGeometryInstanceFlagBitsKHR;
pub const VkGeometryInstanceFlagsKHR = VkFlags;
pub const VkGeometryInstanceFlagsNV = VkGeometryInstanceFlagsKHR;
pub const VkGeometryInstanceFlagBitsNV = VkGeometryInstanceFlagBitsKHR;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR: c_int = 1;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR: c_int = 2;
pub const VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR: c_int = 4;
pub const VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR: c_int = 8;
pub const VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR: c_int = 16;
pub const VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV: c_int = 32;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_UPDATE_EXT: c_int = 64;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DISABLE_OPACITY_MICROMAPS_EXT: c_int = 128;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT: c_int = 256;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DATA_ACCESS_KHR: c_int = 2048;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV: c_int = 1;
pub const VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV: c_int = 2;
pub const VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV: c_int = 4;
pub const VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV: c_int = 8;
pub const VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV: c_int = 16;
pub const VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkBuildAccelerationStructureFlagBitsKHR = c_uint;
pub const VkBuildAccelerationStructureFlagBitsKHR = enum_VkBuildAccelerationStructureFlagBitsKHR;
pub const VkBuildAccelerationStructureFlagsKHR = VkFlags;
pub const VkBuildAccelerationStructureFlagsNV = VkBuildAccelerationStructureFlagsKHR;
pub const VkBuildAccelerationStructureFlagBitsNV = VkBuildAccelerationStructureFlagBitsKHR;
pub const struct_VkRayTracingShaderGroupCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkRayTracingShaderGroupTypeKHR = @import("std").mem.zeroes(VkRayTracingShaderGroupTypeKHR),
    generalShader: u32 = @import("std").mem.zeroes(u32),
    closestHitShader: u32 = @import("std").mem.zeroes(u32),
    anyHitShader: u32 = @import("std").mem.zeroes(u32),
    intersectionShader: u32 = @import("std").mem.zeroes(u32),
};
pub const VkRayTracingShaderGroupCreateInfoNV = struct_VkRayTracingShaderGroupCreateInfoNV;
pub const struct_VkRayTracingPipelineCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCreateFlags = @import("std").mem.zeroes(VkPipelineCreateFlags),
    stageCount: u32 = @import("std").mem.zeroes(u32),
    pStages: [*c]const VkPipelineShaderStageCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineShaderStageCreateInfo),
    groupCount: u32 = @import("std").mem.zeroes(u32),
    pGroups: [*c]const VkRayTracingShaderGroupCreateInfoNV = @import("std").mem.zeroes([*c]const VkRayTracingShaderGroupCreateInfoNV),
    maxRecursionDepth: u32 = @import("std").mem.zeroes(u32),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    basePipelineHandle: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    basePipelineIndex: i32 = @import("std").mem.zeroes(i32),
};
pub const VkRayTracingPipelineCreateInfoNV = struct_VkRayTracingPipelineCreateInfoNV;
pub const struct_VkGeometryTrianglesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    vertexData: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    vertexOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    vertexCount: u32 = @import("std").mem.zeroes(u32),
    vertexStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    vertexFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    indexData: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    indexOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    indexCount: u32 = @import("std").mem.zeroes(u32),
    indexType: VkIndexType = @import("std").mem.zeroes(VkIndexType),
    transformData: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    transformOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkGeometryTrianglesNV = struct_VkGeometryTrianglesNV;
pub const struct_VkGeometryAABBNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    aabbData: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    numAABBs: u32 = @import("std").mem.zeroes(u32),
    stride: u32 = @import("std").mem.zeroes(u32),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkGeometryAABBNV = struct_VkGeometryAABBNV;
pub const struct_VkGeometryDataNV = extern struct {
    triangles: VkGeometryTrianglesNV = @import("std").mem.zeroes(VkGeometryTrianglesNV),
    aabbs: VkGeometryAABBNV = @import("std").mem.zeroes(VkGeometryAABBNV),
};
pub const VkGeometryDataNV = struct_VkGeometryDataNV;
pub const struct_VkGeometryNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    geometryType: VkGeometryTypeKHR = @import("std").mem.zeroes(VkGeometryTypeKHR),
    geometry: VkGeometryDataNV = @import("std").mem.zeroes(VkGeometryDataNV),
    flags: VkGeometryFlagsKHR = @import("std").mem.zeroes(VkGeometryFlagsKHR),
};
pub const VkGeometryNV = struct_VkGeometryNV;
pub const struct_VkAccelerationStructureInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkAccelerationStructureTypeNV = @import("std").mem.zeroes(VkAccelerationStructureTypeNV),
    flags: VkBuildAccelerationStructureFlagsNV = @import("std").mem.zeroes(VkBuildAccelerationStructureFlagsNV),
    instanceCount: u32 = @import("std").mem.zeroes(u32),
    geometryCount: u32 = @import("std").mem.zeroes(u32),
    pGeometries: [*c]const VkGeometryNV = @import("std").mem.zeroes([*c]const VkGeometryNV),
};
pub const VkAccelerationStructureInfoNV = struct_VkAccelerationStructureInfoNV;
pub const struct_VkAccelerationStructureCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    compactedSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    info: VkAccelerationStructureInfoNV = @import("std").mem.zeroes(VkAccelerationStructureInfoNV),
};
pub const VkAccelerationStructureCreateInfoNV = struct_VkAccelerationStructureCreateInfoNV;
pub const struct_VkBindAccelerationStructureMemoryInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    accelerationStructure: VkAccelerationStructureNV = @import("std").mem.zeroes(VkAccelerationStructureNV),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    memoryOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    deviceIndexCount: u32 = @import("std").mem.zeroes(u32),
    pDeviceIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkBindAccelerationStructureMemoryInfoNV = struct_VkBindAccelerationStructureMemoryInfoNV;
pub const struct_VkWriteDescriptorSetAccelerationStructureNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    accelerationStructureCount: u32 = @import("std").mem.zeroes(u32),
    pAccelerationStructures: [*c]const VkAccelerationStructureNV = @import("std").mem.zeroes([*c]const VkAccelerationStructureNV),
};
pub const VkWriteDescriptorSetAccelerationStructureNV = struct_VkWriteDescriptorSetAccelerationStructureNV;
pub const struct_VkAccelerationStructureMemoryRequirementsInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkAccelerationStructureMemoryRequirementsTypeNV = @import("std").mem.zeroes(VkAccelerationStructureMemoryRequirementsTypeNV),
    accelerationStructure: VkAccelerationStructureNV = @import("std").mem.zeroes(VkAccelerationStructureNV),
};
pub const VkAccelerationStructureMemoryRequirementsInfoNV = struct_VkAccelerationStructureMemoryRequirementsInfoNV;
pub const struct_VkPhysicalDeviceRayTracingPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderGroupHandleSize: u32 = @import("std").mem.zeroes(u32),
    maxRecursionDepth: u32 = @import("std").mem.zeroes(u32),
    maxShaderGroupStride: u32 = @import("std").mem.zeroes(u32),
    shaderGroupBaseAlignment: u32 = @import("std").mem.zeroes(u32),
    maxGeometryCount: u64 = @import("std").mem.zeroes(u64),
    maxInstanceCount: u64 = @import("std").mem.zeroes(u64),
    maxTriangleCount: u64 = @import("std").mem.zeroes(u64),
    maxDescriptorSetAccelerationStructures: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceRayTracingPropertiesNV = struct_VkPhysicalDeviceRayTracingPropertiesNV;
pub const struct_VkTransformMatrixKHR = extern struct {
    matrix: [3][4]f32 = @import("std").mem.zeroes([3][4]f32),
};
pub const VkTransformMatrixKHR = struct_VkTransformMatrixKHR;
pub const VkTransformMatrixNV = VkTransformMatrixKHR;
pub const struct_VkAabbPositionsKHR = extern struct {
    minX: f32 = @import("std").mem.zeroes(f32),
    minY: f32 = @import("std").mem.zeroes(f32),
    minZ: f32 = @import("std").mem.zeroes(f32),
    maxX: f32 = @import("std").mem.zeroes(f32),
    maxY: f32 = @import("std").mem.zeroes(f32),
    maxZ: f32 = @import("std").mem.zeroes(f32),
};
pub const VkAabbPositionsKHR = struct_VkAabbPositionsKHR;
pub const VkAabbPositionsNV = VkAabbPositionsKHR;
// /usr/local/include/vulkan/vulkan_core.h:13794:35: warning: struct demoted to opaque type - has bitfield
pub const struct_VkAccelerationStructureInstanceKHR = opaque {};
pub const VkAccelerationStructureInstanceKHR = struct_VkAccelerationStructureInstanceKHR;
pub const VkAccelerationStructureInstanceNV = VkAccelerationStructureInstanceKHR;
pub const PFN_vkCreateAccelerationStructureNV = ?*const fn (VkDevice, [*c]const VkAccelerationStructureCreateInfoNV, [*c]const VkAllocationCallbacks, [*c]VkAccelerationStructureNV) callconv(.C) VkResult;
pub const PFN_vkDestroyAccelerationStructureNV = ?*const fn (VkDevice, VkAccelerationStructureNV, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetAccelerationStructureMemoryRequirementsNV = ?*const fn (VkDevice, [*c]const VkAccelerationStructureMemoryRequirementsInfoNV, [*c]VkMemoryRequirements2KHR) callconv(.C) void;
pub const PFN_vkBindAccelerationStructureMemoryNV = ?*const fn (VkDevice, u32, [*c]const VkBindAccelerationStructureMemoryInfoNV) callconv(.C) VkResult;
pub const PFN_vkCmdBuildAccelerationStructureNV = ?*const fn (VkCommandBuffer, [*c]const VkAccelerationStructureInfoNV, VkBuffer, VkDeviceSize, VkBool32, VkAccelerationStructureNV, VkAccelerationStructureNV, VkBuffer, VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdCopyAccelerationStructureNV = ?*const fn (VkCommandBuffer, VkAccelerationStructureNV, VkAccelerationStructureNV, VkCopyAccelerationStructureModeKHR) callconv(.C) void;
pub const PFN_vkCmdTraceRaysNV = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, VkDeviceSize, VkBuffer, VkDeviceSize, VkDeviceSize, VkBuffer, VkDeviceSize, VkDeviceSize, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCreateRayTracingPipelinesNV = ?*const fn (VkDevice, VkPipelineCache, u32, [*c]const VkRayTracingPipelineCreateInfoNV, [*c]const VkAllocationCallbacks, [*c]VkPipeline) callconv(.C) VkResult;
pub const PFN_vkGetRayTracingShaderGroupHandlesKHR = ?*const fn (VkDevice, VkPipeline, u32, u32, usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkGetRayTracingShaderGroupHandlesNV = ?*const fn (VkDevice, VkPipeline, u32, u32, usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkGetAccelerationStructureHandleNV = ?*const fn (VkDevice, VkAccelerationStructureNV, usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkCmdWriteAccelerationStructuresPropertiesNV = ?*const fn (VkCommandBuffer, u32, [*c]const VkAccelerationStructureNV, VkQueryType, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkCompileDeferredNV = ?*const fn (VkDevice, VkPipeline, u32) callconv(.C) VkResult;
pub extern fn vkCreateAccelerationStructureNV(device: VkDevice, pCreateInfo: [*c]const VkAccelerationStructureCreateInfoNV, pAllocator: [*c]const VkAllocationCallbacks, pAccelerationStructure: [*c]VkAccelerationStructureNV) VkResult;
pub extern fn vkDestroyAccelerationStructureNV(device: VkDevice, accelerationStructure: VkAccelerationStructureNV, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetAccelerationStructureMemoryRequirementsNV(device: VkDevice, pInfo: [*c]const VkAccelerationStructureMemoryRequirementsInfoNV, pMemoryRequirements: [*c]VkMemoryRequirements2KHR) void;
pub extern fn vkBindAccelerationStructureMemoryNV(device: VkDevice, bindInfoCount: u32, pBindInfos: [*c]const VkBindAccelerationStructureMemoryInfoNV) VkResult;
pub extern fn vkCmdBuildAccelerationStructureNV(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkAccelerationStructureInfoNV, instanceData: VkBuffer, instanceOffset: VkDeviceSize, update: VkBool32, dst: VkAccelerationStructureNV, src: VkAccelerationStructureNV, scratch: VkBuffer, scratchOffset: VkDeviceSize) void;
pub extern fn vkCmdCopyAccelerationStructureNV(commandBuffer: VkCommandBuffer, dst: VkAccelerationStructureNV, src: VkAccelerationStructureNV, mode: VkCopyAccelerationStructureModeKHR) void;
pub extern fn vkCmdTraceRaysNV(commandBuffer: VkCommandBuffer, raygenShaderBindingTableBuffer: VkBuffer, raygenShaderBindingOffset: VkDeviceSize, missShaderBindingTableBuffer: VkBuffer, missShaderBindingOffset: VkDeviceSize, missShaderBindingStride: VkDeviceSize, hitShaderBindingTableBuffer: VkBuffer, hitShaderBindingOffset: VkDeviceSize, hitShaderBindingStride: VkDeviceSize, callableShaderBindingTableBuffer: VkBuffer, callableShaderBindingOffset: VkDeviceSize, callableShaderBindingStride: VkDeviceSize, width: u32, height: u32, depth: u32) void;
pub extern fn vkCreateRayTracingPipelinesNV(device: VkDevice, pipelineCache: VkPipelineCache, createInfoCount: u32, pCreateInfos: [*c]const VkRayTracingPipelineCreateInfoNV, pAllocator: [*c]const VkAllocationCallbacks, pPipelines: [*c]VkPipeline) VkResult;
pub extern fn vkGetRayTracingShaderGroupHandlesKHR(device: VkDevice, pipeline: VkPipeline, firstGroup: u32, groupCount: u32, dataSize: usize, pData: ?*anyopaque) VkResult;
pub extern fn vkGetRayTracingShaderGroupHandlesNV(device: VkDevice, pipeline: VkPipeline, firstGroup: u32, groupCount: u32, dataSize: usize, pData: ?*anyopaque) VkResult;
pub extern fn vkGetAccelerationStructureHandleNV(device: VkDevice, accelerationStructure: VkAccelerationStructureNV, dataSize: usize, pData: ?*anyopaque) VkResult;
pub extern fn vkCmdWriteAccelerationStructuresPropertiesNV(commandBuffer: VkCommandBuffer, accelerationStructureCount: u32, pAccelerationStructures: [*c]const VkAccelerationStructureNV, queryType: VkQueryType, queryPool: VkQueryPool, firstQuery: u32) void;
pub extern fn vkCompileDeferredNV(device: VkDevice, pipeline: VkPipeline, shader: u32) VkResult;
pub const struct_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    representativeFragmentTest: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV = struct_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV;
pub const struct_VkPipelineRepresentativeFragmentTestStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    representativeFragmentTestEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPipelineRepresentativeFragmentTestStateCreateInfoNV = struct_VkPipelineRepresentativeFragmentTestStateCreateInfoNV;
pub const struct_VkPhysicalDeviceImageViewImageFormatInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageViewType: VkImageViewType = @import("std").mem.zeroes(VkImageViewType),
};
pub const VkPhysicalDeviceImageViewImageFormatInfoEXT = struct_VkPhysicalDeviceImageViewImageFormatInfoEXT;
pub const struct_VkFilterCubicImageViewImageFormatPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    filterCubic: VkBool32 = @import("std").mem.zeroes(VkBool32),
    filterCubicMinmax: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkFilterCubicImageViewImageFormatPropertiesEXT = struct_VkFilterCubicImageViewImageFormatPropertiesEXT;
pub const VkQueueGlobalPriorityEXT = VkQueueGlobalPriorityKHR;
pub const VkDeviceQueueGlobalPriorityCreateInfoEXT = VkDeviceQueueGlobalPriorityCreateInfoKHR;
pub const struct_VkImportMemoryHostPointerInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    handleType: VkExternalMemoryHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagBits),
    pHostPointer: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkImportMemoryHostPointerInfoEXT = struct_VkImportMemoryHostPointerInfoEXT;
pub const struct_VkMemoryHostPointerPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryTypeBits: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMemoryHostPointerPropertiesEXT = struct_VkMemoryHostPointerPropertiesEXT;
pub const struct_VkPhysicalDeviceExternalMemoryHostPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minImportedHostPointerAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceExternalMemoryHostPropertiesEXT = struct_VkPhysicalDeviceExternalMemoryHostPropertiesEXT;
pub const PFN_vkGetMemoryHostPointerPropertiesEXT = ?*const fn (VkDevice, VkExternalMemoryHandleTypeFlagBits, ?*const anyopaque, [*c]VkMemoryHostPointerPropertiesEXT) callconv(.C) VkResult;
pub extern fn vkGetMemoryHostPointerPropertiesEXT(device: VkDevice, handleType: VkExternalMemoryHandleTypeFlagBits, pHostPointer: ?*const anyopaque, pMemoryHostPointerProperties: [*c]VkMemoryHostPointerPropertiesEXT) VkResult;
pub const PFN_vkCmdWriteBufferMarkerAMD = ?*const fn (VkCommandBuffer, VkPipelineStageFlagBits, VkBuffer, VkDeviceSize, u32) callconv(.C) void;
pub extern fn vkCmdWriteBufferMarkerAMD(commandBuffer: VkCommandBuffer, pipelineStage: VkPipelineStageFlagBits, dstBuffer: VkBuffer, dstOffset: VkDeviceSize, marker: u32) void;
pub const VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD: c_int = 2147483647;
pub const enum_VkPipelineCompilerControlFlagBitsAMD = c_uint;
pub const VkPipelineCompilerControlFlagBitsAMD = enum_VkPipelineCompilerControlFlagBitsAMD;
pub const VkPipelineCompilerControlFlagsAMD = VkFlags;
pub const struct_VkPipelineCompilerControlCreateInfoAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    compilerControlFlags: VkPipelineCompilerControlFlagsAMD = @import("std").mem.zeroes(VkPipelineCompilerControlFlagsAMD),
};
pub const VkPipelineCompilerControlCreateInfoAMD = struct_VkPipelineCompilerControlCreateInfoAMD;
pub const VkTimeDomainEXT = VkTimeDomainKHR;
pub const VkCalibratedTimestampInfoEXT = VkCalibratedTimestampInfoKHR;
pub const PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkTimeDomainKHR) callconv(.C) VkResult;
pub const PFN_vkGetCalibratedTimestampsEXT = ?*const fn (VkDevice, u32, [*c]const VkCalibratedTimestampInfoKHR, [*c]u64, [*c]u64) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(physicalDevice: VkPhysicalDevice, pTimeDomainCount: [*c]u32, pTimeDomains: [*c]VkTimeDomainKHR) VkResult;
pub extern fn vkGetCalibratedTimestampsEXT(device: VkDevice, timestampCount: u32, pTimestampInfos: [*c]const VkCalibratedTimestampInfoKHR, pTimestamps: [*c]u64, pMaxDeviation: [*c]u64) VkResult;
pub const struct_VkPhysicalDeviceShaderCorePropertiesAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderEngineCount: u32 = @import("std").mem.zeroes(u32),
    shaderArraysPerEngineCount: u32 = @import("std").mem.zeroes(u32),
    computeUnitsPerShaderArray: u32 = @import("std").mem.zeroes(u32),
    simdPerComputeUnit: u32 = @import("std").mem.zeroes(u32),
    wavefrontsPerSimd: u32 = @import("std").mem.zeroes(u32),
    wavefrontSize: u32 = @import("std").mem.zeroes(u32),
    sgprsPerSimd: u32 = @import("std").mem.zeroes(u32),
    minSgprAllocation: u32 = @import("std").mem.zeroes(u32),
    maxSgprAllocation: u32 = @import("std").mem.zeroes(u32),
    sgprAllocationGranularity: u32 = @import("std").mem.zeroes(u32),
    vgprsPerSimd: u32 = @import("std").mem.zeroes(u32),
    minVgprAllocation: u32 = @import("std").mem.zeroes(u32),
    maxVgprAllocation: u32 = @import("std").mem.zeroes(u32),
    vgprAllocationGranularity: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShaderCorePropertiesAMD = struct_VkPhysicalDeviceShaderCorePropertiesAMD;
pub const VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD: c_int = 0;
pub const VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD: c_int = 1;
pub const VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD: c_int = 2;
pub const VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD: c_int = 2147483647;
pub const enum_VkMemoryOverallocationBehaviorAMD = c_uint;
pub const VkMemoryOverallocationBehaviorAMD = enum_VkMemoryOverallocationBehaviorAMD;
pub const struct_VkDeviceMemoryOverallocationCreateInfoAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    overallocationBehavior: VkMemoryOverallocationBehaviorAMD = @import("std").mem.zeroes(VkMemoryOverallocationBehaviorAMD),
};
pub const VkDeviceMemoryOverallocationCreateInfoAMD = struct_VkDeviceMemoryOverallocationCreateInfoAMD;
pub const struct_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxVertexAttribDivisor: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = struct_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT;
pub const VkVertexInputBindingDivisorDescriptionEXT = VkVertexInputBindingDivisorDescriptionKHR;
pub const VkPipelineVertexInputDivisorStateCreateInfoEXT = VkPipelineVertexInputDivisorStateCreateInfoKHR;
pub const VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR;
pub const VkPipelineCreationFeedbackFlagBitsEXT = VkPipelineCreationFeedbackFlagBits;
pub const VkPipelineCreationFeedbackFlagsEXT = VkPipelineCreationFeedbackFlags;
pub const VkPipelineCreationFeedbackCreateInfoEXT = VkPipelineCreationFeedbackCreateInfo;
pub const VkPipelineCreationFeedbackEXT = VkPipelineCreationFeedback;
pub const struct_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    computeDerivativeGroupQuads: VkBool32 = @import("std").mem.zeroes(VkBool32),
    computeDerivativeGroupLinear: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceComputeShaderDerivativesFeaturesNV = struct_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV;
pub const struct_VkPhysicalDeviceMeshShaderFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    taskShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    meshShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMeshShaderFeaturesNV = struct_VkPhysicalDeviceMeshShaderFeaturesNV;
pub const struct_VkPhysicalDeviceMeshShaderPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxDrawMeshTasksCount: u32 = @import("std").mem.zeroes(u32),
    maxTaskWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    maxTaskWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxTaskTotalMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxTaskOutputCount: u32 = @import("std").mem.zeroes(u32),
    maxMeshWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    maxMeshWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxMeshTotalMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputVertices: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputPrimitives: u32 = @import("std").mem.zeroes(u32),
    maxMeshMultiviewViewCount: u32 = @import("std").mem.zeroes(u32),
    meshOutputPerVertexGranularity: u32 = @import("std").mem.zeroes(u32),
    meshOutputPerPrimitiveGranularity: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceMeshShaderPropertiesNV = struct_VkPhysicalDeviceMeshShaderPropertiesNV;
pub const struct_VkDrawMeshTasksIndirectCommandNV = extern struct {
    taskCount: u32 = @import("std").mem.zeroes(u32),
    firstTask: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDrawMeshTasksIndirectCommandNV = struct_VkDrawMeshTasksIndirectCommandNV;
pub const PFN_vkCmdDrawMeshTasksNV = ?*const fn (VkCommandBuffer, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawMeshTasksIndirectNV = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawMeshTasksIndirectCountNV = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub extern fn vkCmdDrawMeshTasksNV(commandBuffer: VkCommandBuffer, taskCount: u32, firstTask: u32) void;
pub extern fn vkCmdDrawMeshTasksIndirectNV(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, drawCount: u32, stride: u32) void;
pub extern fn vkCmdDrawMeshTasksIndirectCountNV(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub const VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV = VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR;
pub const struct_VkPhysicalDeviceShaderImageFootprintFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageFootprint: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderImageFootprintFeaturesNV = struct_VkPhysicalDeviceShaderImageFootprintFeaturesNV;
pub const struct_VkPipelineViewportExclusiveScissorStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    exclusiveScissorCount: u32 = @import("std").mem.zeroes(u32),
    pExclusiveScissors: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkPipelineViewportExclusiveScissorStateCreateInfoNV = struct_VkPipelineViewportExclusiveScissorStateCreateInfoNV;
pub const struct_VkPhysicalDeviceExclusiveScissorFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    exclusiveScissor: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExclusiveScissorFeaturesNV = struct_VkPhysicalDeviceExclusiveScissorFeaturesNV;
pub const PFN_vkCmdSetExclusiveScissorEnableNV = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetExclusiveScissorNV = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkRect2D) callconv(.C) void;
pub extern fn vkCmdSetExclusiveScissorEnableNV(commandBuffer: VkCommandBuffer, firstExclusiveScissor: u32, exclusiveScissorCount: u32, pExclusiveScissorEnables: [*c]const VkBool32) void;
pub extern fn vkCmdSetExclusiveScissorNV(commandBuffer: VkCommandBuffer, firstExclusiveScissor: u32, exclusiveScissorCount: u32, pExclusiveScissors: [*c]const VkRect2D) void;
pub const struct_VkQueueFamilyCheckpointPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    checkpointExecutionStageMask: VkPipelineStageFlags = @import("std").mem.zeroes(VkPipelineStageFlags),
};
pub const VkQueueFamilyCheckpointPropertiesNV = struct_VkQueueFamilyCheckpointPropertiesNV;
pub const struct_VkCheckpointDataNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    stage: VkPipelineStageFlagBits = @import("std").mem.zeroes(VkPipelineStageFlagBits),
    pCheckpointMarker: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkCheckpointDataNV = struct_VkCheckpointDataNV;
pub const PFN_vkCmdSetCheckpointNV = ?*const fn (VkCommandBuffer, ?*const anyopaque) callconv(.C) void;
pub const PFN_vkGetQueueCheckpointDataNV = ?*const fn (VkQueue, [*c]u32, [*c]VkCheckpointDataNV) callconv(.C) void;
pub extern fn vkCmdSetCheckpointNV(commandBuffer: VkCommandBuffer, pCheckpointMarker: ?*const anyopaque) void;
pub extern fn vkGetQueueCheckpointDataNV(queue: VkQueue, pCheckpointDataCount: [*c]u32, pCheckpointData: [*c]VkCheckpointDataNV) void;
pub const struct_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderIntegerFunctions2: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL = struct_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL;
pub const struct_VkPerformanceConfigurationINTEL_T = opaque {};
pub const VkPerformanceConfigurationINTEL = ?*struct_VkPerformanceConfigurationINTEL_T;
pub const VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL: c_int = 0;
pub const VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL: c_int = 2147483647;
pub const enum_VkPerformanceConfigurationTypeINTEL = c_uint;
pub const VkPerformanceConfigurationTypeINTEL = enum_VkPerformanceConfigurationTypeINTEL;
pub const VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL: c_int = 0;
pub const VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL: c_int = 2147483647;
pub const enum_VkQueryPoolSamplingModeINTEL = c_uint;
pub const VkQueryPoolSamplingModeINTEL = enum_VkQueryPoolSamplingModeINTEL;
pub const VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL: c_int = 0;
pub const VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL: c_int = 1;
pub const VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL: c_int = 2147483647;
pub const enum_VkPerformanceOverrideTypeINTEL = c_uint;
pub const VkPerformanceOverrideTypeINTEL = enum_VkPerformanceOverrideTypeINTEL;
pub const VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL: c_int = 0;
pub const VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL: c_int = 1;
pub const VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL: c_int = 2147483647;
pub const enum_VkPerformanceParameterTypeINTEL = c_uint;
pub const VkPerformanceParameterTypeINTEL = enum_VkPerformanceParameterTypeINTEL;
pub const VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL: c_int = 0;
pub const VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL: c_int = 1;
pub const VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL: c_int = 2;
pub const VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL: c_int = 3;
pub const VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL: c_int = 4;
pub const VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL: c_int = 2147483647;
pub const enum_VkPerformanceValueTypeINTEL = c_uint;
pub const VkPerformanceValueTypeINTEL = enum_VkPerformanceValueTypeINTEL;
pub const union_VkPerformanceValueDataINTEL = extern union {
    value32: u32,
    value64: u64,
    valueFloat: f32,
    valueBool: VkBool32,
    valueString: [*c]const u8,
};
pub const VkPerformanceValueDataINTEL = union_VkPerformanceValueDataINTEL;
pub const struct_VkPerformanceValueINTEL = extern struct {
    type: VkPerformanceValueTypeINTEL = @import("std").mem.zeroes(VkPerformanceValueTypeINTEL),
    data: VkPerformanceValueDataINTEL = @import("std").mem.zeroes(VkPerformanceValueDataINTEL),
};
pub const VkPerformanceValueINTEL = struct_VkPerformanceValueINTEL;
pub const struct_VkInitializePerformanceApiInfoINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pUserData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkInitializePerformanceApiInfoINTEL = struct_VkInitializePerformanceApiInfoINTEL;
pub const struct_VkQueryPoolPerformanceQueryCreateInfoINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    performanceCountersSampling: VkQueryPoolSamplingModeINTEL = @import("std").mem.zeroes(VkQueryPoolSamplingModeINTEL),
};
pub const VkQueryPoolPerformanceQueryCreateInfoINTEL = struct_VkQueryPoolPerformanceQueryCreateInfoINTEL;
pub const VkQueryPoolCreateInfoINTEL = VkQueryPoolPerformanceQueryCreateInfoINTEL;
pub const struct_VkPerformanceMarkerInfoINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    marker: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPerformanceMarkerInfoINTEL = struct_VkPerformanceMarkerInfoINTEL;
pub const struct_VkPerformanceStreamMarkerInfoINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    marker: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPerformanceStreamMarkerInfoINTEL = struct_VkPerformanceStreamMarkerInfoINTEL;
pub const struct_VkPerformanceOverrideInfoINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkPerformanceOverrideTypeINTEL = @import("std").mem.zeroes(VkPerformanceOverrideTypeINTEL),
    enable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    parameter: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPerformanceOverrideInfoINTEL = struct_VkPerformanceOverrideInfoINTEL;
pub const struct_VkPerformanceConfigurationAcquireInfoINTEL = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkPerformanceConfigurationTypeINTEL = @import("std").mem.zeroes(VkPerformanceConfigurationTypeINTEL),
};
pub const VkPerformanceConfigurationAcquireInfoINTEL = struct_VkPerformanceConfigurationAcquireInfoINTEL;
pub const PFN_vkInitializePerformanceApiINTEL = ?*const fn (VkDevice, [*c]const VkInitializePerformanceApiInfoINTEL) callconv(.C) VkResult;
pub const PFN_vkUninitializePerformanceApiINTEL = ?*const fn (VkDevice) callconv(.C) void;
pub const PFN_vkCmdSetPerformanceMarkerINTEL = ?*const fn (VkCommandBuffer, [*c]const VkPerformanceMarkerInfoINTEL) callconv(.C) VkResult;
pub const PFN_vkCmdSetPerformanceStreamMarkerINTEL = ?*const fn (VkCommandBuffer, [*c]const VkPerformanceStreamMarkerInfoINTEL) callconv(.C) VkResult;
pub const PFN_vkCmdSetPerformanceOverrideINTEL = ?*const fn (VkCommandBuffer, [*c]const VkPerformanceOverrideInfoINTEL) callconv(.C) VkResult;
pub const PFN_vkAcquirePerformanceConfigurationINTEL = ?*const fn (VkDevice, [*c]const VkPerformanceConfigurationAcquireInfoINTEL, [*c]VkPerformanceConfigurationINTEL) callconv(.C) VkResult;
pub const PFN_vkReleasePerformanceConfigurationINTEL = ?*const fn (VkDevice, VkPerformanceConfigurationINTEL) callconv(.C) VkResult;
pub const PFN_vkQueueSetPerformanceConfigurationINTEL = ?*const fn (VkQueue, VkPerformanceConfigurationINTEL) callconv(.C) VkResult;
pub const PFN_vkGetPerformanceParameterINTEL = ?*const fn (VkDevice, VkPerformanceParameterTypeINTEL, [*c]VkPerformanceValueINTEL) callconv(.C) VkResult;
pub extern fn vkInitializePerformanceApiINTEL(device: VkDevice, pInitializeInfo: [*c]const VkInitializePerformanceApiInfoINTEL) VkResult;
pub extern fn vkUninitializePerformanceApiINTEL(device: VkDevice) void;
pub extern fn vkCmdSetPerformanceMarkerINTEL(commandBuffer: VkCommandBuffer, pMarkerInfo: [*c]const VkPerformanceMarkerInfoINTEL) VkResult;
pub extern fn vkCmdSetPerformanceStreamMarkerINTEL(commandBuffer: VkCommandBuffer, pMarkerInfo: [*c]const VkPerformanceStreamMarkerInfoINTEL) VkResult;
pub extern fn vkCmdSetPerformanceOverrideINTEL(commandBuffer: VkCommandBuffer, pOverrideInfo: [*c]const VkPerformanceOverrideInfoINTEL) VkResult;
pub extern fn vkAcquirePerformanceConfigurationINTEL(device: VkDevice, pAcquireInfo: [*c]const VkPerformanceConfigurationAcquireInfoINTEL, pConfiguration: [*c]VkPerformanceConfigurationINTEL) VkResult;
pub extern fn vkReleasePerformanceConfigurationINTEL(device: VkDevice, configuration: VkPerformanceConfigurationINTEL) VkResult;
pub extern fn vkQueueSetPerformanceConfigurationINTEL(queue: VkQueue, configuration: VkPerformanceConfigurationINTEL) VkResult;
pub extern fn vkGetPerformanceParameterINTEL(device: VkDevice, parameter: VkPerformanceParameterTypeINTEL, pValue: [*c]VkPerformanceValueINTEL) VkResult;
pub const struct_VkPhysicalDevicePCIBusInfoPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pciDomain: u32 = @import("std").mem.zeroes(u32),
    pciBus: u32 = @import("std").mem.zeroes(u32),
    pciDevice: u32 = @import("std").mem.zeroes(u32),
    pciFunction: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDevicePCIBusInfoPropertiesEXT = struct_VkPhysicalDevicePCIBusInfoPropertiesEXT;
pub const struct_VkDisplayNativeHdrSurfaceCapabilitiesAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    localDimmingSupport: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDisplayNativeHdrSurfaceCapabilitiesAMD = struct_VkDisplayNativeHdrSurfaceCapabilitiesAMD;
pub const struct_VkSwapchainDisplayNativeHdrCreateInfoAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    localDimmingEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSwapchainDisplayNativeHdrCreateInfoAMD = struct_VkSwapchainDisplayNativeHdrCreateInfoAMD;
pub const PFN_vkSetLocalDimmingAMD = ?*const fn (VkDevice, VkSwapchainKHR, VkBool32) callconv(.C) void;
pub extern fn vkSetLocalDimmingAMD(device: VkDevice, swapChain: VkSwapchainKHR, localDimmingEnable: VkBool32) void;
pub const struct_VkPhysicalDeviceFragmentDensityMapFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentDensityMap: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentDensityMapDynamic: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentDensityMapNonSubsampledImages: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentDensityMapFeaturesEXT = struct_VkPhysicalDeviceFragmentDensityMapFeaturesEXT;
pub const struct_VkPhysicalDeviceFragmentDensityMapPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minFragmentDensityTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxFragmentDensityTexelSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    fragmentDensityInvocations: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentDensityMapPropertiesEXT = struct_VkPhysicalDeviceFragmentDensityMapPropertiesEXT;
pub const struct_VkRenderPassFragmentDensityMapCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    fragmentDensityMapAttachment: VkAttachmentReference = @import("std").mem.zeroes(VkAttachmentReference),
};
pub const VkRenderPassFragmentDensityMapCreateInfoEXT = struct_VkRenderPassFragmentDensityMapCreateInfoEXT;
pub const VkPhysicalDeviceScalarBlockLayoutFeaturesEXT = VkPhysicalDeviceScalarBlockLayoutFeatures;
pub const VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = VkPhysicalDeviceSubgroupSizeControlFeatures;
pub const VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = VkPhysicalDeviceSubgroupSizeControlProperties;
pub const VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT = VkPipelineShaderStageRequiredSubgroupSizeCreateInfo;
pub const VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD: c_int = 2147483647;
pub const enum_VkShaderCorePropertiesFlagBitsAMD = c_uint;
pub const VkShaderCorePropertiesFlagBitsAMD = enum_VkShaderCorePropertiesFlagBitsAMD;
pub const VkShaderCorePropertiesFlagsAMD = VkFlags;
pub const struct_VkPhysicalDeviceShaderCoreProperties2AMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderCoreFeatures: VkShaderCorePropertiesFlagsAMD = @import("std").mem.zeroes(VkShaderCorePropertiesFlagsAMD),
    activeComputeUnitCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShaderCoreProperties2AMD = struct_VkPhysicalDeviceShaderCoreProperties2AMD;
pub const struct_VkPhysicalDeviceCoherentMemoryFeaturesAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceCoherentMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCoherentMemoryFeaturesAMD = struct_VkPhysicalDeviceCoherentMemoryFeaturesAMD;
pub const struct_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderImageInt64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseImageInt64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT = struct_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT;
pub const struct_VkPhysicalDeviceMemoryBudgetPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    heapBudget: [16]VkDeviceSize = @import("std").mem.zeroes([16]VkDeviceSize),
    heapUsage: [16]VkDeviceSize = @import("std").mem.zeroes([16]VkDeviceSize),
};
pub const VkPhysicalDeviceMemoryBudgetPropertiesEXT = struct_VkPhysicalDeviceMemoryBudgetPropertiesEXT;
pub const struct_VkPhysicalDeviceMemoryPriorityFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryPriority: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMemoryPriorityFeaturesEXT = struct_VkPhysicalDeviceMemoryPriorityFeaturesEXT;
pub const struct_VkMemoryPriorityAllocateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    priority: f32 = @import("std").mem.zeroes(f32),
};
pub const VkMemoryPriorityAllocateInfoEXT = struct_VkMemoryPriorityAllocateInfoEXT;
pub const struct_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dedicatedAllocationImageAliasing: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV = struct_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV;
pub const struct_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    bufferDeviceAddress: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddressCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferDeviceAddressMultiDevice: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceBufferDeviceAddressFeaturesEXT = struct_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT;
pub const VkPhysicalDeviceBufferAddressFeaturesEXT = VkPhysicalDeviceBufferDeviceAddressFeaturesEXT;
pub const VkBufferDeviceAddressInfoEXT = VkBufferDeviceAddressInfo;
pub const struct_VkBufferDeviceAddressCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
};
pub const VkBufferDeviceAddressCreateInfoEXT = struct_VkBufferDeviceAddressCreateInfoEXT;
pub const PFN_vkGetBufferDeviceAddressEXT = ?*const fn (VkDevice, [*c]const VkBufferDeviceAddressInfo) callconv(.C) VkDeviceAddress;
pub extern fn vkGetBufferDeviceAddressEXT(device: VkDevice, pInfo: [*c]const VkBufferDeviceAddressInfo) VkDeviceAddress;
pub const VkToolPurposeFlagBitsEXT = VkToolPurposeFlagBits;
pub const VkToolPurposeFlagsEXT = VkToolPurposeFlags;
pub const VkPhysicalDeviceToolPropertiesEXT = VkPhysicalDeviceToolProperties;
pub const PFN_vkGetPhysicalDeviceToolPropertiesEXT = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkPhysicalDeviceToolProperties) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceToolPropertiesEXT(physicalDevice: VkPhysicalDevice, pToolCount: [*c]u32, pToolProperties: [*c]VkPhysicalDeviceToolProperties) VkResult;
pub const VkImageStencilUsageCreateInfoEXT = VkImageStencilUsageCreateInfo;
pub const VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT: c_int = 0;
pub const VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT: c_int = 1;
pub const VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT: c_int = 2;
pub const VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT: c_int = 3;
pub const VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT: c_int = 4;
pub const VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkValidationFeatureEnableEXT = c_uint;
pub const VkValidationFeatureEnableEXT = enum_VkValidationFeatureEnableEXT;
pub const VK_VALIDATION_FEATURE_DISABLE_ALL_EXT: c_int = 0;
pub const VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT: c_int = 1;
pub const VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT: c_int = 2;
pub const VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT: c_int = 3;
pub const VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT: c_int = 4;
pub const VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT: c_int = 5;
pub const VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT: c_int = 6;
pub const VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT: c_int = 7;
pub const VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkValidationFeatureDisableEXT = c_uint;
pub const VkValidationFeatureDisableEXT = enum_VkValidationFeatureDisableEXT;
pub const struct_VkValidationFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    enabledValidationFeatureCount: u32 = @import("std").mem.zeroes(u32),
    pEnabledValidationFeatures: [*c]const VkValidationFeatureEnableEXT = @import("std").mem.zeroes([*c]const VkValidationFeatureEnableEXT),
    disabledValidationFeatureCount: u32 = @import("std").mem.zeroes(u32),
    pDisabledValidationFeatures: [*c]const VkValidationFeatureDisableEXT = @import("std").mem.zeroes([*c]const VkValidationFeatureDisableEXT),
};
pub const VkValidationFeaturesEXT = struct_VkValidationFeaturesEXT;
pub const VkComponentTypeNV = VkComponentTypeKHR;
pub const VkScopeNV = VkScopeKHR;
pub const struct_VkCooperativeMatrixPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    MSize: u32 = @import("std").mem.zeroes(u32),
    NSize: u32 = @import("std").mem.zeroes(u32),
    KSize: u32 = @import("std").mem.zeroes(u32),
    AType: VkComponentTypeNV = @import("std").mem.zeroes(VkComponentTypeNV),
    BType: VkComponentTypeNV = @import("std").mem.zeroes(VkComponentTypeNV),
    CType: VkComponentTypeNV = @import("std").mem.zeroes(VkComponentTypeNV),
    DType: VkComponentTypeNV = @import("std").mem.zeroes(VkComponentTypeNV),
    scope: VkScopeNV = @import("std").mem.zeroes(VkScopeNV),
};
pub const VkCooperativeMatrixPropertiesNV = struct_VkCooperativeMatrixPropertiesNV;
pub const struct_VkPhysicalDeviceCooperativeMatrixFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cooperativeMatrix: VkBool32 = @import("std").mem.zeroes(VkBool32),
    cooperativeMatrixRobustBufferAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCooperativeMatrixFeaturesNV = struct_VkPhysicalDeviceCooperativeMatrixFeaturesNV;
pub const struct_VkPhysicalDeviceCooperativeMatrixPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cooperativeMatrixSupportedStages: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
};
pub const VkPhysicalDeviceCooperativeMatrixPropertiesNV = struct_VkPhysicalDeviceCooperativeMatrixPropertiesNV;
pub const PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkCooperativeMatrixPropertiesNV) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceCooperativeMatrixPropertiesNV(physicalDevice: VkPhysicalDevice, pPropertyCount: [*c]u32, pProperties: [*c]VkCooperativeMatrixPropertiesNV) VkResult;
pub const VK_COVERAGE_REDUCTION_MODE_MERGE_NV: c_int = 0;
pub const VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV: c_int = 1;
pub const VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkCoverageReductionModeNV = c_uint;
pub const VkCoverageReductionModeNV = enum_VkCoverageReductionModeNV;
pub const VkPipelineCoverageReductionStateCreateFlagsNV = VkFlags;
pub const struct_VkPhysicalDeviceCoverageReductionModeFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    coverageReductionMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCoverageReductionModeFeaturesNV = struct_VkPhysicalDeviceCoverageReductionModeFeaturesNV;
pub const struct_VkPipelineCoverageReductionStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCoverageReductionStateCreateFlagsNV = @import("std").mem.zeroes(VkPipelineCoverageReductionStateCreateFlagsNV),
    coverageReductionMode: VkCoverageReductionModeNV = @import("std").mem.zeroes(VkCoverageReductionModeNV),
};
pub const VkPipelineCoverageReductionStateCreateInfoNV = struct_VkPipelineCoverageReductionStateCreateInfoNV;
pub const struct_VkFramebufferMixedSamplesCombinationNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    coverageReductionMode: VkCoverageReductionModeNV = @import("std").mem.zeroes(VkCoverageReductionModeNV),
    rasterizationSamples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
    depthStencilSamples: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
    colorSamples: VkSampleCountFlags = @import("std").mem.zeroes(VkSampleCountFlags),
};
pub const VkFramebufferMixedSamplesCombinationNV = struct_VkFramebufferMixedSamplesCombinationNV;
pub const PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = ?*const fn (VkPhysicalDevice, [*c]u32, [*c]VkFramebufferMixedSamplesCombinationNV) callconv(.C) VkResult;
pub extern fn vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(physicalDevice: VkPhysicalDevice, pCombinationCount: [*c]u32, pCombinations: [*c]VkFramebufferMixedSamplesCombinationNV) VkResult;
pub const struct_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentShaderSampleInterlock: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShaderPixelInterlock: VkBool32 = @import("std").mem.zeroes(VkBool32),
    fragmentShaderShadingRateInterlock: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT = struct_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT;
pub const struct_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    ycbcrImageArrays: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceYcbcrImageArraysFeaturesEXT = struct_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT;
pub const VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT: c_int = 0;
pub const VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT: c_int = 1;
pub const VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkProvokingVertexModeEXT = c_uint;
pub const VkProvokingVertexModeEXT = enum_VkProvokingVertexModeEXT;
pub const struct_VkPhysicalDeviceProvokingVertexFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    provokingVertexLast: VkBool32 = @import("std").mem.zeroes(VkBool32),
    transformFeedbackPreservesProvokingVertex: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceProvokingVertexFeaturesEXT = struct_VkPhysicalDeviceProvokingVertexFeaturesEXT;
pub const struct_VkPhysicalDeviceProvokingVertexPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    provokingVertexModePerPipeline: VkBool32 = @import("std").mem.zeroes(VkBool32),
    transformFeedbackPreservesTriangleFanProvokingVertex: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceProvokingVertexPropertiesEXT = struct_VkPhysicalDeviceProvokingVertexPropertiesEXT;
pub const struct_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    provokingVertexMode: VkProvokingVertexModeEXT = @import("std").mem.zeroes(VkProvokingVertexModeEXT),
};
pub const VkPipelineRasterizationProvokingVertexStateCreateInfoEXT = struct_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT;
pub const VkHeadlessSurfaceCreateFlagsEXT = VkFlags;
pub const struct_VkHeadlessSurfaceCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkHeadlessSurfaceCreateFlagsEXT = @import("std").mem.zeroes(VkHeadlessSurfaceCreateFlagsEXT),
};
pub const VkHeadlessSurfaceCreateInfoEXT = struct_VkHeadlessSurfaceCreateInfoEXT;
pub const PFN_vkCreateHeadlessSurfaceEXT = ?*const fn (VkInstance, [*c]const VkHeadlessSurfaceCreateInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkSurfaceKHR) callconv(.C) VkResult;
pub extern fn vkCreateHeadlessSurfaceEXT(instance: VkInstance, pCreateInfo: [*c]const VkHeadlessSurfaceCreateInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pSurface: [*c]VkSurfaceKHR) VkResult;
pub const VkLineRasterizationModeEXT = VkLineRasterizationModeKHR;
pub const VkPhysicalDeviceLineRasterizationFeaturesEXT = VkPhysicalDeviceLineRasterizationFeaturesKHR;
pub const VkPhysicalDeviceLineRasterizationPropertiesEXT = VkPhysicalDeviceLineRasterizationPropertiesKHR;
pub const VkPipelineRasterizationLineStateCreateInfoEXT = VkPipelineRasterizationLineStateCreateInfoKHR;
pub const PFN_vkCmdSetLineStippleEXT = ?*const fn (VkCommandBuffer, u32, u16) callconv(.C) void;
pub extern fn vkCmdSetLineStippleEXT(commandBuffer: VkCommandBuffer, lineStippleFactor: u32, lineStipplePattern: u16) void;
pub const struct_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderBufferFloat32Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat32AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat64AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat32Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat32AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat64Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat64AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderImageFloat32Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderImageFloat32AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseImageFloat32Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseImageFloat32AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderAtomicFloatFeaturesEXT = struct_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT;
pub const VkPhysicalDeviceHostQueryResetFeaturesEXT = VkPhysicalDeviceHostQueryResetFeatures;
pub const PFN_vkResetQueryPoolEXT = ?*const fn (VkDevice, VkQueryPool, u32, u32) callconv(.C) void;
pub extern fn vkResetQueryPoolEXT(device: VkDevice, queryPool: VkQueryPool, firstQuery: u32, queryCount: u32) void;
pub const VkPhysicalDeviceIndexTypeUint8FeaturesEXT = VkPhysicalDeviceIndexTypeUint8FeaturesKHR;
pub const struct_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    extendedDynamicState: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExtendedDynamicStateFeaturesEXT = struct_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT;
pub const PFN_vkCmdSetCullModeEXT = ?*const fn (VkCommandBuffer, VkCullModeFlags) callconv(.C) void;
pub const PFN_vkCmdSetFrontFaceEXT = ?*const fn (VkCommandBuffer, VkFrontFace) callconv(.C) void;
pub const PFN_vkCmdSetPrimitiveTopologyEXT = ?*const fn (VkCommandBuffer, VkPrimitiveTopology) callconv(.C) void;
pub const PFN_vkCmdSetViewportWithCountEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkViewport) callconv(.C) void;
pub const PFN_vkCmdSetScissorWithCountEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkRect2D) callconv(.C) void;
pub const PFN_vkCmdBindVertexBuffers2EXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBuffer, [*c]const VkDeviceSize, [*c]const VkDeviceSize, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdSetDepthTestEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthWriteEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthCompareOpEXT = ?*const fn (VkCommandBuffer, VkCompareOp) callconv(.C) void;
pub const PFN_vkCmdSetDepthBoundsTestEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetStencilTestEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetStencilOpEXT = ?*const fn (VkCommandBuffer, VkStencilFaceFlags, VkStencilOp, VkStencilOp, VkStencilOp, VkCompareOp) callconv(.C) void;
pub extern fn vkCmdSetCullModeEXT(commandBuffer: VkCommandBuffer, cullMode: VkCullModeFlags) void;
pub extern fn vkCmdSetFrontFaceEXT(commandBuffer: VkCommandBuffer, frontFace: VkFrontFace) void;
pub extern fn vkCmdSetPrimitiveTopologyEXT(commandBuffer: VkCommandBuffer, primitiveTopology: VkPrimitiveTopology) void;
pub extern fn vkCmdSetViewportWithCountEXT(commandBuffer: VkCommandBuffer, viewportCount: u32, pViewports: [*c]const VkViewport) void;
pub extern fn vkCmdSetScissorWithCountEXT(commandBuffer: VkCommandBuffer, scissorCount: u32, pScissors: [*c]const VkRect2D) void;
pub extern fn vkCmdBindVertexBuffers2EXT(commandBuffer: VkCommandBuffer, firstBinding: u32, bindingCount: u32, pBuffers: [*c]const VkBuffer, pOffsets: [*c]const VkDeviceSize, pSizes: [*c]const VkDeviceSize, pStrides: [*c]const VkDeviceSize) void;
pub extern fn vkCmdSetDepthTestEnableEXT(commandBuffer: VkCommandBuffer, depthTestEnable: VkBool32) void;
pub extern fn vkCmdSetDepthWriteEnableEXT(commandBuffer: VkCommandBuffer, depthWriteEnable: VkBool32) void;
pub extern fn vkCmdSetDepthCompareOpEXT(commandBuffer: VkCommandBuffer, depthCompareOp: VkCompareOp) void;
pub extern fn vkCmdSetDepthBoundsTestEnableEXT(commandBuffer: VkCommandBuffer, depthBoundsTestEnable: VkBool32) void;
pub extern fn vkCmdSetStencilTestEnableEXT(commandBuffer: VkCommandBuffer, stencilTestEnable: VkBool32) void;
pub extern fn vkCmdSetStencilOpEXT(commandBuffer: VkCommandBuffer, faceMask: VkStencilFaceFlags, failOp: VkStencilOp, passOp: VkStencilOp, depthFailOp: VkStencilOp, compareOp: VkCompareOp) void;
pub const VK_HOST_IMAGE_COPY_MEMCPY_EXT: c_int = 1;
pub const VK_HOST_IMAGE_COPY_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkHostImageCopyFlagBitsEXT = c_uint;
pub const VkHostImageCopyFlagBitsEXT = enum_VkHostImageCopyFlagBitsEXT;
pub const VkHostImageCopyFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceHostImageCopyFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    hostImageCopy: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceHostImageCopyFeaturesEXT = struct_VkPhysicalDeviceHostImageCopyFeaturesEXT;
pub const struct_VkPhysicalDeviceHostImageCopyPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    copySrcLayoutCount: u32 = @import("std").mem.zeroes(u32),
    pCopySrcLayouts: [*c]VkImageLayout = @import("std").mem.zeroes([*c]VkImageLayout),
    copyDstLayoutCount: u32 = @import("std").mem.zeroes(u32),
    pCopyDstLayouts: [*c]VkImageLayout = @import("std").mem.zeroes([*c]VkImageLayout),
    optimalTilingLayoutUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    identicalMemoryTypeRequirements: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceHostImageCopyPropertiesEXT = struct_VkPhysicalDeviceHostImageCopyPropertiesEXT;
pub const struct_VkMemoryToImageCopyEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pHostPointer: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    memoryRowLength: u32 = @import("std").mem.zeroes(u32),
    memoryImageHeight: u32 = @import("std").mem.zeroes(u32),
    imageSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    imageOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    imageExtent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkMemoryToImageCopyEXT = struct_VkMemoryToImageCopyEXT;
pub const struct_VkImageToMemoryCopyEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pHostPointer: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryRowLength: u32 = @import("std").mem.zeroes(u32),
    memoryImageHeight: u32 = @import("std").mem.zeroes(u32),
    imageSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    imageOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    imageExtent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkImageToMemoryCopyEXT = struct_VkImageToMemoryCopyEXT;
pub const struct_VkCopyMemoryToImageInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkHostImageCopyFlagsEXT = @import("std").mem.zeroes(VkHostImageCopyFlagsEXT),
    dstImage: VkImage = @import("std").mem.zeroes(VkImage),
    dstImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkMemoryToImageCopyEXT = @import("std").mem.zeroes([*c]const VkMemoryToImageCopyEXT),
};
pub const VkCopyMemoryToImageInfoEXT = struct_VkCopyMemoryToImageInfoEXT;
pub const struct_VkCopyImageToMemoryInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkHostImageCopyFlagsEXT = @import("std").mem.zeroes(VkHostImageCopyFlagsEXT),
    srcImage: VkImage = @import("std").mem.zeroes(VkImage),
    srcImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkImageToMemoryCopyEXT = @import("std").mem.zeroes([*c]const VkImageToMemoryCopyEXT),
};
pub const VkCopyImageToMemoryInfoEXT = struct_VkCopyImageToMemoryInfoEXT;
pub const struct_VkCopyImageToImageInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkHostImageCopyFlagsEXT = @import("std").mem.zeroes(VkHostImageCopyFlagsEXT),
    srcImage: VkImage = @import("std").mem.zeroes(VkImage),
    srcImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    dstImage: VkImage = @import("std").mem.zeroes(VkImage),
    dstImageLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkImageCopy2 = @import("std").mem.zeroes([*c]const VkImageCopy2),
};
pub const VkCopyImageToImageInfoEXT = struct_VkCopyImageToImageInfoEXT;
pub const struct_VkHostImageLayoutTransitionInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
    oldLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    newLayout: VkImageLayout = @import("std").mem.zeroes(VkImageLayout),
    subresourceRange: VkImageSubresourceRange = @import("std").mem.zeroes(VkImageSubresourceRange),
};
pub const VkHostImageLayoutTransitionInfoEXT = struct_VkHostImageLayoutTransitionInfoEXT;
pub const struct_VkSubresourceHostMemcpySizeEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkSubresourceHostMemcpySizeEXT = struct_VkSubresourceHostMemcpySizeEXT;
pub const struct_VkHostImageCopyDevicePerformanceQueryEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    optimalDeviceAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    identicalMemoryLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkHostImageCopyDevicePerformanceQueryEXT = struct_VkHostImageCopyDevicePerformanceQueryEXT;
pub const VkSubresourceLayout2EXT = VkSubresourceLayout2KHR;
pub const VkImageSubresource2EXT = VkImageSubresource2KHR;
pub const PFN_vkCopyMemoryToImageEXT = ?*const fn (VkDevice, [*c]const VkCopyMemoryToImageInfoEXT) callconv(.C) VkResult;
pub const PFN_vkCopyImageToMemoryEXT = ?*const fn (VkDevice, [*c]const VkCopyImageToMemoryInfoEXT) callconv(.C) VkResult;
pub const PFN_vkCopyImageToImageEXT = ?*const fn (VkDevice, [*c]const VkCopyImageToImageInfoEXT) callconv(.C) VkResult;
pub const PFN_vkTransitionImageLayoutEXT = ?*const fn (VkDevice, u32, [*c]const VkHostImageLayoutTransitionInfoEXT) callconv(.C) VkResult;
pub const PFN_vkGetImageSubresourceLayout2EXT = ?*const fn (VkDevice, VkImage, [*c]const VkImageSubresource2KHR, [*c]VkSubresourceLayout2KHR) callconv(.C) void;
pub extern fn vkCopyMemoryToImageEXT(device: VkDevice, pCopyMemoryToImageInfo: [*c]const VkCopyMemoryToImageInfoEXT) VkResult;
pub extern fn vkCopyImageToMemoryEXT(device: VkDevice, pCopyImageToMemoryInfo: [*c]const VkCopyImageToMemoryInfoEXT) VkResult;
pub extern fn vkCopyImageToImageEXT(device: VkDevice, pCopyImageToImageInfo: [*c]const VkCopyImageToImageInfoEXT) VkResult;
pub extern fn vkTransitionImageLayoutEXT(device: VkDevice, transitionCount: u32, pTransitions: [*c]const VkHostImageLayoutTransitionInfoEXT) VkResult;
pub extern fn vkGetImageSubresourceLayout2EXT(device: VkDevice, image: VkImage, pSubresource: [*c]const VkImageSubresource2KHR, pLayout: [*c]VkSubresourceLayout2KHR) void;
pub const struct_VkPhysicalDeviceMapMemoryPlacedFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryMapPlaced: VkBool32 = @import("std").mem.zeroes(VkBool32),
    memoryMapRangePlaced: VkBool32 = @import("std").mem.zeroes(VkBool32),
    memoryUnmapReserve: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMapMemoryPlacedFeaturesEXT = struct_VkPhysicalDeviceMapMemoryPlacedFeaturesEXT;
pub const struct_VkPhysicalDeviceMapMemoryPlacedPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minPlacedMemoryMapAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceMapMemoryPlacedPropertiesEXT = struct_VkPhysicalDeviceMapMemoryPlacedPropertiesEXT;
pub const struct_VkMemoryMapPlacedInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pPlacedAddress: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkMemoryMapPlacedInfoEXT = struct_VkMemoryMapPlacedInfoEXT;
pub const struct_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderBufferFloat16Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat16AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat16AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat32AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderBufferFloat64AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat16Atomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat16AtomicAdd: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat16AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat32AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderSharedFloat64AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderImageFloat32AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sparseImageFloat32AtomicMinMax: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT = struct_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT;
pub const VK_PRESENT_SCALING_ONE_TO_ONE_BIT_EXT: c_int = 1;
pub const VK_PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT: c_int = 2;
pub const VK_PRESENT_SCALING_STRETCH_BIT_EXT: c_int = 4;
pub const VK_PRESENT_SCALING_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkPresentScalingFlagBitsEXT = c_uint;
pub const VkPresentScalingFlagBitsEXT = enum_VkPresentScalingFlagBitsEXT;
pub const VkPresentScalingFlagsEXT = VkFlags;
pub const VK_PRESENT_GRAVITY_MIN_BIT_EXT: c_int = 1;
pub const VK_PRESENT_GRAVITY_MAX_BIT_EXT: c_int = 2;
pub const VK_PRESENT_GRAVITY_CENTERED_BIT_EXT: c_int = 4;
pub const VK_PRESENT_GRAVITY_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkPresentGravityFlagBitsEXT = c_uint;
pub const VkPresentGravityFlagBitsEXT = enum_VkPresentGravityFlagBitsEXT;
pub const VkPresentGravityFlagsEXT = VkFlags;
pub const struct_VkSurfacePresentModeEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentMode: VkPresentModeKHR = @import("std").mem.zeroes(VkPresentModeKHR),
};
pub const VkSurfacePresentModeEXT = struct_VkSurfacePresentModeEXT;
pub const struct_VkSurfacePresentScalingCapabilitiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    supportedPresentScaling: VkPresentScalingFlagsEXT = @import("std").mem.zeroes(VkPresentScalingFlagsEXT),
    supportedPresentGravityX: VkPresentGravityFlagsEXT = @import("std").mem.zeroes(VkPresentGravityFlagsEXT),
    supportedPresentGravityY: VkPresentGravityFlagsEXT = @import("std").mem.zeroes(VkPresentGravityFlagsEXT),
    minScaledImageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxScaledImageExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkSurfacePresentScalingCapabilitiesEXT = struct_VkSurfacePresentScalingCapabilitiesEXT;
pub const struct_VkSurfacePresentModeCompatibilityEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentModeCount: u32 = @import("std").mem.zeroes(u32),
    pPresentModes: [*c]VkPresentModeKHR = @import("std").mem.zeroes([*c]VkPresentModeKHR),
};
pub const VkSurfacePresentModeCompatibilityEXT = struct_VkSurfacePresentModeCompatibilityEXT;
pub const struct_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    swapchainMaintenance1: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT = struct_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT;
pub const struct_VkSwapchainPresentFenceInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pFences: [*c]const VkFence = @import("std").mem.zeroes([*c]const VkFence),
};
pub const VkSwapchainPresentFenceInfoEXT = struct_VkSwapchainPresentFenceInfoEXT;
pub const struct_VkSwapchainPresentModesCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    presentModeCount: u32 = @import("std").mem.zeroes(u32),
    pPresentModes: [*c]const VkPresentModeKHR = @import("std").mem.zeroes([*c]const VkPresentModeKHR),
};
pub const VkSwapchainPresentModesCreateInfoEXT = struct_VkSwapchainPresentModesCreateInfoEXT;
pub const struct_VkSwapchainPresentModeInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchainCount: u32 = @import("std").mem.zeroes(u32),
    pPresentModes: [*c]const VkPresentModeKHR = @import("std").mem.zeroes([*c]const VkPresentModeKHR),
};
pub const VkSwapchainPresentModeInfoEXT = struct_VkSwapchainPresentModeInfoEXT;
pub const struct_VkSwapchainPresentScalingCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    scalingBehavior: VkPresentScalingFlagsEXT = @import("std").mem.zeroes(VkPresentScalingFlagsEXT),
    presentGravityX: VkPresentGravityFlagsEXT = @import("std").mem.zeroes(VkPresentGravityFlagsEXT),
    presentGravityY: VkPresentGravityFlagsEXT = @import("std").mem.zeroes(VkPresentGravityFlagsEXT),
};
pub const VkSwapchainPresentScalingCreateInfoEXT = struct_VkSwapchainPresentScalingCreateInfoEXT;
pub const struct_VkReleaseSwapchainImagesInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    swapchain: VkSwapchainKHR = @import("std").mem.zeroes(VkSwapchainKHR),
    imageIndexCount: u32 = @import("std").mem.zeroes(u32),
    pImageIndices: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkReleaseSwapchainImagesInfoEXT = struct_VkReleaseSwapchainImagesInfoEXT;
pub const PFN_vkReleaseSwapchainImagesEXT = ?*const fn (VkDevice, [*c]const VkReleaseSwapchainImagesInfoEXT) callconv(.C) VkResult;
pub extern fn vkReleaseSwapchainImagesEXT(device: VkDevice, pReleaseInfo: [*c]const VkReleaseSwapchainImagesInfoEXT) VkResult;
pub const VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT = VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures;
pub const struct_VkIndirectCommandsLayoutNV_T = opaque {};
pub const VkIndirectCommandsLayoutNV = ?*struct_VkIndirectCommandsLayoutNV_T;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV: c_int = 0;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV: c_int = 1;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV: c_int = 2;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV: c_int = 3;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV: c_int = 4;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV: c_int = 5;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV: c_int = 6;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV: c_int = 7;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV: c_int = 1000328000;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NV: c_int = 1000428003;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV: c_int = 1000428004;
pub const VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkIndirectCommandsTokenTypeNV = c_uint;
pub const VkIndirectCommandsTokenTypeNV = enum_VkIndirectCommandsTokenTypeNV;
pub const VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV: c_int = 1;
pub const VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkIndirectStateFlagBitsNV = c_uint;
pub const VkIndirectStateFlagBitsNV = enum_VkIndirectStateFlagBitsNV;
pub const VkIndirectStateFlagsNV = VkFlags;
pub const VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV: c_int = 1;
pub const VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV: c_int = 2;
pub const VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV: c_int = 4;
pub const VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkIndirectCommandsLayoutUsageFlagBitsNV = c_uint;
pub const VkIndirectCommandsLayoutUsageFlagBitsNV = enum_VkIndirectCommandsLayoutUsageFlagBitsNV;
pub const VkIndirectCommandsLayoutUsageFlagsNV = VkFlags;
pub const struct_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxGraphicsShaderGroupCount: u32 = @import("std").mem.zeroes(u32),
    maxIndirectSequenceCount: u32 = @import("std").mem.zeroes(u32),
    maxIndirectCommandsTokenCount: u32 = @import("std").mem.zeroes(u32),
    maxIndirectCommandsStreamCount: u32 = @import("std").mem.zeroes(u32),
    maxIndirectCommandsTokenOffset: u32 = @import("std").mem.zeroes(u32),
    maxIndirectCommandsStreamStride: u32 = @import("std").mem.zeroes(u32),
    minSequencesCountBufferOffsetAlignment: u32 = @import("std").mem.zeroes(u32),
    minSequencesIndexBufferOffsetAlignment: u32 = @import("std").mem.zeroes(u32),
    minIndirectCommandsBufferOffsetAlignment: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV = struct_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV;
pub const struct_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceGeneratedCommands: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV = struct_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV;
pub const struct_VkGraphicsShaderGroupCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stageCount: u32 = @import("std").mem.zeroes(u32),
    pStages: [*c]const VkPipelineShaderStageCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineShaderStageCreateInfo),
    pVertexInputState: [*c]const VkPipelineVertexInputStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineVertexInputStateCreateInfo),
    pTessellationState: [*c]const VkPipelineTessellationStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineTessellationStateCreateInfo),
};
pub const VkGraphicsShaderGroupCreateInfoNV = struct_VkGraphicsShaderGroupCreateInfoNV;
pub const struct_VkGraphicsPipelineShaderGroupsCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    groupCount: u32 = @import("std").mem.zeroes(u32),
    pGroups: [*c]const VkGraphicsShaderGroupCreateInfoNV = @import("std").mem.zeroes([*c]const VkGraphicsShaderGroupCreateInfoNV),
    pipelineCount: u32 = @import("std").mem.zeroes(u32),
    pPipelines: [*c]const VkPipeline = @import("std").mem.zeroes([*c]const VkPipeline),
};
pub const VkGraphicsPipelineShaderGroupsCreateInfoNV = struct_VkGraphicsPipelineShaderGroupsCreateInfoNV;
pub const struct_VkBindShaderGroupIndirectCommandNV = extern struct {
    groupIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkBindShaderGroupIndirectCommandNV = struct_VkBindShaderGroupIndirectCommandNV;
pub const struct_VkBindIndexBufferIndirectCommandNV = extern struct {
    bufferAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    size: u32 = @import("std").mem.zeroes(u32),
    indexType: VkIndexType = @import("std").mem.zeroes(VkIndexType),
};
pub const VkBindIndexBufferIndirectCommandNV = struct_VkBindIndexBufferIndirectCommandNV;
pub const struct_VkBindVertexBufferIndirectCommandNV = extern struct {
    bufferAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    size: u32 = @import("std").mem.zeroes(u32),
    stride: u32 = @import("std").mem.zeroes(u32),
};
pub const VkBindVertexBufferIndirectCommandNV = struct_VkBindVertexBufferIndirectCommandNV;
pub const struct_VkSetStateFlagsIndirectCommandNV = extern struct {
    data: u32 = @import("std").mem.zeroes(u32),
};
pub const VkSetStateFlagsIndirectCommandNV = struct_VkSetStateFlagsIndirectCommandNV;
pub const struct_VkIndirectCommandsStreamNV = extern struct {
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkIndirectCommandsStreamNV = struct_VkIndirectCommandsStreamNV;
pub const struct_VkIndirectCommandsLayoutTokenNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    tokenType: VkIndirectCommandsTokenTypeNV = @import("std").mem.zeroes(VkIndirectCommandsTokenTypeNV),
    stream: u32 = @import("std").mem.zeroes(u32),
    offset: u32 = @import("std").mem.zeroes(u32),
    vertexBindingUnit: u32 = @import("std").mem.zeroes(u32),
    vertexDynamicStride: VkBool32 = @import("std").mem.zeroes(VkBool32),
    pushconstantPipelineLayout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    pushconstantShaderStageFlags: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    pushconstantOffset: u32 = @import("std").mem.zeroes(u32),
    pushconstantSize: u32 = @import("std").mem.zeroes(u32),
    indirectStateFlags: VkIndirectStateFlagsNV = @import("std").mem.zeroes(VkIndirectStateFlagsNV),
    indexTypeCount: u32 = @import("std").mem.zeroes(u32),
    pIndexTypes: [*c]const VkIndexType = @import("std").mem.zeroes([*c]const VkIndexType),
    pIndexTypeValues: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkIndirectCommandsLayoutTokenNV = struct_VkIndirectCommandsLayoutTokenNV;
pub const struct_VkIndirectCommandsLayoutCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkIndirectCommandsLayoutUsageFlagsNV = @import("std").mem.zeroes(VkIndirectCommandsLayoutUsageFlagsNV),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    tokenCount: u32 = @import("std").mem.zeroes(u32),
    pTokens: [*c]const VkIndirectCommandsLayoutTokenNV = @import("std").mem.zeroes([*c]const VkIndirectCommandsLayoutTokenNV),
    streamCount: u32 = @import("std").mem.zeroes(u32),
    pStreamStrides: [*c]const u32 = @import("std").mem.zeroes([*c]const u32),
};
pub const VkIndirectCommandsLayoutCreateInfoNV = struct_VkIndirectCommandsLayoutCreateInfoNV;
pub const struct_VkGeneratedCommandsInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    pipeline: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    indirectCommandsLayout: VkIndirectCommandsLayoutNV = @import("std").mem.zeroes(VkIndirectCommandsLayoutNV),
    streamCount: u32 = @import("std").mem.zeroes(u32),
    pStreams: [*c]const VkIndirectCommandsStreamNV = @import("std").mem.zeroes([*c]const VkIndirectCommandsStreamNV),
    sequencesCount: u32 = @import("std").mem.zeroes(u32),
    preprocessBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    preprocessOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    preprocessSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    sequencesCountBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    sequencesCountOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    sequencesIndexBuffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    sequencesIndexOffset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkGeneratedCommandsInfoNV = struct_VkGeneratedCommandsInfoNV;
pub const struct_VkGeneratedCommandsMemoryRequirementsInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    pipeline: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    indirectCommandsLayout: VkIndirectCommandsLayoutNV = @import("std").mem.zeroes(VkIndirectCommandsLayoutNV),
    maxSequencesCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkGeneratedCommandsMemoryRequirementsInfoNV = struct_VkGeneratedCommandsMemoryRequirementsInfoNV;
pub const PFN_vkGetGeneratedCommandsMemoryRequirementsNV = ?*const fn (VkDevice, [*c]const VkGeneratedCommandsMemoryRequirementsInfoNV, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkCmdPreprocessGeneratedCommandsNV = ?*const fn (VkCommandBuffer, [*c]const VkGeneratedCommandsInfoNV) callconv(.C) void;
pub const PFN_vkCmdExecuteGeneratedCommandsNV = ?*const fn (VkCommandBuffer, VkBool32, [*c]const VkGeneratedCommandsInfoNV) callconv(.C) void;
pub const PFN_vkCmdBindPipelineShaderGroupNV = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipeline, u32) callconv(.C) void;
pub const PFN_vkCreateIndirectCommandsLayoutNV = ?*const fn (VkDevice, [*c]const VkIndirectCommandsLayoutCreateInfoNV, [*c]const VkAllocationCallbacks, [*c]VkIndirectCommandsLayoutNV) callconv(.C) VkResult;
pub const PFN_vkDestroyIndirectCommandsLayoutNV = ?*const fn (VkDevice, VkIndirectCommandsLayoutNV, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub extern fn vkGetGeneratedCommandsMemoryRequirementsNV(device: VkDevice, pInfo: [*c]const VkGeneratedCommandsMemoryRequirementsInfoNV, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkCmdPreprocessGeneratedCommandsNV(commandBuffer: VkCommandBuffer, pGeneratedCommandsInfo: [*c]const VkGeneratedCommandsInfoNV) void;
pub extern fn vkCmdExecuteGeneratedCommandsNV(commandBuffer: VkCommandBuffer, isPreprocessed: VkBool32, pGeneratedCommandsInfo: [*c]const VkGeneratedCommandsInfoNV) void;
pub extern fn vkCmdBindPipelineShaderGroupNV(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, pipeline: VkPipeline, groupIndex: u32) void;
pub extern fn vkCreateIndirectCommandsLayoutNV(device: VkDevice, pCreateInfo: [*c]const VkIndirectCommandsLayoutCreateInfoNV, pAllocator: [*c]const VkAllocationCallbacks, pIndirectCommandsLayout: [*c]VkIndirectCommandsLayoutNV) VkResult;
pub extern fn vkDestroyIndirectCommandsLayoutNV(device: VkDevice, indirectCommandsLayout: VkIndirectCommandsLayoutNV, pAllocator: [*c]const VkAllocationCallbacks) void;
pub const struct_VkPhysicalDeviceInheritedViewportScissorFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    inheritedViewportScissor2D: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceInheritedViewportScissorFeaturesNV = struct_VkPhysicalDeviceInheritedViewportScissorFeaturesNV;
pub const struct_VkCommandBufferInheritanceViewportScissorInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    viewportScissor2D: VkBool32 = @import("std").mem.zeroes(VkBool32),
    viewportDepthCount: u32 = @import("std").mem.zeroes(u32),
    pViewportDepths: [*c]const VkViewport = @import("std").mem.zeroes([*c]const VkViewport),
};
pub const VkCommandBufferInheritanceViewportScissorInfoNV = struct_VkCommandBufferInheritanceViewportScissorInfoNV;
pub const struct_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    texelBufferAlignment: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT = struct_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT;
pub const VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT = VkPhysicalDeviceTexelBufferAlignmentProperties;
pub const struct_VkRenderPassTransformBeginInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    transform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
};
pub const VkRenderPassTransformBeginInfoQCOM = struct_VkRenderPassTransformBeginInfoQCOM;
pub const struct_VkCommandBufferInheritanceRenderPassTransformInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    transform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
    renderArea: VkRect2D = @import("std").mem.zeroes(VkRect2D),
};
pub const VkCommandBufferInheritanceRenderPassTransformInfoQCOM = struct_VkCommandBufferInheritanceRenderPassTransformInfoQCOM;
pub const VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT: c_int = 0;
pub const VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT: c_int = 1;
pub const VK_DEPTH_BIAS_REPRESENTATION_FLOAT_EXT: c_int = 2;
pub const VK_DEPTH_BIAS_REPRESENTATION_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDepthBiasRepresentationEXT = c_uint;
pub const VkDepthBiasRepresentationEXT = enum_VkDepthBiasRepresentationEXT;
pub const struct_VkPhysicalDeviceDepthBiasControlFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    depthBiasControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
    leastRepresentableValueForceUnormRepresentation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    floatRepresentation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    depthBiasExact: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDepthBiasControlFeaturesEXT = struct_VkPhysicalDeviceDepthBiasControlFeaturesEXT;
pub const struct_VkDepthBiasInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    depthBiasConstantFactor: f32 = @import("std").mem.zeroes(f32),
    depthBiasClamp: f32 = @import("std").mem.zeroes(f32),
    depthBiasSlopeFactor: f32 = @import("std").mem.zeroes(f32),
};
pub const VkDepthBiasInfoEXT = struct_VkDepthBiasInfoEXT;
pub const struct_VkDepthBiasRepresentationInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    depthBiasRepresentation: VkDepthBiasRepresentationEXT = @import("std").mem.zeroes(VkDepthBiasRepresentationEXT),
    depthBiasExact: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkDepthBiasRepresentationInfoEXT = struct_VkDepthBiasRepresentationInfoEXT;
pub const PFN_vkCmdSetDepthBias2EXT = ?*const fn (VkCommandBuffer, [*c]const VkDepthBiasInfoEXT) callconv(.C) void;
pub extern fn vkCmdSetDepthBias2EXT(commandBuffer: VkCommandBuffer, pDepthBiasInfo: [*c]const VkDepthBiasInfoEXT) void;
pub const VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT: c_int = 0;
pub const VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT: c_int = 1;
pub const VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT: c_int = 2;
pub const VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT: c_int = 3;
pub const VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT: c_int = 4;
pub const VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDeviceMemoryReportEventTypeEXT = c_uint;
pub const VkDeviceMemoryReportEventTypeEXT = enum_VkDeviceMemoryReportEventTypeEXT;
pub const VkDeviceMemoryReportFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceMemoryReport: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = struct_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT;
pub const struct_VkDeviceMemoryReportCallbackDataEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkDeviceMemoryReportFlagsEXT = @import("std").mem.zeroes(VkDeviceMemoryReportFlagsEXT),
    type: VkDeviceMemoryReportEventTypeEXT = @import("std").mem.zeroes(VkDeviceMemoryReportEventTypeEXT),
    memoryObjectId: u64 = @import("std").mem.zeroes(u64),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    objectType: VkObjectType = @import("std").mem.zeroes(VkObjectType),
    objectHandle: u64 = @import("std").mem.zeroes(u64),
    heapIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDeviceMemoryReportCallbackDataEXT = struct_VkDeviceMemoryReportCallbackDataEXT;
pub const PFN_vkDeviceMemoryReportCallbackEXT = ?*const fn ([*c]const VkDeviceMemoryReportCallbackDataEXT, ?*anyopaque) callconv(.C) void;
pub const struct_VkDeviceDeviceMemoryReportCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDeviceMemoryReportFlagsEXT = @import("std").mem.zeroes(VkDeviceMemoryReportFlagsEXT),
    pfnUserCallback: PFN_vkDeviceMemoryReportCallbackEXT = @import("std").mem.zeroes(PFN_vkDeviceMemoryReportCallbackEXT),
    pUserData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkDeviceDeviceMemoryReportCreateInfoEXT = struct_VkDeviceDeviceMemoryReportCreateInfoEXT;
pub const PFN_vkAcquireDrmDisplayEXT = ?*const fn (VkPhysicalDevice, i32, VkDisplayKHR) callconv(.C) VkResult;
pub const PFN_vkGetDrmDisplayEXT = ?*const fn (VkPhysicalDevice, i32, u32, [*c]VkDisplayKHR) callconv(.C) VkResult;
pub extern fn vkAcquireDrmDisplayEXT(physicalDevice: VkPhysicalDevice, drmFd: i32, display: VkDisplayKHR) VkResult;
pub extern fn vkGetDrmDisplayEXT(physicalDevice: VkPhysicalDevice, drmFd: i32, connectorId: u32, display: [*c]VkDisplayKHR) VkResult;
pub const struct_VkPhysicalDeviceRobustness2FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    robustBufferAccess2: VkBool32 = @import("std").mem.zeroes(VkBool32),
    robustImageAccess2: VkBool32 = @import("std").mem.zeroes(VkBool32),
    nullDescriptor: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRobustness2FeaturesEXT = struct_VkPhysicalDeviceRobustness2FeaturesEXT;
pub const struct_VkPhysicalDeviceRobustness2PropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    robustStorageBufferAccessSizeAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    robustUniformBufferAccessSizeAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceRobustness2PropertiesEXT = struct_VkPhysicalDeviceRobustness2PropertiesEXT;
pub const struct_VkSamplerCustomBorderColorCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    customBorderColor: VkClearColorValue = @import("std").mem.zeroes(VkClearColorValue),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
};
pub const VkSamplerCustomBorderColorCreateInfoEXT = struct_VkSamplerCustomBorderColorCreateInfoEXT;
pub const struct_VkPhysicalDeviceCustomBorderColorPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxCustomBorderColorSamplers: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceCustomBorderColorPropertiesEXT = struct_VkPhysicalDeviceCustomBorderColorPropertiesEXT;
pub const struct_VkPhysicalDeviceCustomBorderColorFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    customBorderColors: VkBool32 = @import("std").mem.zeroes(VkBool32),
    customBorderColorWithoutFormat: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCustomBorderColorFeaturesEXT = struct_VkPhysicalDeviceCustomBorderColorFeaturesEXT;
pub const struct_VkPhysicalDevicePresentBarrierFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentBarrier: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePresentBarrierFeaturesNV = struct_VkPhysicalDevicePresentBarrierFeaturesNV;
pub const struct_VkSurfaceCapabilitiesPresentBarrierNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentBarrierSupported: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSurfaceCapabilitiesPresentBarrierNV = struct_VkSurfaceCapabilitiesPresentBarrierNV;
pub const struct_VkSwapchainPresentBarrierCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    presentBarrierEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSwapchainPresentBarrierCreateInfoNV = struct_VkSwapchainPresentBarrierCreateInfoNV;
pub const VkPrivateDataSlotEXT = VkPrivateDataSlot;
pub const VkPrivateDataSlotCreateFlagsEXT = VkPrivateDataSlotCreateFlags;
pub const VkPhysicalDevicePrivateDataFeaturesEXT = VkPhysicalDevicePrivateDataFeatures;
pub const VkDevicePrivateDataCreateInfoEXT = VkDevicePrivateDataCreateInfo;
pub const VkPrivateDataSlotCreateInfoEXT = VkPrivateDataSlotCreateInfo;
pub const PFN_vkCreatePrivateDataSlotEXT = ?*const fn (VkDevice, [*c]const VkPrivateDataSlotCreateInfo, [*c]const VkAllocationCallbacks, [*c]VkPrivateDataSlot) callconv(.C) VkResult;
pub const PFN_vkDestroyPrivateDataSlotEXT = ?*const fn (VkDevice, VkPrivateDataSlot, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkSetPrivateDataEXT = ?*const fn (VkDevice, VkObjectType, u64, VkPrivateDataSlot, u64) callconv(.C) VkResult;
pub const PFN_vkGetPrivateDataEXT = ?*const fn (VkDevice, VkObjectType, u64, VkPrivateDataSlot, [*c]u64) callconv(.C) void;
pub extern fn vkCreatePrivateDataSlotEXT(device: VkDevice, pCreateInfo: [*c]const VkPrivateDataSlotCreateInfo, pAllocator: [*c]const VkAllocationCallbacks, pPrivateDataSlot: [*c]VkPrivateDataSlot) VkResult;
pub extern fn vkDestroyPrivateDataSlotEXT(device: VkDevice, privateDataSlot: VkPrivateDataSlot, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkSetPrivateDataEXT(device: VkDevice, objectType: VkObjectType, objectHandle: u64, privateDataSlot: VkPrivateDataSlot, data: u64) VkResult;
pub extern fn vkGetPrivateDataEXT(device: VkDevice, objectType: VkObjectType, objectHandle: u64, privateDataSlot: VkPrivateDataSlot, pData: [*c]u64) void;
pub const VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT = VkPhysicalDevicePipelineCreationCacheControlFeatures;
pub const VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV: c_int = 1;
pub const VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV: c_int = 2;
pub const VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV: c_int = 4;
pub const VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_ERROR_REPORTING_BIT_NV: c_int = 8;
pub const VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkDeviceDiagnosticsConfigFlagBitsNV = c_uint;
pub const VkDeviceDiagnosticsConfigFlagBitsNV = enum_VkDeviceDiagnosticsConfigFlagBitsNV;
pub const VkDeviceDiagnosticsConfigFlagsNV = VkFlags;
pub const struct_VkPhysicalDeviceDiagnosticsConfigFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    diagnosticsConfig: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDiagnosticsConfigFeaturesNV = struct_VkPhysicalDeviceDiagnosticsConfigFeaturesNV;
pub const struct_VkDeviceDiagnosticsConfigCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkDeviceDiagnosticsConfigFlagsNV = @import("std").mem.zeroes(VkDeviceDiagnosticsConfigFlagsNV),
};
pub const VkDeviceDiagnosticsConfigCreateInfoNV = struct_VkDeviceDiagnosticsConfigCreateInfoNV;
pub const struct_VkCudaModuleNV_T = opaque {};
pub const VkCudaModuleNV = ?*struct_VkCudaModuleNV_T;
pub const struct_VkCudaFunctionNV_T = opaque {};
pub const VkCudaFunctionNV = ?*struct_VkCudaFunctionNV_T;
pub const struct_VkCudaModuleCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    dataSize: usize = @import("std").mem.zeroes(usize),
    pData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkCudaModuleCreateInfoNV = struct_VkCudaModuleCreateInfoNV;
pub const struct_VkCudaFunctionCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    module: VkCudaModuleNV = @import("std").mem.zeroes(VkCudaModuleNV),
    pName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkCudaFunctionCreateInfoNV = struct_VkCudaFunctionCreateInfoNV;
pub const struct_VkCudaLaunchInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    function: VkCudaFunctionNV = @import("std").mem.zeroes(VkCudaFunctionNV),
    gridDimX: u32 = @import("std").mem.zeroes(u32),
    gridDimY: u32 = @import("std").mem.zeroes(u32),
    gridDimZ: u32 = @import("std").mem.zeroes(u32),
    blockDimX: u32 = @import("std").mem.zeroes(u32),
    blockDimY: u32 = @import("std").mem.zeroes(u32),
    blockDimZ: u32 = @import("std").mem.zeroes(u32),
    sharedMemBytes: u32 = @import("std").mem.zeroes(u32),
    paramCount: usize = @import("std").mem.zeroes(usize),
    pParams: [*c]const ?*const anyopaque = @import("std").mem.zeroes([*c]const ?*const anyopaque),
    extraCount: usize = @import("std").mem.zeroes(usize),
    pExtras: [*c]const ?*const anyopaque = @import("std").mem.zeroes([*c]const ?*const anyopaque),
};
pub const VkCudaLaunchInfoNV = struct_VkCudaLaunchInfoNV;
pub const struct_VkPhysicalDeviceCudaKernelLaunchFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cudaKernelLaunchFeatures: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCudaKernelLaunchFeaturesNV = struct_VkPhysicalDeviceCudaKernelLaunchFeaturesNV;
pub const struct_VkPhysicalDeviceCudaKernelLaunchPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    computeCapabilityMinor: u32 = @import("std").mem.zeroes(u32),
    computeCapabilityMajor: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceCudaKernelLaunchPropertiesNV = struct_VkPhysicalDeviceCudaKernelLaunchPropertiesNV;
pub const PFN_vkCreateCudaModuleNV = ?*const fn (VkDevice, [*c]const VkCudaModuleCreateInfoNV, [*c]const VkAllocationCallbacks, [*c]VkCudaModuleNV) callconv(.C) VkResult;
pub const PFN_vkGetCudaModuleCacheNV = ?*const fn (VkDevice, VkCudaModuleNV, [*c]usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkCreateCudaFunctionNV = ?*const fn (VkDevice, [*c]const VkCudaFunctionCreateInfoNV, [*c]const VkAllocationCallbacks, [*c]VkCudaFunctionNV) callconv(.C) VkResult;
pub const PFN_vkDestroyCudaModuleNV = ?*const fn (VkDevice, VkCudaModuleNV, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkDestroyCudaFunctionNV = ?*const fn (VkDevice, VkCudaFunctionNV, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCmdCudaLaunchKernelNV = ?*const fn (VkCommandBuffer, [*c]const VkCudaLaunchInfoNV) callconv(.C) void;
pub extern fn vkCreateCudaModuleNV(device: VkDevice, pCreateInfo: [*c]const VkCudaModuleCreateInfoNV, pAllocator: [*c]const VkAllocationCallbacks, pModule: [*c]VkCudaModuleNV) VkResult;
pub extern fn vkGetCudaModuleCacheNV(device: VkDevice, module: VkCudaModuleNV, pCacheSize: [*c]usize, pCacheData: ?*anyopaque) VkResult;
pub extern fn vkCreateCudaFunctionNV(device: VkDevice, pCreateInfo: [*c]const VkCudaFunctionCreateInfoNV, pAllocator: [*c]const VkAllocationCallbacks, pFunction: [*c]VkCudaFunctionNV) VkResult;
pub extern fn vkDestroyCudaModuleNV(device: VkDevice, module: VkCudaModuleNV, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkDestroyCudaFunctionNV(device: VkDevice, function: VkCudaFunctionNV, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCmdCudaLaunchKernelNV(commandBuffer: VkCommandBuffer, pLaunchInfo: [*c]const VkCudaLaunchInfoNV) void;
pub const struct_VkQueryLowLatencySupportNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pQueriedLowLatencyData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkQueryLowLatencySupportNV = struct_VkQueryLowLatencySupportNV;
pub const struct_VkAccelerationStructureKHR_T = opaque {};
pub const VkAccelerationStructureKHR = ?*struct_VkAccelerationStructureKHR_T;
pub const struct_VkPhysicalDeviceDescriptorBufferPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    combinedImageSamplerDescriptorSingleArray: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bufferlessPushDescriptors: VkBool32 = @import("std").mem.zeroes(VkBool32),
    allowSamplerImageViewPostSubmitCreation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBufferOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    maxDescriptorBufferBindings: u32 = @import("std").mem.zeroes(u32),
    maxResourceDescriptorBufferBindings: u32 = @import("std").mem.zeroes(u32),
    maxSamplerDescriptorBufferBindings: u32 = @import("std").mem.zeroes(u32),
    maxEmbeddedImmutableSamplerBindings: u32 = @import("std").mem.zeroes(u32),
    maxEmbeddedImmutableSamplers: u32 = @import("std").mem.zeroes(u32),
    bufferCaptureReplayDescriptorDataSize: usize = @import("std").mem.zeroes(usize),
    imageCaptureReplayDescriptorDataSize: usize = @import("std").mem.zeroes(usize),
    imageViewCaptureReplayDescriptorDataSize: usize = @import("std").mem.zeroes(usize),
    samplerCaptureReplayDescriptorDataSize: usize = @import("std").mem.zeroes(usize),
    accelerationStructureCaptureReplayDescriptorDataSize: usize = @import("std").mem.zeroes(usize),
    samplerDescriptorSize: usize = @import("std").mem.zeroes(usize),
    combinedImageSamplerDescriptorSize: usize = @import("std").mem.zeroes(usize),
    sampledImageDescriptorSize: usize = @import("std").mem.zeroes(usize),
    storageImageDescriptorSize: usize = @import("std").mem.zeroes(usize),
    uniformTexelBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    robustUniformTexelBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    storageTexelBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    robustStorageTexelBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    uniformBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    robustUniformBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    storageBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    robustStorageBufferDescriptorSize: usize = @import("std").mem.zeroes(usize),
    inputAttachmentDescriptorSize: usize = @import("std").mem.zeroes(usize),
    accelerationStructureDescriptorSize: usize = @import("std").mem.zeroes(usize),
    maxSamplerDescriptorBufferRange: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    maxResourceDescriptorBufferRange: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    samplerDescriptorBufferAddressSpaceSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    resourceDescriptorBufferAddressSpaceSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    descriptorBufferAddressSpaceSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceDescriptorBufferPropertiesEXT = struct_VkPhysicalDeviceDescriptorBufferPropertiesEXT;
pub const struct_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    combinedImageSamplerDensityMapDescriptorSize: usize = @import("std").mem.zeroes(usize),
};
pub const VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT = struct_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT;
pub const struct_VkPhysicalDeviceDescriptorBufferFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    descriptorBuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBufferCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBufferImageLayoutIgnored: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBufferPushDescriptors: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDescriptorBufferFeaturesEXT = struct_VkPhysicalDeviceDescriptorBufferFeaturesEXT;
pub const struct_VkDescriptorAddressInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    address: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    range: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
};
pub const VkDescriptorAddressInfoEXT = struct_VkDescriptorAddressInfoEXT;
pub const struct_VkDescriptorBufferBindingInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    address: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    usage: VkBufferUsageFlags = @import("std").mem.zeroes(VkBufferUsageFlags),
};
pub const VkDescriptorBufferBindingInfoEXT = struct_VkDescriptorBufferBindingInfoEXT;
pub const struct_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
};
pub const VkDescriptorBufferBindingPushDescriptorBufferHandleEXT = struct_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT;
pub const union_VkDescriptorDataEXT = extern union {
    pSampler: [*c]const VkSampler,
    pCombinedImageSampler: [*c]const VkDescriptorImageInfo,
    pInputAttachmentImage: [*c]const VkDescriptorImageInfo,
    pSampledImage: [*c]const VkDescriptorImageInfo,
    pStorageImage: [*c]const VkDescriptorImageInfo,
    pUniformTexelBuffer: [*c]const VkDescriptorAddressInfoEXT,
    pStorageTexelBuffer: [*c]const VkDescriptorAddressInfoEXT,
    pUniformBuffer: [*c]const VkDescriptorAddressInfoEXT,
    pStorageBuffer: [*c]const VkDescriptorAddressInfoEXT,
    accelerationStructure: VkDeviceAddress,
};
pub const VkDescriptorDataEXT = union_VkDescriptorDataEXT;
pub const struct_VkDescriptorGetInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkDescriptorType = @import("std").mem.zeroes(VkDescriptorType),
    data: VkDescriptorDataEXT = @import("std").mem.zeroes(VkDescriptorDataEXT),
};
pub const VkDescriptorGetInfoEXT = struct_VkDescriptorGetInfoEXT;
pub const struct_VkBufferCaptureDescriptorDataInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
};
pub const VkBufferCaptureDescriptorDataInfoEXT = struct_VkBufferCaptureDescriptorDataInfoEXT;
pub const struct_VkImageCaptureDescriptorDataInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    image: VkImage = @import("std").mem.zeroes(VkImage),
};
pub const VkImageCaptureDescriptorDataInfoEXT = struct_VkImageCaptureDescriptorDataInfoEXT;
pub const struct_VkImageViewCaptureDescriptorDataInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    imageView: VkImageView = @import("std").mem.zeroes(VkImageView),
};
pub const VkImageViewCaptureDescriptorDataInfoEXT = struct_VkImageViewCaptureDescriptorDataInfoEXT;
pub const struct_VkSamplerCaptureDescriptorDataInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    sampler: VkSampler = @import("std").mem.zeroes(VkSampler),
};
pub const VkSamplerCaptureDescriptorDataInfoEXT = struct_VkSamplerCaptureDescriptorDataInfoEXT;
pub const struct_VkOpaqueCaptureDescriptorDataCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    opaqueCaptureDescriptorData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkOpaqueCaptureDescriptorDataCreateInfoEXT = struct_VkOpaqueCaptureDescriptorDataCreateInfoEXT;
pub const struct_VkAccelerationStructureCaptureDescriptorDataInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    accelerationStructure: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    accelerationStructureNV: VkAccelerationStructureNV = @import("std").mem.zeroes(VkAccelerationStructureNV),
};
pub const VkAccelerationStructureCaptureDescriptorDataInfoEXT = struct_VkAccelerationStructureCaptureDescriptorDataInfoEXT;
pub const PFN_vkGetDescriptorSetLayoutSizeEXT = ?*const fn (VkDevice, VkDescriptorSetLayout, [*c]VkDeviceSize) callconv(.C) void;
pub const PFN_vkGetDescriptorSetLayoutBindingOffsetEXT = ?*const fn (VkDevice, VkDescriptorSetLayout, u32, [*c]VkDeviceSize) callconv(.C) void;
pub const PFN_vkGetDescriptorEXT = ?*const fn (VkDevice, [*c]const VkDescriptorGetInfoEXT, usize, ?*anyopaque) callconv(.C) void;
pub const PFN_vkCmdBindDescriptorBuffersEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkDescriptorBufferBindingInfoEXT) callconv(.C) void;
pub const PFN_vkCmdSetDescriptorBufferOffsetsEXT = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, u32, u32, [*c]const u32, [*c]const VkDeviceSize) callconv(.C) void;
pub const PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, u32) callconv(.C) void;
pub const PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT = ?*const fn (VkDevice, [*c]const VkBufferCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkGetImageOpaqueCaptureDescriptorDataEXT = ?*const fn (VkDevice, [*c]const VkImageCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT = ?*const fn (VkDevice, [*c]const VkImageViewCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT = ?*const fn (VkDevice, [*c]const VkSamplerCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = ?*const fn (VkDevice, [*c]const VkAccelerationStructureCaptureDescriptorDataInfoEXT, ?*anyopaque) callconv(.C) VkResult;
pub extern fn vkGetDescriptorSetLayoutSizeEXT(device: VkDevice, layout: VkDescriptorSetLayout, pLayoutSizeInBytes: [*c]VkDeviceSize) void;
pub extern fn vkGetDescriptorSetLayoutBindingOffsetEXT(device: VkDevice, layout: VkDescriptorSetLayout, binding: u32, pOffset: [*c]VkDeviceSize) void;
pub extern fn vkGetDescriptorEXT(device: VkDevice, pDescriptorInfo: [*c]const VkDescriptorGetInfoEXT, dataSize: usize, pDescriptor: ?*anyopaque) void;
pub extern fn vkCmdBindDescriptorBuffersEXT(commandBuffer: VkCommandBuffer, bufferCount: u32, pBindingInfos: [*c]const VkDescriptorBufferBindingInfoEXT) void;
pub extern fn vkCmdSetDescriptorBufferOffsetsEXT(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, layout: VkPipelineLayout, firstSet: u32, setCount: u32, pBufferIndices: [*c]const u32, pOffsets: [*c]const VkDeviceSize) void;
pub extern fn vkCmdBindDescriptorBufferEmbeddedSamplersEXT(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, layout: VkPipelineLayout, set: u32) void;
pub extern fn vkGetBufferOpaqueCaptureDescriptorDataEXT(device: VkDevice, pInfo: [*c]const VkBufferCaptureDescriptorDataInfoEXT, pData: ?*anyopaque) VkResult;
pub extern fn vkGetImageOpaqueCaptureDescriptorDataEXT(device: VkDevice, pInfo: [*c]const VkImageCaptureDescriptorDataInfoEXT, pData: ?*anyopaque) VkResult;
pub extern fn vkGetImageViewOpaqueCaptureDescriptorDataEXT(device: VkDevice, pInfo: [*c]const VkImageViewCaptureDescriptorDataInfoEXT, pData: ?*anyopaque) VkResult;
pub extern fn vkGetSamplerOpaqueCaptureDescriptorDataEXT(device: VkDevice, pInfo: [*c]const VkSamplerCaptureDescriptorDataInfoEXT, pData: ?*anyopaque) VkResult;
pub extern fn vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT(device: VkDevice, pInfo: [*c]const VkAccelerationStructureCaptureDescriptorDataInfoEXT, pData: ?*anyopaque) VkResult;
pub const VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT: c_int = 1;
pub const VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT: c_int = 2;
pub const VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT: c_int = 4;
pub const VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT: c_int = 8;
pub const VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkGraphicsPipelineLibraryFlagBitsEXT = c_uint;
pub const VkGraphicsPipelineLibraryFlagBitsEXT = enum_VkGraphicsPipelineLibraryFlagBitsEXT;
pub const VkGraphicsPipelineLibraryFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    graphicsPipelineLibrary: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT = struct_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT;
pub const struct_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    graphicsPipelineLibraryFastLinking: VkBool32 = @import("std").mem.zeroes(VkBool32),
    graphicsPipelineLibraryIndependentInterpolationDecoration: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT = struct_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT;
pub const struct_VkGraphicsPipelineLibraryCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkGraphicsPipelineLibraryFlagsEXT = @import("std").mem.zeroes(VkGraphicsPipelineLibraryFlagsEXT),
};
pub const VkGraphicsPipelineLibraryCreateInfoEXT = struct_VkGraphicsPipelineLibraryCreateInfoEXT;
pub const struct_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderEarlyAndLateFragmentTests: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD = struct_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD;
pub const VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV: c_int = 0;
pub const VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV: c_int = 1;
pub const VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkFragmentShadingRateTypeNV = c_uint;
pub const VkFragmentShadingRateTypeNV = enum_VkFragmentShadingRateTypeNV;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV: c_int = 0;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV: c_int = 1;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV: c_int = 4;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV: c_int = 5;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV: c_int = 6;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV: c_int = 9;
pub const VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV: c_int = 10;
pub const VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV: c_int = 11;
pub const VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV: c_int = 12;
pub const VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV: c_int = 13;
pub const VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV: c_int = 14;
pub const VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV: c_int = 15;
pub const VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkFragmentShadingRateNV = c_uint;
pub const VkFragmentShadingRateNV = enum_VkFragmentShadingRateNV;
pub const struct_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentShadingRateEnums: VkBool32 = @import("std").mem.zeroes(VkBool32),
    supersampleFragmentShadingRates: VkBool32 = @import("std").mem.zeroes(VkBool32),
    noInvocationFragmentShadingRates: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV = struct_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV;
pub const struct_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxFragmentShadingRateInvocationCount: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
};
pub const VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV = struct_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV;
pub const struct_VkPipelineFragmentShadingRateEnumStateCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    shadingRateType: VkFragmentShadingRateTypeNV = @import("std").mem.zeroes(VkFragmentShadingRateTypeNV),
    shadingRate: VkFragmentShadingRateNV = @import("std").mem.zeroes(VkFragmentShadingRateNV),
    combinerOps: [2]VkFragmentShadingRateCombinerOpKHR = @import("std").mem.zeroes([2]VkFragmentShadingRateCombinerOpKHR),
};
pub const VkPipelineFragmentShadingRateEnumStateCreateInfoNV = struct_VkPipelineFragmentShadingRateEnumStateCreateInfoNV;
pub const PFN_vkCmdSetFragmentShadingRateEnumNV = ?*const fn (VkCommandBuffer, VkFragmentShadingRateNV, [*c]const VkFragmentShadingRateCombinerOpKHR) callconv(.C) void;
pub extern fn vkCmdSetFragmentShadingRateEnumNV(commandBuffer: VkCommandBuffer, shadingRate: VkFragmentShadingRateNV, combinerOps: [*c]const VkFragmentShadingRateCombinerOpKHR) void;
pub const VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV: c_int = 0;
pub const VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV: c_int = 2;
pub const VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkAccelerationStructureMotionInstanceTypeNV = c_uint;
pub const VkAccelerationStructureMotionInstanceTypeNV = enum_VkAccelerationStructureMotionInstanceTypeNV;
pub const VkAccelerationStructureMotionInfoFlagsNV = VkFlags;
pub const VkAccelerationStructureMotionInstanceFlagsNV = VkFlags;
pub const union_VkDeviceOrHostAddressConstKHR = extern union {
    deviceAddress: VkDeviceAddress,
    hostAddress: ?*const anyopaque,
};
pub const VkDeviceOrHostAddressConstKHR = union_VkDeviceOrHostAddressConstKHR;
pub const struct_VkAccelerationStructureGeometryMotionTrianglesDataNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    vertexData: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
};
pub const VkAccelerationStructureGeometryMotionTrianglesDataNV = struct_VkAccelerationStructureGeometryMotionTrianglesDataNV;
pub const struct_VkAccelerationStructureMotionInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxInstances: u32 = @import("std").mem.zeroes(u32),
    flags: VkAccelerationStructureMotionInfoFlagsNV = @import("std").mem.zeroes(VkAccelerationStructureMotionInfoFlagsNV),
};
pub const VkAccelerationStructureMotionInfoNV = struct_VkAccelerationStructureMotionInfoNV;
// /usr/local/include/vulkan/vulkan_core.h:16340:35: warning: struct demoted to opaque type - has bitfield
pub const struct_VkAccelerationStructureMatrixMotionInstanceNV = opaque {};
pub const VkAccelerationStructureMatrixMotionInstanceNV = struct_VkAccelerationStructureMatrixMotionInstanceNV;
pub const struct_VkSRTDataNV = extern struct {
    sx: f32 = @import("std").mem.zeroes(f32),
    a: f32 = @import("std").mem.zeroes(f32),
    b: f32 = @import("std").mem.zeroes(f32),
    pvx: f32 = @import("std").mem.zeroes(f32),
    sy: f32 = @import("std").mem.zeroes(f32),
    c: f32 = @import("std").mem.zeroes(f32),
    pvy: f32 = @import("std").mem.zeroes(f32),
    sz: f32 = @import("std").mem.zeroes(f32),
    pvz: f32 = @import("std").mem.zeroes(f32),
    qx: f32 = @import("std").mem.zeroes(f32),
    qy: f32 = @import("std").mem.zeroes(f32),
    qz: f32 = @import("std").mem.zeroes(f32),
    qw: f32 = @import("std").mem.zeroes(f32),
    tx: f32 = @import("std").mem.zeroes(f32),
    ty: f32 = @import("std").mem.zeroes(f32),
    tz: f32 = @import("std").mem.zeroes(f32),
};
pub const VkSRTDataNV = struct_VkSRTDataNV;
// /usr/local/include/vulkan/vulkan_core.h:16369:35: warning: struct demoted to opaque type - has bitfield
pub const struct_VkAccelerationStructureSRTMotionInstanceNV = opaque {};
pub const VkAccelerationStructureSRTMotionInstanceNV = struct_VkAccelerationStructureSRTMotionInstanceNV;
pub const union_VkAccelerationStructureMotionInstanceDataNV = extern union {
    staticInstance: VkAccelerationStructureInstanceKHR,
    matrixMotionInstance: VkAccelerationStructureMatrixMotionInstanceNV,
    srtMotionInstance: VkAccelerationStructureSRTMotionInstanceNV,
};
pub const VkAccelerationStructureMotionInstanceDataNV = union_VkAccelerationStructureMotionInstanceDataNV;
pub const struct_VkAccelerationStructureMotionInstanceNV = extern struct {
    type: VkAccelerationStructureMotionInstanceTypeNV = @import("std").mem.zeroes(VkAccelerationStructureMotionInstanceTypeNV),
    flags: VkAccelerationStructureMotionInstanceFlagsNV = @import("std").mem.zeroes(VkAccelerationStructureMotionInstanceFlagsNV),
    data: VkAccelerationStructureMotionInstanceDataNV = @import("std").mem.zeroes(VkAccelerationStructureMotionInstanceDataNV),
};
pub const VkAccelerationStructureMotionInstanceNV = struct_VkAccelerationStructureMotionInstanceNV;
pub const struct_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingMotionBlur: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rayTracingMotionBlurPipelineTraceRaysIndirect: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayTracingMotionBlurFeaturesNV = struct_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV;
pub const struct_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    ycbcr2plane444Formats: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT = struct_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT;
pub const struct_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentDensityMapDeferred: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentDensityMap2FeaturesEXT = struct_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT;
pub const struct_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    subsampledLoads: VkBool32 = @import("std").mem.zeroes(VkBool32),
    subsampledCoarseReconstructionEarlyAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    maxSubsampledArrayLayers: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetSubsampledSamplers: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceFragmentDensityMap2PropertiesEXT = struct_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT;
pub const struct_VkCopyCommandTransformInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    transform: VkSurfaceTransformFlagBitsKHR = @import("std").mem.zeroes(VkSurfaceTransformFlagBitsKHR),
};
pub const VkCopyCommandTransformInfoQCOM = struct_VkCopyCommandTransformInfoQCOM;
pub const VkPhysicalDeviceImageRobustnessFeaturesEXT = VkPhysicalDeviceImageRobustnessFeatures;
pub const VK_IMAGE_COMPRESSION_DEFAULT_EXT: c_int = 0;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXT: c_int = 1;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT: c_int = 2;
pub const VK_IMAGE_COMPRESSION_DISABLED_EXT: c_int = 4;
pub const VK_IMAGE_COMPRESSION_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkImageCompressionFlagBitsEXT = c_uint;
pub const VkImageCompressionFlagBitsEXT = enum_VkImageCompressionFlagBitsEXT;
pub const VkImageCompressionFlagsEXT = VkFlags;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_NONE_EXT: c_int = 0;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXT: c_int = 1;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXT: c_int = 2;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXT: c_int = 4;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXT: c_int = 8;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXT: c_int = 16;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXT: c_int = 32;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXT: c_int = 64;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXT: c_int = 128;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXT: c_int = 256;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXT: c_int = 512;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXT: c_int = 1024;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXT: c_int = 2048;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXT: c_int = 4096;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXT: c_int = 8192;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXT: c_int = 16384;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXT: c_int = 32768;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXT: c_int = 65536;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXT: c_int = 131072;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXT: c_int = 262144;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXT: c_int = 524288;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXT: c_int = 1048576;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXT: c_int = 2097152;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXT: c_int = 4194304;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT: c_int = 8388608;
pub const VK_IMAGE_COMPRESSION_FIXED_RATE_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkImageCompressionFixedRateFlagBitsEXT = c_uint;
pub const VkImageCompressionFixedRateFlagBitsEXT = enum_VkImageCompressionFixedRateFlagBitsEXT;
pub const VkImageCompressionFixedRateFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceImageCompressionControlFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageCompressionControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageCompressionControlFeaturesEXT = struct_VkPhysicalDeviceImageCompressionControlFeaturesEXT;
pub const struct_VkImageCompressionControlEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkImageCompressionFlagsEXT = @import("std").mem.zeroes(VkImageCompressionFlagsEXT),
    compressionControlPlaneCount: u32 = @import("std").mem.zeroes(u32),
    pFixedRateFlags: [*c]VkImageCompressionFixedRateFlagsEXT = @import("std").mem.zeroes([*c]VkImageCompressionFixedRateFlagsEXT),
};
pub const VkImageCompressionControlEXT = struct_VkImageCompressionControlEXT;
pub const struct_VkImageCompressionPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageCompressionFlags: VkImageCompressionFlagsEXT = @import("std").mem.zeroes(VkImageCompressionFlagsEXT),
    imageCompressionFixedRateFlags: VkImageCompressionFixedRateFlagsEXT = @import("std").mem.zeroes(VkImageCompressionFixedRateFlagsEXT),
};
pub const VkImageCompressionPropertiesEXT = struct_VkImageCompressionPropertiesEXT;
pub const struct_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    attachmentFeedbackLoopLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT = struct_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT;
pub const struct_VkPhysicalDevice4444FormatsFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    formatA4R4G4B4: VkBool32 = @import("std").mem.zeroes(VkBool32),
    formatA4B4G4R4: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevice4444FormatsFeaturesEXT = struct_VkPhysicalDevice4444FormatsFeaturesEXT;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_NONE_EXT: c_int = 0;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_READ_INVALID_EXT: c_int = 1;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_WRITE_INVALID_EXT: c_int = 2;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_EXECUTE_INVALID_EXT: c_int = 3;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_UNKNOWN_EXT: c_int = 4;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_INVALID_EXT: c_int = 5;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_FAULT_EXT: c_int = 6;
pub const VK_DEVICE_FAULT_ADDRESS_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDeviceFaultAddressTypeEXT = c_uint;
pub const VkDeviceFaultAddressTypeEXT = enum_VkDeviceFaultAddressTypeEXT;
pub const VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_ONE_EXT: c_int = 1;
pub const VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDeviceFaultVendorBinaryHeaderVersionEXT = c_uint;
pub const VkDeviceFaultVendorBinaryHeaderVersionEXT = enum_VkDeviceFaultVendorBinaryHeaderVersionEXT;
pub const struct_VkPhysicalDeviceFaultFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceFault: VkBool32 = @import("std").mem.zeroes(VkBool32),
    deviceFaultVendorBinary: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFaultFeaturesEXT = struct_VkPhysicalDeviceFaultFeaturesEXT;
pub const struct_VkDeviceFaultCountsEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    addressInfoCount: u32 = @import("std").mem.zeroes(u32),
    vendorInfoCount: u32 = @import("std").mem.zeroes(u32),
    vendorBinarySize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkDeviceFaultCountsEXT = struct_VkDeviceFaultCountsEXT;
pub const struct_VkDeviceFaultAddressInfoEXT = extern struct {
    addressType: VkDeviceFaultAddressTypeEXT = @import("std").mem.zeroes(VkDeviceFaultAddressTypeEXT),
    reportedAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    addressPrecision: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkDeviceFaultAddressInfoEXT = struct_VkDeviceFaultAddressInfoEXT;
pub const struct_VkDeviceFaultVendorInfoEXT = extern struct {
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    vendorFaultCode: u64 = @import("std").mem.zeroes(u64),
    vendorFaultData: u64 = @import("std").mem.zeroes(u64),
};
pub const VkDeviceFaultVendorInfoEXT = struct_VkDeviceFaultVendorInfoEXT;
pub const struct_VkDeviceFaultInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    pAddressInfos: [*c]VkDeviceFaultAddressInfoEXT = @import("std").mem.zeroes([*c]VkDeviceFaultAddressInfoEXT),
    pVendorInfos: [*c]VkDeviceFaultVendorInfoEXT = @import("std").mem.zeroes([*c]VkDeviceFaultVendorInfoEXT),
    pVendorBinaryData: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const VkDeviceFaultInfoEXT = struct_VkDeviceFaultInfoEXT;
pub const struct_VkDeviceFaultVendorBinaryHeaderVersionOneEXT = extern struct {
    headerSize: u32 = @import("std").mem.zeroes(u32),
    headerVersion: VkDeviceFaultVendorBinaryHeaderVersionEXT = @import("std").mem.zeroes(VkDeviceFaultVendorBinaryHeaderVersionEXT),
    vendorID: u32 = @import("std").mem.zeroes(u32),
    deviceID: u32 = @import("std").mem.zeroes(u32),
    driverVersion: u32 = @import("std").mem.zeroes(u32),
    pipelineCacheUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    applicationNameOffset: u32 = @import("std").mem.zeroes(u32),
    applicationVersion: u32 = @import("std").mem.zeroes(u32),
    engineNameOffset: u32 = @import("std").mem.zeroes(u32),
    engineVersion: u32 = @import("std").mem.zeroes(u32),
    apiVersion: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDeviceFaultVendorBinaryHeaderVersionOneEXT = struct_VkDeviceFaultVendorBinaryHeaderVersionOneEXT;
pub const PFN_vkGetDeviceFaultInfoEXT = ?*const fn (VkDevice, [*c]VkDeviceFaultCountsEXT, [*c]VkDeviceFaultInfoEXT) callconv(.C) VkResult;
pub extern fn vkGetDeviceFaultInfoEXT(device: VkDevice, pFaultCounts: [*c]VkDeviceFaultCountsEXT, pFaultInfo: [*c]VkDeviceFaultInfoEXT) VkResult;
pub const struct_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rasterizationOrderColorAttachmentAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rasterizationOrderDepthAttachmentAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rasterizationOrderStencilAttachmentAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT = struct_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT;
pub const VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM = VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT;
pub const struct_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    formatRgba10x6WithoutYCbCrSampler: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT = struct_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT;
pub const struct_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    mutableDescriptorType: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT = struct_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT;
pub const VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE = VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT;
pub const struct_VkMutableDescriptorTypeListEXT = extern struct {
    descriptorTypeCount: u32 = @import("std").mem.zeroes(u32),
    pDescriptorTypes: [*c]const VkDescriptorType = @import("std").mem.zeroes([*c]const VkDescriptorType),
};
pub const VkMutableDescriptorTypeListEXT = struct_VkMutableDescriptorTypeListEXT;
pub const VkMutableDescriptorTypeListVALVE = VkMutableDescriptorTypeListEXT;
pub const struct_VkMutableDescriptorTypeCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    mutableDescriptorTypeListCount: u32 = @import("std").mem.zeroes(u32),
    pMutableDescriptorTypeLists: [*c]const VkMutableDescriptorTypeListEXT = @import("std").mem.zeroes([*c]const VkMutableDescriptorTypeListEXT),
};
pub const VkMutableDescriptorTypeCreateInfoEXT = struct_VkMutableDescriptorTypeCreateInfoEXT;
pub const VkMutableDescriptorTypeCreateInfoVALVE = VkMutableDescriptorTypeCreateInfoEXT;
pub const struct_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    vertexInputDynamicState: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT = struct_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT;
pub const struct_VkVertexInputBindingDescription2EXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    binding: u32 = @import("std").mem.zeroes(u32),
    stride: u32 = @import("std").mem.zeroes(u32),
    inputRate: VkVertexInputRate = @import("std").mem.zeroes(VkVertexInputRate),
    divisor: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVertexInputBindingDescription2EXT = struct_VkVertexInputBindingDescription2EXT;
pub const struct_VkVertexInputAttributeDescription2EXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    location: u32 = @import("std").mem.zeroes(u32),
    binding: u32 = @import("std").mem.zeroes(u32),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
    offset: u32 = @import("std").mem.zeroes(u32),
};
pub const VkVertexInputAttributeDescription2EXT = struct_VkVertexInputAttributeDescription2EXT;
pub const PFN_vkCmdSetVertexInputEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkVertexInputBindingDescription2EXT, u32, [*c]const VkVertexInputAttributeDescription2EXT) callconv(.C) void;
pub extern fn vkCmdSetVertexInputEXT(commandBuffer: VkCommandBuffer, vertexBindingDescriptionCount: u32, pVertexBindingDescriptions: [*c]const VkVertexInputBindingDescription2EXT, vertexAttributeDescriptionCount: u32, pVertexAttributeDescriptions: [*c]const VkVertexInputAttributeDescription2EXT) void;
pub const struct_VkPhysicalDeviceDrmPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    hasPrimary: VkBool32 = @import("std").mem.zeroes(VkBool32),
    hasRender: VkBool32 = @import("std").mem.zeroes(VkBool32),
    primaryMajor: i64 = @import("std").mem.zeroes(i64),
    primaryMinor: i64 = @import("std").mem.zeroes(i64),
    renderMajor: i64 = @import("std").mem.zeroes(i64),
    renderMinor: i64 = @import("std").mem.zeroes(i64),
};
pub const VkPhysicalDeviceDrmPropertiesEXT = struct_VkPhysicalDeviceDrmPropertiesEXT;
pub const VK_DEVICE_ADDRESS_BINDING_TYPE_BIND_EXT: c_int = 0;
pub const VK_DEVICE_ADDRESS_BINDING_TYPE_UNBIND_EXT: c_int = 1;
pub const VK_DEVICE_ADDRESS_BINDING_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDeviceAddressBindingTypeEXT = c_uint;
pub const VkDeviceAddressBindingTypeEXT = enum_VkDeviceAddressBindingTypeEXT;
pub const VK_DEVICE_ADDRESS_BINDING_INTERNAL_OBJECT_BIT_EXT: c_int = 1;
pub const VK_DEVICE_ADDRESS_BINDING_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkDeviceAddressBindingFlagBitsEXT = c_uint;
pub const VkDeviceAddressBindingFlagBitsEXT = enum_VkDeviceAddressBindingFlagBitsEXT;
pub const VkDeviceAddressBindingFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceAddressBindingReportFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    reportAddressBinding: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceAddressBindingReportFeaturesEXT = struct_VkPhysicalDeviceAddressBindingReportFeaturesEXT;
pub const struct_VkDeviceAddressBindingCallbackDataEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkDeviceAddressBindingFlagsEXT = @import("std").mem.zeroes(VkDeviceAddressBindingFlagsEXT),
    baseAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    bindingType: VkDeviceAddressBindingTypeEXT = @import("std").mem.zeroes(VkDeviceAddressBindingTypeEXT),
};
pub const VkDeviceAddressBindingCallbackDataEXT = struct_VkDeviceAddressBindingCallbackDataEXT;
pub const struct_VkPhysicalDeviceDepthClipControlFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    depthClipControl: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDepthClipControlFeaturesEXT = struct_VkPhysicalDeviceDepthClipControlFeaturesEXT;
pub const struct_VkPipelineViewportDepthClipControlCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    negativeOneToOne: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPipelineViewportDepthClipControlCreateInfoEXT = struct_VkPipelineViewportDepthClipControlCreateInfoEXT;
pub const struct_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    primitiveTopologyListRestart: VkBool32 = @import("std").mem.zeroes(VkBool32),
    primitiveTopologyPatchListRestart: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT = struct_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT;
pub const struct_VkSubpassShadingPipelineCreateInfoHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    renderPass: VkRenderPass = @import("std").mem.zeroes(VkRenderPass),
    subpass: u32 = @import("std").mem.zeroes(u32),
};
pub const VkSubpassShadingPipelineCreateInfoHUAWEI = struct_VkSubpassShadingPipelineCreateInfoHUAWEI;
pub const struct_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    subpassShading: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSubpassShadingFeaturesHUAWEI = struct_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI;
pub const struct_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxSubpassShadingWorkgroupSizeAspectRatio: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceSubpassShadingPropertiesHUAWEI = struct_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI;
pub const PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = ?*const fn (VkDevice, VkRenderPass, [*c]VkExtent2D) callconv(.C) VkResult;
pub const PFN_vkCmdSubpassShadingHUAWEI = ?*const fn (VkCommandBuffer) callconv(.C) void;
pub extern fn vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI(device: VkDevice, renderpass: VkRenderPass, pMaxWorkgroupSize: [*c]VkExtent2D) VkResult;
pub extern fn vkCmdSubpassShadingHUAWEI(commandBuffer: VkCommandBuffer) void;
pub const struct_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    invocationMask: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceInvocationMaskFeaturesHUAWEI = struct_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI;
pub const PFN_vkCmdBindInvocationMaskHUAWEI = ?*const fn (VkCommandBuffer, VkImageView, VkImageLayout) callconv(.C) void;
pub extern fn vkCmdBindInvocationMaskHUAWEI(commandBuffer: VkCommandBuffer, imageView: VkImageView, imageLayout: VkImageLayout) void;
pub const VkRemoteAddressNV = ?*anyopaque;
pub const struct_VkMemoryGetRemoteAddressInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    memory: VkDeviceMemory = @import("std").mem.zeroes(VkDeviceMemory),
    handleType: VkExternalMemoryHandleTypeFlagBits = @import("std").mem.zeroes(VkExternalMemoryHandleTypeFlagBits),
};
pub const VkMemoryGetRemoteAddressInfoNV = struct_VkMemoryGetRemoteAddressInfoNV;
pub const struct_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    externalMemoryRDMA: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExternalMemoryRDMAFeaturesNV = struct_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV;
pub const PFN_vkGetMemoryRemoteAddressNV = ?*const fn (VkDevice, [*c]const VkMemoryGetRemoteAddressInfoNV, [*c]VkRemoteAddressNV) callconv(.C) VkResult;
pub extern fn vkGetMemoryRemoteAddressNV(device: VkDevice, pMemoryGetRemoteAddressInfo: [*c]const VkMemoryGetRemoteAddressInfoNV, pAddress: [*c]VkRemoteAddressNV) VkResult;
pub const VkPipelineInfoEXT = VkPipelineInfoKHR;
pub const struct_VkPipelinePropertiesIdentifierEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineIdentifier: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const VkPipelinePropertiesIdentifierEXT = struct_VkPipelinePropertiesIdentifierEXT;
pub const struct_VkPhysicalDevicePipelinePropertiesFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelinePropertiesIdentifier: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePipelinePropertiesFeaturesEXT = struct_VkPhysicalDevicePipelinePropertiesFeaturesEXT;
pub const PFN_vkGetPipelinePropertiesEXT = ?*const fn (VkDevice, [*c]const VkPipelineInfoEXT, [*c]VkBaseOutStructure) callconv(.C) VkResult;
pub extern fn vkGetPipelinePropertiesEXT(device: VkDevice, pPipelineInfo: [*c]const VkPipelineInfoEXT, pPipelineProperties: [*c]VkBaseOutStructure) VkResult;
pub const VK_FRAME_BOUNDARY_FRAME_END_BIT_EXT: c_int = 1;
pub const VK_FRAME_BOUNDARY_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkFrameBoundaryFlagBitsEXT = c_uint;
pub const VkFrameBoundaryFlagBitsEXT = enum_VkFrameBoundaryFlagBitsEXT;
pub const VkFrameBoundaryFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceFrameBoundaryFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    frameBoundary: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFrameBoundaryFeaturesEXT = struct_VkPhysicalDeviceFrameBoundaryFeaturesEXT;
pub const struct_VkFrameBoundaryEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkFrameBoundaryFlagsEXT = @import("std").mem.zeroes(VkFrameBoundaryFlagsEXT),
    frameID: u64 = @import("std").mem.zeroes(u64),
    imageCount: u32 = @import("std").mem.zeroes(u32),
    pImages: [*c]const VkImage = @import("std").mem.zeroes([*c]const VkImage),
    bufferCount: u32 = @import("std").mem.zeroes(u32),
    pBuffers: [*c]const VkBuffer = @import("std").mem.zeroes([*c]const VkBuffer),
    tagName: u64 = @import("std").mem.zeroes(u64),
    tagSize: usize = @import("std").mem.zeroes(usize),
    pTag: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkFrameBoundaryEXT = struct_VkFrameBoundaryEXT;
pub const struct_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    multisampledRenderToSingleSampled: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = struct_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT;
pub const struct_VkSubpassResolvePerformanceQueryEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    optimal: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSubpassResolvePerformanceQueryEXT = struct_VkSubpassResolvePerformanceQueryEXT;
pub const struct_VkMultisampledRenderToSingleSampledInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    multisampledRenderToSingleSampledEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rasterizationSamples: VkSampleCountFlagBits = @import("std").mem.zeroes(VkSampleCountFlagBits),
};
pub const VkMultisampledRenderToSingleSampledInfoEXT = struct_VkMultisampledRenderToSingleSampledInfoEXT;
pub const struct_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    extendedDynamicState2: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState2LogicOp: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState2PatchControlPoints: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExtendedDynamicState2FeaturesEXT = struct_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT;
pub const PFN_vkCmdSetPatchControlPointsEXT = ?*const fn (VkCommandBuffer, u32) callconv(.C) void;
pub const PFN_vkCmdSetRasterizerDiscardEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthBiasEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetLogicOpEXT = ?*const fn (VkCommandBuffer, VkLogicOp) callconv(.C) void;
pub const PFN_vkCmdSetPrimitiveRestartEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub extern fn vkCmdSetPatchControlPointsEXT(commandBuffer: VkCommandBuffer, patchControlPoints: u32) void;
pub extern fn vkCmdSetRasterizerDiscardEnableEXT(commandBuffer: VkCommandBuffer, rasterizerDiscardEnable: VkBool32) void;
pub extern fn vkCmdSetDepthBiasEnableEXT(commandBuffer: VkCommandBuffer, depthBiasEnable: VkBool32) void;
pub extern fn vkCmdSetLogicOpEXT(commandBuffer: VkCommandBuffer, logicOp: VkLogicOp) void;
pub extern fn vkCmdSetPrimitiveRestartEnableEXT(commandBuffer: VkCommandBuffer, primitiveRestartEnable: VkBool32) void;
pub const struct_VkPhysicalDeviceColorWriteEnableFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    colorWriteEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceColorWriteEnableFeaturesEXT = struct_VkPhysicalDeviceColorWriteEnableFeaturesEXT;
pub const struct_VkPipelineColorWriteCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    attachmentCount: u32 = @import("std").mem.zeroes(u32),
    pColorWriteEnables: [*c]const VkBool32 = @import("std").mem.zeroes([*c]const VkBool32),
};
pub const VkPipelineColorWriteCreateInfoEXT = struct_VkPipelineColorWriteCreateInfoEXT;
pub const PFN_vkCmdSetColorWriteEnableEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkBool32) callconv(.C) void;
pub extern fn vkCmdSetColorWriteEnableEXT(commandBuffer: VkCommandBuffer, attachmentCount: u32, pColorWriteEnables: [*c]const VkBool32) void;
pub const struct_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    primitivesGeneratedQuery: VkBool32 = @import("std").mem.zeroes(VkBool32),
    primitivesGeneratedQueryWithRasterizerDiscard: VkBool32 = @import("std").mem.zeroes(VkBool32),
    primitivesGeneratedQueryWithNonZeroStreams: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT = struct_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT;
pub const VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT = VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR;
pub const VkQueueFamilyGlobalPriorityPropertiesEXT = VkQueueFamilyGlobalPriorityPropertiesKHR;
pub const struct_VkPhysicalDeviceImageViewMinLodFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    minLod: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageViewMinLodFeaturesEXT = struct_VkPhysicalDeviceImageViewMinLodFeaturesEXT;
pub const struct_VkImageViewMinLodCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    minLod: f32 = @import("std").mem.zeroes(f32),
};
pub const VkImageViewMinLodCreateInfoEXT = struct_VkImageViewMinLodCreateInfoEXT;
pub const struct_VkPhysicalDeviceMultiDrawFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    multiDraw: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMultiDrawFeaturesEXT = struct_VkPhysicalDeviceMultiDrawFeaturesEXT;
pub const struct_VkPhysicalDeviceMultiDrawPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxMultiDrawCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceMultiDrawPropertiesEXT = struct_VkPhysicalDeviceMultiDrawPropertiesEXT;
pub const struct_VkMultiDrawInfoEXT = extern struct {
    firstVertex: u32 = @import("std").mem.zeroes(u32),
    vertexCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMultiDrawInfoEXT = struct_VkMultiDrawInfoEXT;
pub const struct_VkMultiDrawIndexedInfoEXT = extern struct {
    firstIndex: u32 = @import("std").mem.zeroes(u32),
    indexCount: u32 = @import("std").mem.zeroes(u32),
    vertexOffset: i32 = @import("std").mem.zeroes(i32),
};
pub const VkMultiDrawIndexedInfoEXT = struct_VkMultiDrawIndexedInfoEXT;
pub const PFN_vkCmdDrawMultiEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkMultiDrawInfoEXT, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawMultiIndexedEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkMultiDrawIndexedInfoEXT, u32, u32, u32, [*c]const i32) callconv(.C) void;
pub extern fn vkCmdDrawMultiEXT(commandBuffer: VkCommandBuffer, drawCount: u32, pVertexInfo: [*c]const VkMultiDrawInfoEXT, instanceCount: u32, firstInstance: u32, stride: u32) void;
pub extern fn vkCmdDrawMultiIndexedEXT(commandBuffer: VkCommandBuffer, drawCount: u32, pIndexInfo: [*c]const VkMultiDrawIndexedInfoEXT, instanceCount: u32, firstInstance: u32, stride: u32, pVertexOffset: [*c]const i32) void;
pub const struct_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    image2DViewOf3D: VkBool32 = @import("std").mem.zeroes(VkBool32),
    sampler2DViewOf3D: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImage2DViewOf3DFeaturesEXT = struct_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT;
pub const struct_VkPhysicalDeviceShaderTileImageFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderTileImageColorReadAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderTileImageDepthReadAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderTileImageStencilReadAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderTileImageFeaturesEXT = struct_VkPhysicalDeviceShaderTileImageFeaturesEXT;
pub const struct_VkPhysicalDeviceShaderTileImagePropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderTileImageCoherentReadAccelerated: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderTileImageReadSampleFromPixelRateInvocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    shaderTileImageReadFromHelperInvocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderTileImagePropertiesEXT = struct_VkPhysicalDeviceShaderTileImagePropertiesEXT;
pub const struct_VkMicromapEXT_T = opaque {};
pub const VkMicromapEXT = ?*struct_VkMicromapEXT_T;
pub const VK_MICROMAP_TYPE_OPACITY_MICROMAP_EXT: c_int = 0;
pub const VK_MICROMAP_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkMicromapTypeEXT = c_uint;
pub const VkMicromapTypeEXT = enum_VkMicromapTypeEXT;
pub const VK_BUILD_MICROMAP_MODE_BUILD_EXT: c_int = 0;
pub const VK_BUILD_MICROMAP_MODE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkBuildMicromapModeEXT = c_uint;
pub const VkBuildMicromapModeEXT = enum_VkBuildMicromapModeEXT;
pub const VK_COPY_MICROMAP_MODE_CLONE_EXT: c_int = 0;
pub const VK_COPY_MICROMAP_MODE_SERIALIZE_EXT: c_int = 1;
pub const VK_COPY_MICROMAP_MODE_DESERIALIZE_EXT: c_int = 2;
pub const VK_COPY_MICROMAP_MODE_COMPACT_EXT: c_int = 3;
pub const VK_COPY_MICROMAP_MODE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkCopyMicromapModeEXT = c_uint;
pub const VkCopyMicromapModeEXT = enum_VkCopyMicromapModeEXT;
pub const VK_OPACITY_MICROMAP_FORMAT_2_STATE_EXT: c_int = 1;
pub const VK_OPACITY_MICROMAP_FORMAT_4_STATE_EXT: c_int = 2;
pub const VK_OPACITY_MICROMAP_FORMAT_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkOpacityMicromapFormatEXT = c_uint;
pub const VkOpacityMicromapFormatEXT = enum_VkOpacityMicromapFormatEXT;
pub const VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_TRANSPARENT_EXT: c_int = -1;
pub const VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_OPAQUE_EXT: c_int = -2;
pub const VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_TRANSPARENT_EXT: c_int = -3;
pub const VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_OPAQUE_EXT: c_int = -4;
pub const VK_OPACITY_MICROMAP_SPECIAL_INDEX_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkOpacityMicromapSpecialIndexEXT = c_int;
pub const VkOpacityMicromapSpecialIndexEXT = enum_VkOpacityMicromapSpecialIndexEXT;
pub const VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR: c_int = 0;
pub const VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkAccelerationStructureCompatibilityKHR = c_uint;
pub const VkAccelerationStructureCompatibilityKHR = enum_VkAccelerationStructureCompatibilityKHR;
pub const VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR: c_int = 0;
pub const VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR: c_int = 2;
pub const VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkAccelerationStructureBuildTypeKHR = c_uint;
pub const VkAccelerationStructureBuildTypeKHR = enum_VkAccelerationStructureBuildTypeKHR;
pub const VK_BUILD_MICROMAP_PREFER_FAST_TRACE_BIT_EXT: c_int = 1;
pub const VK_BUILD_MICROMAP_PREFER_FAST_BUILD_BIT_EXT: c_int = 2;
pub const VK_BUILD_MICROMAP_ALLOW_COMPACTION_BIT_EXT: c_int = 4;
pub const VK_BUILD_MICROMAP_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkBuildMicromapFlagBitsEXT = c_uint;
pub const VkBuildMicromapFlagBitsEXT = enum_VkBuildMicromapFlagBitsEXT;
pub const VkBuildMicromapFlagsEXT = VkFlags;
pub const VK_MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT: c_int = 1;
pub const VK_MICROMAP_CREATE_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkMicromapCreateFlagBitsEXT = c_uint;
pub const VkMicromapCreateFlagBitsEXT = enum_VkMicromapCreateFlagBitsEXT;
pub const VkMicromapCreateFlagsEXT = VkFlags;
pub const struct_VkMicromapUsageEXT = extern struct {
    count: u32 = @import("std").mem.zeroes(u32),
    subdivisionLevel: u32 = @import("std").mem.zeroes(u32),
    format: u32 = @import("std").mem.zeroes(u32),
};
pub const VkMicromapUsageEXT = struct_VkMicromapUsageEXT;
pub const union_VkDeviceOrHostAddressKHR = extern union {
    deviceAddress: VkDeviceAddress,
    hostAddress: ?*anyopaque,
};
pub const VkDeviceOrHostAddressKHR = union_VkDeviceOrHostAddressKHR;
pub const struct_VkMicromapBuildInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkMicromapTypeEXT = @import("std").mem.zeroes(VkMicromapTypeEXT),
    flags: VkBuildMicromapFlagsEXT = @import("std").mem.zeroes(VkBuildMicromapFlagsEXT),
    mode: VkBuildMicromapModeEXT = @import("std").mem.zeroes(VkBuildMicromapModeEXT),
    dstMicromap: VkMicromapEXT = @import("std").mem.zeroes(VkMicromapEXT),
    usageCountsCount: u32 = @import("std").mem.zeroes(u32),
    pUsageCounts: [*c]const VkMicromapUsageEXT = @import("std").mem.zeroes([*c]const VkMicromapUsageEXT),
    ppUsageCounts: [*c]const [*c]const VkMicromapUsageEXT = @import("std").mem.zeroes([*c]const [*c]const VkMicromapUsageEXT),
    data: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    scratchData: VkDeviceOrHostAddressKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressKHR),
    triangleArray: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    triangleArrayStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkMicromapBuildInfoEXT = struct_VkMicromapBuildInfoEXT;
pub const struct_VkMicromapCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    createFlags: VkMicromapCreateFlagsEXT = @import("std").mem.zeroes(VkMicromapCreateFlagsEXT),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    type: VkMicromapTypeEXT = @import("std").mem.zeroes(VkMicromapTypeEXT),
    deviceAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
};
pub const VkMicromapCreateInfoEXT = struct_VkMicromapCreateInfoEXT;
pub const struct_VkPhysicalDeviceOpacityMicromapFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    micromap: VkBool32 = @import("std").mem.zeroes(VkBool32),
    micromapCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    micromapHostCommands: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceOpacityMicromapFeaturesEXT = struct_VkPhysicalDeviceOpacityMicromapFeaturesEXT;
pub const struct_VkPhysicalDeviceOpacityMicromapPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxOpacity2StateSubdivisionLevel: u32 = @import("std").mem.zeroes(u32),
    maxOpacity4StateSubdivisionLevel: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceOpacityMicromapPropertiesEXT = struct_VkPhysicalDeviceOpacityMicromapPropertiesEXT;
pub const struct_VkMicromapVersionInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pVersionData: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkMicromapVersionInfoEXT = struct_VkMicromapVersionInfoEXT;
pub const struct_VkCopyMicromapToMemoryInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    src: VkMicromapEXT = @import("std").mem.zeroes(VkMicromapEXT),
    dst: VkDeviceOrHostAddressKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressKHR),
    mode: VkCopyMicromapModeEXT = @import("std").mem.zeroes(VkCopyMicromapModeEXT),
};
pub const VkCopyMicromapToMemoryInfoEXT = struct_VkCopyMicromapToMemoryInfoEXT;
pub const struct_VkCopyMemoryToMicromapInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    src: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    dst: VkMicromapEXT = @import("std").mem.zeroes(VkMicromapEXT),
    mode: VkCopyMicromapModeEXT = @import("std").mem.zeroes(VkCopyMicromapModeEXT),
};
pub const VkCopyMemoryToMicromapInfoEXT = struct_VkCopyMemoryToMicromapInfoEXT;
pub const struct_VkCopyMicromapInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    src: VkMicromapEXT = @import("std").mem.zeroes(VkMicromapEXT),
    dst: VkMicromapEXT = @import("std").mem.zeroes(VkMicromapEXT),
    mode: VkCopyMicromapModeEXT = @import("std").mem.zeroes(VkCopyMicromapModeEXT),
};
pub const VkCopyMicromapInfoEXT = struct_VkCopyMicromapInfoEXT;
pub const struct_VkMicromapBuildSizesInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    micromapSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    buildScratchSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    discardable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkMicromapBuildSizesInfoEXT = struct_VkMicromapBuildSizesInfoEXT;
pub const struct_VkAccelerationStructureTrianglesOpacityMicromapEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    indexType: VkIndexType = @import("std").mem.zeroes(VkIndexType),
    indexBuffer: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    indexStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    baseTriangle: u32 = @import("std").mem.zeroes(u32),
    usageCountsCount: u32 = @import("std").mem.zeroes(u32),
    pUsageCounts: [*c]const VkMicromapUsageEXT = @import("std").mem.zeroes([*c]const VkMicromapUsageEXT),
    ppUsageCounts: [*c]const [*c]const VkMicromapUsageEXT = @import("std").mem.zeroes([*c]const [*c]const VkMicromapUsageEXT),
    micromap: VkMicromapEXT = @import("std").mem.zeroes(VkMicromapEXT),
};
pub const VkAccelerationStructureTrianglesOpacityMicromapEXT = struct_VkAccelerationStructureTrianglesOpacityMicromapEXT;
pub const struct_VkMicromapTriangleEXT = extern struct {
    dataOffset: u32 = @import("std").mem.zeroes(u32),
    subdivisionLevel: u16 = @import("std").mem.zeroes(u16),
    format: u16 = @import("std").mem.zeroes(u16),
};
pub const VkMicromapTriangleEXT = struct_VkMicromapTriangleEXT;
pub const PFN_vkCreateMicromapEXT = ?*const fn (VkDevice, [*c]const VkMicromapCreateInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkMicromapEXT) callconv(.C) VkResult;
pub const PFN_vkDestroyMicromapEXT = ?*const fn (VkDevice, VkMicromapEXT, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCmdBuildMicromapsEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkMicromapBuildInfoEXT) callconv(.C) void;
pub const PFN_vkBuildMicromapsEXT = ?*const fn (VkDevice, VkDeferredOperationKHR, u32, [*c]const VkMicromapBuildInfoEXT) callconv(.C) VkResult;
pub const PFN_vkCopyMicromapEXT = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkCopyMicromapInfoEXT) callconv(.C) VkResult;
pub const PFN_vkCopyMicromapToMemoryEXT = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkCopyMicromapToMemoryInfoEXT) callconv(.C) VkResult;
pub const PFN_vkCopyMemoryToMicromapEXT = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkCopyMemoryToMicromapInfoEXT) callconv(.C) VkResult;
pub const PFN_vkWriteMicromapsPropertiesEXT = ?*const fn (VkDevice, u32, [*c]const VkMicromapEXT, VkQueryType, usize, ?*anyopaque, usize) callconv(.C) VkResult;
pub const PFN_vkCmdCopyMicromapEXT = ?*const fn (VkCommandBuffer, [*c]const VkCopyMicromapInfoEXT) callconv(.C) void;
pub const PFN_vkCmdCopyMicromapToMemoryEXT = ?*const fn (VkCommandBuffer, [*c]const VkCopyMicromapToMemoryInfoEXT) callconv(.C) void;
pub const PFN_vkCmdCopyMemoryToMicromapEXT = ?*const fn (VkCommandBuffer, [*c]const VkCopyMemoryToMicromapInfoEXT) callconv(.C) void;
pub const PFN_vkCmdWriteMicromapsPropertiesEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkMicromapEXT, VkQueryType, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkGetDeviceMicromapCompatibilityEXT = ?*const fn (VkDevice, [*c]const VkMicromapVersionInfoEXT, [*c]VkAccelerationStructureCompatibilityKHR) callconv(.C) void;
pub const PFN_vkGetMicromapBuildSizesEXT = ?*const fn (VkDevice, VkAccelerationStructureBuildTypeKHR, [*c]const VkMicromapBuildInfoEXT, [*c]VkMicromapBuildSizesInfoEXT) callconv(.C) void;
pub extern fn vkCreateMicromapEXT(device: VkDevice, pCreateInfo: [*c]const VkMicromapCreateInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pMicromap: [*c]VkMicromapEXT) VkResult;
pub extern fn vkDestroyMicromapEXT(device: VkDevice, micromap: VkMicromapEXT, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCmdBuildMicromapsEXT(commandBuffer: VkCommandBuffer, infoCount: u32, pInfos: [*c]const VkMicromapBuildInfoEXT) void;
pub extern fn vkBuildMicromapsEXT(device: VkDevice, deferredOperation: VkDeferredOperationKHR, infoCount: u32, pInfos: [*c]const VkMicromapBuildInfoEXT) VkResult;
pub extern fn vkCopyMicromapEXT(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pInfo: [*c]const VkCopyMicromapInfoEXT) VkResult;
pub extern fn vkCopyMicromapToMemoryEXT(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pInfo: [*c]const VkCopyMicromapToMemoryInfoEXT) VkResult;
pub extern fn vkCopyMemoryToMicromapEXT(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pInfo: [*c]const VkCopyMemoryToMicromapInfoEXT) VkResult;
pub extern fn vkWriteMicromapsPropertiesEXT(device: VkDevice, micromapCount: u32, pMicromaps: [*c]const VkMicromapEXT, queryType: VkQueryType, dataSize: usize, pData: ?*anyopaque, stride: usize) VkResult;
pub extern fn vkCmdCopyMicromapEXT(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkCopyMicromapInfoEXT) void;
pub extern fn vkCmdCopyMicromapToMemoryEXT(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkCopyMicromapToMemoryInfoEXT) void;
pub extern fn vkCmdCopyMemoryToMicromapEXT(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkCopyMemoryToMicromapInfoEXT) void;
pub extern fn vkCmdWriteMicromapsPropertiesEXT(commandBuffer: VkCommandBuffer, micromapCount: u32, pMicromaps: [*c]const VkMicromapEXT, queryType: VkQueryType, queryPool: VkQueryPool, firstQuery: u32) void;
pub extern fn vkGetDeviceMicromapCompatibilityEXT(device: VkDevice, pVersionInfo: [*c]const VkMicromapVersionInfoEXT, pCompatibility: [*c]VkAccelerationStructureCompatibilityKHR) void;
pub extern fn vkGetMicromapBuildSizesEXT(device: VkDevice, buildType: VkAccelerationStructureBuildTypeKHR, pBuildInfo: [*c]const VkMicromapBuildInfoEXT, pSizeInfo: [*c]VkMicromapBuildSizesInfoEXT) void;
pub const struct_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clustercullingShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiviewClusterCullingShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI = struct_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI;
pub const struct_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxWorkGroupCount: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxOutputClusterCount: u32 = @import("std").mem.zeroes(u32),
    indirectBufferOffsetAlignment: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI = struct_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI;
pub const struct_VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clusterShadingRate: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI = struct_VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI;
pub const PFN_vkCmdDrawClusterHUAWEI = ?*const fn (VkCommandBuffer, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawClusterIndirectHUAWEI = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize) callconv(.C) void;
pub extern fn vkCmdDrawClusterHUAWEI(commandBuffer: VkCommandBuffer, groupCountX: u32, groupCountY: u32, groupCountZ: u32) void;
pub extern fn vkCmdDrawClusterIndirectHUAWEI(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize) void;
pub const struct_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    borderColorSwizzle: VkBool32 = @import("std").mem.zeroes(VkBool32),
    borderColorSwizzleFromImage: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceBorderColorSwizzleFeaturesEXT = struct_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT;
pub const struct_VkSamplerBorderColorComponentMappingCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    components: VkComponentMapping = @import("std").mem.zeroes(VkComponentMapping),
    srgb: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSamplerBorderColorComponentMappingCreateInfoEXT = struct_VkSamplerBorderColorComponentMappingCreateInfoEXT;
pub const struct_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pageableDeviceLocalMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT = struct_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT;
pub const PFN_vkSetDeviceMemoryPriorityEXT = ?*const fn (VkDevice, VkDeviceMemory, f32) callconv(.C) void;
pub extern fn vkSetDeviceMemoryPriorityEXT(device: VkDevice, memory: VkDeviceMemory, priority: f32) void;
pub const struct_VkPhysicalDeviceShaderCorePropertiesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pixelRate: u32 = @import("std").mem.zeroes(u32),
    texelRate: u32 = @import("std").mem.zeroes(u32),
    fmaRate: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShaderCorePropertiesARM = struct_VkPhysicalDeviceShaderCorePropertiesARM;
pub const VkPhysicalDeviceSchedulingControlsFlagsARM = VkFlags64;
pub const VkPhysicalDeviceSchedulingControlsFlagBitsARM = VkFlags64;
pub const VK_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_SHADER_CORE_COUNT_ARM: VkPhysicalDeviceSchedulingControlsFlagBitsARM = 1;
pub const struct_VkDeviceQueueShaderCoreControlCreateInfoARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderCoreCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDeviceQueueShaderCoreControlCreateInfoARM = struct_VkDeviceQueueShaderCoreControlCreateInfoARM;
pub const struct_VkPhysicalDeviceSchedulingControlsFeaturesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    schedulingControls: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSchedulingControlsFeaturesARM = struct_VkPhysicalDeviceSchedulingControlsFeaturesARM;
pub const struct_VkPhysicalDeviceSchedulingControlsPropertiesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    schedulingControlsFlags: VkPhysicalDeviceSchedulingControlsFlagsARM = @import("std").mem.zeroes(VkPhysicalDeviceSchedulingControlsFlagsARM),
};
pub const VkPhysicalDeviceSchedulingControlsPropertiesARM = struct_VkPhysicalDeviceSchedulingControlsPropertiesARM;
pub const struct_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageSlicedViewOf3D: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT = struct_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT;
pub const struct_VkImageViewSlicedCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    sliceOffset: u32 = @import("std").mem.zeroes(u32),
    sliceCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkImageViewSlicedCreateInfoEXT = struct_VkImageViewSlicedCreateInfoEXT;
pub const struct_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    descriptorSetHostMapping: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE = struct_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE;
pub const struct_VkDescriptorSetBindingReferenceVALVE = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    descriptorSetLayout: VkDescriptorSetLayout = @import("std").mem.zeroes(VkDescriptorSetLayout),
    binding: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDescriptorSetBindingReferenceVALVE = struct_VkDescriptorSetBindingReferenceVALVE;
pub const struct_VkDescriptorSetLayoutHostMappingInfoVALVE = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    descriptorOffset: usize = @import("std").mem.zeroes(usize),
    descriptorSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDescriptorSetLayoutHostMappingInfoVALVE = struct_VkDescriptorSetLayoutHostMappingInfoVALVE;
pub const PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE = ?*const fn (VkDevice, [*c]const VkDescriptorSetBindingReferenceVALVE, [*c]VkDescriptorSetLayoutHostMappingInfoVALVE) callconv(.C) void;
pub const PFN_vkGetDescriptorSetHostMappingVALVE = ?*const fn (VkDevice, VkDescriptorSet, [*c]?*anyopaque) callconv(.C) void;
pub extern fn vkGetDescriptorSetLayoutHostMappingInfoVALVE(device: VkDevice, pBindingReference: [*c]const VkDescriptorSetBindingReferenceVALVE, pHostMapping: [*c]VkDescriptorSetLayoutHostMappingInfoVALVE) void;
pub extern fn vkGetDescriptorSetHostMappingVALVE(device: VkDevice, descriptorSet: VkDescriptorSet, ppData: [*c]?*anyopaque) void;
pub const struct_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    depthClampZeroOne: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDepthClampZeroOneFeaturesEXT = struct_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT;
pub const struct_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    nonSeamlessCubeMap: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT = struct_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT;
pub const struct_VkPhysicalDeviceRenderPassStripedFeaturesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    renderPassStriped: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRenderPassStripedFeaturesARM = struct_VkPhysicalDeviceRenderPassStripedFeaturesARM;
pub const struct_VkPhysicalDeviceRenderPassStripedPropertiesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    renderPassStripeGranularity: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxRenderPassStripes: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceRenderPassStripedPropertiesARM = struct_VkPhysicalDeviceRenderPassStripedPropertiesARM;
pub const struct_VkRenderPassStripeInfoARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stripeArea: VkRect2D = @import("std").mem.zeroes(VkRect2D),
};
pub const VkRenderPassStripeInfoARM = struct_VkRenderPassStripeInfoARM;
pub const struct_VkRenderPassStripeBeginInfoARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stripeInfoCount: u32 = @import("std").mem.zeroes(u32),
    pStripeInfos: [*c]const VkRenderPassStripeInfoARM = @import("std").mem.zeroes([*c]const VkRenderPassStripeInfoARM),
};
pub const VkRenderPassStripeBeginInfoARM = struct_VkRenderPassStripeBeginInfoARM;
pub const struct_VkRenderPassStripeSubmitInfoARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    stripeSemaphoreInfoCount: u32 = @import("std").mem.zeroes(u32),
    pStripeSemaphoreInfos: [*c]const VkSemaphoreSubmitInfo = @import("std").mem.zeroes([*c]const VkSemaphoreSubmitInfo),
};
pub const VkRenderPassStripeSubmitInfoARM = struct_VkRenderPassStripeSubmitInfoARM;
pub const struct_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentDensityMapOffset: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM = struct_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM;
pub const struct_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    fragmentDensityOffsetGranularity: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM = struct_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM;
pub const struct_VkSubpassFragmentDensityMapOffsetEndInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    fragmentDensityOffsetCount: u32 = @import("std").mem.zeroes(u32),
    pFragmentDensityOffsets: [*c]const VkOffset2D = @import("std").mem.zeroes([*c]const VkOffset2D),
};
pub const VkSubpassFragmentDensityMapOffsetEndInfoQCOM = struct_VkSubpassFragmentDensityMapOffsetEndInfoQCOM;
pub const struct_VkCopyMemoryIndirectCommandNV = extern struct {
    srcAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    dstAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkCopyMemoryIndirectCommandNV = struct_VkCopyMemoryIndirectCommandNV;
pub const struct_VkCopyMemoryToImageIndirectCommandNV = extern struct {
    srcAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    bufferRowLength: u32 = @import("std").mem.zeroes(u32),
    bufferImageHeight: u32 = @import("std").mem.zeroes(u32),
    imageSubresource: VkImageSubresourceLayers = @import("std").mem.zeroes(VkImageSubresourceLayers),
    imageOffset: VkOffset3D = @import("std").mem.zeroes(VkOffset3D),
    imageExtent: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
};
pub const VkCopyMemoryToImageIndirectCommandNV = struct_VkCopyMemoryToImageIndirectCommandNV;
pub const struct_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    indirectCopy: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCopyMemoryIndirectFeaturesNV = struct_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV;
pub const struct_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    supportedQueues: VkQueueFlags = @import("std").mem.zeroes(VkQueueFlags),
};
pub const VkPhysicalDeviceCopyMemoryIndirectPropertiesNV = struct_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV;
pub const PFN_vkCmdCopyMemoryIndirectNV = ?*const fn (VkCommandBuffer, VkDeviceAddress, u32, u32) callconv(.C) void;
pub const PFN_vkCmdCopyMemoryToImageIndirectNV = ?*const fn (VkCommandBuffer, VkDeviceAddress, u32, u32, VkImage, VkImageLayout, [*c]const VkImageSubresourceLayers) callconv(.C) void;
pub extern fn vkCmdCopyMemoryIndirectNV(commandBuffer: VkCommandBuffer, copyBufferAddress: VkDeviceAddress, copyCount: u32, stride: u32) void;
pub extern fn vkCmdCopyMemoryToImageIndirectNV(commandBuffer: VkCommandBuffer, copyBufferAddress: VkDeviceAddress, copyCount: u32, stride: u32, dstImage: VkImage, dstImageLayout: VkImageLayout, pImageSubresources: [*c]const VkImageSubresourceLayers) void;
pub const VkMemoryDecompressionMethodFlagBitsNV = VkFlags64;
pub const VK_MEMORY_DECOMPRESSION_METHOD_GDEFLATE_1_0_BIT_NV: VkMemoryDecompressionMethodFlagBitsNV = 1;
pub const VkMemoryDecompressionMethodFlagsNV = VkFlags64;
pub const struct_VkDecompressMemoryRegionNV = extern struct {
    srcAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    dstAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    compressedSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    decompressedSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    decompressionMethod: VkMemoryDecompressionMethodFlagsNV = @import("std").mem.zeroes(VkMemoryDecompressionMethodFlagsNV),
};
pub const VkDecompressMemoryRegionNV = struct_VkDecompressMemoryRegionNV;
pub const struct_VkPhysicalDeviceMemoryDecompressionFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    memoryDecompression: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMemoryDecompressionFeaturesNV = struct_VkPhysicalDeviceMemoryDecompressionFeaturesNV;
pub const struct_VkPhysicalDeviceMemoryDecompressionPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    decompressionMethods: VkMemoryDecompressionMethodFlagsNV = @import("std").mem.zeroes(VkMemoryDecompressionMethodFlagsNV),
    maxDecompressionIndirectCount: u64 = @import("std").mem.zeroes(u64),
};
pub const VkPhysicalDeviceMemoryDecompressionPropertiesNV = struct_VkPhysicalDeviceMemoryDecompressionPropertiesNV;
pub const PFN_vkCmdDecompressMemoryNV = ?*const fn (VkCommandBuffer, u32, [*c]const VkDecompressMemoryRegionNV) callconv(.C) void;
pub const PFN_vkCmdDecompressMemoryIndirectCountNV = ?*const fn (VkCommandBuffer, VkDeviceAddress, VkDeviceAddress, u32) callconv(.C) void;
pub extern fn vkCmdDecompressMemoryNV(commandBuffer: VkCommandBuffer, decompressRegionCount: u32, pDecompressMemoryRegions: [*c]const VkDecompressMemoryRegionNV) void;
pub extern fn vkCmdDecompressMemoryIndirectCountNV(commandBuffer: VkCommandBuffer, indirectCommandsAddress: VkDeviceAddress, indirectCommandsCountAddress: VkDeviceAddress, stride: u32) void;
pub const struct_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    deviceGeneratedCompute: VkBool32 = @import("std").mem.zeroes(VkBool32),
    deviceGeneratedComputePipelines: VkBool32 = @import("std").mem.zeroes(VkBool32),
    deviceGeneratedComputeCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV = struct_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV;
pub const struct_VkComputePipelineIndirectBufferInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    deviceAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    pipelineDeviceAddressCaptureReplay: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
};
pub const VkComputePipelineIndirectBufferInfoNV = struct_VkComputePipelineIndirectBufferInfoNV;
pub const struct_VkPipelineIndirectDeviceAddressInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pipelineBindPoint: VkPipelineBindPoint = @import("std").mem.zeroes(VkPipelineBindPoint),
    pipeline: VkPipeline = @import("std").mem.zeroes(VkPipeline),
};
pub const VkPipelineIndirectDeviceAddressInfoNV = struct_VkPipelineIndirectDeviceAddressInfoNV;
pub const struct_VkBindPipelineIndirectCommandNV = extern struct {
    pipelineAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
};
pub const VkBindPipelineIndirectCommandNV = struct_VkBindPipelineIndirectCommandNV;
pub const PFN_vkGetPipelineIndirectMemoryRequirementsNV = ?*const fn (VkDevice, [*c]const VkComputePipelineCreateInfo, [*c]VkMemoryRequirements2) callconv(.C) void;
pub const PFN_vkCmdUpdatePipelineIndirectBufferNV = ?*const fn (VkCommandBuffer, VkPipelineBindPoint, VkPipeline) callconv(.C) void;
pub const PFN_vkGetPipelineIndirectDeviceAddressNV = ?*const fn (VkDevice, [*c]const VkPipelineIndirectDeviceAddressInfoNV) callconv(.C) VkDeviceAddress;
pub extern fn vkGetPipelineIndirectMemoryRequirementsNV(device: VkDevice, pCreateInfo: [*c]const VkComputePipelineCreateInfo, pMemoryRequirements: [*c]VkMemoryRequirements2) void;
pub extern fn vkCmdUpdatePipelineIndirectBufferNV(commandBuffer: VkCommandBuffer, pipelineBindPoint: VkPipelineBindPoint, pipeline: VkPipeline) void;
pub extern fn vkGetPipelineIndirectDeviceAddressNV(device: VkDevice, pInfo: [*c]const VkPipelineIndirectDeviceAddressInfoNV) VkDeviceAddress;
pub const struct_VkPhysicalDeviceLinearColorAttachmentFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    linearColorAttachment: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceLinearColorAttachmentFeaturesNV = struct_VkPhysicalDeviceLinearColorAttachmentFeaturesNV;
pub const struct_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    imageCompressionControlSwapchain: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT = struct_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT;
pub const struct_VkImageViewSampleWeightCreateInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    filterCenter: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
    filterSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    numPhases: u32 = @import("std").mem.zeroes(u32),
};
pub const VkImageViewSampleWeightCreateInfoQCOM = struct_VkImageViewSampleWeightCreateInfoQCOM;
pub const struct_VkPhysicalDeviceImageProcessingFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    textureSampleWeighted: VkBool32 = @import("std").mem.zeroes(VkBool32),
    textureBoxFilter: VkBool32 = @import("std").mem.zeroes(VkBool32),
    textureBlockMatch: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageProcessingFeaturesQCOM = struct_VkPhysicalDeviceImageProcessingFeaturesQCOM;
pub const struct_VkPhysicalDeviceImageProcessingPropertiesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxWeightFilterPhases: u32 = @import("std").mem.zeroes(u32),
    maxWeightFilterDimension: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxBlockMatchRegion: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    maxBoxFilterBlockSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkPhysicalDeviceImageProcessingPropertiesQCOM = struct_VkPhysicalDeviceImageProcessingPropertiesQCOM;
pub const struct_VkPhysicalDeviceNestedCommandBufferFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    nestedCommandBuffer: VkBool32 = @import("std").mem.zeroes(VkBool32),
    nestedCommandBufferRendering: VkBool32 = @import("std").mem.zeroes(VkBool32),
    nestedCommandBufferSimultaneousUse: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceNestedCommandBufferFeaturesEXT = struct_VkPhysicalDeviceNestedCommandBufferFeaturesEXT;
pub const struct_VkPhysicalDeviceNestedCommandBufferPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxCommandBufferNestingLevel: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceNestedCommandBufferPropertiesEXT = struct_VkPhysicalDeviceNestedCommandBufferPropertiesEXT;
pub const struct_VkExternalMemoryAcquireUnmodifiedEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    acquireUnmodifiedMemory: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkExternalMemoryAcquireUnmodifiedEXT = struct_VkExternalMemoryAcquireUnmodifiedEXT;
pub const struct_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    extendedDynamicState3TessellationDomainOrigin: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3DepthClampEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3PolygonMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3RasterizationSamples: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3SampleMask: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3AlphaToCoverageEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3AlphaToOneEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3LogicOpEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ColorBlendEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ColorBlendEquation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ColorWriteMask: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3RasterizationStream: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ConservativeRasterizationMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ExtraPrimitiveOverestimationSize: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3DepthClipEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3SampleLocationsEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ColorBlendAdvanced: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ProvokingVertexMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3LineRasterizationMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3LineStippleEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3DepthClipNegativeOneToOne: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ViewportWScalingEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ViewportSwizzle: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3CoverageToColorEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3CoverageToColorLocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3CoverageModulationMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3CoverageModulationTableEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3CoverageModulationTable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3CoverageReductionMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3RepresentativeFragmentTestEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
    extendedDynamicState3ShadingRateImageEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExtendedDynamicState3FeaturesEXT = struct_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT;
pub const struct_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dynamicPrimitiveTopologyUnrestricted: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExtendedDynamicState3PropertiesEXT = struct_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT;
pub const struct_VkColorBlendEquationEXT = extern struct {
    srcColorBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    dstColorBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    colorBlendOp: VkBlendOp = @import("std").mem.zeroes(VkBlendOp),
    srcAlphaBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    dstAlphaBlendFactor: VkBlendFactor = @import("std").mem.zeroes(VkBlendFactor),
    alphaBlendOp: VkBlendOp = @import("std").mem.zeroes(VkBlendOp),
};
pub const VkColorBlendEquationEXT = struct_VkColorBlendEquationEXT;
pub const struct_VkColorBlendAdvancedEXT = extern struct {
    advancedBlendOp: VkBlendOp = @import("std").mem.zeroes(VkBlendOp),
    srcPremultiplied: VkBool32 = @import("std").mem.zeroes(VkBool32),
    dstPremultiplied: VkBool32 = @import("std").mem.zeroes(VkBool32),
    blendOverlap: VkBlendOverlapEXT = @import("std").mem.zeroes(VkBlendOverlapEXT),
    clampResults: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkColorBlendAdvancedEXT = struct_VkColorBlendAdvancedEXT;
pub const PFN_vkCmdSetDepthClampEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetPolygonModeEXT = ?*const fn (VkCommandBuffer, VkPolygonMode) callconv(.C) void;
pub const PFN_vkCmdSetRasterizationSamplesEXT = ?*const fn (VkCommandBuffer, VkSampleCountFlagBits) callconv(.C) void;
pub const PFN_vkCmdSetSampleMaskEXT = ?*const fn (VkCommandBuffer, VkSampleCountFlagBits, [*c]const VkSampleMask) callconv(.C) void;
pub const PFN_vkCmdSetAlphaToCoverageEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetAlphaToOneEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetLogicOpEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetColorBlendEnableEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetColorBlendEquationEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkColorBlendEquationEXT) callconv(.C) void;
pub const PFN_vkCmdSetColorWriteMaskEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkColorComponentFlags) callconv(.C) void;
pub const PFN_vkCmdSetTessellationDomainOriginEXT = ?*const fn (VkCommandBuffer, VkTessellationDomainOrigin) callconv(.C) void;
pub const PFN_vkCmdSetRasterizationStreamEXT = ?*const fn (VkCommandBuffer, u32) callconv(.C) void;
pub const PFN_vkCmdSetConservativeRasterizationModeEXT = ?*const fn (VkCommandBuffer, VkConservativeRasterizationModeEXT) callconv(.C) void;
pub const PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT = ?*const fn (VkCommandBuffer, f32) callconv(.C) void;
pub const PFN_vkCmdSetDepthClipEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetSampleLocationsEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetColorBlendAdvancedEXT = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkColorBlendAdvancedEXT) callconv(.C) void;
pub const PFN_vkCmdSetProvokingVertexModeEXT = ?*const fn (VkCommandBuffer, VkProvokingVertexModeEXT) callconv(.C) void;
pub const PFN_vkCmdSetLineRasterizationModeEXT = ?*const fn (VkCommandBuffer, VkLineRasterizationModeEXT) callconv(.C) void;
pub const PFN_vkCmdSetLineStippleEnableEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetDepthClipNegativeOneToOneEXT = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetViewportWScalingEnableNV = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetViewportSwizzleNV = ?*const fn (VkCommandBuffer, u32, u32, [*c]const VkViewportSwizzleNV) callconv(.C) void;
pub const PFN_vkCmdSetCoverageToColorEnableNV = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetCoverageToColorLocationNV = ?*const fn (VkCommandBuffer, u32) callconv(.C) void;
pub const PFN_vkCmdSetCoverageModulationModeNV = ?*const fn (VkCommandBuffer, VkCoverageModulationModeNV) callconv(.C) void;
pub const PFN_vkCmdSetCoverageModulationTableEnableNV = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetCoverageModulationTableNV = ?*const fn (VkCommandBuffer, u32, [*c]const f32) callconv(.C) void;
pub const PFN_vkCmdSetShadingRateImageEnableNV = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetRepresentativeFragmentTestEnableNV = ?*const fn (VkCommandBuffer, VkBool32) callconv(.C) void;
pub const PFN_vkCmdSetCoverageReductionModeNV = ?*const fn (VkCommandBuffer, VkCoverageReductionModeNV) callconv(.C) void;
pub extern fn vkCmdSetDepthClampEnableEXT(commandBuffer: VkCommandBuffer, depthClampEnable: VkBool32) void;
pub extern fn vkCmdSetPolygonModeEXT(commandBuffer: VkCommandBuffer, polygonMode: VkPolygonMode) void;
pub extern fn vkCmdSetRasterizationSamplesEXT(commandBuffer: VkCommandBuffer, rasterizationSamples: VkSampleCountFlagBits) void;
pub extern fn vkCmdSetSampleMaskEXT(commandBuffer: VkCommandBuffer, samples: VkSampleCountFlagBits, pSampleMask: [*c]const VkSampleMask) void;
pub extern fn vkCmdSetAlphaToCoverageEnableEXT(commandBuffer: VkCommandBuffer, alphaToCoverageEnable: VkBool32) void;
pub extern fn vkCmdSetAlphaToOneEnableEXT(commandBuffer: VkCommandBuffer, alphaToOneEnable: VkBool32) void;
pub extern fn vkCmdSetLogicOpEnableEXT(commandBuffer: VkCommandBuffer, logicOpEnable: VkBool32) void;
pub extern fn vkCmdSetColorBlendEnableEXT(commandBuffer: VkCommandBuffer, firstAttachment: u32, attachmentCount: u32, pColorBlendEnables: [*c]const VkBool32) void;
pub extern fn vkCmdSetColorBlendEquationEXT(commandBuffer: VkCommandBuffer, firstAttachment: u32, attachmentCount: u32, pColorBlendEquations: [*c]const VkColorBlendEquationEXT) void;
pub extern fn vkCmdSetColorWriteMaskEXT(commandBuffer: VkCommandBuffer, firstAttachment: u32, attachmentCount: u32, pColorWriteMasks: [*c]const VkColorComponentFlags) void;
pub extern fn vkCmdSetTessellationDomainOriginEXT(commandBuffer: VkCommandBuffer, domainOrigin: VkTessellationDomainOrigin) void;
pub extern fn vkCmdSetRasterizationStreamEXT(commandBuffer: VkCommandBuffer, rasterizationStream: u32) void;
pub extern fn vkCmdSetConservativeRasterizationModeEXT(commandBuffer: VkCommandBuffer, conservativeRasterizationMode: VkConservativeRasterizationModeEXT) void;
pub extern fn vkCmdSetExtraPrimitiveOverestimationSizeEXT(commandBuffer: VkCommandBuffer, extraPrimitiveOverestimationSize: f32) void;
pub extern fn vkCmdSetDepthClipEnableEXT(commandBuffer: VkCommandBuffer, depthClipEnable: VkBool32) void;
pub extern fn vkCmdSetSampleLocationsEnableEXT(commandBuffer: VkCommandBuffer, sampleLocationsEnable: VkBool32) void;
pub extern fn vkCmdSetColorBlendAdvancedEXT(commandBuffer: VkCommandBuffer, firstAttachment: u32, attachmentCount: u32, pColorBlendAdvanced: [*c]const VkColorBlendAdvancedEXT) void;
pub extern fn vkCmdSetProvokingVertexModeEXT(commandBuffer: VkCommandBuffer, provokingVertexMode: VkProvokingVertexModeEXT) void;
pub extern fn vkCmdSetLineRasterizationModeEXT(commandBuffer: VkCommandBuffer, lineRasterizationMode: VkLineRasterizationModeEXT) void;
pub extern fn vkCmdSetLineStippleEnableEXT(commandBuffer: VkCommandBuffer, stippledLineEnable: VkBool32) void;
pub extern fn vkCmdSetDepthClipNegativeOneToOneEXT(commandBuffer: VkCommandBuffer, negativeOneToOne: VkBool32) void;
pub extern fn vkCmdSetViewportWScalingEnableNV(commandBuffer: VkCommandBuffer, viewportWScalingEnable: VkBool32) void;
pub extern fn vkCmdSetViewportSwizzleNV(commandBuffer: VkCommandBuffer, firstViewport: u32, viewportCount: u32, pViewportSwizzles: [*c]const VkViewportSwizzleNV) void;
pub extern fn vkCmdSetCoverageToColorEnableNV(commandBuffer: VkCommandBuffer, coverageToColorEnable: VkBool32) void;
pub extern fn vkCmdSetCoverageToColorLocationNV(commandBuffer: VkCommandBuffer, coverageToColorLocation: u32) void;
pub extern fn vkCmdSetCoverageModulationModeNV(commandBuffer: VkCommandBuffer, coverageModulationMode: VkCoverageModulationModeNV) void;
pub extern fn vkCmdSetCoverageModulationTableEnableNV(commandBuffer: VkCommandBuffer, coverageModulationTableEnable: VkBool32) void;
pub extern fn vkCmdSetCoverageModulationTableNV(commandBuffer: VkCommandBuffer, coverageModulationTableCount: u32, pCoverageModulationTable: [*c]const f32) void;
pub extern fn vkCmdSetShadingRateImageEnableNV(commandBuffer: VkCommandBuffer, shadingRateImageEnable: VkBool32) void;
pub extern fn vkCmdSetRepresentativeFragmentTestEnableNV(commandBuffer: VkCommandBuffer, representativeFragmentTestEnable: VkBool32) void;
pub extern fn vkCmdSetCoverageReductionModeNV(commandBuffer: VkCommandBuffer, coverageReductionMode: VkCoverageReductionModeNV) void;
pub const VK_SUBPASS_MERGE_STATUS_MERGED_EXT: c_int = 0;
pub const VK_SUBPASS_MERGE_STATUS_DISALLOWED_EXT: c_int = 1;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SIDE_EFFECTS_EXT: c_int = 2;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SAMPLES_MISMATCH_EXT: c_int = 3;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_VIEWS_MISMATCH_EXT: c_int = 4;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_ALIASING_EXT: c_int = 5;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPENDENCIES_EXT: c_int = 6;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT: c_int = 7;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT: c_int = 8;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INSUFFICIENT_STORAGE_EXT: c_int = 9;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT: c_int = 10;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT: c_int = 11;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SINGLE_SUBPASS_EXT: c_int = 12;
pub const VK_SUBPASS_MERGE_STATUS_NOT_MERGED_UNSPECIFIED_EXT: c_int = 13;
pub const VK_SUBPASS_MERGE_STATUS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkSubpassMergeStatusEXT = c_uint;
pub const VkSubpassMergeStatusEXT = enum_VkSubpassMergeStatusEXT;
pub const struct_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    subpassMergeFeedback: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT = struct_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT;
pub const struct_VkRenderPassCreationControlEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    disallowMerging: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkRenderPassCreationControlEXT = struct_VkRenderPassCreationControlEXT;
pub const struct_VkRenderPassCreationFeedbackInfoEXT = extern struct {
    postMergeSubpassCount: u32 = @import("std").mem.zeroes(u32),
};
pub const VkRenderPassCreationFeedbackInfoEXT = struct_VkRenderPassCreationFeedbackInfoEXT;
pub const struct_VkRenderPassCreationFeedbackCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pRenderPassFeedback: [*c]VkRenderPassCreationFeedbackInfoEXT = @import("std").mem.zeroes([*c]VkRenderPassCreationFeedbackInfoEXT),
};
pub const VkRenderPassCreationFeedbackCreateInfoEXT = struct_VkRenderPassCreationFeedbackCreateInfoEXT;
pub const struct_VkRenderPassSubpassFeedbackInfoEXT = extern struct {
    subpassMergeStatus: VkSubpassMergeStatusEXT = @import("std").mem.zeroes(VkSubpassMergeStatusEXT),
    description: [256]u8 = @import("std").mem.zeroes([256]u8),
    postMergeIndex: u32 = @import("std").mem.zeroes(u32),
};
pub const VkRenderPassSubpassFeedbackInfoEXT = struct_VkRenderPassSubpassFeedbackInfoEXT;
pub const struct_VkRenderPassSubpassFeedbackCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pSubpassFeedback: [*c]VkRenderPassSubpassFeedbackInfoEXT = @import("std").mem.zeroes([*c]VkRenderPassSubpassFeedbackInfoEXT),
};
pub const VkRenderPassSubpassFeedbackCreateInfoEXT = struct_VkRenderPassSubpassFeedbackCreateInfoEXT;
pub const VK_DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARG: c_int = 0;
pub const VK_DIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG: c_int = 1;
pub const VK_DIRECT_DRIVER_LOADING_MODE_MAX_ENUM_LUNARG: c_int = 2147483647;
pub const enum_VkDirectDriverLoadingModeLUNARG = c_uint;
pub const VkDirectDriverLoadingModeLUNARG = enum_VkDirectDriverLoadingModeLUNARG;
pub const VkDirectDriverLoadingFlagsLUNARG = VkFlags;
pub const PFN_vkGetInstanceProcAddrLUNARG = ?*const fn (VkInstance, [*c]const u8) callconv(.C) PFN_vkVoidFunction;
pub const struct_VkDirectDriverLoadingInfoLUNARG = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkDirectDriverLoadingFlagsLUNARG = @import("std").mem.zeroes(VkDirectDriverLoadingFlagsLUNARG),
    pfnGetInstanceProcAddr: PFN_vkGetInstanceProcAddrLUNARG = @import("std").mem.zeroes(PFN_vkGetInstanceProcAddrLUNARG),
};
pub const VkDirectDriverLoadingInfoLUNARG = struct_VkDirectDriverLoadingInfoLUNARG;
pub const struct_VkDirectDriverLoadingListLUNARG = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    mode: VkDirectDriverLoadingModeLUNARG = @import("std").mem.zeroes(VkDirectDriverLoadingModeLUNARG),
    driverCount: u32 = @import("std").mem.zeroes(u32),
    pDrivers: [*c]const VkDirectDriverLoadingInfoLUNARG = @import("std").mem.zeroes([*c]const VkDirectDriverLoadingInfoLUNARG),
};
pub const VkDirectDriverLoadingListLUNARG = struct_VkDirectDriverLoadingListLUNARG;
pub const struct_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderModuleIdentifier: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT = struct_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT;
pub const struct_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderModuleIdentifierAlgorithmUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT = struct_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT;
pub const struct_VkPipelineShaderStageModuleIdentifierCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    identifierSize: u32 = @import("std").mem.zeroes(u32),
    pIdentifier: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkPipelineShaderStageModuleIdentifierCreateInfoEXT = struct_VkPipelineShaderStageModuleIdentifierCreateInfoEXT;
pub const struct_VkShaderModuleIdentifierEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    identifierSize: u32 = @import("std").mem.zeroes(u32),
    identifier: [32]u8 = @import("std").mem.zeroes([32]u8),
};
pub const VkShaderModuleIdentifierEXT = struct_VkShaderModuleIdentifierEXT;
pub const PFN_vkGetShaderModuleIdentifierEXT = ?*const fn (VkDevice, VkShaderModule, [*c]VkShaderModuleIdentifierEXT) callconv(.C) void;
pub const PFN_vkGetShaderModuleCreateInfoIdentifierEXT = ?*const fn (VkDevice, [*c]const VkShaderModuleCreateInfo, [*c]VkShaderModuleIdentifierEXT) callconv(.C) void;
pub extern fn vkGetShaderModuleIdentifierEXT(device: VkDevice, shaderModule: VkShaderModule, pIdentifier: [*c]VkShaderModuleIdentifierEXT) void;
pub extern fn vkGetShaderModuleCreateInfoIdentifierEXT(device: VkDevice, pCreateInfo: [*c]const VkShaderModuleCreateInfo, pIdentifier: [*c]VkShaderModuleIdentifierEXT) void;
pub const struct_VkOpticalFlowSessionNV_T = opaque {};
pub const VkOpticalFlowSessionNV = ?*struct_VkOpticalFlowSessionNV_T;
pub const VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_UNKNOWN_NV: c_int = 0;
pub const VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_SLOW_NV: c_int = 1;
pub const VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MEDIUM_NV: c_int = 2;
pub const VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_FAST_NV: c_int = 3;
pub const VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOpticalFlowPerformanceLevelNV = c_uint;
pub const VkOpticalFlowPerformanceLevelNV = enum_VkOpticalFlowPerformanceLevelNV;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_UNKNOWN_NV: c_int = 0;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_INPUT_NV: c_int = 1;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_REFERENCE_NV: c_int = 2;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_HINT_NV: c_int = 3;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_FLOW_VECTOR_NV: c_int = 4;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_FLOW_VECTOR_NV: c_int = 5;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_COST_NV: c_int = 6;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_COST_NV: c_int = 7;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_GLOBAL_FLOW_NV: c_int = 8;
pub const VK_OPTICAL_FLOW_SESSION_BINDING_POINT_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOpticalFlowSessionBindingPointNV = c_uint;
pub const VkOpticalFlowSessionBindingPointNV = enum_VkOpticalFlowSessionBindingPointNV;
pub const VK_OPTICAL_FLOW_GRID_SIZE_UNKNOWN_NV: c_int = 0;
pub const VK_OPTICAL_FLOW_GRID_SIZE_1X1_BIT_NV: c_int = 1;
pub const VK_OPTICAL_FLOW_GRID_SIZE_2X2_BIT_NV: c_int = 2;
pub const VK_OPTICAL_FLOW_GRID_SIZE_4X4_BIT_NV: c_int = 4;
pub const VK_OPTICAL_FLOW_GRID_SIZE_8X8_BIT_NV: c_int = 8;
pub const VK_OPTICAL_FLOW_GRID_SIZE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOpticalFlowGridSizeFlagBitsNV = c_uint;
pub const VkOpticalFlowGridSizeFlagBitsNV = enum_VkOpticalFlowGridSizeFlagBitsNV;
pub const VkOpticalFlowGridSizeFlagsNV = VkFlags;
pub const VK_OPTICAL_FLOW_USAGE_UNKNOWN_NV: c_int = 0;
pub const VK_OPTICAL_FLOW_USAGE_INPUT_BIT_NV: c_int = 1;
pub const VK_OPTICAL_FLOW_USAGE_OUTPUT_BIT_NV: c_int = 2;
pub const VK_OPTICAL_FLOW_USAGE_HINT_BIT_NV: c_int = 4;
pub const VK_OPTICAL_FLOW_USAGE_COST_BIT_NV: c_int = 8;
pub const VK_OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV: c_int = 16;
pub const VK_OPTICAL_FLOW_USAGE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOpticalFlowUsageFlagBitsNV = c_uint;
pub const VkOpticalFlowUsageFlagBitsNV = enum_VkOpticalFlowUsageFlagBitsNV;
pub const VkOpticalFlowUsageFlagsNV = VkFlags;
pub const VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_HINT_BIT_NV: c_int = 1;
pub const VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_COST_BIT_NV: c_int = 2;
pub const VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_GLOBAL_FLOW_BIT_NV: c_int = 4;
pub const VK_OPTICAL_FLOW_SESSION_CREATE_ALLOW_REGIONS_BIT_NV: c_int = 8;
pub const VK_OPTICAL_FLOW_SESSION_CREATE_BOTH_DIRECTIONS_BIT_NV: c_int = 16;
pub const VK_OPTICAL_FLOW_SESSION_CREATE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOpticalFlowSessionCreateFlagBitsNV = c_uint;
pub const VkOpticalFlowSessionCreateFlagBitsNV = enum_VkOpticalFlowSessionCreateFlagBitsNV;
pub const VkOpticalFlowSessionCreateFlagsNV = VkFlags;
pub const VK_OPTICAL_FLOW_EXECUTE_DISABLE_TEMPORAL_HINTS_BIT_NV: c_int = 1;
pub const VK_OPTICAL_FLOW_EXECUTE_FLAG_BITS_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOpticalFlowExecuteFlagBitsNV = c_uint;
pub const VkOpticalFlowExecuteFlagBitsNV = enum_VkOpticalFlowExecuteFlagBitsNV;
pub const VkOpticalFlowExecuteFlagsNV = VkFlags;
pub const struct_VkPhysicalDeviceOpticalFlowFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    opticalFlow: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceOpticalFlowFeaturesNV = struct_VkPhysicalDeviceOpticalFlowFeaturesNV;
pub const struct_VkPhysicalDeviceOpticalFlowPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    supportedOutputGridSizes: VkOpticalFlowGridSizeFlagsNV = @import("std").mem.zeroes(VkOpticalFlowGridSizeFlagsNV),
    supportedHintGridSizes: VkOpticalFlowGridSizeFlagsNV = @import("std").mem.zeroes(VkOpticalFlowGridSizeFlagsNV),
    hintSupported: VkBool32 = @import("std").mem.zeroes(VkBool32),
    costSupported: VkBool32 = @import("std").mem.zeroes(VkBool32),
    bidirectionalFlowSupported: VkBool32 = @import("std").mem.zeroes(VkBool32),
    globalFlowSupported: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minWidth: u32 = @import("std").mem.zeroes(u32),
    minHeight: u32 = @import("std").mem.zeroes(u32),
    maxWidth: u32 = @import("std").mem.zeroes(u32),
    maxHeight: u32 = @import("std").mem.zeroes(u32),
    maxNumRegionsOfInterest: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceOpticalFlowPropertiesNV = struct_VkPhysicalDeviceOpticalFlowPropertiesNV;
pub const struct_VkOpticalFlowImageFormatInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    usage: VkOpticalFlowUsageFlagsNV = @import("std").mem.zeroes(VkOpticalFlowUsageFlagsNV),
};
pub const VkOpticalFlowImageFormatInfoNV = struct_VkOpticalFlowImageFormatInfoNV;
pub const struct_VkOpticalFlowImageFormatPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    format: VkFormat = @import("std").mem.zeroes(VkFormat),
};
pub const VkOpticalFlowImageFormatPropertiesNV = struct_VkOpticalFlowImageFormatPropertiesNV;
pub const struct_VkOpticalFlowSessionCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
    imageFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    flowVectorFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    costFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    outputGridSize: VkOpticalFlowGridSizeFlagsNV = @import("std").mem.zeroes(VkOpticalFlowGridSizeFlagsNV),
    hintGridSize: VkOpticalFlowGridSizeFlagsNV = @import("std").mem.zeroes(VkOpticalFlowGridSizeFlagsNV),
    performanceLevel: VkOpticalFlowPerformanceLevelNV = @import("std").mem.zeroes(VkOpticalFlowPerformanceLevelNV),
    flags: VkOpticalFlowSessionCreateFlagsNV = @import("std").mem.zeroes(VkOpticalFlowSessionCreateFlagsNV),
};
pub const VkOpticalFlowSessionCreateInfoNV = struct_VkOpticalFlowSessionCreateInfoNV;
pub const struct_VkOpticalFlowSessionCreatePrivateDataInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    id: u32 = @import("std").mem.zeroes(u32),
    size: u32 = @import("std").mem.zeroes(u32),
    pPrivateData: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkOpticalFlowSessionCreatePrivateDataInfoNV = struct_VkOpticalFlowSessionCreatePrivateDataInfoNV;
pub const struct_VkOpticalFlowExecuteInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    flags: VkOpticalFlowExecuteFlagsNV = @import("std").mem.zeroes(VkOpticalFlowExecuteFlagsNV),
    regionCount: u32 = @import("std").mem.zeroes(u32),
    pRegions: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkOpticalFlowExecuteInfoNV = struct_VkOpticalFlowExecuteInfoNV;
pub const PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV = ?*const fn (VkPhysicalDevice, [*c]const VkOpticalFlowImageFormatInfoNV, [*c]u32, [*c]VkOpticalFlowImageFormatPropertiesNV) callconv(.C) VkResult;
pub const PFN_vkCreateOpticalFlowSessionNV = ?*const fn (VkDevice, [*c]const VkOpticalFlowSessionCreateInfoNV, [*c]const VkAllocationCallbacks, [*c]VkOpticalFlowSessionNV) callconv(.C) VkResult;
pub const PFN_vkDestroyOpticalFlowSessionNV = ?*const fn (VkDevice, VkOpticalFlowSessionNV, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkBindOpticalFlowSessionImageNV = ?*const fn (VkDevice, VkOpticalFlowSessionNV, VkOpticalFlowSessionBindingPointNV, VkImageView, VkImageLayout) callconv(.C) VkResult;
pub const PFN_vkCmdOpticalFlowExecuteNV = ?*const fn (VkCommandBuffer, VkOpticalFlowSessionNV, [*c]const VkOpticalFlowExecuteInfoNV) callconv(.C) void;
pub extern fn vkGetPhysicalDeviceOpticalFlowImageFormatsNV(physicalDevice: VkPhysicalDevice, pOpticalFlowImageFormatInfo: [*c]const VkOpticalFlowImageFormatInfoNV, pFormatCount: [*c]u32, pImageFormatProperties: [*c]VkOpticalFlowImageFormatPropertiesNV) VkResult;
pub extern fn vkCreateOpticalFlowSessionNV(device: VkDevice, pCreateInfo: [*c]const VkOpticalFlowSessionCreateInfoNV, pAllocator: [*c]const VkAllocationCallbacks, pSession: [*c]VkOpticalFlowSessionNV) VkResult;
pub extern fn vkDestroyOpticalFlowSessionNV(device: VkDevice, session: VkOpticalFlowSessionNV, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkBindOpticalFlowSessionImageNV(device: VkDevice, session: VkOpticalFlowSessionNV, bindingPoint: VkOpticalFlowSessionBindingPointNV, view: VkImageView, layout: VkImageLayout) VkResult;
pub extern fn vkCmdOpticalFlowExecuteNV(commandBuffer: VkCommandBuffer, session: VkOpticalFlowSessionNV, pExecuteInfo: [*c]const VkOpticalFlowExecuteInfoNV) void;
pub const struct_VkPhysicalDeviceLegacyDitheringFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    legacyDithering: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceLegacyDitheringFeaturesEXT = struct_VkPhysicalDeviceLegacyDitheringFeaturesEXT;
pub const struct_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineProtectedAccess: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePipelineProtectedAccessFeaturesEXT = struct_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT;
pub const struct_VkShaderEXT_T = opaque {};
pub const VkShaderEXT = ?*struct_VkShaderEXT_T;
pub const VK_SHADER_CODE_TYPE_BINARY_EXT: c_int = 0;
pub const VK_SHADER_CODE_TYPE_SPIRV_EXT: c_int = 1;
pub const VK_SHADER_CODE_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkShaderCodeTypeEXT = c_uint;
pub const VkShaderCodeTypeEXT = enum_VkShaderCodeTypeEXT;
pub const VK_SHADER_CREATE_LINK_STAGE_BIT_EXT: c_int = 1;
pub const VK_SHADER_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT: c_int = 2;
pub const VK_SHADER_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT: c_int = 4;
pub const VK_SHADER_CREATE_NO_TASK_SHADER_BIT_EXT: c_int = 8;
pub const VK_SHADER_CREATE_DISPATCH_BASE_BIT_EXT: c_int = 16;
pub const VK_SHADER_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_EXT: c_int = 32;
pub const VK_SHADER_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT: c_int = 64;
pub const VK_SHADER_CREATE_FLAG_BITS_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkShaderCreateFlagBitsEXT = c_uint;
pub const VkShaderCreateFlagBitsEXT = enum_VkShaderCreateFlagBitsEXT;
pub const VkShaderCreateFlagsEXT = VkFlags;
pub const struct_VkPhysicalDeviceShaderObjectFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderObject: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderObjectFeaturesEXT = struct_VkPhysicalDeviceShaderObjectFeaturesEXT;
pub const struct_VkPhysicalDeviceShaderObjectPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderBinaryUUID: [16]u8 = @import("std").mem.zeroes([16]u8),
    shaderBinaryVersion: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShaderObjectPropertiesEXT = struct_VkPhysicalDeviceShaderObjectPropertiesEXT;
pub const struct_VkShaderCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkShaderCreateFlagsEXT = @import("std").mem.zeroes(VkShaderCreateFlagsEXT),
    stage: VkShaderStageFlagBits = @import("std").mem.zeroes(VkShaderStageFlagBits),
    nextStage: VkShaderStageFlags = @import("std").mem.zeroes(VkShaderStageFlags),
    codeType: VkShaderCodeTypeEXT = @import("std").mem.zeroes(VkShaderCodeTypeEXT),
    codeSize: usize = @import("std").mem.zeroes(usize),
    pCode: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    setLayoutCount: u32 = @import("std").mem.zeroes(u32),
    pSetLayouts: [*c]const VkDescriptorSetLayout = @import("std").mem.zeroes([*c]const VkDescriptorSetLayout),
    pushConstantRangeCount: u32 = @import("std").mem.zeroes(u32),
    pPushConstantRanges: [*c]const VkPushConstantRange = @import("std").mem.zeroes([*c]const VkPushConstantRange),
    pSpecializationInfo: [*c]const VkSpecializationInfo = @import("std").mem.zeroes([*c]const VkSpecializationInfo),
};
pub const VkShaderCreateInfoEXT = struct_VkShaderCreateInfoEXT;
pub const VkShaderRequiredSubgroupSizeCreateInfoEXT = VkPipelineShaderStageRequiredSubgroupSizeCreateInfo;
pub const PFN_vkCreateShadersEXT = ?*const fn (VkDevice, u32, [*c]const VkShaderCreateInfoEXT, [*c]const VkAllocationCallbacks, [*c]VkShaderEXT) callconv(.C) VkResult;
pub const PFN_vkDestroyShaderEXT = ?*const fn (VkDevice, VkShaderEXT, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkGetShaderBinaryDataEXT = ?*const fn (VkDevice, VkShaderEXT, [*c]usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkCmdBindShadersEXT = ?*const fn (VkCommandBuffer, u32, [*c]const VkShaderStageFlagBits, [*c]const VkShaderEXT) callconv(.C) void;
pub extern fn vkCreateShadersEXT(device: VkDevice, createInfoCount: u32, pCreateInfos: [*c]const VkShaderCreateInfoEXT, pAllocator: [*c]const VkAllocationCallbacks, pShaders: [*c]VkShaderEXT) VkResult;
pub extern fn vkDestroyShaderEXT(device: VkDevice, shader: VkShaderEXT, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkGetShaderBinaryDataEXT(device: VkDevice, shader: VkShaderEXT, pDataSize: [*c]usize, pData: ?*anyopaque) VkResult;
pub extern fn vkCmdBindShadersEXT(commandBuffer: VkCommandBuffer, stageCount: u32, pStages: [*c]const VkShaderStageFlagBits, pShaders: [*c]const VkShaderEXT) void;
pub const struct_VkPhysicalDeviceTilePropertiesFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    tileProperties: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceTilePropertiesFeaturesQCOM = struct_VkPhysicalDeviceTilePropertiesFeaturesQCOM;
pub const struct_VkTilePropertiesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    tileSize: VkExtent3D = @import("std").mem.zeroes(VkExtent3D),
    apronSize: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    origin: VkOffset2D = @import("std").mem.zeroes(VkOffset2D),
};
pub const VkTilePropertiesQCOM = struct_VkTilePropertiesQCOM;
pub const PFN_vkGetFramebufferTilePropertiesQCOM = ?*const fn (VkDevice, VkFramebuffer, [*c]u32, [*c]VkTilePropertiesQCOM) callconv(.C) VkResult;
pub const PFN_vkGetDynamicRenderingTilePropertiesQCOM = ?*const fn (VkDevice, [*c]const VkRenderingInfo, [*c]VkTilePropertiesQCOM) callconv(.C) VkResult;
pub extern fn vkGetFramebufferTilePropertiesQCOM(device: VkDevice, framebuffer: VkFramebuffer, pPropertiesCount: [*c]u32, pProperties: [*c]VkTilePropertiesQCOM) VkResult;
pub extern fn vkGetDynamicRenderingTilePropertiesQCOM(device: VkDevice, pRenderingInfo: [*c]const VkRenderingInfo, pProperties: [*c]VkTilePropertiesQCOM) VkResult;
pub const struct_VkPhysicalDeviceAmigoProfilingFeaturesSEC = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    amigoProfiling: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceAmigoProfilingFeaturesSEC = struct_VkPhysicalDeviceAmigoProfilingFeaturesSEC;
pub const struct_VkAmigoProfilingSubmitInfoSEC = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    firstDrawTimestamp: u64 = @import("std").mem.zeroes(u64),
    swapBufferTimestamp: u64 = @import("std").mem.zeroes(u64),
};
pub const VkAmigoProfilingSubmitInfoSEC = struct_VkAmigoProfilingSubmitInfoSEC;
pub const struct_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    multiviewPerViewViewports: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM = struct_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM;
pub const VK_RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NV: c_int = 0;
pub const VK_RAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV: c_int = 1;
pub const VK_RAY_TRACING_INVOCATION_REORDER_MODE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkRayTracingInvocationReorderModeNV = c_uint;
pub const VkRayTracingInvocationReorderModeNV = enum_VkRayTracingInvocationReorderModeNV;
pub const struct_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingInvocationReorderReorderingHint: VkRayTracingInvocationReorderModeNV = @import("std").mem.zeroes(VkRayTracingInvocationReorderModeNV),
};
pub const VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV = struct_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV;
pub const struct_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingInvocationReorder: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV = struct_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV;
pub const struct_VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    extendedSparseAddressSpace: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV = struct_VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV;
pub const struct_VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    extendedSparseAddressSpaceSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    extendedSparseImageUsageFlags: VkImageUsageFlags = @import("std").mem.zeroes(VkImageUsageFlags),
    extendedSparseBufferUsageFlags: VkBufferUsageFlags = @import("std").mem.zeroes(VkBufferUsageFlags),
};
pub const VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV = struct_VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV;
pub const VK_LAYER_SETTING_TYPE_BOOL32_EXT: c_int = 0;
pub const VK_LAYER_SETTING_TYPE_INT32_EXT: c_int = 1;
pub const VK_LAYER_SETTING_TYPE_INT64_EXT: c_int = 2;
pub const VK_LAYER_SETTING_TYPE_UINT32_EXT: c_int = 3;
pub const VK_LAYER_SETTING_TYPE_UINT64_EXT: c_int = 4;
pub const VK_LAYER_SETTING_TYPE_FLOAT32_EXT: c_int = 5;
pub const VK_LAYER_SETTING_TYPE_FLOAT64_EXT: c_int = 6;
pub const VK_LAYER_SETTING_TYPE_STRING_EXT: c_int = 7;
pub const VK_LAYER_SETTING_TYPE_MAX_ENUM_EXT: c_int = 2147483647;
pub const enum_VkLayerSettingTypeEXT = c_uint;
pub const VkLayerSettingTypeEXT = enum_VkLayerSettingTypeEXT;
pub const struct_VkLayerSettingEXT = extern struct {
    pLayerName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    pSettingName: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    type: VkLayerSettingTypeEXT = @import("std").mem.zeroes(VkLayerSettingTypeEXT),
    valueCount: u32 = @import("std").mem.zeroes(u32),
    pValues: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkLayerSettingEXT = struct_VkLayerSettingEXT;
pub const struct_VkLayerSettingsCreateInfoEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    settingCount: u32 = @import("std").mem.zeroes(u32),
    pSettings: [*c]const VkLayerSettingEXT = @import("std").mem.zeroes([*c]const VkLayerSettingEXT),
};
pub const VkLayerSettingsCreateInfoEXT = struct_VkLayerSettingsCreateInfoEXT;
pub const struct_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderCoreBuiltins: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM = struct_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM;
pub const struct_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderCoreMask: u64 = @import("std").mem.zeroes(u64),
    shaderCoreCount: u32 = @import("std").mem.zeroes(u32),
    shaderWarpsPerCore: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM = struct_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM;
pub const struct_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    pipelineLibraryGroupHandles: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT = struct_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT;
pub const struct_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dynamicRenderingUnusedAttachments: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT = struct_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT;
pub const VK_LATENCY_MARKER_SIMULATION_START_NV: c_int = 0;
pub const VK_LATENCY_MARKER_SIMULATION_END_NV: c_int = 1;
pub const VK_LATENCY_MARKER_RENDERSUBMIT_START_NV: c_int = 2;
pub const VK_LATENCY_MARKER_RENDERSUBMIT_END_NV: c_int = 3;
pub const VK_LATENCY_MARKER_PRESENT_START_NV: c_int = 4;
pub const VK_LATENCY_MARKER_PRESENT_END_NV: c_int = 5;
pub const VK_LATENCY_MARKER_INPUT_SAMPLE_NV: c_int = 6;
pub const VK_LATENCY_MARKER_TRIGGER_FLASH_NV: c_int = 7;
pub const VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NV: c_int = 8;
pub const VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NV: c_int = 9;
pub const VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NV: c_int = 10;
pub const VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV: c_int = 11;
pub const VK_LATENCY_MARKER_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkLatencyMarkerNV = c_uint;
pub const VkLatencyMarkerNV = enum_VkLatencyMarkerNV;
pub const VK_OUT_OF_BAND_QUEUE_TYPE_RENDER_NV: c_int = 0;
pub const VK_OUT_OF_BAND_QUEUE_TYPE_PRESENT_NV: c_int = 1;
pub const VK_OUT_OF_BAND_QUEUE_TYPE_MAX_ENUM_NV: c_int = 2147483647;
pub const enum_VkOutOfBandQueueTypeNV = c_uint;
pub const VkOutOfBandQueueTypeNV = enum_VkOutOfBandQueueTypeNV;
pub const struct_VkLatencySleepModeInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    lowLatencyMode: VkBool32 = @import("std").mem.zeroes(VkBool32),
    lowLatencyBoost: VkBool32 = @import("std").mem.zeroes(VkBool32),
    minimumIntervalUs: u32 = @import("std").mem.zeroes(u32),
};
pub const VkLatencySleepModeInfoNV = struct_VkLatencySleepModeInfoNV;
pub const struct_VkLatencySleepInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    signalSemaphore: VkSemaphore = @import("std").mem.zeroes(VkSemaphore),
    value: u64 = @import("std").mem.zeroes(u64),
};
pub const VkLatencySleepInfoNV = struct_VkLatencySleepInfoNV;
pub const struct_VkSetLatencyMarkerInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    presentID: u64 = @import("std").mem.zeroes(u64),
    marker: VkLatencyMarkerNV = @import("std").mem.zeroes(VkLatencyMarkerNV),
};
pub const VkSetLatencyMarkerInfoNV = struct_VkSetLatencyMarkerInfoNV;
pub const struct_VkLatencyTimingsFrameReportNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    presentID: u64 = @import("std").mem.zeroes(u64),
    inputSampleTimeUs: u64 = @import("std").mem.zeroes(u64),
    simStartTimeUs: u64 = @import("std").mem.zeroes(u64),
    simEndTimeUs: u64 = @import("std").mem.zeroes(u64),
    renderSubmitStartTimeUs: u64 = @import("std").mem.zeroes(u64),
    renderSubmitEndTimeUs: u64 = @import("std").mem.zeroes(u64),
    presentStartTimeUs: u64 = @import("std").mem.zeroes(u64),
    presentEndTimeUs: u64 = @import("std").mem.zeroes(u64),
    driverStartTimeUs: u64 = @import("std").mem.zeroes(u64),
    driverEndTimeUs: u64 = @import("std").mem.zeroes(u64),
    osRenderQueueStartTimeUs: u64 = @import("std").mem.zeroes(u64),
    osRenderQueueEndTimeUs: u64 = @import("std").mem.zeroes(u64),
    gpuRenderStartTimeUs: u64 = @import("std").mem.zeroes(u64),
    gpuRenderEndTimeUs: u64 = @import("std").mem.zeroes(u64),
};
pub const VkLatencyTimingsFrameReportNV = struct_VkLatencyTimingsFrameReportNV;
pub const struct_VkGetLatencyMarkerInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    timingCount: u32 = @import("std").mem.zeroes(u32),
    pTimings: [*c]VkLatencyTimingsFrameReportNV = @import("std").mem.zeroes([*c]VkLatencyTimingsFrameReportNV),
};
pub const VkGetLatencyMarkerInfoNV = struct_VkGetLatencyMarkerInfoNV;
pub const struct_VkLatencySubmissionPresentIdNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    presentID: u64 = @import("std").mem.zeroes(u64),
};
pub const VkLatencySubmissionPresentIdNV = struct_VkLatencySubmissionPresentIdNV;
pub const struct_VkSwapchainLatencyCreateInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    latencyModeEnable: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSwapchainLatencyCreateInfoNV = struct_VkSwapchainLatencyCreateInfoNV;
pub const struct_VkOutOfBandQueueTypeInfoNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    queueType: VkOutOfBandQueueTypeNV = @import("std").mem.zeroes(VkOutOfBandQueueTypeNV),
};
pub const VkOutOfBandQueueTypeInfoNV = struct_VkOutOfBandQueueTypeInfoNV;
pub const struct_VkLatencySurfaceCapabilitiesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    presentModeCount: u32 = @import("std").mem.zeroes(u32),
    pPresentModes: [*c]VkPresentModeKHR = @import("std").mem.zeroes([*c]VkPresentModeKHR),
};
pub const VkLatencySurfaceCapabilitiesNV = struct_VkLatencySurfaceCapabilitiesNV;
pub const PFN_vkSetLatencySleepModeNV = ?*const fn (VkDevice, VkSwapchainKHR, [*c]const VkLatencySleepModeInfoNV) callconv(.C) VkResult;
pub const PFN_vkLatencySleepNV = ?*const fn (VkDevice, VkSwapchainKHR, [*c]const VkLatencySleepInfoNV) callconv(.C) VkResult;
pub const PFN_vkSetLatencyMarkerNV = ?*const fn (VkDevice, VkSwapchainKHR, [*c]const VkSetLatencyMarkerInfoNV) callconv(.C) void;
pub const PFN_vkGetLatencyTimingsNV = ?*const fn (VkDevice, VkSwapchainKHR, [*c]VkGetLatencyMarkerInfoNV) callconv(.C) void;
pub const PFN_vkQueueNotifyOutOfBandNV = ?*const fn (VkQueue, [*c]const VkOutOfBandQueueTypeInfoNV) callconv(.C) void;
pub extern fn vkSetLatencySleepModeNV(device: VkDevice, swapchain: VkSwapchainKHR, pSleepModeInfo: [*c]const VkLatencySleepModeInfoNV) VkResult;
pub extern fn vkLatencySleepNV(device: VkDevice, swapchain: VkSwapchainKHR, pSleepInfo: [*c]const VkLatencySleepInfoNV) VkResult;
pub extern fn vkSetLatencyMarkerNV(device: VkDevice, swapchain: VkSwapchainKHR, pLatencyMarkerInfo: [*c]const VkSetLatencyMarkerInfoNV) void;
pub extern fn vkGetLatencyTimingsNV(device: VkDevice, swapchain: VkSwapchainKHR, pLatencyMarkerInfo: [*c]VkGetLatencyMarkerInfoNV) void;
pub extern fn vkQueueNotifyOutOfBandNV(queue: VkQueue, pQueueTypeInfo: [*c]const VkOutOfBandQueueTypeInfoNV) void;
pub const struct_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    multiviewPerViewRenderAreas: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM = struct_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM;
pub const struct_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    perViewRenderAreaCount: u32 = @import("std").mem.zeroes(u32),
    pPerViewRenderAreas: [*c]const VkRect2D = @import("std").mem.zeroes([*c]const VkRect2D),
};
pub const VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM = struct_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM;
pub const struct_VkPhysicalDevicePerStageDescriptorSetFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    perStageDescriptorSet: VkBool32 = @import("std").mem.zeroes(VkBool32),
    dynamicPipelineLayout: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDevicePerStageDescriptorSetFeaturesNV = struct_VkPhysicalDevicePerStageDescriptorSetFeaturesNV;
pub const VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MIN_QCOM: c_int = 0;
pub const VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_QCOM: c_int = 1;
pub const VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_ENUM_QCOM: c_int = 2147483647;
pub const enum_VkBlockMatchWindowCompareModeQCOM = c_uint;
pub const VkBlockMatchWindowCompareModeQCOM = enum_VkBlockMatchWindowCompareModeQCOM;
pub const struct_VkPhysicalDeviceImageProcessing2FeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    textureBlockMatch2: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceImageProcessing2FeaturesQCOM = struct_VkPhysicalDeviceImageProcessing2FeaturesQCOM;
pub const struct_VkPhysicalDeviceImageProcessing2PropertiesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxBlockMatchWindow: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
};
pub const VkPhysicalDeviceImageProcessing2PropertiesQCOM = struct_VkPhysicalDeviceImageProcessing2PropertiesQCOM;
pub const struct_VkSamplerBlockMatchWindowCreateInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    windowExtent: VkExtent2D = @import("std").mem.zeroes(VkExtent2D),
    windowCompareMode: VkBlockMatchWindowCompareModeQCOM = @import("std").mem.zeroes(VkBlockMatchWindowCompareModeQCOM),
};
pub const VkSamplerBlockMatchWindowCreateInfoQCOM = struct_VkSamplerBlockMatchWindowCreateInfoQCOM;
pub const VK_CUBIC_FILTER_WEIGHTS_CATMULL_ROM_QCOM: c_int = 0;
pub const VK_CUBIC_FILTER_WEIGHTS_ZERO_TANGENT_CARDINAL_QCOM: c_int = 1;
pub const VK_CUBIC_FILTER_WEIGHTS_B_SPLINE_QCOM: c_int = 2;
pub const VK_CUBIC_FILTER_WEIGHTS_MITCHELL_NETRAVALI_QCOM: c_int = 3;
pub const VK_CUBIC_FILTER_WEIGHTS_MAX_ENUM_QCOM: c_int = 2147483647;
pub const enum_VkCubicFilterWeightsQCOM = c_uint;
pub const VkCubicFilterWeightsQCOM = enum_VkCubicFilterWeightsQCOM;
pub const struct_VkPhysicalDeviceCubicWeightsFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    selectableCubicWeights: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCubicWeightsFeaturesQCOM = struct_VkPhysicalDeviceCubicWeightsFeaturesQCOM;
pub const struct_VkSamplerCubicWeightsCreateInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    cubicWeights: VkCubicFilterWeightsQCOM = @import("std").mem.zeroes(VkCubicFilterWeightsQCOM),
};
pub const VkSamplerCubicWeightsCreateInfoQCOM = struct_VkSamplerCubicWeightsCreateInfoQCOM;
pub const struct_VkBlitImageCubicWeightsInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    cubicWeights: VkCubicFilterWeightsQCOM = @import("std").mem.zeroes(VkCubicFilterWeightsQCOM),
};
pub const VkBlitImageCubicWeightsInfoQCOM = struct_VkBlitImageCubicWeightsInfoQCOM;
pub const struct_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    ycbcrDegamma: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceYcbcrDegammaFeaturesQCOM = struct_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM;
pub const struct_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    enableYDegamma: VkBool32 = @import("std").mem.zeroes(VkBool32),
    enableCbCrDegamma: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM = struct_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM;
pub const struct_VkPhysicalDeviceCubicClampFeaturesQCOM = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    cubicRangeClamp: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceCubicClampFeaturesQCOM = struct_VkPhysicalDeviceCubicClampFeaturesQCOM;
pub const struct_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    attachmentFeedbackLoopDynamicState: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT = struct_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT;
pub const PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT = ?*const fn (VkCommandBuffer, VkImageAspectFlags) callconv(.C) void;
pub extern fn vkCmdSetAttachmentFeedbackLoopEnableEXT(commandBuffer: VkCommandBuffer, aspectMask: VkImageAspectFlags) void;
pub const VK_LAYERED_DRIVER_UNDERLYING_API_NONE_MSFT: c_int = 0;
pub const VK_LAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT: c_int = 1;
pub const VK_LAYERED_DRIVER_UNDERLYING_API_MAX_ENUM_MSFT: c_int = 2147483647;
pub const enum_VkLayeredDriverUnderlyingApiMSFT = c_uint;
pub const VkLayeredDriverUnderlyingApiMSFT = enum_VkLayeredDriverUnderlyingApiMSFT;
pub const struct_VkPhysicalDeviceLayeredDriverPropertiesMSFT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    underlyingAPI: VkLayeredDriverUnderlyingApiMSFT = @import("std").mem.zeroes(VkLayeredDriverUnderlyingApiMSFT),
};
pub const VkPhysicalDeviceLayeredDriverPropertiesMSFT = struct_VkPhysicalDeviceLayeredDriverPropertiesMSFT;
pub const struct_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    descriptorPoolOverallocation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV = struct_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV;
pub const struct_VkPhysicalDeviceRawAccessChainsFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderRawAccessChains: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRawAccessChainsFeaturesNV = struct_VkPhysicalDeviceRawAccessChainsFeaturesNV;
pub const struct_VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderFloat16VectorAtomics: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV = struct_VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV;
pub const struct_VkPhysicalDeviceRayTracingValidationFeaturesNV = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingValidation: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayTracingValidationFeaturesNV = struct_VkPhysicalDeviceRayTracingValidationFeaturesNV;
pub const VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR: c_int = 0;
pub const VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR: c_int = 1;
pub const VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkBuildAccelerationStructureModeKHR = c_uint;
pub const VkBuildAccelerationStructureModeKHR = enum_VkBuildAccelerationStructureModeKHR;
pub const VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR: c_int = 1;
pub const VK_ACCELERATION_STRUCTURE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT: c_int = 8;
pub const VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV: c_int = 4;
pub const VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkAccelerationStructureCreateFlagBitsKHR = c_uint;
pub const VkAccelerationStructureCreateFlagBitsKHR = enum_VkAccelerationStructureCreateFlagBitsKHR;
pub const VkAccelerationStructureCreateFlagsKHR = VkFlags;
pub const struct_VkAccelerationStructureBuildRangeInfoKHR = extern struct {
    primitiveCount: u32 = @import("std").mem.zeroes(u32),
    primitiveOffset: u32 = @import("std").mem.zeroes(u32),
    firstVertex: u32 = @import("std").mem.zeroes(u32),
    transformOffset: u32 = @import("std").mem.zeroes(u32),
};
pub const VkAccelerationStructureBuildRangeInfoKHR = struct_VkAccelerationStructureBuildRangeInfoKHR;
pub const struct_VkAccelerationStructureGeometryTrianglesDataKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    vertexFormat: VkFormat = @import("std").mem.zeroes(VkFormat),
    vertexData: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    vertexStride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    maxVertex: u32 = @import("std").mem.zeroes(u32),
    indexType: VkIndexType = @import("std").mem.zeroes(VkIndexType),
    indexData: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    transformData: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
};
pub const VkAccelerationStructureGeometryTrianglesDataKHR = struct_VkAccelerationStructureGeometryTrianglesDataKHR;
pub const struct_VkAccelerationStructureGeometryAabbsDataKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    data: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    stride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkAccelerationStructureGeometryAabbsDataKHR = struct_VkAccelerationStructureGeometryAabbsDataKHR;
pub const struct_VkAccelerationStructureGeometryInstancesDataKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    arrayOfPointers: VkBool32 = @import("std").mem.zeroes(VkBool32),
    data: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
};
pub const VkAccelerationStructureGeometryInstancesDataKHR = struct_VkAccelerationStructureGeometryInstancesDataKHR;
pub const union_VkAccelerationStructureGeometryDataKHR = extern union {
    triangles: VkAccelerationStructureGeometryTrianglesDataKHR,
    aabbs: VkAccelerationStructureGeometryAabbsDataKHR,
    instances: VkAccelerationStructureGeometryInstancesDataKHR,
};
pub const VkAccelerationStructureGeometryDataKHR = union_VkAccelerationStructureGeometryDataKHR;
pub const struct_VkAccelerationStructureGeometryKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    geometryType: VkGeometryTypeKHR = @import("std").mem.zeroes(VkGeometryTypeKHR),
    geometry: VkAccelerationStructureGeometryDataKHR = @import("std").mem.zeroes(VkAccelerationStructureGeometryDataKHR),
    flags: VkGeometryFlagsKHR = @import("std").mem.zeroes(VkGeometryFlagsKHR),
};
pub const VkAccelerationStructureGeometryKHR = struct_VkAccelerationStructureGeometryKHR;
pub const struct_VkAccelerationStructureBuildGeometryInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkAccelerationStructureTypeKHR = @import("std").mem.zeroes(VkAccelerationStructureTypeKHR),
    flags: VkBuildAccelerationStructureFlagsKHR = @import("std").mem.zeroes(VkBuildAccelerationStructureFlagsKHR),
    mode: VkBuildAccelerationStructureModeKHR = @import("std").mem.zeroes(VkBuildAccelerationStructureModeKHR),
    srcAccelerationStructure: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    dstAccelerationStructure: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    geometryCount: u32 = @import("std").mem.zeroes(u32),
    pGeometries: [*c]const VkAccelerationStructureGeometryKHR = @import("std").mem.zeroes([*c]const VkAccelerationStructureGeometryKHR),
    ppGeometries: [*c]const [*c]const VkAccelerationStructureGeometryKHR = @import("std").mem.zeroes([*c]const [*c]const VkAccelerationStructureGeometryKHR),
    scratchData: VkDeviceOrHostAddressKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressKHR),
};
pub const VkAccelerationStructureBuildGeometryInfoKHR = struct_VkAccelerationStructureBuildGeometryInfoKHR;
pub const struct_VkAccelerationStructureCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    createFlags: VkAccelerationStructureCreateFlagsKHR = @import("std").mem.zeroes(VkAccelerationStructureCreateFlagsKHR),
    buffer: VkBuffer = @import("std").mem.zeroes(VkBuffer),
    offset: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    type: VkAccelerationStructureTypeKHR = @import("std").mem.zeroes(VkAccelerationStructureTypeKHR),
    deviceAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
};
pub const VkAccelerationStructureCreateInfoKHR = struct_VkAccelerationStructureCreateInfoKHR;
pub const struct_VkWriteDescriptorSetAccelerationStructureKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    accelerationStructureCount: u32 = @import("std").mem.zeroes(u32),
    pAccelerationStructures: [*c]const VkAccelerationStructureKHR = @import("std").mem.zeroes([*c]const VkAccelerationStructureKHR),
};
pub const VkWriteDescriptorSetAccelerationStructureKHR = struct_VkWriteDescriptorSetAccelerationStructureKHR;
pub const struct_VkPhysicalDeviceAccelerationStructureFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    accelerationStructure: VkBool32 = @import("std").mem.zeroes(VkBool32),
    accelerationStructureCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    accelerationStructureIndirectBuild: VkBool32 = @import("std").mem.zeroes(VkBool32),
    accelerationStructureHostCommands: VkBool32 = @import("std").mem.zeroes(VkBool32),
    descriptorBindingAccelerationStructureUpdateAfterBind: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceAccelerationStructureFeaturesKHR = struct_VkPhysicalDeviceAccelerationStructureFeaturesKHR;
pub const struct_VkPhysicalDeviceAccelerationStructurePropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxGeometryCount: u64 = @import("std").mem.zeroes(u64),
    maxInstanceCount: u64 = @import("std").mem.zeroes(u64),
    maxPrimitiveCount: u64 = @import("std").mem.zeroes(u64),
    maxPerStageDescriptorAccelerationStructures: u32 = @import("std").mem.zeroes(u32),
    maxPerStageDescriptorUpdateAfterBindAccelerationStructures: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetAccelerationStructures: u32 = @import("std").mem.zeroes(u32),
    maxDescriptorSetUpdateAfterBindAccelerationStructures: u32 = @import("std").mem.zeroes(u32),
    minAccelerationStructureScratchOffsetAlignment: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceAccelerationStructurePropertiesKHR = struct_VkPhysicalDeviceAccelerationStructurePropertiesKHR;
pub const struct_VkAccelerationStructureDeviceAddressInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    accelerationStructure: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
};
pub const VkAccelerationStructureDeviceAddressInfoKHR = struct_VkAccelerationStructureDeviceAddressInfoKHR;
pub const struct_VkAccelerationStructureVersionInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    pVersionData: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const VkAccelerationStructureVersionInfoKHR = struct_VkAccelerationStructureVersionInfoKHR;
pub const struct_VkCopyAccelerationStructureToMemoryInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    src: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    dst: VkDeviceOrHostAddressKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressKHR),
    mode: VkCopyAccelerationStructureModeKHR = @import("std").mem.zeroes(VkCopyAccelerationStructureModeKHR),
};
pub const VkCopyAccelerationStructureToMemoryInfoKHR = struct_VkCopyAccelerationStructureToMemoryInfoKHR;
pub const struct_VkCopyMemoryToAccelerationStructureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    src: VkDeviceOrHostAddressConstKHR = @import("std").mem.zeroes(VkDeviceOrHostAddressConstKHR),
    dst: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    mode: VkCopyAccelerationStructureModeKHR = @import("std").mem.zeroes(VkCopyAccelerationStructureModeKHR),
};
pub const VkCopyMemoryToAccelerationStructureInfoKHR = struct_VkCopyMemoryToAccelerationStructureInfoKHR;
pub const struct_VkCopyAccelerationStructureInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    src: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    dst: VkAccelerationStructureKHR = @import("std").mem.zeroes(VkAccelerationStructureKHR),
    mode: VkCopyAccelerationStructureModeKHR = @import("std").mem.zeroes(VkCopyAccelerationStructureModeKHR),
};
pub const VkCopyAccelerationStructureInfoKHR = struct_VkCopyAccelerationStructureInfoKHR;
pub const struct_VkAccelerationStructureBuildSizesInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    accelerationStructureSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    updateScratchSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    buildScratchSize: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkAccelerationStructureBuildSizesInfoKHR = struct_VkAccelerationStructureBuildSizesInfoKHR;
pub const PFN_vkCreateAccelerationStructureKHR = ?*const fn (VkDevice, [*c]const VkAccelerationStructureCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkAccelerationStructureKHR) callconv(.C) VkResult;
pub const PFN_vkDestroyAccelerationStructureKHR = ?*const fn (VkDevice, VkAccelerationStructureKHR, [*c]const VkAllocationCallbacks) callconv(.C) void;
pub const PFN_vkCmdBuildAccelerationStructuresKHR = ?*const fn (VkCommandBuffer, u32, [*c]const VkAccelerationStructureBuildGeometryInfoKHR, [*c]const [*c]const VkAccelerationStructureBuildRangeInfoKHR) callconv(.C) void;
pub const PFN_vkCmdBuildAccelerationStructuresIndirectKHR = ?*const fn (VkCommandBuffer, u32, [*c]const VkAccelerationStructureBuildGeometryInfoKHR, [*c]const VkDeviceAddress, [*c]const u32, [*c]const [*c]const u32) callconv(.C) void;
pub const PFN_vkBuildAccelerationStructuresKHR = ?*const fn (VkDevice, VkDeferredOperationKHR, u32, [*c]const VkAccelerationStructureBuildGeometryInfoKHR, [*c]const [*c]const VkAccelerationStructureBuildRangeInfoKHR) callconv(.C) VkResult;
pub const PFN_vkCopyAccelerationStructureKHR = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkCopyAccelerationStructureInfoKHR) callconv(.C) VkResult;
pub const PFN_vkCopyAccelerationStructureToMemoryKHR = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkCopyAccelerationStructureToMemoryInfoKHR) callconv(.C) VkResult;
pub const PFN_vkCopyMemoryToAccelerationStructureKHR = ?*const fn (VkDevice, VkDeferredOperationKHR, [*c]const VkCopyMemoryToAccelerationStructureInfoKHR) callconv(.C) VkResult;
pub const PFN_vkWriteAccelerationStructuresPropertiesKHR = ?*const fn (VkDevice, u32, [*c]const VkAccelerationStructureKHR, VkQueryType, usize, ?*anyopaque, usize) callconv(.C) VkResult;
pub const PFN_vkCmdCopyAccelerationStructureKHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyAccelerationStructureInfoKHR) callconv(.C) void;
pub const PFN_vkCmdCopyAccelerationStructureToMemoryKHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyAccelerationStructureToMemoryInfoKHR) callconv(.C) void;
pub const PFN_vkCmdCopyMemoryToAccelerationStructureKHR = ?*const fn (VkCommandBuffer, [*c]const VkCopyMemoryToAccelerationStructureInfoKHR) callconv(.C) void;
pub const PFN_vkGetAccelerationStructureDeviceAddressKHR = ?*const fn (VkDevice, [*c]const VkAccelerationStructureDeviceAddressInfoKHR) callconv(.C) VkDeviceAddress;
pub const PFN_vkCmdWriteAccelerationStructuresPropertiesKHR = ?*const fn (VkCommandBuffer, u32, [*c]const VkAccelerationStructureKHR, VkQueryType, VkQueryPool, u32) callconv(.C) void;
pub const PFN_vkGetDeviceAccelerationStructureCompatibilityKHR = ?*const fn (VkDevice, [*c]const VkAccelerationStructureVersionInfoKHR, [*c]VkAccelerationStructureCompatibilityKHR) callconv(.C) void;
pub const PFN_vkGetAccelerationStructureBuildSizesKHR = ?*const fn (VkDevice, VkAccelerationStructureBuildTypeKHR, [*c]const VkAccelerationStructureBuildGeometryInfoKHR, [*c]const u32, [*c]VkAccelerationStructureBuildSizesInfoKHR) callconv(.C) void;
pub extern fn vkCreateAccelerationStructureKHR(device: VkDevice, pCreateInfo: [*c]const VkAccelerationStructureCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pAccelerationStructure: [*c]VkAccelerationStructureKHR) VkResult;
pub extern fn vkDestroyAccelerationStructureKHR(device: VkDevice, accelerationStructure: VkAccelerationStructureKHR, pAllocator: [*c]const VkAllocationCallbacks) void;
pub extern fn vkCmdBuildAccelerationStructuresKHR(commandBuffer: VkCommandBuffer, infoCount: u32, pInfos: [*c]const VkAccelerationStructureBuildGeometryInfoKHR, ppBuildRangeInfos: [*c]const [*c]const VkAccelerationStructureBuildRangeInfoKHR) void;
pub extern fn vkCmdBuildAccelerationStructuresIndirectKHR(commandBuffer: VkCommandBuffer, infoCount: u32, pInfos: [*c]const VkAccelerationStructureBuildGeometryInfoKHR, pIndirectDeviceAddresses: [*c]const VkDeviceAddress, pIndirectStrides: [*c]const u32, ppMaxPrimitiveCounts: [*c]const [*c]const u32) void;
pub extern fn vkBuildAccelerationStructuresKHR(device: VkDevice, deferredOperation: VkDeferredOperationKHR, infoCount: u32, pInfos: [*c]const VkAccelerationStructureBuildGeometryInfoKHR, ppBuildRangeInfos: [*c]const [*c]const VkAccelerationStructureBuildRangeInfoKHR) VkResult;
pub extern fn vkCopyAccelerationStructureKHR(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pInfo: [*c]const VkCopyAccelerationStructureInfoKHR) VkResult;
pub extern fn vkCopyAccelerationStructureToMemoryKHR(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pInfo: [*c]const VkCopyAccelerationStructureToMemoryInfoKHR) VkResult;
pub extern fn vkCopyMemoryToAccelerationStructureKHR(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pInfo: [*c]const VkCopyMemoryToAccelerationStructureInfoKHR) VkResult;
pub extern fn vkWriteAccelerationStructuresPropertiesKHR(device: VkDevice, accelerationStructureCount: u32, pAccelerationStructures: [*c]const VkAccelerationStructureKHR, queryType: VkQueryType, dataSize: usize, pData: ?*anyopaque, stride: usize) VkResult;
pub extern fn vkCmdCopyAccelerationStructureKHR(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkCopyAccelerationStructureInfoKHR) void;
pub extern fn vkCmdCopyAccelerationStructureToMemoryKHR(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkCopyAccelerationStructureToMemoryInfoKHR) void;
pub extern fn vkCmdCopyMemoryToAccelerationStructureKHR(commandBuffer: VkCommandBuffer, pInfo: [*c]const VkCopyMemoryToAccelerationStructureInfoKHR) void;
pub extern fn vkGetAccelerationStructureDeviceAddressKHR(device: VkDevice, pInfo: [*c]const VkAccelerationStructureDeviceAddressInfoKHR) VkDeviceAddress;
pub extern fn vkCmdWriteAccelerationStructuresPropertiesKHR(commandBuffer: VkCommandBuffer, accelerationStructureCount: u32, pAccelerationStructures: [*c]const VkAccelerationStructureKHR, queryType: VkQueryType, queryPool: VkQueryPool, firstQuery: u32) void;
pub extern fn vkGetDeviceAccelerationStructureCompatibilityKHR(device: VkDevice, pVersionInfo: [*c]const VkAccelerationStructureVersionInfoKHR, pCompatibility: [*c]VkAccelerationStructureCompatibilityKHR) void;
pub extern fn vkGetAccelerationStructureBuildSizesKHR(device: VkDevice, buildType: VkAccelerationStructureBuildTypeKHR, pBuildInfo: [*c]const VkAccelerationStructureBuildGeometryInfoKHR, pMaxPrimitiveCounts: [*c]const u32, pSizeInfo: [*c]VkAccelerationStructureBuildSizesInfoKHR) void;
pub const VK_SHADER_GROUP_SHADER_GENERAL_KHR: c_int = 0;
pub const VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR: c_int = 1;
pub const VK_SHADER_GROUP_SHADER_ANY_HIT_KHR: c_int = 2;
pub const VK_SHADER_GROUP_SHADER_INTERSECTION_KHR: c_int = 3;
pub const VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR: c_int = 2147483647;
pub const enum_VkShaderGroupShaderKHR = c_uint;
pub const VkShaderGroupShaderKHR = enum_VkShaderGroupShaderKHR;
pub const struct_VkRayTracingShaderGroupCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    type: VkRayTracingShaderGroupTypeKHR = @import("std").mem.zeroes(VkRayTracingShaderGroupTypeKHR),
    generalShader: u32 = @import("std").mem.zeroes(u32),
    closestHitShader: u32 = @import("std").mem.zeroes(u32),
    anyHitShader: u32 = @import("std").mem.zeroes(u32),
    intersectionShader: u32 = @import("std").mem.zeroes(u32),
    pShaderGroupCaptureReplayHandle: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
};
pub const VkRayTracingShaderGroupCreateInfoKHR = struct_VkRayTracingShaderGroupCreateInfoKHR;
pub const struct_VkRayTracingPipelineInterfaceCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    maxPipelineRayPayloadSize: u32 = @import("std").mem.zeroes(u32),
    maxPipelineRayHitAttributeSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkRayTracingPipelineInterfaceCreateInfoKHR = struct_VkRayTracingPipelineInterfaceCreateInfoKHR;
pub const struct_VkRayTracingPipelineCreateInfoKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    flags: VkPipelineCreateFlags = @import("std").mem.zeroes(VkPipelineCreateFlags),
    stageCount: u32 = @import("std").mem.zeroes(u32),
    pStages: [*c]const VkPipelineShaderStageCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineShaderStageCreateInfo),
    groupCount: u32 = @import("std").mem.zeroes(u32),
    pGroups: [*c]const VkRayTracingShaderGroupCreateInfoKHR = @import("std").mem.zeroes([*c]const VkRayTracingShaderGroupCreateInfoKHR),
    maxPipelineRayRecursionDepth: u32 = @import("std").mem.zeroes(u32),
    pLibraryInfo: [*c]const VkPipelineLibraryCreateInfoKHR = @import("std").mem.zeroes([*c]const VkPipelineLibraryCreateInfoKHR),
    pLibraryInterface: [*c]const VkRayTracingPipelineInterfaceCreateInfoKHR = @import("std").mem.zeroes([*c]const VkRayTracingPipelineInterfaceCreateInfoKHR),
    pDynamicState: [*c]const VkPipelineDynamicStateCreateInfo = @import("std").mem.zeroes([*c]const VkPipelineDynamicStateCreateInfo),
    layout: VkPipelineLayout = @import("std").mem.zeroes(VkPipelineLayout),
    basePipelineHandle: VkPipeline = @import("std").mem.zeroes(VkPipeline),
    basePipelineIndex: i32 = @import("std").mem.zeroes(i32),
};
pub const VkRayTracingPipelineCreateInfoKHR = struct_VkRayTracingPipelineCreateInfoKHR;
pub const struct_VkPhysicalDeviceRayTracingPipelineFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayTracingPipeline: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rayTracingPipelineShaderGroupHandleCaptureReplay: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rayTracingPipelineShaderGroupHandleCaptureReplayMixed: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rayTracingPipelineTraceRaysIndirect: VkBool32 = @import("std").mem.zeroes(VkBool32),
    rayTraversalPrimitiveCulling: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayTracingPipelineFeaturesKHR = struct_VkPhysicalDeviceRayTracingPipelineFeaturesKHR;
pub const struct_VkPhysicalDeviceRayTracingPipelinePropertiesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    shaderGroupHandleSize: u32 = @import("std").mem.zeroes(u32),
    maxRayRecursionDepth: u32 = @import("std").mem.zeroes(u32),
    maxShaderGroupStride: u32 = @import("std").mem.zeroes(u32),
    shaderGroupBaseAlignment: u32 = @import("std").mem.zeroes(u32),
    shaderGroupHandleCaptureReplaySize: u32 = @import("std").mem.zeroes(u32),
    maxRayDispatchInvocationCount: u32 = @import("std").mem.zeroes(u32),
    shaderGroupHandleAlignment: u32 = @import("std").mem.zeroes(u32),
    maxRayHitAttributeSize: u32 = @import("std").mem.zeroes(u32),
};
pub const VkPhysicalDeviceRayTracingPipelinePropertiesKHR = struct_VkPhysicalDeviceRayTracingPipelinePropertiesKHR;
pub const struct_VkStridedDeviceAddressRegionKHR = extern struct {
    deviceAddress: VkDeviceAddress = @import("std").mem.zeroes(VkDeviceAddress),
    stride: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
    size: VkDeviceSize = @import("std").mem.zeroes(VkDeviceSize),
};
pub const VkStridedDeviceAddressRegionKHR = struct_VkStridedDeviceAddressRegionKHR;
pub const struct_VkTraceRaysIndirectCommandKHR = extern struct {
    width: u32 = @import("std").mem.zeroes(u32),
    height: u32 = @import("std").mem.zeroes(u32),
    depth: u32 = @import("std").mem.zeroes(u32),
};
pub const VkTraceRaysIndirectCommandKHR = struct_VkTraceRaysIndirectCommandKHR;
pub const PFN_vkCmdTraceRaysKHR = ?*const fn (VkCommandBuffer, [*c]const VkStridedDeviceAddressRegionKHR, [*c]const VkStridedDeviceAddressRegionKHR, [*c]const VkStridedDeviceAddressRegionKHR, [*c]const VkStridedDeviceAddressRegionKHR, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCreateRayTracingPipelinesKHR = ?*const fn (VkDevice, VkDeferredOperationKHR, VkPipelineCache, u32, [*c]const VkRayTracingPipelineCreateInfoKHR, [*c]const VkAllocationCallbacks, [*c]VkPipeline) callconv(.C) VkResult;
pub const PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = ?*const fn (VkDevice, VkPipeline, u32, u32, usize, ?*anyopaque) callconv(.C) VkResult;
pub const PFN_vkCmdTraceRaysIndirectKHR = ?*const fn (VkCommandBuffer, [*c]const VkStridedDeviceAddressRegionKHR, [*c]const VkStridedDeviceAddressRegionKHR, [*c]const VkStridedDeviceAddressRegionKHR, [*c]const VkStridedDeviceAddressRegionKHR, VkDeviceAddress) callconv(.C) void;
pub const PFN_vkGetRayTracingShaderGroupStackSizeKHR = ?*const fn (VkDevice, VkPipeline, u32, VkShaderGroupShaderKHR) callconv(.C) VkDeviceSize;
pub const PFN_vkCmdSetRayTracingPipelineStackSizeKHR = ?*const fn (VkCommandBuffer, u32) callconv(.C) void;
pub extern fn vkCmdTraceRaysKHR(commandBuffer: VkCommandBuffer, pRaygenShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, pMissShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, pHitShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, pCallableShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, width: u32, height: u32, depth: u32) void;
pub extern fn vkCreateRayTracingPipelinesKHR(device: VkDevice, deferredOperation: VkDeferredOperationKHR, pipelineCache: VkPipelineCache, createInfoCount: u32, pCreateInfos: [*c]const VkRayTracingPipelineCreateInfoKHR, pAllocator: [*c]const VkAllocationCallbacks, pPipelines: [*c]VkPipeline) VkResult;
pub extern fn vkGetRayTracingCaptureReplayShaderGroupHandlesKHR(device: VkDevice, pipeline: VkPipeline, firstGroup: u32, groupCount: u32, dataSize: usize, pData: ?*anyopaque) VkResult;
pub extern fn vkCmdTraceRaysIndirectKHR(commandBuffer: VkCommandBuffer, pRaygenShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, pMissShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, pHitShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, pCallableShaderBindingTable: [*c]const VkStridedDeviceAddressRegionKHR, indirectDeviceAddress: VkDeviceAddress) void;
pub extern fn vkGetRayTracingShaderGroupStackSizeKHR(device: VkDevice, pipeline: VkPipeline, group: u32, groupShader: VkShaderGroupShaderKHR) VkDeviceSize;
pub extern fn vkCmdSetRayTracingPipelineStackSizeKHR(commandBuffer: VkCommandBuffer, pipelineStackSize: u32) void;
pub const struct_VkPhysicalDeviceRayQueryFeaturesKHR = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    rayQuery: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceRayQueryFeaturesKHR = struct_VkPhysicalDeviceRayQueryFeaturesKHR;
pub const struct_VkPhysicalDeviceMeshShaderFeaturesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    taskShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    meshShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    multiviewMeshShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    primitiveFragmentShadingRateMeshShader: VkBool32 = @import("std").mem.zeroes(VkBool32),
    meshShaderQueries: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMeshShaderFeaturesEXT = struct_VkPhysicalDeviceMeshShaderFeaturesEXT;
pub const struct_VkPhysicalDeviceMeshShaderPropertiesEXT = extern struct {
    sType: VkStructureType = @import("std").mem.zeroes(VkStructureType),
    pNext: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    maxTaskWorkGroupTotalCount: u32 = @import("std").mem.zeroes(u32),
    maxTaskWorkGroupCount: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxTaskWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    maxTaskWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxTaskPayloadSize: u32 = @import("std").mem.zeroes(u32),
    maxTaskSharedMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxTaskPayloadAndSharedMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxMeshWorkGroupTotalCount: u32 = @import("std").mem.zeroes(u32),
    maxMeshWorkGroupCount: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxMeshWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    maxMeshWorkGroupSize: [3]u32 = @import("std").mem.zeroes([3]u32),
    maxMeshSharedMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxMeshPayloadAndSharedMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxMeshPayloadAndOutputMemorySize: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputComponents: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputVertices: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputPrimitives: u32 = @import("std").mem.zeroes(u32),
    maxMeshOutputLayers: u32 = @import("std").mem.zeroes(u32),
    maxMeshMultiviewViewCount: u32 = @import("std").mem.zeroes(u32),
    meshOutputPerVertexGranularity: u32 = @import("std").mem.zeroes(u32),
    meshOutputPerPrimitiveGranularity: u32 = @import("std").mem.zeroes(u32),
    maxPreferredTaskWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    maxPreferredMeshWorkGroupInvocations: u32 = @import("std").mem.zeroes(u32),
    prefersLocalInvocationVertexOutput: VkBool32 = @import("std").mem.zeroes(VkBool32),
    prefersLocalInvocationPrimitiveOutput: VkBool32 = @import("std").mem.zeroes(VkBool32),
    prefersCompactVertexOutput: VkBool32 = @import("std").mem.zeroes(VkBool32),
    prefersCompactPrimitiveOutput: VkBool32 = @import("std").mem.zeroes(VkBool32),
};
pub const VkPhysicalDeviceMeshShaderPropertiesEXT = struct_VkPhysicalDeviceMeshShaderPropertiesEXT;
pub const struct_VkDrawMeshTasksIndirectCommandEXT = extern struct {
    groupCountX: u32 = @import("std").mem.zeroes(u32),
    groupCountY: u32 = @import("std").mem.zeroes(u32),
    groupCountZ: u32 = @import("std").mem.zeroes(u32),
};
pub const VkDrawMeshTasksIndirectCommandEXT = struct_VkDrawMeshTasksIndirectCommandEXT;
pub const PFN_vkCmdDrawMeshTasksEXT = ?*const fn (VkCommandBuffer, u32, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawMeshTasksIndirectEXT = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub const PFN_vkCmdDrawMeshTasksIndirectCountEXT = ?*const fn (VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, u32, u32) callconv(.C) void;
pub extern fn vkCmdDrawMeshTasksEXT(commandBuffer: VkCommandBuffer, groupCountX: u32, groupCountY: u32, groupCountZ: u32) void;
pub extern fn vkCmdDrawMeshTasksIndirectEXT(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, drawCount: u32, stride: u32) void;
pub extern fn vkCmdDrawMeshTasksIndirectCountEXT(commandBuffer: VkCommandBuffer, buffer: VkBuffer, offset: VkDeviceSize, countBuffer: VkBuffer, countBufferOffset: VkDeviceSize, maxDrawCount: u32, stride: u32) void;
pub extern fn SDL_GetPlatform() [*c]const u8;
pub fn _OSSwapInt16(arg__data: u16) callconv(.C) u16 {
    var _data = arg__data;
    _ = &_data;
    return @as(u16, @bitCast(@as(c_short, @truncate((@as(c_int, @bitCast(@as(c_uint, _data))) << @intCast(8)) | (@as(c_int, @bitCast(@as(c_uint, _data))) >> @intCast(8))))));
}
pub fn _OSSwapInt32(arg__data: u32) callconv(.C) u32 {
    var _data = arg__data;
    _ = &_data;
    _data = __builtin_bswap32(_data);
    return _data;
}
pub fn _OSSwapInt64(arg__data: u64) callconv(.C) u64 {
    var _data = arg__data;
    _ = &_data;
    return __builtin_bswap64(_data);
}
pub const struct__OSUnalignedU16 = extern struct {
    __val: u16 align(1) = @import("std").mem.zeroes(u16),
};
pub const struct__OSUnalignedU32 = extern struct {
    __val: u32 align(1) = @import("std").mem.zeroes(u32),
};
pub const struct__OSUnalignedU64 = extern struct {
    __val: u64 align(1) = @import("std").mem.zeroes(u64),
};
pub fn OSReadSwapInt16(arg__base: ?*const volatile anyopaque, arg__offset: usize) callconv(.C) u16 {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    return _OSSwapInt16(@as([*c]struct__OSUnalignedU16, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val);
}
pub fn OSReadSwapInt32(arg__base: ?*const volatile anyopaque, arg__offset: usize) callconv(.C) u32 {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    return _OSSwapInt32(@as([*c]struct__OSUnalignedU32, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val);
}
pub fn OSReadSwapInt64(arg__base: ?*const volatile anyopaque, arg__offset: usize) callconv(.C) u64 {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    return _OSSwapInt64(@as([*c]struct__OSUnalignedU64, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val);
}
pub fn OSWriteSwapInt16(arg__base: ?*volatile anyopaque, arg__offset: usize, arg__data: u16) callconv(.C) void {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    var _data = arg__data;
    _ = &_data;
    @as([*c]struct__OSUnalignedU16, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val = _OSSwapInt16(_data);
}
pub fn OSWriteSwapInt32(arg__base: ?*volatile anyopaque, arg__offset: usize, arg__data: u32) callconv(.C) void {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    var _data = arg__data;
    _ = &_data;
    @as([*c]struct__OSUnalignedU32, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val = _OSSwapInt32(_data);
}
pub fn OSWriteSwapInt64(arg__base: ?*volatile anyopaque, arg__offset: usize, arg__data: u64) callconv(.C) void {
    var _base = arg__base;
    _ = &_base;
    var _offset = arg__offset;
    _ = &_offset;
    var _data = arg__data;
    _ = &_data;
    @as([*c]struct__OSUnalignedU64, @ptrFromInt(@as(usize, @intCast(@intFromPtr(_base))) +% _offset)).*.__val = _OSSwapInt64(_data);
}
pub const u_char = u8;
pub const u_short = c_ushort;
pub const u_int = c_uint;
pub const u_long = c_ulong;
pub const ushort = c_ushort;
pub const uint = c_uint;
pub const u_quad_t = u_int64_t;
pub const quad_t = i64;
pub const qaddr_t = [*c]quad_t;
pub const caddr_t = [*c]u8;
pub const daddr_t = i32;
pub const dev_t = __darwin_dev_t;
pub const fixpt_t = u_int32_t;
pub const blkcnt_t = __darwin_blkcnt_t;
pub const blksize_t = __darwin_blksize_t;
pub const gid_t = __darwin_gid_t;
pub const in_addr_t = __uint32_t;
pub const in_port_t = __uint16_t;
pub const ino_t = __darwin_ino_t;
pub const ino64_t = __darwin_ino64_t;
pub const key_t = __int32_t;
pub const mode_t = __darwin_mode_t;
pub const nlink_t = __uint16_t;
pub const id_t = __darwin_id_t;
pub const pid_t = __darwin_pid_t;
pub const off_t = __darwin_off_t;
pub const segsz_t = i32;
pub const swblk_t = i32;
pub const uid_t = __darwin_uid_t;
pub const clock_t = __darwin_clock_t;
pub const time_t = __darwin_time_t;
pub const useconds_t = __darwin_useconds_t;
pub const suseconds_t = __darwin_suseconds_t;
pub const rsize_t = __darwin_size_t;
pub const errno_t = c_int;
pub const struct_fd_set = extern struct {
    fds_bits: [32]__int32_t = @import("std").mem.zeroes([32]__int32_t),
};
pub const fd_set = struct_fd_set;
pub extern fn __darwin_check_fd_set_overflow(c_int, ?*const anyopaque, c_int) c_int;
pub inline fn __darwin_check_fd_set(arg__a: c_int, arg__b: ?*const anyopaque) c_int {
    var _a = arg__a;
    _ = &_a;
    var _b = arg__b;
    _ = &_b;
    if (@as(usize, @intCast(@intFromPtr(&__darwin_check_fd_set_overflow))) != @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) {
        return __darwin_check_fd_set_overflow(_a, _b, @as(c_int, 1));
    } else {
        return 1;
    }
    return 0;
}
pub inline fn __darwin_fd_isset(arg__fd: c_int, arg__p: [*c]const struct_fd_set) c_int {
    var _fd = arg__fd;
    _ = &_fd;
    var _p = arg__p;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        return _p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))] & @as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
    }
    return 0;
}
pub inline fn __darwin_fd_set(arg__fd: c_int, _p: [*c]struct_fd_set) void {
    var _fd = arg__fd;
    _ = &_fd;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        _ = blk: {
            const ref = &_p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))];
            ref.* |= @as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
            break :blk ref.*;
        };
    }
}
pub inline fn __darwin_fd_clr(arg__fd: c_int, _p: [*c]struct_fd_set) void {
    var _fd = arg__fd;
    _ = &_fd;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        _ = blk: {
            const ref = &_p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))];
            ref.* &= ~@as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
            break :blk ref.*;
        };
    }
}
pub const fd_mask = __int32_t;
pub const pthread_attr_t = __darwin_pthread_attr_t;
pub const pthread_cond_t = __darwin_pthread_cond_t;
pub const pthread_condattr_t = __darwin_pthread_condattr_t;
pub const pthread_mutex_t = __darwin_pthread_mutex_t;
pub const pthread_mutexattr_t = __darwin_pthread_mutexattr_t;
pub const pthread_once_t = __darwin_pthread_once_t;
pub const pthread_rwlock_t = __darwin_pthread_rwlock_t;
pub const pthread_rwlockattr_t = __darwin_pthread_rwlockattr_t;
pub const pthread_t = __darwin_pthread_t;
pub const pthread_key_t = __darwin_pthread_key_t;
pub const fsblkcnt_t = __darwin_fsblkcnt_t;
pub const fsfilcnt_t = __darwin_fsfilcnt_t;
pub const __darwin_nl_item = c_int;
pub const __darwin_wctrans_t = c_int;
pub const __darwin_wctype_t = __uint32_t;
pub const va_list = __darwin_va_list;
pub extern fn renameat(c_int, [*c]const u8, c_int, [*c]const u8) c_int;
pub extern fn renamex_np([*c]const u8, [*c]const u8, c_uint) c_int;
pub extern fn renameatx_np(c_int, [*c]const u8, c_int, [*c]const u8, c_uint) c_int;
pub const fpos_t = __darwin_off_t;
pub const struct___sbuf = extern struct {
    _base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _size: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct___sFILEX = opaque {};
pub const struct___sFILE = extern struct {
    _p: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _r: c_int = @import("std").mem.zeroes(c_int),
    _w: c_int = @import("std").mem.zeroes(c_int),
    _flags: c_short = @import("std").mem.zeroes(c_short),
    _file: c_short = @import("std").mem.zeroes(c_short),
    _bf: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _lbfsize: c_int = @import("std").mem.zeroes(c_int),
    _cookie: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    _close: ?*const fn (?*anyopaque) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) c_int),
    _read: ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int),
    _seek: ?*const fn (?*anyopaque, fpos_t, c_int) callconv(.C) fpos_t = @import("std").mem.zeroes(?*const fn (?*anyopaque, fpos_t, c_int) callconv(.C) fpos_t),
    _write: ?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.C) c_int),
    _ub: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _extra: ?*struct___sFILEX = @import("std").mem.zeroes(?*struct___sFILEX),
    _ur: c_int = @import("std").mem.zeroes(c_int),
    _ubuf: [3]u8 = @import("std").mem.zeroes([3]u8),
    _nbuf: [1]u8 = @import("std").mem.zeroes([1]u8),
    _lb: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _blksize: c_int = @import("std").mem.zeroes(c_int),
    _offset: fpos_t = @import("std").mem.zeroes(fpos_t),
};
pub const FILE = struct___sFILE;
pub extern var __stdinp: [*c]FILE;
pub extern var __stdoutp: [*c]FILE;
pub extern var __stderrp: [*c]FILE;
pub extern fn clearerr([*c]FILE) void;
pub extern fn fclose([*c]FILE) c_int;
pub extern fn feof([*c]FILE) c_int;
pub extern fn ferror([*c]FILE) c_int;
pub extern fn fflush([*c]FILE) c_int;
pub extern fn fgetc([*c]FILE) c_int;
pub extern fn fgetpos(noalias [*c]FILE, [*c]fpos_t) c_int;
pub extern fn fgets(noalias [*c]u8, c_int, [*c]FILE) [*c]u8;
pub extern fn fopen(__filename: [*c]const u8, __mode: [*c]const u8) [*c]FILE;
pub extern fn fprintf([*c]FILE, [*c]const u8, ...) c_int;
pub extern fn fputc(c_int, [*c]FILE) c_int;
pub extern fn fputs(noalias [*c]const u8, noalias [*c]FILE) c_int;
pub extern fn fread(__ptr: ?*anyopaque, __size: c_ulong, __nitems: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn freopen(noalias [*c]const u8, noalias [*c]const u8, noalias [*c]FILE) [*c]FILE;
pub extern fn fscanf(noalias [*c]FILE, noalias [*c]const u8, ...) c_int;
pub extern fn fseek([*c]FILE, c_long, c_int) c_int;
pub extern fn fsetpos([*c]FILE, [*c]const fpos_t) c_int;
pub extern fn ftell([*c]FILE) c_long;
pub extern fn fwrite(__ptr: ?*const anyopaque, __size: c_ulong, __nitems: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn getc([*c]FILE) c_int;
pub extern fn getchar() c_int;
pub extern fn gets([*c]u8) [*c]u8;
pub extern fn perror([*c]const u8) void;
pub extern fn printf([*c]const u8, ...) c_int;
pub extern fn putc(c_int, [*c]FILE) c_int;
pub extern fn putchar(c_int) c_int;
pub extern fn puts([*c]const u8) c_int;
pub extern fn remove([*c]const u8) c_int;
pub extern fn rename(__old: [*c]const u8, __new: [*c]const u8) c_int;
pub extern fn rewind([*c]FILE) void;
pub extern fn scanf(noalias [*c]const u8, ...) c_int;
pub extern fn setbuf(noalias [*c]FILE, noalias [*c]u8) void;
pub extern fn setvbuf(noalias [*c]FILE, noalias [*c]u8, c_int, usize) c_int;
pub extern fn sprintf([*c]u8, [*c]const u8, ...) c_int;
pub extern fn sscanf(noalias [*c]const u8, noalias [*c]const u8, ...) c_int;
pub extern fn tmpfile() [*c]FILE;
pub extern fn tmpnam([*c]u8) [*c]u8;
pub extern fn ungetc(c_int, [*c]FILE) c_int;
pub extern fn vfprintf([*c]FILE, [*c]const u8, __builtin_va_list) c_int;
pub extern fn vprintf([*c]const u8, __builtin_va_list) c_int;
pub extern fn vsprintf([*c]u8, [*c]const u8, __builtin_va_list) c_int;
pub extern fn ctermid([*c]u8) [*c]u8;
pub extern fn fdopen(c_int, [*c]const u8) [*c]FILE;
pub extern fn fileno([*c]FILE) c_int;
pub extern fn pclose([*c]FILE) c_int;
pub extern fn popen([*c]const u8, [*c]const u8) [*c]FILE;
pub extern fn __srget([*c]FILE) c_int;
pub extern fn __svfscanf([*c]FILE, [*c]const u8, va_list) c_int;
pub extern fn __swbuf(c_int, [*c]FILE) c_int;
pub inline fn __sputc(arg__c: c_int, arg__p: [*c]FILE) c_int {
    var _c = arg__c;
    _ = &_c;
    var _p = arg__p;
    _ = &_p;
    if (((blk: {
        const ref = &_p.*._w;
        ref.* -= 1;
        break :blk ref.*;
    }) >= @as(c_int, 0)) or ((_p.*._w >= _p.*._lbfsize) and (@as(c_int, @bitCast(@as(c_uint, @as(u8, @bitCast(@as(i8, @truncate(_c))))))) != @as(c_int, '\n')))) return @as(c_int, @bitCast(@as(c_uint, blk: {
        const tmp = @as(u8, @bitCast(@as(i8, @truncate(_c))));
        (blk_1: {
            const ref = &_p.*._p;
            const tmp_2 = ref.*;
            ref.* += 1;
            break :blk_1 tmp_2;
        }).* = tmp;
        break :blk tmp;
    }))) else return __swbuf(_c, _p);
    return 0;
}
pub extern fn flockfile([*c]FILE) void;
pub extern fn ftrylockfile([*c]FILE) c_int;
pub extern fn funlockfile([*c]FILE) void;
pub extern fn getc_unlocked([*c]FILE) c_int;
pub extern fn getchar_unlocked() c_int;
pub extern fn putc_unlocked(c_int, [*c]FILE) c_int;
pub extern fn putchar_unlocked(c_int) c_int;
pub extern fn getw([*c]FILE) c_int;
pub extern fn putw(c_int, [*c]FILE) c_int;
pub extern fn tempnam(__dir: [*c]const u8, __prefix: [*c]const u8) [*c]u8;
pub extern fn fseeko(__stream: [*c]FILE, __offset: off_t, __whence: c_int) c_int;
pub extern fn ftello(__stream: [*c]FILE) off_t;
pub extern fn snprintf(__str: [*c]u8, __size: c_ulong, __format: [*c]const u8, ...) c_int;
pub extern fn vfscanf(noalias __stream: [*c]FILE, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vscanf(noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsnprintf(__str: [*c]u8, __size: c_ulong, __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsscanf(noalias __str: [*c]const u8, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn dprintf(c_int, noalias [*c]const u8, ...) c_int;
pub extern fn vdprintf(c_int, noalias [*c]const u8, va_list) c_int;
pub extern fn getdelim(noalias __linep: [*c][*c]u8, noalias __linecapp: [*c]usize, __delimiter: c_int, noalias __stream: [*c]FILE) isize;
pub extern fn getline(noalias __linep: [*c][*c]u8, noalias __linecapp: [*c]usize, noalias __stream: [*c]FILE) isize;
pub extern fn fmemopen(noalias __buf: ?*anyopaque, __size: usize, noalias __mode: [*c]const u8) [*c]FILE;
pub extern fn open_memstream(__bufp: [*c][*c]u8, __sizep: [*c]usize) [*c]FILE;
pub extern const sys_nerr: c_int;
pub const sys_errlist: [*c]const [*c]const u8 = @extern([*c]const [*c]const u8, .{
    .name = "sys_errlist",
});
pub extern fn asprintf(noalias [*c][*c]u8, noalias [*c]const u8, ...) c_int;
pub extern fn ctermid_r([*c]u8) [*c]u8;
pub extern fn fgetln([*c]FILE, [*c]usize) [*c]u8;
pub extern fn fmtcheck([*c]const u8, [*c]const u8) [*c]const u8;
pub extern fn fpurge([*c]FILE) c_int;
pub extern fn setbuffer([*c]FILE, [*c]u8, c_int) void;
pub extern fn setlinebuf([*c]FILE) c_int;
pub extern fn vasprintf(noalias [*c][*c]u8, noalias [*c]const u8, va_list) c_int;
pub extern fn funopen(?*const anyopaque, ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.C) c_int, ?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.C) c_int, ?*const fn (?*anyopaque, fpos_t, c_int) callconv(.C) fpos_t, ?*const fn (?*anyopaque) callconv(.C) c_int) [*c]FILE;
pub extern fn __sprintf_chk(noalias [*c]u8, c_int, usize, noalias [*c]const u8, ...) c_int;
pub extern fn __snprintf_chk(noalias [*c]u8, usize, c_int, usize, noalias [*c]const u8, ...) c_int;
pub extern fn __vsprintf_chk(noalias [*c]u8, c_int, usize, noalias [*c]const u8, va_list) c_int;
pub extern fn __vsnprintf_chk(noalias [*c]u8, usize, c_int, usize, noalias [*c]const u8, va_list) c_int;
pub const P_ALL: c_int = 0;
pub const P_PID: c_int = 1;
pub const P_PGID: c_int = 2;
pub const idtype_t = c_uint;
pub const sig_atomic_t = c_int;
pub const struct___darwin_arm_exception_state = extern struct {
    __exception: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __far: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_exception_state64 = extern struct {
    __far: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __esr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __exception: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_thread_state = extern struct {
    __r: [13]__uint32_t = @import("std").mem.zeroes([13]__uint32_t),
    __sp: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __lr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __pc: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __cpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_thread_state64 = extern struct {
    __x: [29]__uint64_t = @import("std").mem.zeroes([29]__uint64_t),
    __fp: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __lr: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __sp: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __pc: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __cpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __pad: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_vfp_state = extern struct {
    __r: [64]__uint32_t = @import("std").mem.zeroes([64]__uint32_t),
    __fpscr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const __uint128_t = u128;
pub const struct___darwin_arm_neon_state64 = extern struct {
    __v: [32]__uint128_t = @import("std").mem.zeroes([32]__uint128_t),
    __fpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fpcr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_neon_state = extern struct {
    __v: [16]__uint128_t = @import("std").mem.zeroes([16]__uint128_t),
    __fpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fpcr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___arm_pagein_state = extern struct {
    __pagein_error: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct___arm_legacy_debug_state = extern struct {
    __bvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __bcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
};
pub const struct___darwin_arm_debug_state32 = extern struct {
    __bvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __bcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __mdscr_el1: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_debug_state64 = extern struct {
    __bvr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __bcr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __wvr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __wcr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __mdscr_el1: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_cpmu_state64 = extern struct {
    __ctrs: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
};
pub const struct___darwin_mcontext32 = extern struct {
    __es: struct___darwin_arm_exception_state = @import("std").mem.zeroes(struct___darwin_arm_exception_state),
    __ss: struct___darwin_arm_thread_state = @import("std").mem.zeroes(struct___darwin_arm_thread_state),
    __fs: struct___darwin_arm_vfp_state = @import("std").mem.zeroes(struct___darwin_arm_vfp_state),
};
pub const struct___darwin_mcontext64 = extern struct {
    __es: struct___darwin_arm_exception_state64 = @import("std").mem.zeroes(struct___darwin_arm_exception_state64),
    __ss: struct___darwin_arm_thread_state64 = @import("std").mem.zeroes(struct___darwin_arm_thread_state64),
    __ns: struct___darwin_arm_neon_state64 = @import("std").mem.zeroes(struct___darwin_arm_neon_state64),
};
pub const mcontext_t = [*c]struct___darwin_mcontext64;
pub const struct___darwin_sigaltstack = extern struct {
    ss_sp: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    ss_size: __darwin_size_t = @import("std").mem.zeroes(__darwin_size_t),
    ss_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const stack_t = struct___darwin_sigaltstack;
pub const struct___darwin_ucontext = extern struct {
    uc_onstack: c_int = @import("std").mem.zeroes(c_int),
    uc_sigmask: __darwin_sigset_t = @import("std").mem.zeroes(__darwin_sigset_t),
    uc_stack: struct___darwin_sigaltstack = @import("std").mem.zeroes(struct___darwin_sigaltstack),
    uc_link: [*c]struct___darwin_ucontext = @import("std").mem.zeroes([*c]struct___darwin_ucontext),
    uc_mcsize: __darwin_size_t = @import("std").mem.zeroes(__darwin_size_t),
    uc_mcontext: [*c]struct___darwin_mcontext64 = @import("std").mem.zeroes([*c]struct___darwin_mcontext64),
};
pub const ucontext_t = struct___darwin_ucontext;
pub const sigset_t = __darwin_sigset_t;
pub const union_sigval = extern union {
    sival_int: c_int,
    sival_ptr: ?*anyopaque,
};
pub const struct_sigevent = extern struct {
    sigev_notify: c_int = @import("std").mem.zeroes(c_int),
    sigev_signo: c_int = @import("std").mem.zeroes(c_int),
    sigev_value: union_sigval = @import("std").mem.zeroes(union_sigval),
    sigev_notify_function: ?*const fn (union_sigval) callconv(.C) void = @import("std").mem.zeroes(?*const fn (union_sigval) callconv(.C) void),
    sigev_notify_attributes: [*c]pthread_attr_t = @import("std").mem.zeroes([*c]pthread_attr_t),
};
pub const struct___siginfo = extern struct {
    si_signo: c_int = @import("std").mem.zeroes(c_int),
    si_errno: c_int = @import("std").mem.zeroes(c_int),
    si_code: c_int = @import("std").mem.zeroes(c_int),
    si_pid: pid_t = @import("std").mem.zeroes(pid_t),
    si_uid: uid_t = @import("std").mem.zeroes(uid_t),
    si_status: c_int = @import("std").mem.zeroes(c_int),
    si_addr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    si_value: union_sigval = @import("std").mem.zeroes(union_sigval),
    si_band: c_long = @import("std").mem.zeroes(c_long),
    __pad: [7]c_ulong = @import("std").mem.zeroes([7]c_ulong),
};
pub const siginfo_t = struct___siginfo;
pub const union___sigaction_u = extern union {
    __sa_handler: ?*const fn (c_int) callconv(.C) void,
    __sa_sigaction: ?*const fn (c_int, [*c]struct___siginfo, ?*anyopaque) callconv(.C) void,
};
pub const struct___sigaction = extern struct {
    __sigaction_u: union___sigaction_u = @import("std").mem.zeroes(union___sigaction_u),
    sa_tramp: ?*const fn (?*anyopaque, c_int, c_int, [*c]siginfo_t, ?*anyopaque) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, c_int, c_int, [*c]siginfo_t, ?*anyopaque) callconv(.C) void),
    sa_mask: sigset_t = @import("std").mem.zeroes(sigset_t),
    sa_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sigaction = extern struct {
    __sigaction_u: union___sigaction_u = @import("std").mem.zeroes(union___sigaction_u),
    sa_mask: sigset_t = @import("std").mem.zeroes(sigset_t),
    sa_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const sig_t = ?*const fn (c_int) callconv(.C) void;
pub const struct_sigvec = extern struct {
    sv_handler: ?*const fn (c_int) callconv(.C) void = @import("std").mem.zeroes(?*const fn (c_int) callconv(.C) void),
    sv_mask: c_int = @import("std").mem.zeroes(c_int),
    sv_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sigstack = extern struct {
    ss_sp: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    ss_onstack: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn signal(c_int, ?*const fn (c_int) callconv(.C) void) ?*const fn (c_int) callconv(.C) void;
pub const struct_timeval = extern struct {
    tv_sec: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    tv_usec: __darwin_suseconds_t = @import("std").mem.zeroes(__darwin_suseconds_t),
};
pub const rlim_t = __uint64_t;
pub const struct_rusage = extern struct {
    ru_utime: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    ru_stime: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    ru_maxrss: c_long = @import("std").mem.zeroes(c_long),
    ru_ixrss: c_long = @import("std").mem.zeroes(c_long),
    ru_idrss: c_long = @import("std").mem.zeroes(c_long),
    ru_isrss: c_long = @import("std").mem.zeroes(c_long),
    ru_minflt: c_long = @import("std").mem.zeroes(c_long),
    ru_majflt: c_long = @import("std").mem.zeroes(c_long),
    ru_nswap: c_long = @import("std").mem.zeroes(c_long),
    ru_inblock: c_long = @import("std").mem.zeroes(c_long),
    ru_oublock: c_long = @import("std").mem.zeroes(c_long),
    ru_msgsnd: c_long = @import("std").mem.zeroes(c_long),
    ru_msgrcv: c_long = @import("std").mem.zeroes(c_long),
    ru_nsignals: c_long = @import("std").mem.zeroes(c_long),
    ru_nvcsw: c_long = @import("std").mem.zeroes(c_long),
    ru_nivcsw: c_long = @import("std").mem.zeroes(c_long),
};
pub const rusage_info_t = ?*anyopaque;
pub const struct_rusage_info_v0 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v1 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v2 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v3 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v4 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v5 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
    ri_flags: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v6 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
    ri_flags: u64 = @import("std").mem.zeroes(u64),
    ri_user_ptime: u64 = @import("std").mem.zeroes(u64),
    ri_system_ptime: u64 = @import("std").mem.zeroes(u64),
    ri_pinstructions: u64 = @import("std").mem.zeroes(u64),
    ri_pcycles: u64 = @import("std").mem.zeroes(u64),
    ri_energy_nj: u64 = @import("std").mem.zeroes(u64),
    ri_penergy_nj: u64 = @import("std").mem.zeroes(u64),
    ri_secure_time_in_system: u64 = @import("std").mem.zeroes(u64),
    ri_secure_ptime_in_system: u64 = @import("std").mem.zeroes(u64),
    ri_reserved: [12]u64 = @import("std").mem.zeroes([12]u64),
};
pub const rusage_info_current = struct_rusage_info_v6;
pub const struct_rlimit = extern struct {
    rlim_cur: rlim_t = @import("std").mem.zeroes(rlim_t),
    rlim_max: rlim_t = @import("std").mem.zeroes(rlim_t),
};
pub const struct_proc_rlimit_control_wakeupmon = extern struct {
    wm_flags: u32 = @import("std").mem.zeroes(u32),
    wm_rate: i32 = @import("std").mem.zeroes(i32),
};
pub extern fn getpriority(c_int, id_t) c_int;
pub extern fn getiopolicy_np(c_int, c_int) c_int;
pub extern fn getrlimit(c_int, [*c]struct_rlimit) c_int;
pub extern fn getrusage(c_int, [*c]struct_rusage) c_int;
pub extern fn setpriority(c_int, id_t, c_int) c_int;
pub extern fn setiopolicy_np(c_int, c_int, c_int) c_int;
pub extern fn setrlimit(c_int, [*c]const struct_rlimit) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:201:19: warning: struct demoted to opaque type - has bitfield
const struct_unnamed_1 = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:220:19: warning: struct demoted to opaque type - has bitfield
const struct_unnamed_2 = opaque {};
pub const union_wait = extern union {
    w_status: c_int,
    w_T: struct_unnamed_1,
    w_S: struct_unnamed_2,
};
pub extern fn wait([*c]c_int) pid_t;
pub extern fn waitpid(pid_t, [*c]c_int, c_int) pid_t;
pub extern fn waitid(idtype_t, id_t, [*c]siginfo_t, c_int) c_int;
pub extern fn wait3([*c]c_int, c_int, [*c]struct_rusage) pid_t;
pub extern fn wait4(pid_t, [*c]c_int, c_int, [*c]struct_rusage) pid_t;
pub extern fn alloca(c_ulong) ?*anyopaque;
pub const ct_rune_t = __darwin_ct_rune_t;
pub const rune_t = __darwin_rune_t;
pub const div_t = extern struct {
    quot: c_int = @import("std").mem.zeroes(c_int),
    rem: c_int = @import("std").mem.zeroes(c_int),
};
pub const ldiv_t = extern struct {
    quot: c_long = @import("std").mem.zeroes(c_long),
    rem: c_long = @import("std").mem.zeroes(c_long),
};
pub const lldiv_t = extern struct {
    quot: c_longlong = @import("std").mem.zeroes(c_longlong),
    rem: c_longlong = @import("std").mem.zeroes(c_longlong),
};
pub extern var __mb_cur_max: c_int;
pub const malloc_type_id_t = c_ulonglong;
pub extern fn malloc_type_malloc(size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_calloc(count: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_free(ptr: ?*anyopaque, type_id: malloc_type_id_t) void;
pub extern fn malloc_type_realloc(ptr: ?*anyopaque, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_valloc(size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_aligned_alloc(alignment: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_posix_memalign(memptr: [*c]?*anyopaque, alignment: usize, size: usize, type_id: malloc_type_id_t) c_int;
pub const struct__malloc_zone_t = opaque {};
pub const malloc_zone_t = struct__malloc_zone_t;
pub extern fn malloc_type_zone_malloc(zone: ?*malloc_zone_t, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_calloc(zone: ?*malloc_zone_t, count: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_free(zone: ?*malloc_zone_t, ptr: ?*anyopaque, type_id: malloc_type_id_t) void;
pub extern fn malloc_type_zone_realloc(zone: ?*malloc_zone_t, ptr: ?*anyopaque, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_valloc(zone: ?*malloc_zone_t, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_memalign(zone: ?*malloc_zone_t, alignment: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc(__size: c_ulong) ?*anyopaque;
pub extern fn calloc(__count: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn free(?*anyopaque) void;
pub extern fn realloc(__ptr: ?*anyopaque, __size: c_ulong) ?*anyopaque;
pub extern fn reallocf(__ptr: ?*anyopaque, __size: usize) ?*anyopaque;
pub extern fn valloc(usize) ?*anyopaque;
pub extern fn aligned_alloc(__alignment: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn posix_memalign(__memptr: [*c]?*anyopaque, __alignment: usize, __size: usize) c_int;
pub extern fn abort() noreturn;
pub extern fn abs(c_int) c_int;
pub extern fn atexit(?*const fn () callconv(.C) void) c_int;
pub extern fn atof([*c]const u8) f64;
pub extern fn atoi([*c]const u8) c_int;
pub extern fn atol([*c]const u8) c_long;
pub extern fn atoll([*c]const u8) c_longlong;
pub extern fn bsearch(__key: ?*const anyopaque, __base: ?*const anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) ?*anyopaque;
pub extern fn div(c_int, c_int) div_t;
pub extern fn exit(c_int) noreturn;
pub extern fn getenv([*c]const u8) [*c]u8;
pub extern fn labs(c_long) c_long;
pub extern fn ldiv(c_long, c_long) ldiv_t;
pub extern fn llabs(c_longlong) c_longlong;
pub extern fn lldiv(c_longlong, c_longlong) lldiv_t;
pub extern fn mblen(__s: [*c]const u8, __n: usize) c_int;
pub extern fn mbstowcs(noalias [*c]wchar_t, noalias [*c]const u8, usize) usize;
pub extern fn mbtowc(noalias [*c]wchar_t, noalias [*c]const u8, usize) c_int;
pub extern fn qsort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
pub extern fn rand() c_int;
pub extern fn srand(c_uint) void;
pub extern fn strtod([*c]const u8, [*c][*c]u8) f64;
pub extern fn strtof([*c]const u8, [*c][*c]u8) f32;
pub extern fn strtol(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_long;
pub extern fn strtold([*c]const u8, [*c][*c]u8) c_longdouble;
pub extern fn strtoll(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtoul(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulong;
pub extern fn strtoull(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern fn system([*c]const u8) c_int;
pub extern fn wcstombs(noalias [*c]u8, noalias [*c]const wchar_t, usize) usize;
pub extern fn wctomb([*c]u8, wchar_t) c_int;
pub extern fn _Exit(c_int) noreturn;
pub extern fn a64l([*c]const u8) c_long;
pub extern fn drand48() f64;
pub extern fn ecvt(f64, c_int, noalias [*c]c_int, noalias [*c]c_int) [*c]u8;
pub extern fn erand48([*c]c_ushort) f64;
pub extern fn fcvt(f64, c_int, noalias [*c]c_int, noalias [*c]c_int) [*c]u8;
pub extern fn gcvt(f64, c_int, [*c]u8) [*c]u8;
pub extern fn getsubopt([*c][*c]u8, [*c]const [*c]u8, [*c][*c]u8) c_int;
pub extern fn grantpt(c_int) c_int;
pub extern fn initstate(c_uint, [*c]u8, usize) [*c]u8;
pub extern fn jrand48([*c]c_ushort) c_long;
pub extern fn l64a(c_long) [*c]u8;
pub extern fn lcong48([*c]c_ushort) void;
pub extern fn lrand48() c_long;
pub extern fn mktemp([*c]u8) [*c]u8;
pub extern fn mkstemp([*c]u8) c_int;
pub extern fn mrand48() c_long;
pub extern fn nrand48([*c]c_ushort) c_long;
pub extern fn posix_openpt(c_int) c_int;
pub extern fn ptsname(c_int) [*c]u8;
pub extern fn ptsname_r(fildes: c_int, buffer: [*c]u8, buflen: usize) c_int;
pub extern fn putenv([*c]u8) c_int;
pub extern fn random() c_long;
pub extern fn rand_r([*c]c_uint) c_int;
pub extern fn realpath(noalias [*c]const u8, noalias [*c]u8) [*c]u8;
pub extern fn seed48([*c]c_ushort) [*c]c_ushort;
pub extern fn setenv(__name: [*c]const u8, __value: [*c]const u8, __overwrite: c_int) c_int;
pub extern fn setkey([*c]const u8) void;
pub extern fn setstate([*c]const u8) [*c]u8;
pub extern fn srand48(c_long) void;
pub extern fn srandom(c_uint) void;
pub extern fn unlockpt(c_int) c_int;
pub extern fn unsetenv([*c]const u8) c_int;
pub extern fn arc4random() u32;
pub extern fn arc4random_addrandom([*c]u8, c_int) void;
pub extern fn arc4random_buf(__buf: ?*anyopaque, __nbytes: usize) void;
pub extern fn arc4random_stir() void;
pub extern fn arc4random_uniform(__upper_bound: u32) u32;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:273:6: warning: unsupported type: 'BlockPointer'
pub const atexit_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:273:6

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:282:7: warning: unsupported type: 'BlockPointer'
pub const bsearch_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:282:7
pub extern fn cgetcap([*c]u8, [*c]const u8, c_int) [*c]u8;
pub extern fn cgetclose() c_int;
pub extern fn cgetent([*c][*c]u8, [*c][*c]u8, [*c]const u8) c_int;
pub extern fn cgetfirst([*c][*c]u8, [*c][*c]u8) c_int;
pub extern fn cgetmatch([*c]const u8, [*c]const u8) c_int;
pub extern fn cgetnext([*c][*c]u8, [*c][*c]u8) c_int;
pub extern fn cgetnum([*c]u8, [*c]const u8, [*c]c_long) c_int;
pub extern fn cgetset([*c]const u8) c_int;
pub extern fn cgetstr([*c]u8, [*c]const u8, [*c][*c]u8) c_int;
pub extern fn cgetustr([*c]u8, [*c]const u8, [*c][*c]u8) c_int;
pub extern fn daemon(c_int, c_int) c_int;
pub extern fn devname(dev_t, mode_t) [*c]u8;
pub extern fn devname_r(dev_t, mode_t, buf: [*c]u8, len: c_int) [*c]u8;
pub extern fn getbsize([*c]c_int, [*c]c_long) [*c]u8;
pub extern fn getloadavg([*c]f64, c_int) c_int;
pub extern fn getprogname() [*c]const u8;
pub extern fn setprogname([*c]const u8) void;
pub extern fn heapsort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:319:6: warning: unsupported type: 'BlockPointer'
pub const heapsort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:319:6
pub extern fn mergesort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:326:6: warning: unsupported type: 'BlockPointer'
pub const mergesort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:326:6
pub extern fn psort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:334:7: warning: unsupported type: 'BlockPointer'
pub const psort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:334:7
pub extern fn psort_r(__base: ?*anyopaque, __nel: usize, __width: usize, ?*anyopaque, __compar: ?*const fn (?*anyopaque, ?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:342:7: warning: unsupported type: 'BlockPointer'
pub const qsort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:342:7
pub extern fn qsort_r(__base: ?*anyopaque, __nel: usize, __width: usize, ?*anyopaque, __compar: ?*const fn (?*anyopaque, ?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
pub extern fn radixsort(__base: [*c][*c]const u8, __nel: c_int, __table: [*c]const u8, __endbyte: c_uint) c_int;
pub extern fn rpmatch([*c]const u8) c_int;
pub extern fn sradixsort(__base: [*c][*c]const u8, __nel: c_int, __table: [*c]const u8, __endbyte: c_uint) c_int;
pub extern fn sranddev() void;
pub extern fn srandomdev() void;
pub extern fn strtonum(__numstr: [*c]const u8, __minval: c_longlong, __maxval: c_longlong, __errstrp: [*c][*c]const u8) c_longlong;
pub extern fn strtoq(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtouq(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern var suboptarg: [*c]u8;
pub const __gnuc_va_list = __builtin_va_list;
pub extern fn memchr(__s: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn memcmp(__s1: ?*const anyopaque, __s2: ?*const anyopaque, __n: c_ulong) c_int;
pub extern fn memcpy(__dst: ?*anyopaque, __src: ?*const anyopaque, __n: c_ulong) ?*anyopaque;
pub extern fn memmove(__dst: ?*anyopaque, __src: ?*const anyopaque, __len: c_ulong) ?*anyopaque;
pub extern fn memset(__b: ?*anyopaque, __c: c_int, __len: c_ulong) ?*anyopaque;
pub extern fn strcat(__s1: [*c]u8, __s2: [*c]const u8) [*c]u8;
pub extern fn strchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strcmp(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strcoll(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strcpy(__dst: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn strcspn(__s: [*c]const u8, __charset: [*c]const u8) c_ulong;
pub extern fn strerror(__errnum: c_int) [*c]u8;
pub extern fn strlen(__s: [*c]const u8) c_ulong;
pub extern fn strncat(__s1: [*c]u8, __s2: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strncmp(__s1: [*c]const u8, __s2: [*c]const u8, __n: c_ulong) c_int;
pub extern fn strncpy(__dst: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strpbrk(__s: [*c]const u8, __charset: [*c]const u8) [*c]u8;
pub extern fn strrchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strspn(__s: [*c]const u8, __charset: [*c]const u8) c_ulong;
pub extern fn strstr(__big: [*c]const u8, __little: [*c]const u8) [*c]u8;
pub extern fn strtok(__str: [*c]u8, __sep: [*c]const u8) [*c]u8;
pub extern fn strxfrm(__s1: [*c]u8, __s2: [*c]const u8, __n: c_ulong) c_ulong;
pub extern fn strtok_r(__str: [*c]u8, __sep: [*c]const u8, __lasts: [*c][*c]u8) [*c]u8;
pub extern fn strerror_r(__errnum: c_int, __strerrbuf: [*c]u8, __buflen: usize) c_int;
pub extern fn strdup(__s1: [*c]const u8) [*c]u8;
pub extern fn memccpy(__dst: ?*anyopaque, __src: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn stpcpy(__dst: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn stpncpy(__dst: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strndup(__s1: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strnlen(__s1: [*c]const u8, __n: usize) usize;
pub extern fn strsignal(__sig: c_int) [*c]u8;
pub extern fn memset_s(__s: ?*anyopaque, __smax: rsize_t, __c: c_int, __n: rsize_t) errno_t;
pub extern fn memmem(__big: ?*const anyopaque, __big_len: usize, __little: ?*const anyopaque, __little_len: usize) ?*anyopaque;
pub extern fn memset_pattern4(__b: ?*anyopaque, __pattern4: ?*const anyopaque, __len: usize) void;
pub extern fn memset_pattern8(__b: ?*anyopaque, __pattern8: ?*const anyopaque, __len: usize) void;
pub extern fn memset_pattern16(__b: ?*anyopaque, __pattern16: ?*const anyopaque, __len: usize) void;
pub extern fn strcasestr(__big: [*c]const u8, __little: [*c]const u8) [*c]u8;
pub extern fn strnstr(__big: [*c]const u8, __little: [*c]const u8, __len: usize) [*c]u8;
pub extern fn strlcat(__dst: [*c]u8, __source: [*c]const u8, __size: c_ulong) c_ulong;
pub extern fn strlcpy(__dst: [*c]u8, __source: [*c]const u8, __size: c_ulong) c_ulong;
pub extern fn strmode(__mode: c_int, __bp: [*c]u8) void;
pub extern fn strsep(__stringp: [*c][*c]u8, __delim: [*c]const u8) [*c]u8;
pub extern fn swab(noalias ?*const anyopaque, noalias ?*anyopaque, isize) void;
pub extern fn timingsafe_bcmp(__b1: ?*const anyopaque, __b2: ?*const anyopaque, __len: usize) c_int;
pub extern fn strsignal_r(__sig: c_int, __strsignalbuf: [*c]u8, __buflen: usize) c_int;
pub extern fn bcmp(?*const anyopaque, ?*const anyopaque, c_ulong) c_int;
pub extern fn bcopy(?*const anyopaque, ?*anyopaque, c_ulong) void;
pub extern fn bzero(?*anyopaque, c_ulong) void;
pub extern fn index([*c]const u8, c_int) [*c]u8;
pub extern fn rindex([*c]const u8, c_int) [*c]u8;
pub extern fn ffs(c_int) c_int;
pub extern fn strcasecmp([*c]const u8, [*c]const u8) c_int;
pub extern fn strncasecmp([*c]const u8, [*c]const u8, c_ulong) c_int;
pub extern fn ffsl(c_long) c_int;
pub extern fn ffsll(c_longlong) c_int;
pub extern fn fls(c_int) c_int;
pub extern fn flsl(c_long) c_int;
pub extern fn flsll(c_longlong) c_int;
pub const mbstate_t = __darwin_mbstate_t;
pub const struct_timespec = extern struct {
    tv_sec: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    tv_nsec: c_long = @import("std").mem.zeroes(c_long),
};
pub const struct_tm = extern struct {
    tm_sec: c_int = @import("std").mem.zeroes(c_int),
    tm_min: c_int = @import("std").mem.zeroes(c_int),
    tm_hour: c_int = @import("std").mem.zeroes(c_int),
    tm_mday: c_int = @import("std").mem.zeroes(c_int),
    tm_mon: c_int = @import("std").mem.zeroes(c_int),
    tm_year: c_int = @import("std").mem.zeroes(c_int),
    tm_wday: c_int = @import("std").mem.zeroes(c_int),
    tm_yday: c_int = @import("std").mem.zeroes(c_int),
    tm_isdst: c_int = @import("std").mem.zeroes(c_int),
    tm_gmtoff: c_long = @import("std").mem.zeroes(c_long),
    tm_zone: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub const tzname: [*c][*c]u8 = @extern([*c][*c]u8, .{
    .name = "tzname",
});
pub extern var getdate_err: c_int;
pub extern var timezone: c_long;
pub extern var daylight: c_int;
pub extern fn asctime([*c]const struct_tm) [*c]u8;
pub extern fn clock() clock_t;
pub extern fn ctime([*c]const time_t) [*c]u8;
pub extern fn difftime(time_t, time_t) f64;
pub extern fn getdate([*c]const u8) [*c]struct_tm;
pub extern fn gmtime([*c]const time_t) [*c]struct_tm;
pub extern fn localtime([*c]const time_t) [*c]struct_tm;
pub extern fn mktime([*c]struct_tm) time_t;
pub extern fn strftime(noalias [*c]u8, usize, noalias [*c]const u8, noalias [*c]const struct_tm) usize;
pub extern fn strptime(noalias [*c]const u8, noalias [*c]const u8, noalias [*c]struct_tm) [*c]u8;
pub extern fn time([*c]time_t) time_t;
pub extern fn tzset() void;
pub extern fn asctime_r(noalias [*c]const struct_tm, noalias [*c]u8) [*c]u8;
pub extern fn ctime_r([*c]const time_t, [*c]u8) [*c]u8;
pub extern fn gmtime_r(noalias [*c]const time_t, noalias [*c]struct_tm) [*c]struct_tm;
pub extern fn localtime_r(noalias [*c]const time_t, noalias [*c]struct_tm) [*c]struct_tm;
pub extern fn posix2time(time_t) time_t;
pub extern fn tzsetwall() void;
pub extern fn time2posix(time_t) time_t;
pub extern fn timelocal([*c]struct_tm) time_t;
pub extern fn timegm([*c]struct_tm) time_t;
pub extern fn nanosleep(__rqtp: [*c]const struct_timespec, __rmtp: [*c]struct_timespec) c_int;
pub const _CLOCK_REALTIME: c_int = 0;
pub const _CLOCK_MONOTONIC: c_int = 6;
pub const _CLOCK_MONOTONIC_RAW: c_int = 4;
pub const _CLOCK_MONOTONIC_RAW_APPROX: c_int = 5;
pub const _CLOCK_UPTIME_RAW: c_int = 8;
pub const _CLOCK_UPTIME_RAW_APPROX: c_int = 9;
pub const _CLOCK_PROCESS_CPUTIME_ID: c_int = 12;
pub const _CLOCK_THREAD_CPUTIME_ID: c_int = 16;
pub const clockid_t = c_uint;
pub extern fn clock_getres(__clock_id: clockid_t, __res: [*c]struct_timespec) c_int;
pub extern fn clock_gettime(__clock_id: clockid_t, __tp: [*c]struct_timespec) c_int;
pub extern fn clock_gettime_nsec_np(__clock_id: clockid_t) __uint64_t;
pub extern fn clock_settime(__clock_id: clockid_t, __tp: [*c]const struct_timespec) c_int;
pub extern fn timespec_get(ts: [*c]struct_timespec, base: c_int) c_int;
pub const wint_t = __darwin_wint_t;
pub const wctype_t = __darwin_wctype_t;
pub const _RuneEntry = extern struct {
    __min: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __max: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __map: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __types: [*c]__uint32_t = @import("std").mem.zeroes([*c]__uint32_t),
};
pub const _RuneRange = extern struct {
    __nranges: c_int = @import("std").mem.zeroes(c_int),
    __ranges: [*c]_RuneEntry = @import("std").mem.zeroes([*c]_RuneEntry),
};
pub const _RuneCharClass = extern struct {
    __name: [14]u8 = @import("std").mem.zeroes([14]u8),
    __mask: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const _RuneLocale = extern struct {
    __magic: [8]u8 = @import("std").mem.zeroes([8]u8),
    __encoding: [32]u8 = @import("std").mem.zeroes([32]u8),
    __sgetrune: ?*const fn ([*c]const u8, __darwin_size_t, [*c][*c]const u8) callconv(.C) __darwin_rune_t = @import("std").mem.zeroes(?*const fn ([*c]const u8, __darwin_size_t, [*c][*c]const u8) callconv(.C) __darwin_rune_t),
    __sputrune: ?*const fn (__darwin_rune_t, [*c]u8, __darwin_size_t, [*c][*c]u8) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (__darwin_rune_t, [*c]u8, __darwin_size_t, [*c][*c]u8) callconv(.C) c_int),
    __invalid_rune: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __runetype: [256]__uint32_t = @import("std").mem.zeroes([256]__uint32_t),
    __maplower: [256]__darwin_rune_t = @import("std").mem.zeroes([256]__darwin_rune_t),
    __mapupper: [256]__darwin_rune_t = @import("std").mem.zeroes([256]__darwin_rune_t),
    __runetype_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __maplower_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __mapupper_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __variable: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __variable_len: c_int = @import("std").mem.zeroes(c_int),
    __ncharclasses: c_int = @import("std").mem.zeroes(c_int),
    __charclasses: [*c]_RuneCharClass = @import("std").mem.zeroes([*c]_RuneCharClass),
};
pub extern var _DefaultRuneLocale: _RuneLocale;
pub extern var _CurrentRuneLocale: [*c]_RuneLocale;
pub extern fn ___runetype(__darwin_ct_rune_t) c_ulong;
pub extern fn ___tolower(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub extern fn ___toupper(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub fn isascii(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return @intFromBool((_c & ~@as(c_int, 127)) == @as(c_int, 0));
}
pub extern fn __maskrune(__darwin_ct_rune_t, c_ulong) c_int;
pub fn __istype(arg__c: __darwin_ct_rune_t, arg__f: c_ulong) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    var _f = arg__f;
    _ = &_f;
    return if (isascii(_c) != 0) @intFromBool(!!((@as(c_ulong, @bitCast(@as(c_ulong, _DefaultRuneLocale.__runetype[@as(c_uint, @intCast(_c))]))) & _f) != 0)) else @intFromBool(!!(__maskrune(_c, _f) != 0));
}
pub fn __isctype(arg__c: __darwin_ct_rune_t, arg__f: c_ulong) callconv(.C) __darwin_ct_rune_t {
    var _c = arg__c;
    _ = &_c;
    var _f = arg__f;
    _ = &_f;
    return if ((_c < @as(c_int, 0)) or (_c >= (@as(c_int, 1) << @intCast(8)))) @as(c_int, 0) else @intFromBool(!!((@as(c_ulong, @bitCast(@as(c_ulong, _DefaultRuneLocale.__runetype[@as(c_uint, @intCast(_c))]))) & _f) != 0));
}
pub extern fn __toupper(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub extern fn __tolower(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub fn __wcwidth(arg__c: __darwin_ct_rune_t) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    var _x: c_uint = undefined;
    _ = &_x;
    if (_c == @as(c_int, 0)) return @as(c_int, 0);
    _x = @as(c_uint, @bitCast(__maskrune(_c, @as(c_ulong, @bitCast(@as(c_long, 3758096384) | @as(c_long, 262144))))));
    if ((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 3758096384)) != @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) return @as(c_int, @bitCast(@as(c_int, @truncate((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 3758096384)) >> @intCast(30)))));
    return if ((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 262144)) != @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) @as(c_int, 1) else -@as(c_int, 1);
}
pub fn isalnum(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 256) | @as(c_long, 1024))));
}
pub fn isalpha(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 256))));
}
pub fn isblank(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 131072))));
}
pub fn iscntrl(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 512))));
}
pub fn isdigit(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __isctype(_c, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn isgraph(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 2048))));
}
pub fn islower(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 4096))));
}
pub fn isprint(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 262144))));
}
pub fn ispunct(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 8192))));
}
pub fn isspace(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 16384))));
}
pub fn isupper(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 32768))));
}
pub fn isxdigit(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __isctype(_c, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn toascii(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return _c & @as(c_int, 127);
}
pub fn tolower(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __tolower(_c);
}
pub fn toupper(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __toupper(_c);
}
pub fn digittoint(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __maskrune(_c, @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 15)))));
}
pub fn ishexnumber(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn isideogram(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 524288))));
}
pub fn isnumber(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn isphonogram(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 2097152))));
}
pub fn isrune(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 4294967280))));
}
pub fn isspecial(arg__c: c_int) callconv(.C) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 1048576))));
}
pub fn iswalnum(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 256) | @as(c_long, 1024))));
}
pub fn iswalpha(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 256))));
}
pub fn iswcntrl(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 512))));
}
pub fn iswctype(arg__wc: wint_t, arg__charclass: wctype_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    var _charclass = arg__charclass;
    _ = &_charclass;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_ulong, _charclass))));
}
pub fn iswdigit(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __isctype(_wc, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn iswgraph(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 2048))));
}
pub fn iswlower(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 4096))));
}
pub fn iswprint(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 262144))));
}
pub fn iswpunct(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 8192))));
}
pub fn iswspace(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 16384))));
}
pub fn iswupper(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __istype(_wc, @as(c_ulong, @bitCast(@as(c_long, 32768))));
}
pub fn iswxdigit(arg__wc: wint_t) callconv(.C) c_int {
    var _wc = arg__wc;
    _ = &_wc;
    return __isctype(_wc, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn towlower(arg__wc: wint_t) callconv(.C) wint_t {
    var _wc = arg__wc;
    _ = &_wc;
    return __tolower(_wc);
}
pub fn towupper(arg__wc: wint_t) callconv(.C) wint_t {
    var _wc = arg__wc;
    _ = &_wc;
    return __toupper(_wc);
}
pub extern fn wctype([*c]const u8) wctype_t;
pub extern fn btowc(c_int) wint_t;
pub extern fn fgetwc([*c]FILE) wint_t;
pub extern fn fgetws(noalias [*c]wchar_t, c_int, noalias [*c]FILE) [*c]wchar_t;
pub extern fn fputwc(wchar_t, [*c]FILE) wint_t;
pub extern fn fputws(noalias [*c]const wchar_t, noalias [*c]FILE) c_int;
pub extern fn fwide([*c]FILE, c_int) c_int;
pub extern fn fwprintf(noalias [*c]FILE, noalias [*c]const wchar_t, ...) c_int;
pub extern fn fwscanf(noalias [*c]FILE, noalias [*c]const wchar_t, ...) c_int;
pub extern fn getwc([*c]FILE) wint_t;
pub extern fn getwchar() wint_t;
pub extern fn mbrlen(noalias [*c]const u8, usize, noalias [*c]mbstate_t) usize;
pub extern fn mbrtowc(noalias [*c]wchar_t, noalias [*c]const u8, usize, noalias [*c]mbstate_t) usize;
pub extern fn mbsinit([*c]const mbstate_t) c_int;
pub extern fn mbsrtowcs(noalias [*c]wchar_t, noalias [*c][*c]const u8, usize, noalias [*c]mbstate_t) usize;
pub extern fn putwc(wchar_t, [*c]FILE) wint_t;
pub extern fn putwchar(wchar_t) wint_t;
pub extern fn swprintf(noalias [*c]wchar_t, usize, noalias [*c]const wchar_t, ...) c_int;
pub extern fn swscanf(noalias [*c]const wchar_t, noalias [*c]const wchar_t, ...) c_int;
pub extern fn ungetwc(wint_t, [*c]FILE) wint_t;
pub extern fn vfwprintf(noalias [*c]FILE, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vswprintf(noalias [*c]wchar_t, usize, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vwprintf(noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn wcrtomb(noalias [*c]u8, wchar_t, noalias [*c]mbstate_t) usize;
pub extern fn wcscat(noalias [*c]wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcschr([*c]const c_int, c_int) [*c]c_int;
pub extern fn wcscmp([*c]const c_int, [*c]const c_int) c_int;
pub extern fn wcscoll([*c]const wchar_t, [*c]const wchar_t) c_int;
pub extern fn wcscpy(noalias [*c]wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcscspn([*c]const wchar_t, [*c]const wchar_t) usize;
pub extern fn wcsftime(noalias [*c]wchar_t, usize, noalias [*c]const wchar_t, noalias [*c]const struct_tm) usize;
pub extern fn wcslen([*c]const c_int) c_ulong;
pub extern fn wcsncat(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) [*c]wchar_t;
pub extern fn wcsncmp([*c]const c_int, [*c]const c_int, c_ulong) c_int;
pub extern fn wcsncpy(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) [*c]wchar_t;
pub extern fn wcspbrk([*c]const wchar_t, [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcsrchr([*c]const wchar_t, wchar_t) [*c]wchar_t;
pub extern fn wcsrtombs(noalias [*c]u8, noalias [*c][*c]const wchar_t, usize, noalias [*c]mbstate_t) usize;
pub extern fn wcsspn([*c]const wchar_t, [*c]const wchar_t) usize;
pub extern fn wcsstr(noalias [*c]const wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcsxfrm(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) usize;
pub extern fn wctob(wint_t) c_int;
pub extern fn wcstod(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) f64;
pub extern fn wcstok(noalias [*c]wchar_t, noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) [*c]wchar_t;
pub extern fn wcstol(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_long;
pub extern fn wcstoul(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_ulong;
pub extern fn wmemchr([*c]const c_int, c_int, c_ulong) [*c]c_int;
pub extern fn wmemcmp([*c]const c_int, [*c]const c_int, c_ulong) c_int;
pub extern fn wmemcpy([*c]c_int, [*c]const c_int, c_ulong) [*c]c_int;
pub extern fn wmemmove([*c]c_int, [*c]const c_int, c_ulong) [*c]c_int;
pub extern fn wmemset([*c]wchar_t, wchar_t, usize) [*c]wchar_t;
pub extern fn wprintf(noalias [*c]const wchar_t, ...) c_int;
pub extern fn wscanf(noalias [*c]const wchar_t, ...) c_int;
pub extern fn wcswidth([*c]const wchar_t, usize) c_int;
pub extern fn wcwidth(wchar_t) c_int;
pub extern fn vfwscanf(noalias [*c]FILE, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vswscanf(noalias [*c]const wchar_t, noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn vwscanf(noalias [*c]const wchar_t, __darwin_va_list) c_int;
pub extern fn wcstof(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) f32;
pub extern fn wcstold(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t) c_longdouble;
pub extern fn wcstoll(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_longlong;
pub extern fn wcstoull(noalias [*c]const wchar_t, noalias [*c][*c]wchar_t, c_int) c_ulonglong;
pub extern fn mbsnrtowcs(noalias [*c]wchar_t, noalias [*c][*c]const u8, usize, usize, noalias [*c]mbstate_t) usize;
pub extern fn wcpcpy(noalias [*c]wchar_t, noalias [*c]const wchar_t) [*c]wchar_t;
pub extern fn wcpncpy(noalias [*c]wchar_t, noalias [*c]const wchar_t, usize) [*c]wchar_t;
pub extern fn wcsdup([*c]const wchar_t) [*c]wchar_t;
pub extern fn wcscasecmp([*c]const wchar_t, [*c]const wchar_t) c_int;
pub extern fn wcsncasecmp([*c]const wchar_t, [*c]const wchar_t, n: usize) c_int;
pub extern fn wcsnlen([*c]const wchar_t, usize) usize;
pub extern fn wcsnrtombs(noalias [*c]u8, noalias [*c][*c]const wchar_t, usize, usize, noalias [*c]mbstate_t) usize;
pub extern fn open_wmemstream(__bufp: [*c][*c]wchar_t, __sizep: [*c]usize) [*c]FILE;
pub extern fn fgetwln(noalias [*c]FILE, [*c]usize) [*c]wchar_t;
pub extern fn wcslcat([*c]wchar_t, [*c]const wchar_t, usize) usize;
pub extern fn wcslcpy([*c]wchar_t, [*c]const wchar_t, usize) usize;
pub extern fn imaxabs(j: intmax_t) intmax_t;
pub const imaxdiv_t = extern struct {
    quot: intmax_t = @import("std").mem.zeroes(intmax_t),
    rem: intmax_t = @import("std").mem.zeroes(intmax_t),
};
pub extern fn imaxdiv(__numer: intmax_t, __denom: intmax_t) imaxdiv_t;
pub extern fn strtoimax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) intmax_t;
pub extern fn strtoumax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) uintmax_t;
pub extern fn wcstoimax(noalias __nptr: [*c]const wchar_t, noalias __endptr: [*c][*c]wchar_t, __base: c_int) intmax_t;
pub extern fn wcstoumax(noalias __nptr: [*c]const wchar_t, noalias __endptr: [*c][*c]wchar_t, __base: c_int) uintmax_t;
pub const float_t = f32;
pub const double_t = f64;
pub extern fn __math_errhandling() c_int;
pub extern fn __fpclassifyf(f32) c_int;
pub extern fn __fpclassifyd(f64) c_int;
pub extern fn __fpclassifyl(c_longdouble) c_int;
pub inline fn __inline_isfinitef(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__x == __x) and (__builtin_fabsf(__x) != __builtin_inff()));
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:195:49: warning: TODO implement function '__builtin_inf' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:194:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isfinited(arg___x: f64) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:198:26: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:197:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isfinitel(arg___x: c_longdouble) c_int;
pub inline fn __inline_isinff(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__builtin_fabsf(__x) == __builtin_inff());
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:204:35: warning: TODO implement function '__builtin_inf' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:203:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isinfd(arg___x: f64) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:207:12: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:206:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isinfl(arg___x: c_longdouble) c_int;
pub inline fn __inline_isnanf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnand(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnanl(arg___x: c_longdouble) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnormalf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__inline_isfinitef(__x) != 0) and (__builtin_fabsf(__x) >= 0.000000000000000000000000000000000000011754943508222875));
}
pub inline fn __inline_isnormald(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__inline_isfinited(__x) != 0) and (__builtin_fabs(__x) >= 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014));
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:251:39: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:250:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isnormall(arg___x: c_longdouble) c_int;
pub inline fn __inline_signbitf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_3 = extern union {
        __f: f32,
        __u: c_uint,
    };
    _ = &union_unnamed_3;
    var __u: union_unnamed_3 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(__u.__u >> @intCast(31)));
}
pub inline fn __inline_signbitd(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_4 = extern union {
        __f: f64,
        __u: c_ulonglong,
    };
    _ = &union_unnamed_4;
    var __u: union_unnamed_4 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(@as(c_uint, @truncate(__u.__u >> @intCast(63)))));
}
pub inline fn __inline_signbitl(arg___x: c_longdouble) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_5 = extern union {
        __f: c_longdouble,
        __u: c_ulonglong,
    };
    _ = &union_unnamed_5;
    var __u: union_unnamed_5 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(@as(c_uint, @truncate(__u.__u >> @intCast(63)))));
}
pub extern fn acosf(f32) f32;
pub extern fn acos(f64) f64;
pub extern fn acosl(c_longdouble) c_longdouble;
pub extern fn asinf(f32) f32;
pub extern fn asin(f64) f64;
pub extern fn asinl(c_longdouble) c_longdouble;
pub extern fn atanf(f32) f32;
pub extern fn atan(f64) f64;
pub extern fn atanl(c_longdouble) c_longdouble;
pub extern fn atan2f(f32, f32) f32;
pub extern fn atan2(f64, f64) f64;
pub extern fn atan2l(c_longdouble, c_longdouble) c_longdouble;
pub extern fn cosf(f32) f32;
pub extern fn cos(f64) f64;
pub extern fn cosl(c_longdouble) c_longdouble;
pub extern fn sinf(f32) f32;
pub extern fn sin(f64) f64;
pub extern fn sinl(c_longdouble) c_longdouble;
pub extern fn tanf(f32) f32;
pub extern fn tan(f64) f64;
pub extern fn tanl(c_longdouble) c_longdouble;
pub extern fn acoshf(f32) f32;
pub extern fn acosh(f64) f64;
pub extern fn acoshl(c_longdouble) c_longdouble;
pub extern fn asinhf(f32) f32;
pub extern fn asinh(f64) f64;
pub extern fn asinhl(c_longdouble) c_longdouble;
pub extern fn atanhf(f32) f32;
pub extern fn atanh(f64) f64;
pub extern fn atanhl(c_longdouble) c_longdouble;
pub extern fn coshf(f32) f32;
pub extern fn cosh(f64) f64;
pub extern fn coshl(c_longdouble) c_longdouble;
pub extern fn sinhf(f32) f32;
pub extern fn sinh(f64) f64;
pub extern fn sinhl(c_longdouble) c_longdouble;
pub extern fn tanhf(f32) f32;
pub extern fn tanh(f64) f64;
pub extern fn tanhl(c_longdouble) c_longdouble;
pub extern fn expf(f32) f32;
pub extern fn exp(f64) f64;
pub extern fn expl(c_longdouble) c_longdouble;
pub extern fn exp2f(f32) f32;
pub extern fn exp2(f64) f64;
pub extern fn exp2l(c_longdouble) c_longdouble;
pub extern fn expm1f(f32) f32;
pub extern fn expm1(f64) f64;
pub extern fn expm1l(c_longdouble) c_longdouble;
pub extern fn logf(f32) f32;
pub extern fn log(f64) f64;
pub extern fn logl(c_longdouble) c_longdouble;
pub extern fn log10f(f32) f32;
pub extern fn log10(f64) f64;
pub extern fn log10l(c_longdouble) c_longdouble;
pub extern fn log2f(f32) f32;
pub extern fn log2(f64) f64;
pub extern fn log2l(c_longdouble) c_longdouble;
pub extern fn log1pf(f32) f32;
pub extern fn log1p(f64) f64;
pub extern fn log1pl(c_longdouble) c_longdouble;
pub extern fn logbf(f32) f32;
pub extern fn logb(f64) f64;
pub extern fn logbl(c_longdouble) c_longdouble;
pub extern fn modff(f32, [*c]f32) f32;
pub extern fn modf(f64, [*c]f64) f64;
pub extern fn modfl(c_longdouble, [*c]c_longdouble) c_longdouble;
pub extern fn ldexpf(f32, c_int) f32;
pub extern fn ldexp(f64, c_int) f64;
pub extern fn ldexpl(c_longdouble, c_int) c_longdouble;
pub extern fn frexpf(f32, [*c]c_int) f32;
pub extern fn frexp(f64, [*c]c_int) f64;
pub extern fn frexpl(c_longdouble, [*c]c_int) c_longdouble;
pub extern fn ilogbf(f32) c_int;
pub extern fn ilogb(f64) c_int;
pub extern fn ilogbl(c_longdouble) c_int;
pub extern fn scalbnf(f32, c_int) f32;
pub extern fn scalbn(f64, c_int) f64;
pub extern fn scalbnl(c_longdouble, c_int) c_longdouble;
pub extern fn scalblnf(f32, c_long) f32;
pub extern fn scalbln(f64, c_long) f64;
pub extern fn scalblnl(c_longdouble, c_long) c_longdouble;
pub extern fn fabsf(f32) f32;
pub extern fn fabs(f64) f64;
pub extern fn fabsl(c_longdouble) c_longdouble;
pub extern fn cbrtf(f32) f32;
pub extern fn cbrt(f64) f64;
pub extern fn cbrtl(c_longdouble) c_longdouble;
pub extern fn hypotf(f32, f32) f32;
pub extern fn hypot(f64, f64) f64;
pub extern fn hypotl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn powf(f32, f32) f32;
pub extern fn pow(f64, f64) f64;
pub extern fn powl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn sqrtf(f32) f32;
pub extern fn sqrt(f64) f64;
pub extern fn sqrtl(c_longdouble) c_longdouble;
pub extern fn erff(f32) f32;
pub extern fn erf(f64) f64;
pub extern fn erfl(c_longdouble) c_longdouble;
pub extern fn erfcf(f32) f32;
pub extern fn erfc(f64) f64;
pub extern fn erfcl(c_longdouble) c_longdouble;
pub extern fn lgammaf(f32) f32;
pub extern fn lgamma(f64) f64;
pub extern fn lgammal(c_longdouble) c_longdouble;
pub extern fn tgammaf(f32) f32;
pub extern fn tgamma(f64) f64;
pub extern fn tgammal(c_longdouble) c_longdouble;
pub extern fn ceilf(f32) f32;
pub extern fn ceil(f64) f64;
pub extern fn ceill(c_longdouble) c_longdouble;
pub extern fn floorf(f32) f32;
pub extern fn floor(f64) f64;
pub extern fn floorl(c_longdouble) c_longdouble;
pub extern fn nearbyintf(f32) f32;
pub extern fn nearbyint(f64) f64;
pub extern fn nearbyintl(c_longdouble) c_longdouble;
pub extern fn rintf(f32) f32;
pub extern fn rint(f64) f64;
pub extern fn rintl(c_longdouble) c_longdouble;
pub extern fn lrintf(f32) c_long;
pub extern fn lrint(f64) c_long;
pub extern fn lrintl(c_longdouble) c_long;
pub extern fn roundf(f32) f32;
pub extern fn round(f64) f64;
pub extern fn roundl(c_longdouble) c_longdouble;
pub extern fn lroundf(f32) c_long;
pub extern fn lround(f64) c_long;
pub extern fn lroundl(c_longdouble) c_long;
pub extern fn llrintf(f32) c_longlong;
pub extern fn llrint(f64) c_longlong;
pub extern fn llrintl(c_longdouble) c_longlong;
pub extern fn llroundf(f32) c_longlong;
pub extern fn llround(f64) c_longlong;
pub extern fn llroundl(c_longdouble) c_longlong;
pub extern fn truncf(f32) f32;
pub extern fn trunc(f64) f64;
pub extern fn truncl(c_longdouble) c_longdouble;
pub extern fn fmodf(f32, f32) f32;
pub extern fn fmod(f64, f64) f64;
pub extern fn fmodl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn remainderf(f32, f32) f32;
pub extern fn remainder(f64, f64) f64;
pub extern fn remainderl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn remquof(f32, f32, [*c]c_int) f32;
pub extern fn remquo(f64, f64, [*c]c_int) f64;
pub extern fn remquol(c_longdouble, c_longdouble, [*c]c_int) c_longdouble;
pub extern fn copysignf(f32, f32) f32;
pub extern fn copysign(f64, f64) f64;
pub extern fn copysignl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn nanf([*c]const u8) f32;
pub extern fn nan([*c]const u8) f64;
pub extern fn nanl([*c]const u8) c_longdouble;
pub extern fn nextafterf(f32, f32) f32;
pub extern fn nextafter(f64, f64) f64;
pub extern fn nextafterl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn nexttoward(f64, c_longdouble) f64;
pub extern fn nexttowardf(f32, c_longdouble) f32;
pub extern fn nexttowardl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fdimf(f32, f32) f32;
pub extern fn fdim(f64, f64) f64;
pub extern fn fdiml(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fmaxf(f32, f32) f32;
pub extern fn fmax(f64, f64) f64;
pub extern fn fmaxl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fminf(f32, f32) f32;
pub extern fn fmin(f64, f64) f64;
pub extern fn fminl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fmaf(f32, f32, f32) f32;
pub extern fn fma(f64, f64, f64) f64;
pub extern fn fmal(c_longdouble, c_longdouble, c_longdouble) c_longdouble;
pub extern fn __exp10f(f32) f32;
pub extern fn __exp10(f64) f64;
pub const struct___float2 = extern struct {
    __sinval: f32 = @import("std").mem.zeroes(f32),
    __cosval: f32 = @import("std").mem.zeroes(f32),
};
pub inline fn __sincosf(arg___x: f32, arg___sinp: [*c]f32, arg___cosp: [*c]f32) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___float2 = __sincosf_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub const struct___double2 = extern struct {
    __sinval: f64 = @import("std").mem.zeroes(f64),
    __cosval: f64 = @import("std").mem.zeroes(f64),
};
pub inline fn __sincos(arg___x: f64, arg___sinp: [*c]f64, arg___cosp: [*c]f64) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___double2 = __sincos_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub extern fn __cospif(f32) f32;
pub extern fn __cospi(f64) f64;
pub extern fn __sinpif(f32) f32;
pub extern fn __sinpi(f64) f64;
pub extern fn __tanpif(f32) f32;
pub extern fn __tanpi(f64) f64;
pub inline fn __sincospif(arg___x: f32, arg___sinp: [*c]f32, arg___cosp: [*c]f32) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___float2 = __sincospif_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub inline fn __sincospi(arg___x: f64, arg___sinp: [*c]f64, arg___cosp: [*c]f64) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___double2 = __sincospi_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub extern fn __sincosf_stret(f32) struct___float2;
pub extern fn __sincos_stret(f64) struct___double2;
pub extern fn __sincospif_stret(f32) struct___float2;
pub extern fn __sincospi_stret(f64) struct___double2;
pub extern fn j0(f64) f64;
pub extern fn j1(f64) f64;
pub extern fn jn(c_int, f64) f64;
pub extern fn y0(f64) f64;
pub extern fn y1(f64) f64;
pub extern fn yn(c_int, f64) f64;
pub extern fn scalb(f64, f64) f64;
pub extern var signgam: c_int;
pub const struct_exception = extern struct {
    type: c_int = @import("std").mem.zeroes(c_int),
    name: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    arg1: f64 = @import("std").mem.zeroes(f64),
    arg2: f64 = @import("std").mem.zeroes(f64),
    retval: f64 = @import("std").mem.zeroes(f64),
};
pub const SDL_FALSE: c_int = 0;
pub const SDL_TRUE: c_int = 1;
pub const SDL_bool = c_uint;
pub const Sint8 = i8;
pub const Uint8 = u8;
pub const Sint16 = i16;
pub const Uint16 = u16;
pub const Sint32 = i32;
pub const Uint32 = u32;
pub const Sint64 = i64;
pub const Uint64 = u64;
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration
pub const DUMMY_ENUM_VALUE: c_int = 0;
pub const SDL_DUMMY_ENUM = c_uint;
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration
pub extern fn SDL_malloc(size: usize) ?*anyopaque;
pub extern fn SDL_calloc(nmemb: usize, size: usize) ?*anyopaque;
pub extern fn SDL_realloc(mem: ?*anyopaque, size: usize) ?*anyopaque;
pub extern fn SDL_free(mem: ?*anyopaque) void;
pub const SDL_malloc_func = ?*const fn (usize) callconv(.C) ?*anyopaque;
pub const SDL_calloc_func = ?*const fn (usize, usize) callconv(.C) ?*anyopaque;
pub const SDL_realloc_func = ?*const fn (?*anyopaque, usize) callconv(.C) ?*anyopaque;
pub const SDL_free_func = ?*const fn (?*anyopaque) callconv(.C) void;
pub extern fn SDL_GetOriginalMemoryFunctions(malloc_func: [*c]SDL_malloc_func, calloc_func: [*c]SDL_calloc_func, realloc_func: [*c]SDL_realloc_func, free_func: [*c]SDL_free_func) void;
pub extern fn SDL_GetMemoryFunctions(malloc_func: [*c]SDL_malloc_func, calloc_func: [*c]SDL_calloc_func, realloc_func: [*c]SDL_realloc_func, free_func: [*c]SDL_free_func) void;
pub extern fn SDL_SetMemoryFunctions(malloc_func: SDL_malloc_func, calloc_func: SDL_calloc_func, realloc_func: SDL_realloc_func, free_func: SDL_free_func) c_int;
pub extern fn SDL_GetNumAllocations() c_int;
pub extern fn SDL_getenv(name: [*c]const u8) [*c]u8;
pub extern fn SDL_setenv(name: [*c]const u8, value: [*c]const u8, overwrite: c_int) c_int;
pub extern fn SDL_qsort(base: ?*anyopaque, nmemb: usize, size: usize, compare: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) void;
pub extern fn SDL_bsearch(key: ?*const anyopaque, base: ?*const anyopaque, nmemb: usize, size: usize, compare: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) c_int) ?*anyopaque;
pub extern fn SDL_abs(x: c_int) c_int;
pub extern fn SDL_isalpha(x: c_int) c_int;
pub extern fn SDL_isalnum(x: c_int) c_int;
pub extern fn SDL_isblank(x: c_int) c_int;
pub extern fn SDL_iscntrl(x: c_int) c_int;
pub extern fn SDL_isdigit(x: c_int) c_int;
pub extern fn SDL_isxdigit(x: c_int) c_int;
pub extern fn SDL_ispunct(x: c_int) c_int;
pub extern fn SDL_isspace(x: c_int) c_int;
pub extern fn SDL_isupper(x: c_int) c_int;
pub extern fn SDL_islower(x: c_int) c_int;
pub extern fn SDL_isprint(x: c_int) c_int;
pub extern fn SDL_isgraph(x: c_int) c_int;
pub extern fn SDL_toupper(x: c_int) c_int;
pub extern fn SDL_tolower(x: c_int) c_int;
pub extern fn SDL_crc16(crc: Uint16, data: ?*const anyopaque, len: usize) Uint16;
pub extern fn SDL_crc32(crc: Uint32, data: ?*const anyopaque, len: usize) Uint32;
pub extern fn SDL_memset(dst: ?*anyopaque, c: c_int, len: usize) ?*anyopaque;
pub inline fn SDL_memset4(arg_dst: ?*anyopaque, arg_val: Uint32, arg_dwords: usize) void {
    var dst = arg_dst;
    _ = &dst;
    var val = arg_val;
    _ = &val;
    var dwords = arg_dwords;
    _ = &dwords;
    memset_pattern4(dst, @as(?*const anyopaque, @ptrCast(&val)), dwords *% @as(usize, @bitCast(@as(c_long, @as(c_int, 4)))));
}
pub extern fn SDL_memcpy(dst: ?*anyopaque, src: ?*const anyopaque, len: usize) ?*anyopaque;
pub extern fn SDL_memmove(dst: ?*anyopaque, src: ?*const anyopaque, len: usize) ?*anyopaque;
pub extern fn SDL_memcmp(s1: ?*const anyopaque, s2: ?*const anyopaque, len: usize) c_int;
pub extern fn SDL_wcslen(wstr: [*c]const wchar_t) usize;
pub extern fn SDL_wcslcpy(dst: [*c]wchar_t, src: [*c]const wchar_t, maxlen: usize) usize;
pub extern fn SDL_wcslcat(dst: [*c]wchar_t, src: [*c]const wchar_t, maxlen: usize) usize;
pub extern fn SDL_wcsdup(wstr: [*c]const wchar_t) [*c]wchar_t;
pub extern fn SDL_wcsstr(haystack: [*c]const wchar_t, needle: [*c]const wchar_t) [*c]wchar_t;
pub extern fn SDL_wcscmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t) c_int;
pub extern fn SDL_wcsncmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t, maxlen: usize) c_int;
pub extern fn SDL_wcscasecmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t) c_int;
pub extern fn SDL_wcsncasecmp(str1: [*c]const wchar_t, str2: [*c]const wchar_t, len: usize) c_int;
pub extern fn SDL_strlen(str: [*c]const u8) usize;
pub extern fn SDL_strlcpy(dst: [*c]u8, src: [*c]const u8, maxlen: usize) usize;
pub extern fn SDL_utf8strlcpy(dst: [*c]u8, src: [*c]const u8, dst_bytes: usize) usize;
pub extern fn SDL_strlcat(dst: [*c]u8, src: [*c]const u8, maxlen: usize) usize;
pub extern fn SDL_strdup(str: [*c]const u8) [*c]u8;
pub extern fn SDL_strrev(str: [*c]u8) [*c]u8;
pub extern fn SDL_strupr(str: [*c]u8) [*c]u8;
pub extern fn SDL_strlwr(str: [*c]u8) [*c]u8;
pub extern fn SDL_strchr(str: [*c]const u8, c: c_int) [*c]u8;
pub extern fn SDL_strrchr(str: [*c]const u8, c: c_int) [*c]u8;
pub extern fn SDL_strstr(haystack: [*c]const u8, needle: [*c]const u8) [*c]u8;
pub extern fn SDL_strtokr(s1: [*c]u8, s2: [*c]const u8, saveptr: [*c][*c]u8) [*c]u8;
pub extern fn SDL_utf8strlen(str: [*c]const u8) usize;
pub extern fn SDL_utf8strnlen(str: [*c]const u8, bytes: usize) usize;
pub extern fn SDL_itoa(value: c_int, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_uitoa(value: c_uint, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_ltoa(value: c_long, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_ultoa(value: c_ulong, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_lltoa(value: Sint64, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_ulltoa(value: Uint64, str: [*c]u8, radix: c_int) [*c]u8;
pub extern fn SDL_atoi(str: [*c]const u8) c_int;
pub extern fn SDL_atof(str: [*c]const u8) f64;
pub extern fn SDL_strtol(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) c_long;
pub extern fn SDL_strtoul(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) c_ulong;
pub extern fn SDL_strtoll(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) Sint64;
pub extern fn SDL_strtoull(str: [*c]const u8, endp: [*c][*c]u8, base: c_int) Uint64;
pub extern fn SDL_strtod(str: [*c]const u8, endp: [*c][*c]u8) f64;
pub extern fn SDL_strcmp(str1: [*c]const u8, str2: [*c]const u8) c_int;
pub extern fn SDL_strncmp(str1: [*c]const u8, str2: [*c]const u8, maxlen: usize) c_int;
pub extern fn SDL_strcasecmp(str1: [*c]const u8, str2: [*c]const u8) c_int;
pub extern fn SDL_strncasecmp(str1: [*c]const u8, str2: [*c]const u8, len: usize) c_int;
pub extern fn SDL_sscanf(text: [*c]const u8, fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_vsscanf(text: [*c]const u8, fmt: [*c]const u8, ap: va_list) c_int;
pub extern fn SDL_snprintf(text: [*c]u8, maxlen: usize, fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_vsnprintf(text: [*c]u8, maxlen: usize, fmt: [*c]const u8, ap: va_list) c_int;
pub extern fn SDL_asprintf(strp: [*c][*c]u8, fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_vasprintf(strp: [*c][*c]u8, fmt: [*c]const u8, ap: va_list) c_int;
pub extern fn SDL_acos(x: f64) f64;
pub extern fn SDL_acosf(x: f32) f32;
pub extern fn SDL_asin(x: f64) f64;
pub extern fn SDL_asinf(x: f32) f32;
pub extern fn SDL_atan(x: f64) f64;
pub extern fn SDL_atanf(x: f32) f32;
pub extern fn SDL_atan2(y: f64, x: f64) f64;
pub extern fn SDL_atan2f(y: f32, x: f32) f32;
pub extern fn SDL_ceil(x: f64) f64;
pub extern fn SDL_ceilf(x: f32) f32;
pub extern fn SDL_copysign(x: f64, y: f64) f64;
pub extern fn SDL_copysignf(x: f32, y: f32) f32;
pub extern fn SDL_cos(x: f64) f64;
pub extern fn SDL_cosf(x: f32) f32;
pub extern fn SDL_exp(x: f64) f64;
pub extern fn SDL_expf(x: f32) f32;
pub extern fn SDL_fabs(x: f64) f64;
pub extern fn SDL_fabsf(x: f32) f32;
pub extern fn SDL_floor(x: f64) f64;
pub extern fn SDL_floorf(x: f32) f32;
pub extern fn SDL_trunc(x: f64) f64;
pub extern fn SDL_truncf(x: f32) f32;
pub extern fn SDL_fmod(x: f64, y: f64) f64;
pub extern fn SDL_fmodf(x: f32, y: f32) f32;
pub extern fn SDL_log(x: f64) f64;
pub extern fn SDL_logf(x: f32) f32;
pub extern fn SDL_log10(x: f64) f64;
pub extern fn SDL_log10f(x: f32) f32;
pub extern fn SDL_pow(x: f64, y: f64) f64;
pub extern fn SDL_powf(x: f32, y: f32) f32;
pub extern fn SDL_round(x: f64) f64;
pub extern fn SDL_roundf(x: f32) f32;
pub extern fn SDL_lround(x: f64) c_long;
pub extern fn SDL_lroundf(x: f32) c_long;
pub extern fn SDL_scalbn(x: f64, n: c_int) f64;
pub extern fn SDL_scalbnf(x: f32, n: c_int) f32;
pub extern fn SDL_sin(x: f64) f64;
pub extern fn SDL_sinf(x: f32) f32;
pub extern fn SDL_sqrt(x: f64) f64;
pub extern fn SDL_sqrtf(x: f32) f32;
pub extern fn SDL_tan(x: f64) f64;
pub extern fn SDL_tanf(x: f32) f32;
pub const struct__SDL_iconv_t = opaque {};
pub const SDL_iconv_t = ?*struct__SDL_iconv_t;
pub extern fn SDL_iconv_open(tocode: [*c]const u8, fromcode: [*c]const u8) SDL_iconv_t;
pub extern fn SDL_iconv_close(cd: SDL_iconv_t) c_int;
pub extern fn SDL_iconv(cd: SDL_iconv_t, inbuf: [*c][*c]const u8, inbytesleft: [*c]usize, outbuf: [*c][*c]u8, outbytesleft: [*c]usize) usize;
pub extern fn SDL_iconv_string(tocode: [*c]const u8, fromcode: [*c]const u8, inbuf: [*c]const u8, inbytesleft: usize) [*c]u8;
pub inline fn SDL_memcpy4(arg_dst: ?*anyopaque, arg_src: ?*const anyopaque, arg_dwords: usize) ?*anyopaque {
    var dst = arg_dst;
    _ = &dst;
    var src = arg_src;
    _ = &src;
    var dwords = arg_dwords;
    _ = &dwords;
    return SDL_memcpy(dst, src, dwords *% @as(usize, @bitCast(@as(c_long, @as(c_int, 4)))));
}
pub inline fn SDL_size_mul_overflow(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var ret = arg_ret;
    _ = &ret;
    if ((a != @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) and (b > (@as(c_ulong, 18446744073709551615) / a))) {
        return -@as(c_int, 1);
    }
    ret.* = a *% b;
    return 0;
}
pub inline fn _SDL_size_mul_overflow_builtin(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var ret = arg_ret;
    _ = &ret;
    return if (@as(c_int, @intFromBool(__builtin_mul_overflow(a, b, ret))) == @as(c_int, 0)) @as(c_int, 0) else -@as(c_int, 1);
}
pub inline fn SDL_size_add_overflow(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var ret = arg_ret;
    _ = &ret;
    if (b > (@as(c_ulong, 18446744073709551615) -% a)) {
        return -@as(c_int, 1);
    }
    ret.* = a +% b;
    return 0;
}
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:816:12: warning: TODO implement function '__builtin_add_overflow' in std.zig.c_builtins

// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:812:22: warning: unable to translate function, demoted to extern
pub extern fn _SDL_size_add_overflow_builtin(arg_a: usize, arg_b: usize, arg_ret: [*c]usize) c_int;
pub const SDL_main_func = ?*const fn (c_int, [*c][*c]u8) callconv(.C) c_int;
pub extern fn SDL_main(argc: c_int, argv: [*c][*c]u8) c_int;
pub extern fn SDL_SetMainReady() void;
pub const SDL_ASSERTION_RETRY: c_int = 0;
pub const SDL_ASSERTION_BREAK: c_int = 1;
pub const SDL_ASSERTION_ABORT: c_int = 2;
pub const SDL_ASSERTION_IGNORE: c_int = 3;
pub const SDL_ASSERTION_ALWAYS_IGNORE: c_int = 4;
pub const SDL_AssertState = c_uint;
pub const struct_SDL_AssertData = extern struct {
    always_ignore: c_int = @import("std").mem.zeroes(c_int),
    trigger_count: c_uint = @import("std").mem.zeroes(c_uint),
    condition: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    filename: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    linenum: c_int = @import("std").mem.zeroes(c_int),
    function: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    next: [*c]const struct_SDL_AssertData = @import("std").mem.zeroes([*c]const struct_SDL_AssertData),
};
pub const SDL_AssertData = struct_SDL_AssertData;
pub extern fn SDL_ReportAssertion([*c]SDL_AssertData, [*c]const u8, [*c]const u8, c_int) SDL_AssertState;
pub const SDL_AssertionHandler = ?*const fn ([*c]const SDL_AssertData, ?*anyopaque) callconv(.C) SDL_AssertState;
pub extern fn SDL_SetAssertionHandler(handler: SDL_AssertionHandler, userdata: ?*anyopaque) void;
pub extern fn SDL_GetDefaultAssertionHandler() SDL_AssertionHandler;
pub extern fn SDL_GetAssertionHandler(puserdata: [*c]?*anyopaque) SDL_AssertionHandler;
pub extern fn SDL_GetAssertionReport() [*c]const SDL_AssertData;
pub extern fn SDL_ResetAssertionReport() void;
pub const SDL_SpinLock = c_int;
pub extern fn SDL_AtomicTryLock(lock: [*c]SDL_SpinLock) SDL_bool;
pub extern fn SDL_AtomicLock(lock: [*c]SDL_SpinLock) void;
pub extern fn SDL_AtomicUnlock(lock: [*c]SDL_SpinLock) void;
pub extern fn SDL_MemoryBarrierReleaseFunction() void;
pub extern fn SDL_MemoryBarrierAcquireFunction() void;
pub const SDL_atomic_t = extern struct {
    value: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn SDL_AtomicCAS(a: [*c]SDL_atomic_t, oldval: c_int, newval: c_int) SDL_bool;
pub extern fn SDL_AtomicSet(a: [*c]SDL_atomic_t, v: c_int) c_int;
pub extern fn SDL_AtomicGet(a: [*c]SDL_atomic_t) c_int;
pub extern fn SDL_AtomicAdd(a: [*c]SDL_atomic_t, v: c_int) c_int;
pub extern fn SDL_AtomicCASPtr(a: [*c]?*anyopaque, oldval: ?*anyopaque, newval: ?*anyopaque) SDL_bool;
pub extern fn SDL_AtomicSetPtr(a: [*c]?*anyopaque, v: ?*anyopaque) ?*anyopaque;
pub extern fn SDL_AtomicGetPtr(a: [*c]?*anyopaque) ?*anyopaque;
pub extern fn SDL_SetError(fmt: [*c]const u8, ...) c_int;
pub extern fn SDL_GetError() [*c]const u8;
pub extern fn SDL_GetErrorMsg(errstr: [*c]u8, maxlen: c_int) [*c]u8;
pub extern fn SDL_ClearError() void;
pub const SDL_ENOMEM: c_int = 0;
pub const SDL_EFREAD: c_int = 1;
pub const SDL_EFWRITE: c_int = 2;
pub const SDL_EFSEEK: c_int = 3;
pub const SDL_UNSUPPORTED: c_int = 4;
pub const SDL_LASTERROR: c_int = 5;
pub const SDL_errorcode = c_uint;
pub extern fn SDL_Error(code: SDL_errorcode) c_int;
pub inline fn SDL_SwapFloat(arg_x: f32) f32 {
    var x = arg_x;
    _ = &x;
    const union_unnamed_6 = extern union {
        f: f32,
        ui32: Uint32,
    };
    _ = &union_unnamed_6;
    var swapper: union_unnamed_6 = undefined;
    _ = &swapper;
    swapper.f = x;
    swapper.ui32 = __builtin_bswap32(swapper.ui32);
    return swapper.f;
}
pub const struct_SDL_mutex = opaque {};
pub const SDL_mutex = struct_SDL_mutex;
pub extern fn SDL_CreateMutex() ?*SDL_mutex;
pub extern fn SDL_LockMutex(mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_TryLockMutex(mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_UnlockMutex(mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_DestroyMutex(mutex: ?*SDL_mutex) void;
pub const struct_SDL_semaphore = opaque {};
pub const SDL_sem = struct_SDL_semaphore;
pub extern fn SDL_CreateSemaphore(initial_value: Uint32) ?*SDL_sem;
pub extern fn SDL_DestroySemaphore(sem: ?*SDL_sem) void;
pub extern fn SDL_SemWait(sem: ?*SDL_sem) c_int;
pub extern fn SDL_SemTryWait(sem: ?*SDL_sem) c_int;
pub extern fn SDL_SemWaitTimeout(sem: ?*SDL_sem, ms: Uint32) c_int;
pub extern fn SDL_SemPost(sem: ?*SDL_sem) c_int;
pub extern fn SDL_SemValue(sem: ?*SDL_sem) Uint32;
pub const struct_SDL_cond = opaque {};
pub const SDL_cond = struct_SDL_cond;
pub extern fn SDL_CreateCond() ?*SDL_cond;
pub extern fn SDL_DestroyCond(cond: ?*SDL_cond) void;
pub extern fn SDL_CondSignal(cond: ?*SDL_cond) c_int;
pub extern fn SDL_CondBroadcast(cond: ?*SDL_cond) c_int;
pub extern fn SDL_CondWait(cond: ?*SDL_cond, mutex: ?*SDL_mutex) c_int;
pub extern fn SDL_CondWaitTimeout(cond: ?*SDL_cond, mutex: ?*SDL_mutex, ms: Uint32) c_int;
pub const struct_SDL_Thread = opaque {};
pub const SDL_Thread = struct_SDL_Thread;
pub const SDL_threadID = c_ulong;
pub const SDL_TLSID = c_uint;
pub const SDL_THREAD_PRIORITY_LOW: c_int = 0;
pub const SDL_THREAD_PRIORITY_NORMAL: c_int = 1;
pub const SDL_THREAD_PRIORITY_HIGH: c_int = 2;
pub const SDL_THREAD_PRIORITY_TIME_CRITICAL: c_int = 3;
pub const SDL_ThreadPriority = c_uint;
pub const SDL_ThreadFunction = ?*const fn (?*anyopaque) callconv(.C) c_int;
pub extern fn SDL_CreateThread(@"fn": SDL_ThreadFunction, name: [*c]const u8, data: ?*anyopaque) ?*SDL_Thread;
pub extern fn SDL_CreateThreadWithStackSize(@"fn": SDL_ThreadFunction, name: [*c]const u8, stacksize: usize, data: ?*anyopaque) ?*SDL_Thread;
pub extern fn SDL_GetThreadName(thread: ?*SDL_Thread) [*c]const u8;
pub extern fn SDL_ThreadID() SDL_threadID;
pub extern fn SDL_GetThreadID(thread: ?*SDL_Thread) SDL_threadID;
pub extern fn SDL_SetThreadPriority(priority: SDL_ThreadPriority) c_int;
pub extern fn SDL_WaitThread(thread: ?*SDL_Thread, status: [*c]c_int) void;
pub extern fn SDL_DetachThread(thread: ?*SDL_Thread) void;
pub extern fn SDL_TLSCreate() SDL_TLSID;
pub extern fn SDL_TLSGet(id: SDL_TLSID) ?*anyopaque;
pub extern fn SDL_TLSSet(id: SDL_TLSID, value: ?*const anyopaque, destructor: ?*const fn (?*anyopaque) callconv(.C) void) c_int;
pub extern fn SDL_TLSCleanup() void;
const struct_unnamed_8 = extern struct {
    autoclose: SDL_bool = @import("std").mem.zeroes(SDL_bool),
    fp: [*c]FILE = @import("std").mem.zeroes([*c]FILE),
};
const struct_unnamed_9 = extern struct {
    base: [*c]Uint8 = @import("std").mem.zeroes([*c]Uint8),
    here: [*c]Uint8 = @import("std").mem.zeroes([*c]Uint8),
    stop: [*c]Uint8 = @import("std").mem.zeroes([*c]Uint8),
};
const struct_unnamed_10 = extern struct {
    data1: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    data2: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
const union_unnamed_7 = extern union {
    stdio: struct_unnamed_8,
    mem: struct_unnamed_9,
    unknown: struct_unnamed_10,
};
pub const struct_SDL_RWops = extern struct {
    size: ?*const fn ([*c]struct_SDL_RWops) callconv(.C) Sint64 = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops) callconv(.C) Sint64),
    seek: ?*const fn ([*c]struct_SDL_RWops, Sint64, c_int) callconv(.C) Sint64 = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops, Sint64, c_int) callconv(.C) Sint64),
    read: ?*const fn ([*c]struct_SDL_RWops, ?*anyopaque, usize, usize) callconv(.C) usize = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops, ?*anyopaque, usize, usize) callconv(.C) usize),
    write: ?*const fn ([*c]struct_SDL_RWops, ?*const anyopaque, usize, usize) callconv(.C) usize = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops, ?*const anyopaque, usize, usize) callconv(.C) usize),
    close: ?*const fn ([*c]struct_SDL_RWops) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn ([*c]struct_SDL_RWops) callconv(.C) c_int),
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    hidden: union_unnamed_7 = @import("std").mem.zeroes(union_unnamed_7),
};
pub const SDL_RWops = struct_SDL_RWops;
pub extern fn SDL_RWFromFile(file: [*c]const u8, mode: [*c]const u8) [*c]SDL_RWops;
pub extern fn SDL_RWFromFP(fp: [*c]FILE, autoclose: SDL_bool) [*c]SDL_RWops;
pub extern fn SDL_RWFromMem(mem: ?*anyopaque, size: c_int) [*c]SDL_RWops;
pub extern fn SDL_RWFromConstMem(mem: ?*const anyopaque, size: c_int) [*c]SDL_RWops;
pub extern fn SDL_AllocRW() [*c]SDL_RWops;
pub extern fn SDL_FreeRW(area: [*c]SDL_RWops) void;
pub extern fn SDL_RWsize(context: [*c]SDL_RWops) Sint64;
pub extern fn SDL_RWseek(context: [*c]SDL_RWops, offset: Sint64, whence: c_int) Sint64;
pub extern fn SDL_RWtell(context: [*c]SDL_RWops) Sint64;
pub extern fn SDL_RWread(context: [*c]SDL_RWops, ptr: ?*anyopaque, size: usize, maxnum: usize) usize;
pub extern fn SDL_RWwrite(context: [*c]SDL_RWops, ptr: ?*const anyopaque, size: usize, num: usize) usize;
pub extern fn SDL_RWclose(context: [*c]SDL_RWops) c_int;
pub extern fn SDL_LoadFile_RW(src: [*c]SDL_RWops, datasize: [*c]usize, freesrc: c_int) ?*anyopaque;
pub extern fn SDL_LoadFile(file: [*c]const u8, datasize: [*c]usize) ?*anyopaque;
pub extern fn SDL_ReadU8(src: [*c]SDL_RWops) Uint8;
pub extern fn SDL_ReadLE16(src: [*c]SDL_RWops) Uint16;
pub extern fn SDL_ReadBE16(src: [*c]SDL_RWops) Uint16;
pub extern fn SDL_ReadLE32(src: [*c]SDL_RWops) Uint32;
pub extern fn SDL_ReadBE32(src: [*c]SDL_RWops) Uint32;
pub extern fn SDL_ReadLE64(src: [*c]SDL_RWops) Uint64;
pub extern fn SDL_ReadBE64(src: [*c]SDL_RWops) Uint64;
pub extern fn SDL_WriteU8(dst: [*c]SDL_RWops, value: Uint8) usize;
pub extern fn SDL_WriteLE16(dst: [*c]SDL_RWops, value: Uint16) usize;
pub extern fn SDL_WriteBE16(dst: [*c]SDL_RWops, value: Uint16) usize;
pub extern fn SDL_WriteLE32(dst: [*c]SDL_RWops, value: Uint32) usize;
pub extern fn SDL_WriteBE32(dst: [*c]SDL_RWops, value: Uint32) usize;
pub extern fn SDL_WriteLE64(dst: [*c]SDL_RWops, value: Uint64) usize;
pub extern fn SDL_WriteBE64(dst: [*c]SDL_RWops, value: Uint64) usize;
pub const SDL_AudioFormat = Uint16;
pub const SDL_AudioCallback = ?*const fn (?*anyopaque, [*c]Uint8, c_int) callconv(.C) void;
pub const struct_SDL_AudioSpec = extern struct {
    freq: c_int = @import("std").mem.zeroes(c_int),
    format: SDL_AudioFormat = @import("std").mem.zeroes(SDL_AudioFormat),
    channels: Uint8 = @import("std").mem.zeroes(Uint8),
    silence: Uint8 = @import("std").mem.zeroes(Uint8),
    samples: Uint16 = @import("std").mem.zeroes(Uint16),
    padding: Uint16 = @import("std").mem.zeroes(Uint16),
    size: Uint32 = @import("std").mem.zeroes(Uint32),
    callback: SDL_AudioCallback = @import("std").mem.zeroes(SDL_AudioCallback),
    userdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const SDL_AudioSpec = struct_SDL_AudioSpec;
pub const SDL_AudioFilter = ?*const fn ([*c]struct_SDL_AudioCVT, SDL_AudioFormat) callconv(.C) void;
pub const struct_SDL_AudioCVT = extern struct {
    needed: c_int align(1) = @import("std").mem.zeroes(c_int),
    src_format: SDL_AudioFormat align(1) = @import("std").mem.zeroes(SDL_AudioFormat),
    dst_format: SDL_AudioFormat align(1) = @import("std").mem.zeroes(SDL_AudioFormat),
    rate_incr: f64 align(1) = @import("std").mem.zeroes(f64),
    buf: [*c]Uint8 align(1) = @import("std").mem.zeroes([*c]Uint8),
    len: c_int align(1) = @import("std").mem.zeroes(c_int),
    len_cvt: c_int align(1) = @import("std").mem.zeroes(c_int),
    len_mult: c_int align(1) = @import("std").mem.zeroes(c_int),
    len_ratio: f64 align(1) = @import("std").mem.zeroes(f64),
    filters: [10]SDL_AudioFilter align(1) = @import("std").mem.zeroes([10]SDL_AudioFilter),
    filter_index: c_int align(1) = @import("std").mem.zeroes(c_int),
};
pub const SDL_AudioCVT = struct_SDL_AudioCVT;
pub extern fn SDL_GetNumAudioDrivers() c_int;
pub extern fn SDL_GetAudioDriver(index: c_int) [*c]const u8;
pub extern fn SDL_AudioInit(driver_name: [*c]const u8) c_int;
pub extern fn SDL_AudioQuit() void;
pub extern fn SDL_GetCurrentAudioDriver() [*c]const u8;
pub extern fn SDL_OpenAudio(desired: [*c]SDL_AudioSpec, obtained: [*c]SDL_AudioSpec) c_int;
pub const SDL_AudioDeviceID = Uint32;
pub extern fn SDL_GetNumAudioDevices(iscapture: c_int) c_int;
pub extern fn SDL_GetAudioDeviceName(index: c_int, iscapture: c_int) [*c]const u8;
pub extern fn SDL_GetAudioDeviceSpec(index: c_int, iscapture: c_int, spec: [*c]SDL_AudioSpec) c_int;
pub extern fn SDL_GetDefaultAudioInfo(name: [*c][*c]u8, spec: [*c]SDL_AudioSpec, iscapture: c_int) c_int;
pub extern fn SDL_OpenAudioDevice(device: [*c]const u8, iscapture: c_int, desired: [*c]const SDL_AudioSpec, obtained: [*c]SDL_AudioSpec, allowed_changes: c_int) SDL_AudioDeviceID;
pub const SDL_AUDIO_STOPPED: c_int = 0;
pub const SDL_AUDIO_PLAYING: c_int = 1;
pub const SDL_AUDIO_PAUSED: c_int = 2;
pub const SDL_AudioStatus = c_uint;
pub extern fn SDL_GetAudioStatus() SDL_AudioStatus;
pub extern fn SDL_GetAudioDeviceStatus(dev: SDL_AudioDeviceID) SDL_AudioStatus;
pub extern fn SDL_PauseAudio(pause_on: c_int) void;
pub extern fn SDL_PauseAudioDevice(dev: SDL_AudioDeviceID, pause_on: c_int) void;
pub extern fn SDL_LoadWAV_RW(src: [*c]SDL_RWops, freesrc: c_int, spec: [*c]SDL_AudioSpec, audio_buf: [*c][*c]Uint8, audio_len: [*c]Uint32) [*c]SDL_AudioSpec;
pub extern fn SDL_FreeWAV(audio_buf: [*c]Uint8) void;
pub extern fn SDL_BuildAudioCVT(cvt: [*c]SDL_AudioCVT, src_format: SDL_AudioFormat, src_channels: Uint8, src_rate: c_int, dst_format: SDL_AudioFormat, dst_channels: Uint8, dst_rate: c_int) c_int;
pub extern fn SDL_ConvertAudio(cvt: [*c]SDL_AudioCVT) c_int;
pub const struct__SDL_AudioStream = opaque {};
pub const SDL_AudioStream = struct__SDL_AudioStream;
pub extern fn SDL_NewAudioStream(src_format: SDL_AudioFormat, src_channels: Uint8, src_rate: c_int, dst_format: SDL_AudioFormat, dst_channels: Uint8, dst_rate: c_int) ?*SDL_AudioStream;
pub extern fn SDL_AudioStreamPut(stream: ?*SDL_AudioStream, buf: ?*const anyopaque, len: c_int) c_int;
pub extern fn SDL_AudioStreamGet(stream: ?*SDL_AudioStream, buf: ?*anyopaque, len: c_int) c_int;
pub extern fn SDL_AudioStreamAvailable(stream: ?*SDL_AudioStream) c_int;
pub extern fn SDL_AudioStreamFlush(stream: ?*SDL_AudioStream) c_int;
pub extern fn SDL_AudioStreamClear(stream: ?*SDL_AudioStream) void;
pub extern fn SDL_FreeAudioStream(stream: ?*SDL_AudioStream) void;
pub extern fn SDL_MixAudio(dst: [*c]Uint8, src: [*c]const Uint8, len: Uint32, volume: c_int) void;
pub extern fn SDL_MixAudioFormat(dst: [*c]Uint8, src: [*c]const Uint8, format: SDL_AudioFormat, len: Uint32, volume: c_int) void;
pub extern fn SDL_QueueAudio(dev: SDL_AudioDeviceID, data: ?*const anyopaque, len: Uint32) c_int;
pub extern fn SDL_DequeueAudio(dev: SDL_AudioDeviceID, data: ?*anyopaque, len: Uint32) Uint32;
pub extern fn SDL_GetQueuedAudioSize(dev: SDL_AudioDeviceID) Uint32;
pub extern fn SDL_ClearQueuedAudio(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_LockAudio() void;
pub extern fn SDL_LockAudioDevice(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_UnlockAudio() void;
pub extern fn SDL_UnlockAudioDevice(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_CloseAudio() void;
pub extern fn SDL_CloseAudioDevice(dev: SDL_AudioDeviceID) void;
pub extern fn SDL_SetClipboardText(text: [*c]const u8) c_int;
pub extern fn SDL_GetClipboardText() [*c]u8;
pub extern fn SDL_HasClipboardText() SDL_bool;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_bf16.h:14:16: warning: unsupported builtin type
pub const bfloat16_t = @compileError("unable to resolve typedef child type");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_bf16.h:14:16
pub const float32_t = f32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_vector_types.h:18:16: warning: unsupported builtin type
pub const float16_t = @compileError("unable to resolve typedef child type");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_vector_types.h:18:16
pub const float64_t = f64;
pub const int8x8_t = @Vector(8, i8);
pub const int8x16_t = @Vector(16, i8);
pub const int16x4_t = @Vector(4, i16);
pub const int16x8_t = @Vector(8, i16);
pub const int32x2_t = @Vector(2, i32);
pub const int32x4_t = @Vector(4, i32);
pub const int64x1_t = @Vector(1, i64);
pub const int64x2_t = @Vector(2, i64);
pub const uint8x8_t = @Vector(8, u8);
pub const uint8x16_t = @Vector(16, u8);
pub const uint16x4_t = @Vector(4, u16);
pub const uint16x8_t = @Vector(8, u16);
pub const uint32x2_t = @Vector(2, u32);
pub const uint32x4_t = @Vector(4, u32);
pub const uint64x1_t = @Vector(1, u64);
pub const uint64x2_t = @Vector(2, u64);
pub const float16x4_t = @Vector(4, float16_t);
pub const float16x8_t = @Vector(8, float16_t);
pub const float32x2_t = @Vector(2, float32_t);
pub const float32x4_t = @Vector(4, float32_t);
pub const float64x1_t = @Vector(1, float64_t);
pub const float64x2_t = @Vector(2, float64_t);
pub const struct_int8x8x2_t = extern struct {
    val: [2]int8x8_t = @import("std").mem.zeroes([2]int8x8_t),
};
pub const int8x8x2_t = struct_int8x8x2_t;
pub const struct_int8x16x2_t = extern struct {
    val: [2]int8x16_t = @import("std").mem.zeroes([2]int8x16_t),
};
pub const int8x16x2_t = struct_int8x16x2_t;
pub const struct_int16x4x2_t = extern struct {
    val: [2]int16x4_t = @import("std").mem.zeroes([2]int16x4_t),
};
pub const int16x4x2_t = struct_int16x4x2_t;
pub const struct_int16x8x2_t = extern struct {
    val: [2]int16x8_t = @import("std").mem.zeroes([2]int16x8_t),
};
pub const int16x8x2_t = struct_int16x8x2_t;
pub const struct_int32x2x2_t = extern struct {
    val: [2]int32x2_t = @import("std").mem.zeroes([2]int32x2_t),
};
pub const int32x2x2_t = struct_int32x2x2_t;
pub const struct_int32x4x2_t = extern struct {
    val: [2]int32x4_t = @import("std").mem.zeroes([2]int32x4_t),
};
pub const int32x4x2_t = struct_int32x4x2_t;
pub const struct_int64x1x2_t = extern struct {
    val: [2]int64x1_t = @import("std").mem.zeroes([2]int64x1_t),
};
pub const int64x1x2_t = struct_int64x1x2_t;
pub const struct_int64x2x2_t = extern struct {
    val: [2]int64x2_t = @import("std").mem.zeroes([2]int64x2_t),
};
pub const int64x2x2_t = struct_int64x2x2_t;
pub const struct_uint8x8x2_t = extern struct {
    val: [2]uint8x8_t = @import("std").mem.zeroes([2]uint8x8_t),
};
pub const uint8x8x2_t = struct_uint8x8x2_t;
pub const struct_uint8x16x2_t = extern struct {
    val: [2]uint8x16_t = @import("std").mem.zeroes([2]uint8x16_t),
};
pub const uint8x16x2_t = struct_uint8x16x2_t;
pub const struct_uint16x4x2_t = extern struct {
    val: [2]uint16x4_t = @import("std").mem.zeroes([2]uint16x4_t),
};
pub const uint16x4x2_t = struct_uint16x4x2_t;
pub const struct_uint16x8x2_t = extern struct {
    val: [2]uint16x8_t = @import("std").mem.zeroes([2]uint16x8_t),
};
pub const uint16x8x2_t = struct_uint16x8x2_t;
pub const struct_uint32x2x2_t = extern struct {
    val: [2]uint32x2_t = @import("std").mem.zeroes([2]uint32x2_t),
};
pub const uint32x2x2_t = struct_uint32x2x2_t;
pub const struct_uint32x4x2_t = extern struct {
    val: [2]uint32x4_t = @import("std").mem.zeroes([2]uint32x4_t),
};
pub const uint32x4x2_t = struct_uint32x4x2_t;
pub const struct_uint64x1x2_t = extern struct {
    val: [2]uint64x1_t = @import("std").mem.zeroes([2]uint64x1_t),
};
pub const uint64x1x2_t = struct_uint64x1x2_t;
pub const struct_uint64x2x2_t = extern struct {
    val: [2]uint64x2_t = @import("std").mem.zeroes([2]uint64x2_t),
};
pub const uint64x2x2_t = struct_uint64x2x2_t;
pub const struct_float16x4x2_t = extern struct {
    val: [2]float16x4_t = @import("std").mem.zeroes([2]float16x4_t),
};
pub const float16x4x2_t = struct_float16x4x2_t;
pub const struct_float16x8x2_t = extern struct {
    val: [2]float16x8_t = @import("std").mem.zeroes([2]float16x8_t),
};
pub const float16x8x2_t = struct_float16x8x2_t;
pub const struct_float32x2x2_t = extern struct {
    val: [2]float32x2_t = @import("std").mem.zeroes([2]float32x2_t),
};
pub const float32x2x2_t = struct_float32x2x2_t;
pub const struct_float32x4x2_t = extern struct {
    val: [2]float32x4_t = @import("std").mem.zeroes([2]float32x4_t),
};
pub const float32x4x2_t = struct_float32x4x2_t;
pub const struct_float64x1x2_t = extern struct {
    val: [2]float64x1_t = @import("std").mem.zeroes([2]float64x1_t),
};
pub const float64x1x2_t = struct_float64x1x2_t;
pub const struct_float64x2x2_t = extern struct {
    val: [2]float64x2_t = @import("std").mem.zeroes([2]float64x2_t),
};
pub const float64x2x2_t = struct_float64x2x2_t;
pub const struct_int8x8x3_t = extern struct {
    val: [3]int8x8_t = @import("std").mem.zeroes([3]int8x8_t),
};
pub const int8x8x3_t = struct_int8x8x3_t;
pub const struct_int8x16x3_t = extern struct {
    val: [3]int8x16_t = @import("std").mem.zeroes([3]int8x16_t),
};
pub const int8x16x3_t = struct_int8x16x3_t;
pub const struct_int16x4x3_t = extern struct {
    val: [3]int16x4_t = @import("std").mem.zeroes([3]int16x4_t),
};
pub const int16x4x3_t = struct_int16x4x3_t;
pub const struct_int16x8x3_t = extern struct {
    val: [3]int16x8_t = @import("std").mem.zeroes([3]int16x8_t),
};
pub const int16x8x3_t = struct_int16x8x3_t;
pub const struct_int32x2x3_t = extern struct {
    val: [3]int32x2_t = @import("std").mem.zeroes([3]int32x2_t),
};
pub const int32x2x3_t = struct_int32x2x3_t;
pub const struct_int32x4x3_t = extern struct {
    val: [3]int32x4_t = @import("std").mem.zeroes([3]int32x4_t),
};
pub const int32x4x3_t = struct_int32x4x3_t;
pub const struct_int64x1x3_t = extern struct {
    val: [3]int64x1_t = @import("std").mem.zeroes([3]int64x1_t),
};
pub const int64x1x3_t = struct_int64x1x3_t;
pub const struct_int64x2x3_t = extern struct {
    val: [3]int64x2_t = @import("std").mem.zeroes([3]int64x2_t),
};
pub const int64x2x3_t = struct_int64x2x3_t;
pub const struct_uint8x8x3_t = extern struct {
    val: [3]uint8x8_t = @import("std").mem.zeroes([3]uint8x8_t),
};
pub const uint8x8x3_t = struct_uint8x8x3_t;
pub const struct_uint8x16x3_t = extern struct {
    val: [3]uint8x16_t = @import("std").mem.zeroes([3]uint8x16_t),
};
pub const uint8x16x3_t = struct_uint8x16x3_t;
pub const struct_uint16x4x3_t = extern struct {
    val: [3]uint16x4_t = @import("std").mem.zeroes([3]uint16x4_t),
};
pub const uint16x4x3_t = struct_uint16x4x3_t;
pub const struct_uint16x8x3_t = extern struct {
    val: [3]uint16x8_t = @import("std").mem.zeroes([3]uint16x8_t),
};
pub const uint16x8x3_t = struct_uint16x8x3_t;
pub const struct_uint32x2x3_t = extern struct {
    val: [3]uint32x2_t = @import("std").mem.zeroes([3]uint32x2_t),
};
pub const uint32x2x3_t = struct_uint32x2x3_t;
pub const struct_uint32x4x3_t = extern struct {
    val: [3]uint32x4_t = @import("std").mem.zeroes([3]uint32x4_t),
};
pub const uint32x4x3_t = struct_uint32x4x3_t;
pub const struct_uint64x1x3_t = extern struct {
    val: [3]uint64x1_t = @import("std").mem.zeroes([3]uint64x1_t),
};
pub const uint64x1x3_t = struct_uint64x1x3_t;
pub const struct_uint64x2x3_t = extern struct {
    val: [3]uint64x2_t = @import("std").mem.zeroes([3]uint64x2_t),
};
pub const uint64x2x3_t = struct_uint64x2x3_t;
pub const struct_float16x4x3_t = extern struct {
    val: [3]float16x4_t = @import("std").mem.zeroes([3]float16x4_t),
};
pub const float16x4x3_t = struct_float16x4x3_t;
pub const struct_float16x8x3_t = extern struct {
    val: [3]float16x8_t = @import("std").mem.zeroes([3]float16x8_t),
};
pub const float16x8x3_t = struct_float16x8x3_t;
pub const struct_float32x2x3_t = extern struct {
    val: [3]float32x2_t = @import("std").mem.zeroes([3]float32x2_t),
};
pub const float32x2x3_t = struct_float32x2x3_t;
pub const struct_float32x4x3_t = extern struct {
    val: [3]float32x4_t = @import("std").mem.zeroes([3]float32x4_t),
};
pub const float32x4x3_t = struct_float32x4x3_t;
pub const struct_float64x1x3_t = extern struct {
    val: [3]float64x1_t = @import("std").mem.zeroes([3]float64x1_t),
};
pub const float64x1x3_t = struct_float64x1x3_t;
pub const struct_float64x2x3_t = extern struct {
    val: [3]float64x2_t = @import("std").mem.zeroes([3]float64x2_t),
};
pub const float64x2x3_t = struct_float64x2x3_t;
pub const struct_int8x8x4_t = extern struct {
    val: [4]int8x8_t = @import("std").mem.zeroes([4]int8x8_t),
};
pub const int8x8x4_t = struct_int8x8x4_t;
pub const struct_int8x16x4_t = extern struct {
    val: [4]int8x16_t = @import("std").mem.zeroes([4]int8x16_t),
};
pub const int8x16x4_t = struct_int8x16x4_t;
pub const struct_int16x4x4_t = extern struct {
    val: [4]int16x4_t = @import("std").mem.zeroes([4]int16x4_t),
};
pub const int16x4x4_t = struct_int16x4x4_t;
pub const struct_int16x8x4_t = extern struct {
    val: [4]int16x8_t = @import("std").mem.zeroes([4]int16x8_t),
};
pub const int16x8x4_t = struct_int16x8x4_t;
pub const struct_int32x2x4_t = extern struct {
    val: [4]int32x2_t = @import("std").mem.zeroes([4]int32x2_t),
};
pub const int32x2x4_t = struct_int32x2x4_t;
pub const struct_int32x4x4_t = extern struct {
    val: [4]int32x4_t = @import("std").mem.zeroes([4]int32x4_t),
};
pub const int32x4x4_t = struct_int32x4x4_t;
pub const struct_int64x1x4_t = extern struct {
    val: [4]int64x1_t = @import("std").mem.zeroes([4]int64x1_t),
};
pub const int64x1x4_t = struct_int64x1x4_t;
pub const struct_int64x2x4_t = extern struct {
    val: [4]int64x2_t = @import("std").mem.zeroes([4]int64x2_t),
};
pub const int64x2x4_t = struct_int64x2x4_t;
pub const struct_uint8x8x4_t = extern struct {
    val: [4]uint8x8_t = @import("std").mem.zeroes([4]uint8x8_t),
};
pub const uint8x8x4_t = struct_uint8x8x4_t;
pub const struct_uint8x16x4_t = extern struct {
    val: [4]uint8x16_t = @import("std").mem.zeroes([4]uint8x16_t),
};
pub const uint8x16x4_t = struct_uint8x16x4_t;
pub const struct_uint16x4x4_t = extern struct {
    val: [4]uint16x4_t = @import("std").mem.zeroes([4]uint16x4_t),
};
pub const uint16x4x4_t = struct_uint16x4x4_t;
pub const struct_uint16x8x4_t = extern struct {
    val: [4]uint16x8_t = @import("std").mem.zeroes([4]uint16x8_t),
};
pub const uint16x8x4_t = struct_uint16x8x4_t;
pub const struct_uint32x2x4_t = extern struct {
    val: [4]uint32x2_t = @import("std").mem.zeroes([4]uint32x2_t),
};
pub const uint32x2x4_t = struct_uint32x2x4_t;
pub const struct_uint32x4x4_t = extern struct {
    val: [4]uint32x4_t = @import("std").mem.zeroes([4]uint32x4_t),
};
pub const uint32x4x4_t = struct_uint32x4x4_t;
pub const struct_uint64x1x4_t = extern struct {
    val: [4]uint64x1_t = @import("std").mem.zeroes([4]uint64x1_t),
};
pub const uint64x1x4_t = struct_uint64x1x4_t;
pub const struct_uint64x2x4_t = extern struct {
    val: [4]uint64x2_t = @import("std").mem.zeroes([4]uint64x2_t),
};
pub const uint64x2x4_t = struct_uint64x2x4_t;
pub const struct_float16x4x4_t = extern struct {
    val: [4]float16x4_t = @import("std").mem.zeroes([4]float16x4_t),
};
pub const float16x4x4_t = struct_float16x4x4_t;
pub const struct_float16x8x4_t = extern struct {
    val: [4]float16x8_t = @import("std").mem.zeroes([4]float16x8_t),
};
pub const float16x8x4_t = struct_float16x8x4_t;
pub const struct_float32x2x4_t = extern struct {
    val: [4]float32x2_t = @import("std").mem.zeroes([4]float32x2_t),
};
pub const float32x2x4_t = struct_float32x2x4_t;
pub const struct_float32x4x4_t = extern struct {
    val: [4]float32x4_t = @import("std").mem.zeroes([4]float32x4_t),
};
pub const float32x4x4_t = struct_float32x4x4_t;
pub const struct_float64x1x4_t = extern struct {
    val: [4]float64x1_t = @import("std").mem.zeroes([4]float64x1_t),
};
pub const float64x1x4_t = struct_float64x1x4_t;
pub const struct_float64x2x4_t = extern struct {
    val: [4]float64x2_t = @import("std").mem.zeroes([4]float64x2_t),
};
pub const float64x2x4_t = struct_float64x2x4_t;
pub const bfloat16x4_t = @Vector(4, bfloat16_t);
pub const bfloat16x8_t = @Vector(8, bfloat16_t);
pub const struct_bfloat16x4x2_t = extern struct {
    val: [2]bfloat16x4_t = @import("std").mem.zeroes([2]bfloat16x4_t),
};
pub const bfloat16x4x2_t = struct_bfloat16x4x2_t;
pub const struct_bfloat16x8x2_t = extern struct {
    val: [2]bfloat16x8_t = @import("std").mem.zeroes([2]bfloat16x8_t),
};
pub const bfloat16x8x2_t = struct_bfloat16x8x2_t;
pub const struct_bfloat16x4x3_t = extern struct {
    val: [3]bfloat16x4_t = @import("std").mem.zeroes([3]bfloat16x4_t),
};
pub const bfloat16x4x3_t = struct_bfloat16x4x3_t;
pub const struct_bfloat16x8x3_t = extern struct {
    val: [3]bfloat16x8_t = @import("std").mem.zeroes([3]bfloat16x8_t),
};
pub const bfloat16x8x3_t = struct_bfloat16x8x3_t;
pub const struct_bfloat16x4x4_t = extern struct {
    val: [4]bfloat16x4_t = @import("std").mem.zeroes([4]bfloat16x4_t),
};
pub const bfloat16x4x4_t = struct_bfloat16x4x4_t;
pub const struct_bfloat16x8x4_t = extern struct {
    val: [4]bfloat16x8_t = @import("std").mem.zeroes([4]bfloat16x8_t),
};
pub const bfloat16x8x4_t = struct_bfloat16x8x4_t;
pub const poly8_t = u8;
pub const poly16_t = u16;
pub const poly64_t = u64;
pub const poly128_t = __uint128_t;
pub const poly8x8_t = @Vector(8, poly8_t);
pub const poly8x16_t = @Vector(16, poly8_t);
pub const poly16x4_t = @Vector(4, poly16_t);
pub const poly16x8_t = @Vector(8, poly16_t);
pub const poly64x1_t = @Vector(1, poly64_t);
pub const poly64x2_t = @Vector(2, poly64_t);
pub const struct_poly8x8x2_t = extern struct {
    val: [2]poly8x8_t = @import("std").mem.zeroes([2]poly8x8_t),
};
pub const poly8x8x2_t = struct_poly8x8x2_t;
pub const struct_poly8x16x2_t = extern struct {
    val: [2]poly8x16_t = @import("std").mem.zeroes([2]poly8x16_t),
};
pub const poly8x16x2_t = struct_poly8x16x2_t;
pub const struct_poly16x4x2_t = extern struct {
    val: [2]poly16x4_t = @import("std").mem.zeroes([2]poly16x4_t),
};
pub const poly16x4x2_t = struct_poly16x4x2_t;
pub const struct_poly16x8x2_t = extern struct {
    val: [2]poly16x8_t = @import("std").mem.zeroes([2]poly16x8_t),
};
pub const poly16x8x2_t = struct_poly16x8x2_t;
pub const struct_poly64x1x2_t = extern struct {
    val: [2]poly64x1_t = @import("std").mem.zeroes([2]poly64x1_t),
};
pub const poly64x1x2_t = struct_poly64x1x2_t;
pub const struct_poly64x2x2_t = extern struct {
    val: [2]poly64x2_t = @import("std").mem.zeroes([2]poly64x2_t),
};
pub const poly64x2x2_t = struct_poly64x2x2_t;
pub const struct_poly8x8x3_t = extern struct {
    val: [3]poly8x8_t = @import("std").mem.zeroes([3]poly8x8_t),
};
pub const poly8x8x3_t = struct_poly8x8x3_t;
pub const struct_poly8x16x3_t = extern struct {
    val: [3]poly8x16_t = @import("std").mem.zeroes([3]poly8x16_t),
};
pub const poly8x16x3_t = struct_poly8x16x3_t;
pub const struct_poly16x4x3_t = extern struct {
    val: [3]poly16x4_t = @import("std").mem.zeroes([3]poly16x4_t),
};
pub const poly16x4x3_t = struct_poly16x4x3_t;
pub const struct_poly16x8x3_t = extern struct {
    val: [3]poly16x8_t = @import("std").mem.zeroes([3]poly16x8_t),
};
pub const poly16x8x3_t = struct_poly16x8x3_t;
pub const struct_poly64x1x3_t = extern struct {
    val: [3]poly64x1_t = @import("std").mem.zeroes([3]poly64x1_t),
};
pub const poly64x1x3_t = struct_poly64x1x3_t;
pub const struct_poly64x2x3_t = extern struct {
    val: [3]poly64x2_t = @import("std").mem.zeroes([3]poly64x2_t),
};
pub const poly64x2x3_t = struct_poly64x2x3_t;
pub const struct_poly8x8x4_t = extern struct {
    val: [4]poly8x8_t = @import("std").mem.zeroes([4]poly8x8_t),
};
pub const poly8x8x4_t = struct_poly8x8x4_t;
pub const struct_poly8x16x4_t = extern struct {
    val: [4]poly8x16_t = @import("std").mem.zeroes([4]poly8x16_t),
};
pub const poly8x16x4_t = struct_poly8x16x4_t;
pub const struct_poly16x4x4_t = extern struct {
    val: [4]poly16x4_t = @import("std").mem.zeroes([4]poly16x4_t),
};
pub const poly16x4x4_t = struct_poly16x4x4_t;
pub const struct_poly16x8x4_t = extern struct {
    val: [4]poly16x8_t = @import("std").mem.zeroes([4]poly16x8_t),
};
pub const poly16x8x4_t = struct_poly16x8x4_t;
pub const struct_poly64x1x4_t = extern struct {
    val: [4]poly64x1_t = @import("std").mem.zeroes([4]poly64x1_t),
};
pub const poly64x1x4_t = struct_poly64x1x4_t;
pub const struct_poly64x2x4_t = extern struct {
    val: [4]poly64x2_t = @import("std").mem.zeroes([4]poly64x2_t),
};
pub const poly64x2x4_t = struct_poly64x2x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1397:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1395:17: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1419:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1417:17: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1441:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1439:17: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1463:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1461:16: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1485:25: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1483:18: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1502:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1500:16: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1524:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1522:16: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1546:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1544:16: warning: unable to translate function, demoted to extern
pub extern fn vabd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1568:24: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1566:17: warning: unable to translate function, demoted to extern
pub extern fn vabd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1590:24: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1588:17: warning: unable to translate function, demoted to extern
pub extern fn vabd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1612:22: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1610:15: warning: unable to translate function, demoted to extern
pub extern fn vabd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1634:25: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1632:18: warning: unable to translate function, demoted to extern
pub extern fn vabd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1651:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1649:16: warning: unable to translate function, demoted to extern
pub extern fn vabd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1673:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1671:16: warning: unable to translate function, demoted to extern
pub extern fn vabd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1695:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1693:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1711:25: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1709:18: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1727:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1725:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s32(arg___p0: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1743:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1741:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s16(arg___p0: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1759:22: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1757:15: warning: unable to translate function, demoted to extern
pub extern fn vabs_s8(arg___p0: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1775:25: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1773:18: warning: unable to translate function, demoted to extern
pub extern fn vabs_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1791:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1789:16: warning: unable to translate function, demoted to extern
pub extern fn vabs_s32(arg___p0: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1807:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1805:16: warning: unable to translate function, demoted to extern
pub extern fn vabs_s16(arg___p0: int16x4_t) int16x4_t;
pub inline fn vaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2105:23: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2103:16: warning: unable to translate function, demoted to extern
pub extern fn vadd_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2121:24: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2119:17: warning: unable to translate function, demoted to extern
pub extern fn vadd_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) poly64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2127:24: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2125:17: warning: unable to translate function, demoted to extern
pub extern fn vadd_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2144:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2142:17: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2161:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2159:17: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2178:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2176:17: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2195:24: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2193:17: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2217:24: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2215:17: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2239:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2237:16: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2261:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2259:16: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2283:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2281:16: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2305:22: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2303:15: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
pub inline fn vandq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vbicq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2823:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2821:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p8(arg___p0: uint8x8_t, arg___p1: poly8x8_t, arg___p2: poly8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2841:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2839:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p16(arg___p0: uint16x4_t, arg___p1: poly16x4_t, arg___p2: poly16x4_t) poly16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2859:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2857:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p8(arg___p0: uint8x16_t, arg___p1: poly8x16_t, arg___p2: poly8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2877:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2875:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p16(arg___p0: uint16x8_t, arg___p1: poly16x8_t, arg___p2: poly16x8_t) poly16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2895:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2893:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2913:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2911:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2931:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2929:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2949:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2947:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2967:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2965:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s8(arg___p0: uint8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2985:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:2983:18: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f32(arg___p0: uint32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3003:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3001:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s32(arg___p0: uint32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3021:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3019:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s64(arg___p0: uint64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3039:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3037:16: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s16(arg___p0: uint16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3057:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3055:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3075:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3073:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3092:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3090:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t, arg___p2: uint64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3098:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3096:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3116:22: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3114:15: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s8(arg___p0: uint8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3134:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3132:18: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f32(arg___p0: uint32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3152:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3150:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s32(arg___p0: uint32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3169:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3167:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s64(arg___p0: uint64x1_t, arg___p1: int64x1_t, arg___p2: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3175:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3173:16: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s16(arg___p0: uint16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3193:24: warning: TODO implement function '__builtin_neon_vcageq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3191:17: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3210:24: warning: TODO implement function '__builtin_neon_vcage_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3208:17: warning: unable to translate function, demoted to extern
pub extern fn vcage_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3227:24: warning: TODO implement function '__builtin_neon_vcagtq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3225:17: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3244:24: warning: TODO implement function '__builtin_neon_vcagt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3242:17: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3261:24: warning: TODO implement function '__builtin_neon_vcaleq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3259:17: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3278:24: warning: TODO implement function '__builtin_neon_vcale_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3276:17: warning: unable to translate function, demoted to extern
pub extern fn vcale_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3295:24: warning: TODO implement function '__builtin_neon_vcaltq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3293:17: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3312:24: warning: TODO implement function '__builtin_neon_vcalt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:3310:17: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
pub inline fn vceq_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vcgeq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgtq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcleq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4315:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4313:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u8(arg___p0: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4331:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4329:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u32(arg___p0: uint32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4347:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4345:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u16(arg___p0: uint16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4363:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4361:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4379:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4377:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s32(arg___p0: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4395:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4393:16: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s16(arg___p0: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4411:22: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4409:15: warning: unable to translate function, demoted to extern
pub extern fn vcls_u8(arg___p0: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4427:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4425:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_u32(arg___p0: uint32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4443:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4441:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_u16(arg___p0: uint16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4459:22: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4457:15: warning: unable to translate function, demoted to extern
pub extern fn vcls_s8(arg___p0: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4475:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4473:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_s32(arg___p0: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4491:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4489:16: warning: unable to translate function, demoted to extern
pub extern fn vcls_s16(arg___p0: int16x4_t) int16x4_t;
pub inline fn vcltq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4745:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4743:17: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4761:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4759:17: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4777:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4775:17: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u16(arg___p0: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4793:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4791:16: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4809:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4807:16: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s32(arg___p0: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4825:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4823:16: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s16(arg___p0: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4841:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4839:16: warning: unable to translate function, demoted to extern
pub extern fn vclz_u8(arg___p0: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4857:24: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4855:17: warning: unable to translate function, demoted to extern
pub extern fn vclz_u32(arg___p0: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4873:24: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4871:17: warning: unable to translate function, demoted to extern
pub extern fn vclz_u16(arg___p0: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4889:22: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4887:15: warning: unable to translate function, demoted to extern
pub extern fn vclz_s8(arg___p0: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4905:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4903:16: warning: unable to translate function, demoted to extern
pub extern fn vclz_s32(arg___p0: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4921:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4919:16: warning: unable to translate function, demoted to extern
pub extern fn vclz_s16(arg___p0: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4937:23: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4935:16: warning: unable to translate function, demoted to extern
pub extern fn vcnt_p8(arg___p0: poly8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4953:24: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4951:17: warning: unable to translate function, demoted to extern
pub extern fn vcntq_p8(arg___p0: poly8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4969:24: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4967:17: warning: unable to translate function, demoted to extern
pub extern fn vcntq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4985:23: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4983:16: warning: unable to translate function, demoted to extern
pub extern fn vcntq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5001:23: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:4999:16: warning: unable to translate function, demoted to extern
pub extern fn vcnt_u8(arg___p0: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5017:22: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5015:15: warning: unable to translate function, demoted to extern
pub extern fn vcnt_s8(arg___p0: int8x8_t) int8x8_t;
pub inline fn vcombine_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5345:25: warning: TODO implement function '__builtin_neon_vcvtq_f32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5343:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f32_u32(arg___p0: uint32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5361:25: warning: TODO implement function '__builtin_neon_vcvtq_f32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5359:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f32_s32(arg___p0: int32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5377:25: warning: TODO implement function '__builtin_neon_vcvt_f32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5375:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_u32(arg___p0: uint32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5393:25: warning: TODO implement function '__builtin_neon_vcvt_f32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5391:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_s32(arg___p0: int32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5553:23: warning: TODO implement function '__builtin_neon_vcvtq_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5551:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5569:23: warning: TODO implement function '__builtin_neon_vcvt_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5567:16: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5585:24: warning: TODO implement function '__builtin_neon_vcvtq_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5583:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5601:24: warning: TODO implement function '__builtin_neon_vcvt_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5599:17: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u32_f32(arg___p0: float32x2_t) uint32x2_t;
pub inline fn vdup_n_p8(arg___p0: poly8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_p16(arg___p0: poly16_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk poly16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p8(arg___p0: poly8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk poly8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p16(arg___p0: poly16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u8(arg___p0: u8) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk uint8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u32(arg___p0: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u64(arg___p0: u64) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u16(arg___p0: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s8(arg___p0: i8) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk int8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_f32(arg___p0: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s32(arg___p0: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s64(arg___p0: i64) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s16(arg___p0: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u8(arg___p0: u8) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u32(arg___p0: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u64(arg___p0: u64) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk uint64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u16(arg___p0: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s8(arg___p0: i8) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_f32(arg___p0: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s32(arg___p0: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s64(arg___p0: i64) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk int64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s16(arg___p0: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn veorq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn vget_high_p8(arg___p0: poly8x16_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_p16(arg___p0: poly16x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u8(arg___p0: uint8x16_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u32(arg___p0: uint32x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u64(arg___p0: uint64x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u16(arg___p0: uint16x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s8(arg___p0: int8x16_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f32(arg___p0: float32x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f16(arg___p0: float16x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s32(arg___p0: int32x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s64(arg___p0: int64x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s16(arg___p0: int16x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p8(arg___p0: poly8x16_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p16(arg___p0: poly16x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u8(arg___p0: uint8x16_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u32(arg___p0: uint32x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u64(arg___p0: uint64x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u16(arg___p0: uint16x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s8(arg___p0: int8x16_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f32(arg___p0: float32x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f16(arg___p0: float16x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s32(arg___p0: int32x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s64(arg___p0: int64x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s16(arg___p0: int16x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7946:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7944:17: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7963:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7961:17: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7980:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7978:17: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7997:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7995:16: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8014:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8012:16: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8031:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8029:16: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8048:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8046:16: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8065:24: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8063:17: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8082:24: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8080:17: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8099:22: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8097:15: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8116:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8114:16: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8133:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8131:16: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8150:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8148:17: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8167:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8165:17: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8184:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8182:17: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8201:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8199:16: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8218:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8216:16: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8235:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8233:16: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8252:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8250:16: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8269:24: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8267:17: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8286:24: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8284:17: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8303:22: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8301:15: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8320:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8318:16: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8337:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8335:16: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13648:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13646:17: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13665:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13663:17: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13682:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13680:17: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13699:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13697:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13716:25: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13714:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13733:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13731:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13750:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13748:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13767:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13765:16: warning: unable to translate function, demoted to extern
pub extern fn vmax_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13784:24: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13782:17: warning: unable to translate function, demoted to extern
pub extern fn vmax_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13801:24: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13799:17: warning: unable to translate function, demoted to extern
pub extern fn vmax_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13818:22: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13816:15: warning: unable to translate function, demoted to extern
pub extern fn vmax_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13835:25: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13833:18: warning: unable to translate function, demoted to extern
pub extern fn vmax_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13852:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13850:16: warning: unable to translate function, demoted to extern
pub extern fn vmax_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13869:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13867:16: warning: unable to translate function, demoted to extern
pub extern fn vmax_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13886:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13884:17: warning: unable to translate function, demoted to extern
pub extern fn vminq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13903:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13901:17: warning: unable to translate function, demoted to extern
pub extern fn vminq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13920:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13918:17: warning: unable to translate function, demoted to extern
pub extern fn vminq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13937:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13935:16: warning: unable to translate function, demoted to extern
pub extern fn vminq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13954:25: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13952:18: warning: unable to translate function, demoted to extern
pub extern fn vminq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13971:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13969:16: warning: unable to translate function, demoted to extern
pub extern fn vminq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13988:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13986:16: warning: unable to translate function, demoted to extern
pub extern fn vminq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14005:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14003:16: warning: unable to translate function, demoted to extern
pub extern fn vmin_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14022:24: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14020:17: warning: unable to translate function, demoted to extern
pub extern fn vmin_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14039:24: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14037:17: warning: unable to translate function, demoted to extern
pub extern fn vmin_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14056:22: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14054:15: warning: unable to translate function, demoted to extern
pub extern fn vmin_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14073:25: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14071:18: warning: unable to translate function, demoted to extern
pub extern fn vmin_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14090:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14088:16: warning: unable to translate function, demoted to extern
pub extern fn vmin_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14107:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14105:16: warning: unable to translate function, demoted to extern
pub extern fn vmin_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vmlaq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_n_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_n_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmov_n_p8(arg___p0: poly8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_p16(arg___p0: poly16_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk poly16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p8(arg___p0: poly8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk poly8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p16(arg___p0: poly16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u8(arg___p0: u8) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk uint8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u32(arg___p0: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u64(arg___p0: u64) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u16(arg___p0: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s8(arg___p0: i8) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk int8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_f32(arg___p0: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s32(arg___p0: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s64(arg___p0: i64) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s16(arg___p0: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u8(arg___p0: u8) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u32(arg___p0: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u64(arg___p0: u64) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk uint64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u16(arg___p0: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s8(arg___p0: i8) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_f32(arg___p0: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s32(arg___p0: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s64(arg___p0: i64) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk int64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s16(arg___p0: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15792:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15790:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u8(arg___p0: uint8x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15813:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15811:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u32(arg___p0: uint32x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15834:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15832:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u16(arg___p0: uint16x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15855:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15853:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s8(arg___p0: int8x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15876:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15874:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s32(arg___p0: int32x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15897:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15895:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s16(arg___p0: int16x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15918:24: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15916:17: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u32(arg___p0: uint32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15939:24: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15937:17: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u64(arg___p0: uint64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15960:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15958:16: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u16(arg___p0: uint16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15981:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15979:16: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s32(arg___p0: int32x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16002:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16000:16: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s64(arg___p0: int64x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16023:22: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16021:15: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s16(arg___p0: int16x8_t) int8x8_t;
pub inline fn vmulq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16282:23: warning: TODO implement function '__builtin_neon_vmul_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16280:16: warning: unable to translate function, demoted to extern
pub extern fn vmul_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16299:24: warning: TODO implement function '__builtin_neon_vmulq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16297:17: warning: unable to translate function, demoted to extern
pub extern fn vmulq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t;
pub inline fn vmulq_n_u32(arg___p0: uint32x4_t, arg___p1: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_u16(arg___p0: uint16x8_t, arg___p1: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_f32(arg___p0: float32x4_t, arg___p1: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vmul_n_u32(arg___p0: uint32x2_t, arg___p1: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_u16(arg___p0: uint16x4_t, arg___p1: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmul_n_f32(arg___p0: float32x2_t, arg___p1: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16686:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16684:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16708:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16706:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16730:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16728:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16752:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16750:17: warning: unable to translate function, demoted to extern
pub extern fn vmull_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16774:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16772:16: warning: unable to translate function, demoted to extern
pub extern fn vmull_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16796:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16794:16: warning: unable to translate function, demoted to extern
pub extern fn vmull_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16818:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16816:16: warning: unable to translate function, demoted to extern
pub extern fn vmull_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t;
pub inline fn vmull_n_u32(arg___p0: uint32x2_t, arg___p1: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_u32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_n_u16(arg___p0: uint16x4_t, arg___p1: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_u16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmull_n_s32(arg___p0: int32x2_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_n_s16(arg___p0: int16x4_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmvn_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u32(arg___p0: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u32(arg___p0: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vnegq_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_f32(arg___p0: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f32(arg___p0: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vornq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorrq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17856:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17854:17: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17873:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17871:17: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17890:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17888:17: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17907:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17905:16: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17924:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17922:16: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17941:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17939:16: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17958:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17956:17: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u8(arg___p0: uint16x4_t, arg___p1: uint8x8_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17975:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17973:17: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u32(arg___p0: uint64x1_t, arg___p1: uint32x2_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17990:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:17988:17: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u16(arg___p0: uint32x2_t, arg___p1: uint16x4_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18007:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18005:16: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s8(arg___p0: int16x4_t, arg___p1: int8x8_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18024:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18022:16: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s32(arg___p0: int64x1_t, arg___p1: int32x2_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18039:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18037:16: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s16(arg___p0: int32x2_t, arg___p1: int16x4_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18056:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18054:16: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18073:24: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18071:17: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18090:24: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18088:17: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18107:22: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18105:15: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18124:25: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18122:18: warning: unable to translate function, demoted to extern
pub extern fn vpadd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18141:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18139:16: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18158:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18156:16: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18175:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18173:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u8(arg___p0: uint8x16_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18191:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18189:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u32(arg___p0: uint32x4_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18207:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18205:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u16(arg___p0: uint16x8_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18223:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18221:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s8(arg___p0: int8x16_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18239:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18237:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s32(arg___p0: int32x4_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18255:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18253:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s16(arg___p0: int16x8_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18271:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18269:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u8(arg___p0: uint8x8_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18287:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18285:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u32(arg___p0: uint32x2_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18302:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18300:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u16(arg___p0: uint16x4_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18318:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18316:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s8(arg___p0: int8x8_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18334:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18332:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s32(arg___p0: int32x2_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18349:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18347:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s16(arg___p0: int16x4_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18365:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18363:16: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18382:24: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18380:17: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18399:24: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18397:17: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18416:22: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18414:15: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18433:25: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18431:18: warning: unable to translate function, demoted to extern
pub extern fn vpmax_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18450:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18448:16: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18467:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18465:16: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18484:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18482:16: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18501:24: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18499:17: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18518:24: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18516:17: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18535:22: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18533:15: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18552:25: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18550:18: warning: unable to translate function, demoted to extern
pub extern fn vpmin_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18569:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18567:16: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18586:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18584:16: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18603:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18601:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18619:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18617:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s32(arg___p0: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18635:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18633:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s16(arg___p0: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18651:22: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18649:15: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s8(arg___p0: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18667:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18665:16: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s32(arg___p0: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18683:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18681:16: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s16(arg___p0: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18699:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18697:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18716:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18714:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18733:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18731:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18750:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18748:17: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18767:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18765:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18784:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18782:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18801:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18799:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18818:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18816:16: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18835:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18833:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18852:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18850:17: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18868:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18866:17: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18874:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18872:17: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18891:22: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18889:15: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18908:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18906:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18924:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18922:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18930:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18928:16: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18947:23: warning: TODO implement function '__builtin_neon_vqdmlal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18945:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18970:23: warning: TODO implement function '__builtin_neon_vqdmlal_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18968:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t;
pub inline fn vqdmlal_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmlal_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s16(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19085:23: warning: TODO implement function '__builtin_neon_vqdmlsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19083:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsl_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19108:23: warning: TODO implement function '__builtin_neon_vqdmlsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19106:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsl_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t;
pub inline fn vqdmlsl_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmlsl_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s16(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19223:23: warning: TODO implement function '__builtin_neon_vqdmulhq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19221:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19245:23: warning: TODO implement function '__builtin_neon_vqdmulhq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19243:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19267:23: warning: TODO implement function '__builtin_neon_vqdmulh_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19265:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19289:23: warning: TODO implement function '__builtin_neon_vqdmulh_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19287:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmulh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vqdmulhq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmulhq_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vqdmulhq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vqdmulhq_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vqdmulh_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = vqdmulh_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmulh_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = vqdmulh_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19375:23: warning: TODO implement function '__builtin_neon_vqdmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19373:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmull_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19397:23: warning: TODO implement function '__builtin_neon_vqdmull_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19395:16: warning: unable to translate function, demoted to extern
pub extern fn vqdmull_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t;
pub inline fn vqdmull_n_s32(arg___p0: int32x2_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmull_n_s16(arg___p0: int16x4_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19503:24: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19501:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u32(arg___p0: uint32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19524:24: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19522:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u64(arg___p0: uint64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19545:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19543:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u16(arg___p0: uint16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19566:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19564:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s32(arg___p0: int32x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19587:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19585:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s64(arg___p0: int64x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19608:22: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19606:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s16(arg___p0: int16x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19629:24: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19627:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s32(arg___p0: int32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19650:24: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19648:17: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s64(arg___p0: int64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19671:23: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19669:16: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s16(arg___p0: int16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19692:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19690:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19708:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19706:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s32(arg___p0: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19724:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19722:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s16(arg___p0: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19740:22: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19738:15: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s8(arg___p0: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19756:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19754:16: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s32(arg___p0: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19772:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19770:16: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s16(arg___p0: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19788:23: warning: TODO implement function '__builtin_neon_vqrdmulhq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19786:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19810:23: warning: TODO implement function '__builtin_neon_vqrdmulhq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19808:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19832:23: warning: TODO implement function '__builtin_neon_vqrdmulh_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19830:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19854:23: warning: TODO implement function '__builtin_neon_vqrdmulh_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19852:16: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vqrdmulhq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqrdmulhq_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vqrdmulhq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vqrdmulhq_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vqrdmulh_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = vqrdmulh_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqrdmulh_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = vqrdmulh_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19940:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19938:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19957:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19955:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19974:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19972:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19991:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19989:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20008:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20006:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20025:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20023:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20042:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20040:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20059:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20057:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20076:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20074:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20093:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20091:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20109:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20107:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20115:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20113:17: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20132:22: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20130:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20149:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20147:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20165:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20163:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20171:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20169:16: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20404:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20402:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20421:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20419:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20438:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20436:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20455:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20453:17: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20472:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20470:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20489:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20487:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20506:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20504:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20523:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20521:16: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20540:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20538:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20557:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20555:17: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20573:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20571:17: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20579:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20577:17: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20596:22: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20594:15: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20613:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20611:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20629:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20627:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20635:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20633:16: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21264:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21262:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21281:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21279:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21298:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21296:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21315:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21313:17: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21332:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21330:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21349:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21347:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21366:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21364:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21383:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21381:16: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21400:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21398:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21417:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21415:17: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21433:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21431:17: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21439:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21437:17: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21456:22: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21454:15: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21473:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21471:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21489:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21487:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21495:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21493:16: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21512:24: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21510:17: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21534:24: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21532:17: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21556:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21554:16: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21578:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21576:16: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21600:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21598:16: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21622:22: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21620:15: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21644:24: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21642:17: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21660:25: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21658:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21676:24: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21674:17: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_u32(arg___p0: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21692:25: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21690:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21708:25: warning: TODO implement function '__builtin_neon_vrecpsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21706:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21725:25: warning: TODO implement function '__builtin_neon_vrecps_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21723:18: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
pub inline fn vrev16_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev16_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_p16(arg___p0: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_p16(arg___p0: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev32_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_p16(arg___p0: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_p16(arg___p0: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u32(arg___p0: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_f32(arg___p0: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u32(arg___p0: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_f32(arg___p0: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22318:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22316:17: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22335:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22333:17: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22352:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22350:17: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22369:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22367:16: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22386:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22384:16: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22403:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22401:16: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22420:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22418:16: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22437:24: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22435:17: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22454:24: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22452:17: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22471:22: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22469:15: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22488:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22486:16: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22505:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22503:16: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22522:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22520:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22539:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22537:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22556:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22554:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22573:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22571:17: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22590:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22588:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22607:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22605:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22624:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22622:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22641:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22639:16: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22658:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22656:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22675:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22673:17: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22691:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22689:17: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22697:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22695:17: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22714:22: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22712:15: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22731:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22729:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22747:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22745:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22753:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22751:16: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23178:24: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23176:17: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23194:25: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23192:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23210:24: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23208:17: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_u32(arg___p0: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23226:25: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23224:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23242:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23240:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23259:25: warning: TODO implement function '__builtin_neon_vrsqrts_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23257:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23584:24: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23582:17: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23606:24: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23604:17: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23628:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23626:16: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23650:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23648:16: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23672:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23670:16: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23694:22: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23692:15: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24270:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24268:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24287:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24285:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24304:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24302:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24321:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24319:17: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24338:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24336:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24355:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24353:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24372:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24370:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24389:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24387:16: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24406:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24404:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24423:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24421:17: warning: unable to translate function, demoted to extern
pub extern fn vshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24439:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24437:17: warning: unable to translate function, demoted to extern
pub extern fn vshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24445:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24443:17: warning: unable to translate function, demoted to extern
pub extern fn vshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24462:22: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24460:15: warning: unable to translate function, demoted to extern
pub extern fn vshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24479:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24477:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24495:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24493:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24501:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24499:16: warning: unable to translate function, demoted to extern
pub extern fn vshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29836:24: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29834:17: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29858:24: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29856:17: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29880:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29878:16: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29902:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29900:16: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29924:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29922:16: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29946:22: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29944:15: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
pub inline fn vsubl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(__p0) - vmovl_u8(__p1);
    return __ret;
}
pub inline fn vsubl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(__p0) - vmovl_u32(__p1);
    return __ret;
}
pub inline fn vsubl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(__p0) - vmovl_u16(__p1);
    return __ret;
}
pub inline fn vsubl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_s8(__p0) - vmovl_s8(__p1);
    return __ret;
}
pub inline fn vsubl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_s32(__p0) - vmovl_s32(__p1);
    return __ret;
}
pub inline fn vsubl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_s16(__p0) - vmovl_s16(__p1);
    return __ret;
}
pub inline fn vsubw_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u8(__p1);
    return __ret;
}
pub inline fn vsubw_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u32(__p1);
    return __ret;
}
pub inline fn vsubw_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u16(__p1);
    return __ret;
}
pub inline fn vsubw_s8(arg___p0: int16x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s8(__p1);
    return __ret;
}
pub inline fn vsubw_s32(arg___p0: int64x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s32(__p1);
    return __ret;
}
pub inline fn vsubw_s16(arg___p0: int32x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s16(__p1);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30172:23: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30170:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_p8(arg___p0: poly8x8_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30189:23: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30187:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30206:22: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30204:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30223:23: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30221:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_p8(arg___p0: poly8x8x2_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30242:23: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30240:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_u8(arg___p0: uint8x8x2_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30261:22: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30259:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_s8(arg___p0: int8x8x2_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30280:23: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30278:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_p8(arg___p0: poly8x8x3_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30300:23: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30298:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_u8(arg___p0: uint8x8x3_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30320:22: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30318:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_s8(arg___p0: int8x8x3_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30340:23: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30338:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_p8(arg___p0: poly8x8x4_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30361:23: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30359:16: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_u8(arg___p0: uint8x8x4_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30382:22: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30380:15: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_s8(arg___p0: int8x8x4_t, arg___p1: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30403:23: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30401:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30421:23: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30419:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30439:22: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30437:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30457:23: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30455:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x2_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30477:23: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30475:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x2_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30497:22: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30495:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_s8(arg___p0: int8x8_t, arg___p1: int8x8x2_t, arg___p2: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30517:23: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30515:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x3_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30538:23: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30536:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x3_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30559:22: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30557:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_s8(arg___p0: int8x8_t, arg___p1: int8x8x3_t, arg___p2: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30580:23: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30578:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x4_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30602:23: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30600:16: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x4_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30624:22: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30622:15: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_s8(arg___p0: int8x8_t, arg___p1: int8x8x4_t, arg___p2: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30646:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30644:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30665:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30663:19: warning: unable to translate function, demoted to extern
pub extern fn vtrn_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30684:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30682:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30703:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30701:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30722:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30720:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30741:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30739:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30760:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30758:19: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30779:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30777:18: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30798:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30796:20: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30817:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30815:18: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30836:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30834:18: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30855:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30853:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30874:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30872:19: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30893:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30891:19: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30912:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30910:17: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30931:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30929:20: warning: unable to translate function, demoted to extern
pub extern fn vtrn_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30950:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30948:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30969:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30967:18: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30988:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:30986:16: warning: unable to translate function, demoted to extern
pub extern fn vtst_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31005:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31003:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31022:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31020:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31039:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31037:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31056:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31054:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31073:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31071:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31090:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31088:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31107:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31105:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31124:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31122:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31141:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31139:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31158:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31156:16: warning: unable to translate function, demoted to extern
pub extern fn vtst_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31175:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31173:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31192:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31190:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31209:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31207:16: warning: unable to translate function, demoted to extern
pub extern fn vtst_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31226:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31224:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31243:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31241:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31260:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31258:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31279:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31277:19: warning: unable to translate function, demoted to extern
pub extern fn vuzp_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31298:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31296:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31317:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31315:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31336:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31334:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31355:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31353:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31374:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31372:19: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31393:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31391:18: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31412:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31410:20: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31431:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31429:18: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31450:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31448:18: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31469:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31467:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31488:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31486:19: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31507:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31505:19: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31526:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31524:17: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31545:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31543:20: warning: unable to translate function, demoted to extern
pub extern fn vuzp_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31564:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31562:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31583:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31581:18: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31602:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31600:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31621:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31619:19: warning: unable to translate function, demoted to extern
pub extern fn vzip_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31640:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31638:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31659:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31657:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31678:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31676:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31697:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31695:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31716:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31714:19: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31735:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31733:18: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31754:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31752:20: warning: unable to translate function, demoted to extern
pub extern fn vzipq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31773:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31771:18: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31792:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31790:18: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31811:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31809:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31830:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31828:19: warning: unable to translate function, demoted to extern
pub extern fn vzip_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31849:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31847:19: warning: unable to translate function, demoted to extern
pub extern fn vzip_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31868:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31866:17: warning: unable to translate function, demoted to extern
pub extern fn vzip_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31887:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31885:20: warning: unable to translate function, demoted to extern
pub extern fn vzip_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31906:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31904:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31925:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31923:18: warning: unable to translate function, demoted to extern
pub extern fn vzip_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32040:25: warning: TODO implement function '__builtin_neon_vbfdotq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32038:50: warning: unable to translate function, demoted to extern
pub extern fn vbfdotq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32063:25: warning: TODO implement function '__builtin_neon_vbfdot_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32061:50: warning: unable to translate function, demoted to extern
pub extern fn vbfdot_f32(arg___p0: float32x2_t, arg___p1: bfloat16x4_t, arg___p2: bfloat16x4_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32198:25: warning: TODO implement function '__builtin_neon_vbfmlalbq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32196:50: warning: unable to translate function, demoted to extern
pub extern fn vbfmlalbq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32221:25: warning: TODO implement function '__builtin_neon_vbfmlaltq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32219:50: warning: unable to translate function, demoted to extern
pub extern fn vbfmlaltq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32244:25: warning: TODO implement function '__builtin_neon_vbfmmlaq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32242:50: warning: unable to translate function, demoted to extern
pub extern fn vbfmmlaq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
pub inline fn vcombine_bf16(arg___p0: bfloat16x4_t, arg___p1: bfloat16x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24903:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32288:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_bf16(arg___p0_134: bfloat16x4_t) float32x4_t;
pub inline fn vcvtah_f32_bf16(arg___p0: bfloat16_t) float32_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32_t = undefined;
    _ = &__ret;
    var __reint: bfloat16_t = __p0;
    _ = &__reint;
    var __reint1: i32 = @as([*c]i32, @ptrCast(@alignCast(&__reint))).* << @intCast(16);
    _ = &__reint1;
    __ret = @as([*c]float32_t, @ptrCast(@alignCast(&__reint1))).*;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32323:24: warning: TODO implement function '__builtin_neon_vcvth_bf16_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32321:49: warning: unable to translate function, demoted to extern
pub extern fn vcvth_bf16_f32(arg___p0: float32_t) bfloat16_t;
pub inline fn vdupq_n_bf16(arg___p0: bfloat16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk bfloat16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_bf16(arg___p0: bfloat16_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk bfloat16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vget_high_bf16(arg___p0: bfloat16x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_bf16(arg___p0: bfloat16x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33511:24: warning: TODO implement function '__builtin_neon_vdotq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33509:52: warning: unable to translate function, demoted to extern
pub extern fn vdotq_u32(arg___p0: uint32x4_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33534:23: warning: TODO implement function '__builtin_neon_vdotq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33532:51: warning: unable to translate function, demoted to extern
pub extern fn vdotq_s32(arg___p0: int32x4_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33557:24: warning: TODO implement function '__builtin_neon_vdot_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33555:52: warning: unable to translate function, demoted to extern
pub extern fn vdot_u32(arg___p0: uint32x2_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33580:23: warning: TODO implement function '__builtin_neon_vdot_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33578:51: warning: unable to translate function, demoted to extern
pub extern fn vdot_s32(arg___p0: int32x2_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33715:25: warning: TODO implement function '__builtin_neon_vabdq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33713:54: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33732:25: warning: TODO implement function '__builtin_neon_vabd_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33730:54: warning: unable to translate function, demoted to extern
pub extern fn vabd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33749:25: warning: TODO implement function '__builtin_neon_vabsq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33747:54: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33765:25: warning: TODO implement function '__builtin_neon_vabs_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33763:54: warning: unable to translate function, demoted to extern
pub extern fn vabs_f16(arg___p0: float16x4_t) float16x4_t;
pub inline fn vaddq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33815:25: warning: TODO implement function '__builtin_neon_vbslq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33813:54: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f16(arg___p0: uint16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33833:25: warning: TODO implement function '__builtin_neon_vbsl_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33831:54: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f16(arg___p0: uint16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33851:24: warning: TODO implement function '__builtin_neon_vcageq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33849:53: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33868:24: warning: TODO implement function '__builtin_neon_vcage_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33866:53: warning: unable to translate function, demoted to extern
pub extern fn vcage_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33885:24: warning: TODO implement function '__builtin_neon_vcagtq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33883:53: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33902:24: warning: TODO implement function '__builtin_neon_vcagt_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33900:53: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33919:24: warning: TODO implement function '__builtin_neon_vcaleq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33917:53: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33936:24: warning: TODO implement function '__builtin_neon_vcale_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33934:53: warning: unable to translate function, demoted to extern
pub extern fn vcale_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33953:24: warning: TODO implement function '__builtin_neon_vcaltq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33951:53: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33970:24: warning: TODO implement function '__builtin_neon_vcalt_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33968:53: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
pub inline fn vceqq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34021:24: warning: TODO implement function '__builtin_neon_vceqzq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34019:53: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34037:24: warning: TODO implement function '__builtin_neon_vceqz_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34035:53: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcgeq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34087:24: warning: TODO implement function '__builtin_neon_vcgezq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34085:53: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34103:24: warning: TODO implement function '__builtin_neon_vcgez_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34101:53: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcgtq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34153:24: warning: TODO implement function '__builtin_neon_vcgtzq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34151:53: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34169:24: warning: TODO implement function '__builtin_neon_vcgtz_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34167:53: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcleq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34219:24: warning: TODO implement function '__builtin_neon_vclezq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34217:53: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34235:24: warning: TODO implement function '__builtin_neon_vclez_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34233:53: warning: unable to translate function, demoted to extern
pub extern fn vclez_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcltq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34285:24: warning: TODO implement function '__builtin_neon_vcltzq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34283:53: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34301:24: warning: TODO implement function '__builtin_neon_vcltz_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34299:53: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f16(arg___p0: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34317:25: warning: TODO implement function '__builtin_neon_vcvtq_f16_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34315:54: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f16_u16(arg___p0: uint16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34333:25: warning: TODO implement function '__builtin_neon_vcvtq_f16_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34331:54: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f16_s16(arg___p0: int16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34349:25: warning: TODO implement function '__builtin_neon_vcvt_f16_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34347:54: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_u16(arg___p0: uint16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34365:25: warning: TODO implement function '__builtin_neon_vcvt_f16_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34363:54: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_s16(arg___p0: int16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34525:23: warning: TODO implement function '__builtin_neon_vcvtq_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34523:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34541:23: warning: TODO implement function '__builtin_neon_vcvt_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34539:52: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34557:24: warning: TODO implement function '__builtin_neon_vcvtq_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34555:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34573:24: warning: TODO implement function '__builtin_neon_vcvt_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34571:53: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34589:23: warning: TODO implement function '__builtin_neon_vcvtaq_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34587:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34605:23: warning: TODO implement function '__builtin_neon_vcvta_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34603:52: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34621:24: warning: TODO implement function '__builtin_neon_vcvtaq_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34619:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34637:24: warning: TODO implement function '__builtin_neon_vcvta_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34635:53: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34653:23: warning: TODO implement function '__builtin_neon_vcvtmq_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34651:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34669:23: warning: TODO implement function '__builtin_neon_vcvtm_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34667:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34685:24: warning: TODO implement function '__builtin_neon_vcvtmq_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34683:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34701:24: warning: TODO implement function '__builtin_neon_vcvtm_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34699:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34717:23: warning: TODO implement function '__builtin_neon_vcvtnq_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34715:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34733:23: warning: TODO implement function '__builtin_neon_vcvtn_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34731:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34749:24: warning: TODO implement function '__builtin_neon_vcvtnq_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34747:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34765:24: warning: TODO implement function '__builtin_neon_vcvtn_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34763:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34781:23: warning: TODO implement function '__builtin_neon_vcvtpq_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34779:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34797:23: warning: TODO implement function '__builtin_neon_vcvtp_s16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34795:52: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34813:24: warning: TODO implement function '__builtin_neon_vcvtpq_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34811:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34829:24: warning: TODO implement function '__builtin_neon_vcvtp_u16_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34827:53: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34887:25: warning: TODO implement function '__builtin_neon_vfmaq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34885:54: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34910:25: warning: TODO implement function '__builtin_neon_vfma_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34908:54: warning: unable to translate function, demoted to extern
pub extern fn vfma_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
pub inline fn vfmsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f16(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = vfma_f16(__p0, -__p1, __p2);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34969:25: warning: TODO implement function '__builtin_neon_vmaxq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34967:54: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34986:25: warning: TODO implement function '__builtin_neon_vmax_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34984:54: warning: unable to translate function, demoted to extern
pub extern fn vmax_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35003:25: warning: TODO implement function '__builtin_neon_vminq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35001:54: warning: unable to translate function, demoted to extern
pub extern fn vminq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35020:25: warning: TODO implement function '__builtin_neon_vmin_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35018:54: warning: unable to translate function, demoted to extern
pub extern fn vmin_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vmulq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vnegq_f16(arg___p0: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f16(arg___p0: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35185:25: warning: TODO implement function '__builtin_neon_vpadd_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35183:54: warning: unable to translate function, demoted to extern
pub extern fn vpadd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35202:25: warning: TODO implement function '__builtin_neon_vpmax_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35200:54: warning: unable to translate function, demoted to extern
pub extern fn vpmax_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35219:25: warning: TODO implement function '__builtin_neon_vpmin_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35217:54: warning: unable to translate function, demoted to extern
pub extern fn vpmin_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35236:25: warning: TODO implement function '__builtin_neon_vrecpeq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35234:54: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35252:25: warning: TODO implement function '__builtin_neon_vrecpe_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35250:54: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35268:25: warning: TODO implement function '__builtin_neon_vrecpsq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35266:54: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35285:25: warning: TODO implement function '__builtin_neon_vrecps_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35283:54: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vrev64q_f16(arg___p0: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vrev64_f16(arg___p0: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35334:25: warning: TODO implement function '__builtin_neon_vrsqrteq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35332:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35350:25: warning: TODO implement function '__builtin_neon_vrsqrte_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35348:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35366:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35364:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35383:25: warning: TODO implement function '__builtin_neon_vrsqrts_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35381:54: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vsubq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35434:3: warning: TODO implement function '__builtin_neon_vtrnq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35432:56: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35453:3: warning: TODO implement function '__builtin_neon_vtrn_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35451:56: warning: unable to translate function, demoted to extern
pub extern fn vtrn_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35472:3: warning: TODO implement function '__builtin_neon_vuzpq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35470:56: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35491:3: warning: TODO implement function '__builtin_neon_vuzp_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35489:56: warning: unable to translate function, demoted to extern
pub extern fn vuzp_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35510:3: warning: TODO implement function '__builtin_neon_vzipq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35508:56: warning: unable to translate function, demoted to extern
pub extern fn vzipq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35529:3: warning: TODO implement function '__builtin_neon_vzip_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35527:56: warning: unable to translate function, demoted to extern
pub extern fn vzip_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35548:24: warning: TODO implement function '__builtin_neon_vmmlaq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35546:49: warning: unable to translate function, demoted to extern
pub extern fn vmmlaq_u32(arg___p0: uint32x4_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35566:23: warning: TODO implement function '__builtin_neon_vmmlaq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35564:48: warning: unable to translate function, demoted to extern
pub extern fn vmmlaq_s32(arg___p0: int32x4_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35584:23: warning: TODO implement function '__builtin_neon_vusdotq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35582:48: warning: unable to translate function, demoted to extern
pub extern fn vusdotq_s32(arg___p0: int32x4_t, arg___p1: uint8x16_t, arg___p2: int8x16_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35607:23: warning: TODO implement function '__builtin_neon_vusdot_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35605:48: warning: unable to translate function, demoted to extern
pub extern fn vusdot_s32(arg___p0: int32x2_t, arg___p1: uint8x8_t, arg___p2: int8x8_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35682:23: warning: TODO implement function '__builtin_neon_vusmmlaq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35680:48: warning: unable to translate function, demoted to extern
pub extern fn vusmmlaq_s32(arg___p0: int32x4_t, arg___p1: uint8x16_t, arg___p2: int8x16_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35700:23: warning: TODO implement function '__builtin_neon_vqrdmlahq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35698:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35723:23: warning: TODO implement function '__builtin_neon_vqrdmlahq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35721:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35746:23: warning: TODO implement function '__builtin_neon_vqrdmlah_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35744:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlah_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35769:23: warning: TODO implement function '__builtin_neon_vqrdmlah_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35767:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlah_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35888:23: warning: TODO implement function '__builtin_neon_vqrdmlshq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35886:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35911:23: warning: TODO implement function '__builtin_neon_vqrdmlshq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35909:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35934:23: warning: TODO implement function '__builtin_neon_vqrdmlsh_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35932:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlsh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35957:23: warning: TODO implement function '__builtin_neon_vqrdmlsh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35955:49: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlsh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36076:25: warning: TODO implement function '__builtin_neon_vcadd_rot270_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36074:51: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot270_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36093:25: warning: TODO implement function '__builtin_neon_vcadd_rot90_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36091:51: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot90_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36110:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36108:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36127:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36125:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36144:25: warning: TODO implement function '__builtin_neon_vcmlaq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36142:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36167:25: warning: TODO implement function '__builtin_neon_vcmla_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36165:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36302:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36300:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36325:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36323:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36460:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36458:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36483:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36481:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36618:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36616:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36641:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36639:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36776:25: warning: TODO implement function '__builtin_neon_vcadd_rot270_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36774:60: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot270_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36793:25: warning: TODO implement function '__builtin_neon_vcadd_rot90_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36791:60: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot90_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36810:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36808:60: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36827:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36825:60: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36844:25: warning: TODO implement function '__builtin_neon_vcmlaq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36842:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36867:25: warning: TODO implement function '__builtin_neon_vcmla_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36865:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37002:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37000:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37025:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37023:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37160:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37158:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37183:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37181:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37318:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37316:60: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37341:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37339:60: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39297:25: warning: TODO implement function '__builtin_neon_vcvt_f16_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39295:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_f32(arg___p0: float32x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39318:25: warning: TODO implement function '__builtin_neon_vcvt_f32_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39316:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_f16(arg___p0: float16x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40245:23: warning: TODO implement function '__builtin_neon_vcvtaq_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40243:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40261:23: warning: TODO implement function '__builtin_neon_vcvta_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40259:16: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40277:24: warning: TODO implement function '__builtin_neon_vcvtaq_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40275:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40293:24: warning: TODO implement function '__builtin_neon_vcvta_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40291:17: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40309:23: warning: TODO implement function '__builtin_neon_vcvtmq_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40307:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40325:23: warning: TODO implement function '__builtin_neon_vcvtm_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40323:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40341:24: warning: TODO implement function '__builtin_neon_vcvtmq_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40339:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40357:24: warning: TODO implement function '__builtin_neon_vcvtm_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40355:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40373:23: warning: TODO implement function '__builtin_neon_vcvtnq_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40371:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40389:23: warning: TODO implement function '__builtin_neon_vcvtn_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40387:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40405:24: warning: TODO implement function '__builtin_neon_vcvtnq_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40403:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40421:24: warning: TODO implement function '__builtin_neon_vcvtn_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40419:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40437:23: warning: TODO implement function '__builtin_neon_vcvtpq_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40435:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40453:23: warning: TODO implement function '__builtin_neon_vcvtp_s32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40451:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40469:24: warning: TODO implement function '__builtin_neon_vcvtpq_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40467:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40485:24: warning: TODO implement function '__builtin_neon_vcvtp_u32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40483:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40501:24: warning: TODO implement function '__builtin_neon_vaesdq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40499:48: warning: unable to translate function, demoted to extern
pub extern fn vaesdq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40518:24: warning: TODO implement function '__builtin_neon_vaeseq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40516:48: warning: unable to translate function, demoted to extern
pub extern fn vaeseq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40535:24: warning: TODO implement function '__builtin_neon_vaesimcq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40533:48: warning: unable to translate function, demoted to extern
pub extern fn vaesimcq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40551:24: warning: TODO implement function '__builtin_neon_vaesmcq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40549:48: warning: unable to translate function, demoted to extern
pub extern fn vaesmcq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40567:24: warning: TODO implement function '__builtin_neon_vsha1cq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40565:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1cq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40583:22: warning: TODO implement function '__builtin_neon_vsha1h_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40581:47: warning: unable to translate function, demoted to extern
pub extern fn vsha1h_u32(arg___p0: u32) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40589:24: warning: TODO implement function '__builtin_neon_vsha1mq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40587:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1mq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40606:24: warning: TODO implement function '__builtin_neon_vsha1pq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40604:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1pq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40623:24: warning: TODO implement function '__builtin_neon_vsha1su0q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40621:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1su0q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40641:24: warning: TODO implement function '__builtin_neon_vsha1su1q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40639:49: warning: unable to translate function, demoted to extern
pub extern fn vsha1su1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40658:24: warning: TODO implement function '__builtin_neon_vsha256hq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40656:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256hq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40676:24: warning: TODO implement function '__builtin_neon_vsha256h2q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40674:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256h2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40694:24: warning: TODO implement function '__builtin_neon_vsha256su0q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40692:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256su0q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40711:24: warning: TODO implement function '__builtin_neon_vsha256su1q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40709:49: warning: unable to translate function, demoted to extern
pub extern fn vsha256su1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40731:25: warning: TODO implement function '__builtin_neon_vrndq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40729:18: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40747:25: warning: TODO implement function '__builtin_neon_vrnd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40745:18: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40763:25: warning: TODO implement function '__builtin_neon_vrndaq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40761:18: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40779:25: warning: TODO implement function '__builtin_neon_vrnda_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40777:18: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40795:25: warning: TODO implement function '__builtin_neon_vrndiq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40793:18: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40811:25: warning: TODO implement function '__builtin_neon_vrndi_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40809:18: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40827:25: warning: TODO implement function '__builtin_neon_vrndmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40825:18: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40843:25: warning: TODO implement function '__builtin_neon_vrndm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40841:18: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40859:25: warning: TODO implement function '__builtin_neon_vrndnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40857:18: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40875:25: warning: TODO implement function '__builtin_neon_vrndn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40873:18: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40890:23: warning: TODO implement function '__builtin_neon_vrndns_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40888:16: warning: unable to translate function, demoted to extern
pub extern fn vrndns_f32(arg___p0: float32_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40896:25: warning: TODO implement function '__builtin_neon_vrndpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40894:18: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40912:25: warning: TODO implement function '__builtin_neon_vrndp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40910:18: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40928:25: warning: TODO implement function '__builtin_neon_vrndxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40926:18: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40944:25: warning: TODO implement function '__builtin_neon_vrndx_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40942:18: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40960:25: warning: TODO implement function '__builtin_neon_vrndq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40958:54: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40976:25: warning: TODO implement function '__builtin_neon_vrnd_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40974:54: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40992:25: warning: TODO implement function '__builtin_neon_vrndaq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40990:54: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41008:25: warning: TODO implement function '__builtin_neon_vrnda_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41006:54: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41024:25: warning: TODO implement function '__builtin_neon_vrndmq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41022:54: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41040:25: warning: TODO implement function '__builtin_neon_vrndm_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41038:54: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41056:25: warning: TODO implement function '__builtin_neon_vrndnq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41054:54: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41072:25: warning: TODO implement function '__builtin_neon_vrndn_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41070:54: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41088:25: warning: TODO implement function '__builtin_neon_vrndpq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41086:54: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41104:25: warning: TODO implement function '__builtin_neon_vrndp_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41102:54: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41120:25: warning: TODO implement function '__builtin_neon_vrndxq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41118:54: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41136:25: warning: TODO implement function '__builtin_neon_vrndx_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41134:54: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41154:25: warning: TODO implement function '__builtin_neon_vmaxnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41152:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41171:25: warning: TODO implement function '__builtin_neon_vmaxnm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41169:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41188:25: warning: TODO implement function '__builtin_neon_vminnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41186:18: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41205:25: warning: TODO implement function '__builtin_neon_vminnm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41203:18: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41222:25: warning: TODO implement function '__builtin_neon_vmaxnmq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41220:54: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41239:25: warning: TODO implement function '__builtin_neon_vmaxnm_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41237:54: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41256:25: warning: TODO implement function '__builtin_neon_vminnmq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41254:54: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41273:25: warning: TODO implement function '__builtin_neon_vminnm_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41271:54: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41292:25: warning: TODO implement function '__builtin_neon_vfmaq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41290:18: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41315:25: warning: TODO implement function '__builtin_neon_vfma_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41313:18: warning: unable to translate function, demoted to extern
pub extern fn vfma_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
pub inline fn vfmaq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vfma_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfmsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, -__p1, __p2);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41410:25: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41408:18: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41426:25: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41424:18: warning: unable to translate function, demoted to extern
pub extern fn vabd_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41431:23: warning: TODO implement function '__builtin_neon_vabdd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41429:16: warning: unable to translate function, demoted to extern
pub extern fn vabdd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41436:23: warning: TODO implement function '__builtin_neon_vabds_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41434:16: warning: unable to translate function, demoted to extern
pub extern fn vabds_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41442:25: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41440:18: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41458:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41456:16: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s64(arg___p0: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41473:25: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41471:18: warning: unable to translate function, demoted to extern
pub extern fn vabs_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41478:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41476:16: warning: unable to translate function, demoted to extern
pub extern fn vabs_s64(arg___p0: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41483:21: warning: TODO implement function '__builtin_neon_vabsd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41481:14: warning: unable to translate function, demoted to extern
pub extern fn vabsd_s64(arg___p0: i64) i64;
pub inline fn vaddq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41510:22: warning: TODO implement function '__builtin_neon_vaddd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41508:15: warning: unable to translate function, demoted to extern
pub extern fn vaddd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41515:21: warning: TODO implement function '__builtin_neon_vaddd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41513:14: warning: unable to translate function, demoted to extern
pub extern fn vaddd_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41520:23: warning: TODO implement function '__builtin_neon_vaddq_p128' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41518:16: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p128(arg___p0: poly128_t, arg___p1: poly128_t) poly128_t;
pub inline fn vaddhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vaddhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vaddhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vaddhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vaddhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vaddhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vaddhn_s16(__p1, __p2));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41634:22: warning: TODO implement function '__builtin_neon_vaddlvq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41632:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u8(arg___p0: uint8x16_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41649:22: warning: TODO implement function '__builtin_neon_vaddlvq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41647:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u32(arg___p0: uint32x4_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41664:22: warning: TODO implement function '__builtin_neon_vaddlvq_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41662:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u16(arg___p0: uint16x8_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41679:21: warning: TODO implement function '__builtin_neon_vaddlvq_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41677:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s8(arg___p0: int8x16_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41694:21: warning: TODO implement function '__builtin_neon_vaddlvq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41692:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s32(arg___p0: int32x4_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41709:21: warning: TODO implement function '__builtin_neon_vaddlvq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41707:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s16(arg___p0: int16x8_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41724:22: warning: TODO implement function '__builtin_neon_vaddlv_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41722:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u8(arg___p0: uint8x8_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41739:22: warning: TODO implement function '__builtin_neon_vaddlv_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41737:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u32(arg___p0: uint32x2_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41754:22: warning: TODO implement function '__builtin_neon_vaddlv_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41752:15: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u16(arg___p0: uint16x4_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41769:21: warning: TODO implement function '__builtin_neon_vaddlv_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41767:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s8(arg___p0: int8x8_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41784:21: warning: TODO implement function '__builtin_neon_vaddlv_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41782:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s32(arg___p0: int32x2_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41799:21: warning: TODO implement function '__builtin_neon_vaddlv_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41797:14: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s16(arg___p0: int16x4_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41814:21: warning: TODO implement function '__builtin_neon_vaddvq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41812:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u8(arg___p0: uint8x16_t) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41829:22: warning: TODO implement function '__builtin_neon_vaddvq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41827:15: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u32(arg___p0: uint32x4_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41844:22: warning: TODO implement function '__builtin_neon_vaddvq_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41842:15: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u64(arg___p0: uint64x2_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41859:22: warning: TODO implement function '__builtin_neon_vaddvq_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41857:15: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u16(arg___p0: uint16x8_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41874:20: warning: TODO implement function '__builtin_neon_vaddvq_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41872:13: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s8(arg___p0: int8x16_t) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41889:23: warning: TODO implement function '__builtin_neon_vaddvq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41887:16: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41904:23: warning: TODO implement function '__builtin_neon_vaddvq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41902:16: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_f32(arg___p0: float32x4_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41919:21: warning: TODO implement function '__builtin_neon_vaddvq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41917:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s32(arg___p0: int32x4_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41934:21: warning: TODO implement function '__builtin_neon_vaddvq_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41932:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s64(arg___p0: int64x2_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41949:21: warning: TODO implement function '__builtin_neon_vaddvq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41947:14: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s16(arg___p0: int16x8_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41964:21: warning: TODO implement function '__builtin_neon_vaddv_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41962:14: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u8(arg___p0: uint8x8_t) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41979:22: warning: TODO implement function '__builtin_neon_vaddv_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41977:15: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u32(arg___p0: uint32x2_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41994:22: warning: TODO implement function '__builtin_neon_vaddv_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:41992:15: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u16(arg___p0: uint16x4_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42009:20: warning: TODO implement function '__builtin_neon_vaddv_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42007:13: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s8(arg___p0: int8x8_t) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42024:23: warning: TODO implement function '__builtin_neon_vaddv_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42022:16: warning: unable to translate function, demoted to extern
pub extern fn vaddv_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42039:21: warning: TODO implement function '__builtin_neon_vaddv_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42037:14: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s32(arg___p0: int32x2_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42054:21: warning: TODO implement function '__builtin_neon_vaddv_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42052:14: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s16(arg___p0: int16x4_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42068:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42066:17: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p64(arg___p0: uint64x1_t, arg___p1: poly64x1_t, arg___p2: poly64x1_t) poly64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42074:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42072:17: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p64(arg___p0: uint64x2_t, arg___p1: poly64x2_t, arg___p2: poly64x2_t) poly64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42092:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42090:18: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f64(arg___p0: uint64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42109:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42107:18: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f64(arg___p0: uint64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42115:24: warning: TODO implement function '__builtin_neon_vcageq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42113:17: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42131:24: warning: TODO implement function '__builtin_neon_vcage_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42129:17: warning: unable to translate function, demoted to extern
pub extern fn vcage_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42136:22: warning: TODO implement function '__builtin_neon_vcaged_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42134:15: warning: unable to translate function, demoted to extern
pub extern fn vcaged_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42141:22: warning: TODO implement function '__builtin_neon_vcages_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42139:15: warning: unable to translate function, demoted to extern
pub extern fn vcages_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42147:24: warning: TODO implement function '__builtin_neon_vcagtq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42145:17: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42163:24: warning: TODO implement function '__builtin_neon_vcagt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42161:17: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42168:22: warning: TODO implement function '__builtin_neon_vcagtd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42166:15: warning: unable to translate function, demoted to extern
pub extern fn vcagtd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42173:22: warning: TODO implement function '__builtin_neon_vcagts_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42171:15: warning: unable to translate function, demoted to extern
pub extern fn vcagts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42179:24: warning: TODO implement function '__builtin_neon_vcaleq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42177:17: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42195:24: warning: TODO implement function '__builtin_neon_vcale_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42193:17: warning: unable to translate function, demoted to extern
pub extern fn vcale_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42200:22: warning: TODO implement function '__builtin_neon_vcaled_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42198:15: warning: unable to translate function, demoted to extern
pub extern fn vcaled_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42205:22: warning: TODO implement function '__builtin_neon_vcales_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42203:15: warning: unable to translate function, demoted to extern
pub extern fn vcales_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42211:24: warning: TODO implement function '__builtin_neon_vcaltq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42209:17: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42227:24: warning: TODO implement function '__builtin_neon_vcalt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42225:17: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42232:22: warning: TODO implement function '__builtin_neon_vcaltd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42230:15: warning: unable to translate function, demoted to extern
pub extern fn vcaltd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42237:22: warning: TODO implement function '__builtin_neon_vcalts_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42235:15: warning: unable to translate function, demoted to extern
pub extern fn vcalts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
pub inline fn vceq_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42330:22: warning: TODO implement function '__builtin_neon_vceqd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42328:15: warning: unable to translate function, demoted to extern
pub extern fn vceqd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42335:22: warning: TODO implement function '__builtin_neon_vceqd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42333:15: warning: unable to translate function, demoted to extern
pub extern fn vceqd_s64(arg___p0: i64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42340:22: warning: TODO implement function '__builtin_neon_vceqd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42338:15: warning: unable to translate function, demoted to extern
pub extern fn vceqd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42345:22: warning: TODO implement function '__builtin_neon_vceqs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42343:15: warning: unable to translate function, demoted to extern
pub extern fn vceqs_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42351:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42349:16: warning: unable to translate function, demoted to extern
pub extern fn vceqz_p8(arg___p0: poly8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42366:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42364:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_p64(arg___p0: poly64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42372:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42370:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_p8(arg___p0: poly8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42388:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42386:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_p64(arg___p0: poly64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42404:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42402:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42420:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42418:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42436:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42434:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u64(arg___p0: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42452:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42450:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u16(arg___p0: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42468:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42466:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s8(arg___p0: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42484:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42482:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42500:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42498:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42516:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42514:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s32(arg___p0: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42532:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42530:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s64(arg___p0: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42548:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42546:17: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s16(arg___p0: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42564:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42562:16: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u8(arg___p0: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42580:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42578:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u32(arg___p0: uint32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42595:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42593:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u64(arg___p0: uint64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42601:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42599:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u16(arg___p0: uint16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42617:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42615:16: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s8(arg___p0: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42632:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42630:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42638:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42636:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42654:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42652:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s32(arg___p0: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42669:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42667:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s64(arg___p0: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42675:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42673:17: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s16(arg___p0: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42690:22: warning: TODO implement function '__builtin_neon_vceqzd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42688:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_u64(arg___p0: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42695:22: warning: TODO implement function '__builtin_neon_vceqzd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42693:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_s64(arg___p0: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42700:22: warning: TODO implement function '__builtin_neon_vceqzd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42698:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42705:22: warning: TODO implement function '__builtin_neon_vceqzs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42703:15: warning: unable to translate function, demoted to extern
pub extern fn vceqzs_f32(arg___p0: float32_t) u32;
pub inline fn vcgeq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42776:22: warning: TODO implement function '__builtin_neon_vcged_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42774:15: warning: unable to translate function, demoted to extern
pub extern fn vcged_s64(arg___p0: i64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42781:22: warning: TODO implement function '__builtin_neon_vcged_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42779:15: warning: unable to translate function, demoted to extern
pub extern fn vcged_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42786:22: warning: TODO implement function '__builtin_neon_vcged_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42784:15: warning: unable to translate function, demoted to extern
pub extern fn vcged_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42791:22: warning: TODO implement function '__builtin_neon_vcges_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42789:15: warning: unable to translate function, demoted to extern
pub extern fn vcges_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42797:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42795:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s8(arg___p0: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42813:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42811:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42829:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42827:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42845:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42843:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s32(arg___p0: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42861:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42859:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s64(arg___p0: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42877:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42875:17: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s16(arg___p0: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42893:23: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42891:16: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s8(arg___p0: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42908:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42906:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42914:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42912:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42930:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42928:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s32(arg___p0: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42945:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42943:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s64(arg___p0: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42951:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42949:17: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s16(arg___p0: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42966:22: warning: TODO implement function '__builtin_neon_vcgezd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42964:15: warning: unable to translate function, demoted to extern
pub extern fn vcgezd_s64(arg___p0: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42971:22: warning: TODO implement function '__builtin_neon_vcgezd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42969:15: warning: unable to translate function, demoted to extern
pub extern fn vcgezd_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42976:22: warning: TODO implement function '__builtin_neon_vcgezs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:42974:15: warning: unable to translate function, demoted to extern
pub extern fn vcgezs_f32(arg___p0: float32_t) u32;
pub inline fn vcgtq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43047:22: warning: TODO implement function '__builtin_neon_vcgtd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43045:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_s64(arg___p0: i64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43052:22: warning: TODO implement function '__builtin_neon_vcgtd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43050:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43057:22: warning: TODO implement function '__builtin_neon_vcgtd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43055:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43062:22: warning: TODO implement function '__builtin_neon_vcgts_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43060:15: warning: unable to translate function, demoted to extern
pub extern fn vcgts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43068:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43066:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s8(arg___p0: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43084:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43082:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43100:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43098:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43116:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43114:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s32(arg___p0: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43132:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43130:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s64(arg___p0: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43148:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43146:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s16(arg___p0: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43164:23: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43162:16: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s8(arg___p0: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43179:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43177:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43185:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43183:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43201:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43199:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s32(arg___p0: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43216:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43214:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s64(arg___p0: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43222:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43220:17: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s16(arg___p0: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43237:22: warning: TODO implement function '__builtin_neon_vcgtzd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43235:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtzd_s64(arg___p0: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43242:22: warning: TODO implement function '__builtin_neon_vcgtzd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43240:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtzd_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43247:22: warning: TODO implement function '__builtin_neon_vcgtzs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43245:15: warning: unable to translate function, demoted to extern
pub extern fn vcgtzs_f32(arg___p0: float32_t) u32;
pub inline fn vcleq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43318:22: warning: TODO implement function '__builtin_neon_vcled_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43316:15: warning: unable to translate function, demoted to extern
pub extern fn vcled_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43323:22: warning: TODO implement function '__builtin_neon_vcled_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43321:15: warning: unable to translate function, demoted to extern
pub extern fn vcled_s64(arg___p0: i64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43328:22: warning: TODO implement function '__builtin_neon_vcled_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43326:15: warning: unable to translate function, demoted to extern
pub extern fn vcled_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43333:22: warning: TODO implement function '__builtin_neon_vcles_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43331:15: warning: unable to translate function, demoted to extern
pub extern fn vcles_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43339:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43337:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s8(arg___p0: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43355:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43353:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43371:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43369:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43387:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43385:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s32(arg___p0: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43403:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43401:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s64(arg___p0: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43419:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43417:17: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s16(arg___p0: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43435:23: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43433:16: warning: unable to translate function, demoted to extern
pub extern fn vclez_s8(arg___p0: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43450:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43448:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43456:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43454:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43472:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43470:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_s32(arg___p0: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43487:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43485:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_s64(arg___p0: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43493:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43491:17: warning: unable to translate function, demoted to extern
pub extern fn vclez_s16(arg___p0: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43508:22: warning: TODO implement function '__builtin_neon_vclezd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43506:15: warning: unable to translate function, demoted to extern
pub extern fn vclezd_s64(arg___p0: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43513:22: warning: TODO implement function '__builtin_neon_vclezd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43511:15: warning: unable to translate function, demoted to extern
pub extern fn vclezd_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43518:22: warning: TODO implement function '__builtin_neon_vclezs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43516:15: warning: unable to translate function, demoted to extern
pub extern fn vclezs_f32(arg___p0: float32_t) u32;
pub inline fn vcltq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43589:22: warning: TODO implement function '__builtin_neon_vcltd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43587:15: warning: unable to translate function, demoted to extern
pub extern fn vcltd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43594:22: warning: TODO implement function '__builtin_neon_vcltd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43592:15: warning: unable to translate function, demoted to extern
pub extern fn vcltd_s64(arg___p0: i64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43599:22: warning: TODO implement function '__builtin_neon_vcltd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43597:15: warning: unable to translate function, demoted to extern
pub extern fn vcltd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43604:22: warning: TODO implement function '__builtin_neon_vclts_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43602:15: warning: unable to translate function, demoted to extern
pub extern fn vclts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43610:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43608:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s8(arg___p0: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43626:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43624:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43642:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43640:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f32(arg___p0: float32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43658:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43656:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s32(arg___p0: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43674:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43672:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s64(arg___p0: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43690:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43688:17: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s16(arg___p0: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43706:23: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43704:16: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s8(arg___p0: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43721:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43719:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43727:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43725:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f32(arg___p0: float32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43743:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43741:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s32(arg___p0: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43758:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43756:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s64(arg___p0: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43764:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43762:17: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s16(arg___p0: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43779:22: warning: TODO implement function '__builtin_neon_vcltzd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43777:15: warning: unable to translate function, demoted to extern
pub extern fn vcltzd_s64(arg___p0: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43784:22: warning: TODO implement function '__builtin_neon_vcltzd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43782:15: warning: unable to translate function, demoted to extern
pub extern fn vcltzd_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43789:22: warning: TODO implement function '__builtin_neon_vcltzs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43787:15: warning: unable to translate function, demoted to extern
pub extern fn vcltzs_f32(arg___p0: float32_t) u32;
pub inline fn vcombine_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44726:23: warning: TODO implement function '__builtin_neon_vcvts_f32_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44724:16: warning: unable to translate function, demoted to extern
pub extern fn vcvts_f32_s32(arg___p0: i32) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44731:23: warning: TODO implement function '__builtin_neon_vcvts_f32_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44729:16: warning: unable to translate function, demoted to extern
pub extern fn vcvts_f32_u32(arg___p0: u32) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44737:25: warning: TODO implement function '__builtin_neon_vcvt_f32_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44735:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_f64(arg___p0: float64x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44757:23: warning: TODO implement function '__builtin_neon_vcvtd_f64_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44755:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_f64_s64(arg___p0: i64) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44762:23: warning: TODO implement function '__builtin_neon_vcvtd_f64_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44760:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_f64_u64(arg___p0: u64) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44768:25: warning: TODO implement function '__builtin_neon_vcvtq_f64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44766:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f64_u64(arg___p0: uint64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44784:25: warning: TODO implement function '__builtin_neon_vcvtq_f64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44782:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f64_s64(arg___p0: int64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44799:25: warning: TODO implement function '__builtin_neon_vcvt_f64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44797:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_u64(arg___p0: uint64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44804:25: warning: TODO implement function '__builtin_neon_vcvt_f64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44802:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_s64(arg___p0: int64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44810:25: warning: TODO implement function '__builtin_neon_vcvt_f64_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44808:18: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_f32(arg___p0: float32x2_t) float64x2_t;
pub inline fn vcvt_high_f16_f32(arg___p0: float16x4_t, arg___p1: float32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_f16(__p0, vcvt_f16_f32(__p1));
    return __ret;
}
pub inline fn vcvt_high_f32_f16(arg___p0: float16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_f16(vget_high_f16(__p0));
    return __ret;
}
pub inline fn vcvt_high_f32_f64(arg___p0: float32x2_t, arg___p1: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_f32(__p0, vcvt_f32_f64(__p1));
    return __ret;
}
pub inline fn vcvt_high_f64_f32(arg___p0: float32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vcvt_f64_f32(vget_high_f32(__p0));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45040:21: warning: TODO implement function '__builtin_neon_vcvts_s32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45038:14: warning: unable to translate function, demoted to extern
pub extern fn vcvts_s32_f32(arg___p0: float32_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45045:21: warning: TODO implement function '__builtin_neon_vcvtd_s64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45043:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_s64_f64(arg___p0: float64_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45051:23: warning: TODO implement function '__builtin_neon_vcvtq_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45049:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45066:23: warning: TODO implement function '__builtin_neon_vcvt_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45064:16: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45071:22: warning: TODO implement function '__builtin_neon_vcvts_u32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45069:15: warning: unable to translate function, demoted to extern
pub extern fn vcvts_u32_f32(arg___p0: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45076:22: warning: TODO implement function '__builtin_neon_vcvtd_u64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45074:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_u64_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45082:24: warning: TODO implement function '__builtin_neon_vcvtq_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45080:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45097:24: warning: TODO implement function '__builtin_neon_vcvt_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45095:17: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45102:21: warning: TODO implement function '__builtin_neon_vcvtas_s32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45100:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtas_s32_f32(arg___p0: float32_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45108:23: warning: TODO implement function '__builtin_neon_vcvtaq_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45106:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45123:23: warning: TODO implement function '__builtin_neon_vcvta_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45121:16: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45128:21: warning: TODO implement function '__builtin_neon_vcvtad_s64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45126:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtad_s64_f64(arg___p0: float64_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45133:22: warning: TODO implement function '__builtin_neon_vcvtas_u32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45131:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtas_u32_f32(arg___p0: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45139:24: warning: TODO implement function '__builtin_neon_vcvtaq_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45137:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45154:24: warning: TODO implement function '__builtin_neon_vcvta_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45152:17: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45159:22: warning: TODO implement function '__builtin_neon_vcvtad_u64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45157:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtad_u64_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45164:21: warning: TODO implement function '__builtin_neon_vcvtms_s32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45162:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtms_s32_f32(arg___p0: float32_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45170:23: warning: TODO implement function '__builtin_neon_vcvtmq_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45168:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45185:23: warning: TODO implement function '__builtin_neon_vcvtm_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45183:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45190:21: warning: TODO implement function '__builtin_neon_vcvtmd_s64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45188:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtmd_s64_f64(arg___p0: float64_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45195:22: warning: TODO implement function '__builtin_neon_vcvtms_u32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45193:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtms_u32_f32(arg___p0: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45201:24: warning: TODO implement function '__builtin_neon_vcvtmq_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45199:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45216:24: warning: TODO implement function '__builtin_neon_vcvtm_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45214:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45221:22: warning: TODO implement function '__builtin_neon_vcvtmd_u64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45219:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtmd_u64_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45226:21: warning: TODO implement function '__builtin_neon_vcvtns_s32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45224:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtns_s32_f32(arg___p0: float32_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45232:23: warning: TODO implement function '__builtin_neon_vcvtnq_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45230:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45247:23: warning: TODO implement function '__builtin_neon_vcvtn_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45245:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45252:21: warning: TODO implement function '__builtin_neon_vcvtnd_s64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45250:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtnd_s64_f64(arg___p0: float64_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45257:22: warning: TODO implement function '__builtin_neon_vcvtns_u32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45255:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtns_u32_f32(arg___p0: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45263:24: warning: TODO implement function '__builtin_neon_vcvtnq_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45261:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45278:24: warning: TODO implement function '__builtin_neon_vcvtn_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45276:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45283:22: warning: TODO implement function '__builtin_neon_vcvtnd_u64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45281:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtnd_u64_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45288:21: warning: TODO implement function '__builtin_neon_vcvtps_s32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45286:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtps_s32_f32(arg___p0: float32_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45294:23: warning: TODO implement function '__builtin_neon_vcvtpq_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45292:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45309:23: warning: TODO implement function '__builtin_neon_vcvtp_s64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45307:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45314:21: warning: TODO implement function '__builtin_neon_vcvtpd_s64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45312:14: warning: unable to translate function, demoted to extern
pub extern fn vcvtpd_s64_f64(arg___p0: float64_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45319:22: warning: TODO implement function '__builtin_neon_vcvtps_u32_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45317:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtps_u32_f32(arg___p0: float32_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45325:24: warning: TODO implement function '__builtin_neon_vcvtpq_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45323:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45340:24: warning: TODO implement function '__builtin_neon_vcvtp_u64_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45338:17: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45345:22: warning: TODO implement function '__builtin_neon_vcvtpd_u64_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45343:15: warning: unable to translate function, demoted to extern
pub extern fn vcvtpd_u64_f64(arg___p0: float64_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45350:23: warning: TODO implement function '__builtin_neon_vcvtxd_f32_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45348:16: warning: unable to translate function, demoted to extern
pub extern fn vcvtxd_f32_f64(arg___p0: float64_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45356:25: warning: TODO implement function '__builtin_neon_vcvtx_f32_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45354:18: warning: unable to translate function, demoted to extern
pub extern fn vcvtx_f32_f64(arg___p0: float64x2_t) float32x2_t;
pub inline fn vcvtx_high_f32_f64(arg___p0: float32x2_t, arg___p1: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_f32(__p0, vcvtx_f32_f64(__p1));
    return __ret;
}
pub inline fn vdivq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdivq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdup_n_p64(arg___p0: poly64_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk poly64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p64(arg___p0: poly64_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk poly64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_f64(arg___p0: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_f64(arg___p0: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk float64x1_t{
            tmp,
        };
    };
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46467:25: warning: TODO implement function '__builtin_neon_vfmaq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46465:18: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46489:25: warning: TODO implement function '__builtin_neon_vfma_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46487:18: warning: unable to translate function, demoted to extern
pub extern fn vfma_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
pub inline fn vfmaq_n_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfma_n_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, __p1, blk: {
        const tmp = __p2;
        break :blk float64x1_t{
            tmp,
        };
    });
    return __ret;
}
pub inline fn vfmsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfmsq_n_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfmsq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vfms_n_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, -__p1, blk: {
        const tmp = __p2;
        break :blk float64x1_t{
            tmp,
        };
    });
    return __ret;
}
pub inline fn vfms_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vget_high_p64(arg___p0: poly64x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f64(arg___p0: float64x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p64(arg___p0: poly64x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f64(arg___p0: float64x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
    })));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48516:25: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48514:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48532:25: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48530:18: warning: unable to translate function, demoted to extern
pub extern fn vmax_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48538:23: warning: TODO implement function '__builtin_neon_vmaxnmvq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48536:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmvq_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48553:23: warning: TODO implement function '__builtin_neon_vmaxnmvq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48551:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmvq_f32(arg___p0: float32x4_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48568:23: warning: TODO implement function '__builtin_neon_vmaxnmv_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48566:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmv_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48583:21: warning: TODO implement function '__builtin_neon_vmaxvq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48581:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u8(arg___p0: uint8x16_t) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48598:22: warning: TODO implement function '__builtin_neon_vmaxvq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48596:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u32(arg___p0: uint32x4_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48613:22: warning: TODO implement function '__builtin_neon_vmaxvq_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48611:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u16(arg___p0: uint16x8_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48628:20: warning: TODO implement function '__builtin_neon_vmaxvq_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48626:13: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s8(arg___p0: int8x16_t) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48643:23: warning: TODO implement function '__builtin_neon_vmaxvq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48641:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48658:23: warning: TODO implement function '__builtin_neon_vmaxvq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48656:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_f32(arg___p0: float32x4_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48673:21: warning: TODO implement function '__builtin_neon_vmaxvq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48671:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s32(arg___p0: int32x4_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48688:21: warning: TODO implement function '__builtin_neon_vmaxvq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48686:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s16(arg___p0: int16x8_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48703:21: warning: TODO implement function '__builtin_neon_vmaxv_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48701:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u8(arg___p0: uint8x8_t) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48718:22: warning: TODO implement function '__builtin_neon_vmaxv_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48716:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u32(arg___p0: uint32x2_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48733:22: warning: TODO implement function '__builtin_neon_vmaxv_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48731:15: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u16(arg___p0: uint16x4_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48748:20: warning: TODO implement function '__builtin_neon_vmaxv_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48746:13: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s8(arg___p0: int8x8_t) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48763:23: warning: TODO implement function '__builtin_neon_vmaxv_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48761:16: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48778:21: warning: TODO implement function '__builtin_neon_vmaxv_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48776:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s32(arg___p0: int32x2_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48793:21: warning: TODO implement function '__builtin_neon_vmaxv_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48791:14: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s16(arg___p0: int16x4_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48808:25: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48806:18: warning: unable to translate function, demoted to extern
pub extern fn vminq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48824:25: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48822:18: warning: unable to translate function, demoted to extern
pub extern fn vmin_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48830:23: warning: TODO implement function '__builtin_neon_vminnmvq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48828:16: warning: unable to translate function, demoted to extern
pub extern fn vminnmvq_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48845:23: warning: TODO implement function '__builtin_neon_vminnmvq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48843:16: warning: unable to translate function, demoted to extern
pub extern fn vminnmvq_f32(arg___p0: float32x4_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48860:23: warning: TODO implement function '__builtin_neon_vminnmv_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48858:16: warning: unable to translate function, demoted to extern
pub extern fn vminnmv_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48875:21: warning: TODO implement function '__builtin_neon_vminvq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48873:14: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u8(arg___p0: uint8x16_t) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48890:22: warning: TODO implement function '__builtin_neon_vminvq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48888:15: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u32(arg___p0: uint32x4_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48905:22: warning: TODO implement function '__builtin_neon_vminvq_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48903:15: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u16(arg___p0: uint16x8_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48920:20: warning: TODO implement function '__builtin_neon_vminvq_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48918:13: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s8(arg___p0: int8x16_t) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48935:23: warning: TODO implement function '__builtin_neon_vminvq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48933:16: warning: unable to translate function, demoted to extern
pub extern fn vminvq_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48950:23: warning: TODO implement function '__builtin_neon_vminvq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48948:16: warning: unable to translate function, demoted to extern
pub extern fn vminvq_f32(arg___p0: float32x4_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48965:21: warning: TODO implement function '__builtin_neon_vminvq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48963:14: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s32(arg___p0: int32x4_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48980:21: warning: TODO implement function '__builtin_neon_vminvq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48978:14: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s16(arg___p0: int16x8_t) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48995:21: warning: TODO implement function '__builtin_neon_vminv_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48993:14: warning: unable to translate function, demoted to extern
pub extern fn vminv_u8(arg___p0: uint8x8_t) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49010:22: warning: TODO implement function '__builtin_neon_vminv_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49008:15: warning: unable to translate function, demoted to extern
pub extern fn vminv_u32(arg___p0: uint32x2_t) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49025:22: warning: TODO implement function '__builtin_neon_vminv_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49023:15: warning: unable to translate function, demoted to extern
pub extern fn vminv_u16(arg___p0: uint16x4_t) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49040:20: warning: TODO implement function '__builtin_neon_vminv_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49038:13: warning: unable to translate function, demoted to extern
pub extern fn vminv_s8(arg___p0: int8x8_t) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49055:23: warning: TODO implement function '__builtin_neon_vminv_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49053:16: warning: unable to translate function, demoted to extern
pub extern fn vminv_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49070:21: warning: TODO implement function '__builtin_neon_vminv_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49068:14: warning: unable to translate function, demoted to extern
pub extern fn vminv_s32(arg___p0: int32x2_t) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49085:21: warning: TODO implement function '__builtin_neon_vminv_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49083:14: warning: unable to translate function, demoted to extern
pub extern fn vminv_s16(arg___p0: int16x4_t) i16;
pub inline fn vmlaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmov_n_p64(arg___p0: poly64_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk poly64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p64(arg___p0: poly64_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk poly64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_f64(arg___p0: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_f64(arg___p0: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk float64x1_t{
            tmp,
        };
    };
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24783:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50240:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u8(arg___p0_515: uint8x16_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24807:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50264:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u32(arg___p0_518: uint32x4_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24831:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50288:17: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u16(arg___p0_521: uint16x8_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24855:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50312:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s8(arg___p0_524: int8x16_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24879:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50336:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s32(arg___p0_527: int32x4_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24903:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50360:16: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s16(arg___p0_530: int16x8_t) int32x4_t;
pub inline fn vmovn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vmovn_u32(__p1));
    return __ret;
}
pub inline fn vmovn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vmovn_u64(__p1));
    return __ret;
}
pub inline fn vmovn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vmovn_u16(__p1));
    return __ret;
}
pub inline fn vmovn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vmovn_s32(__p1));
    return __ret;
}
pub inline fn vmovn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vmovn_s64(__p1));
    return __ret;
}
pub inline fn vmovn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vmovn_s16(__p1));
    return __ret;
}
pub inline fn vmulq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50850:25: warning: TODO implement function '__builtin_neon_vmul_n_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50848:18: warning: unable to translate function, demoted to extern
pub extern fn vmul_n_f64(arg___p0: float64x1_t, arg___p1: float64_t) float64x1_t;
pub inline fn vmulq_n_f64(arg___p0: float64x2_t, arg___p1: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_high_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_p8(vget_high_p8(__p0), vget_high_p8(__p1));
    return __ret;
}
pub inline fn vmull_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_u8(vget_high_u8(__p0), vget_high_u8(__p1));
    return __ret;
}
pub inline fn vmull_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_u32(vget_high_u32(__p0), vget_high_u32(__p1));
    return __ret;
}
pub inline fn vmull_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_u16(vget_high_u16(__p0), vget_high_u16(__p1));
    return __ret;
}
pub inline fn vmull_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_s8(vget_high_s8(__p0), vget_high_s8(__p1));
    return __ret;
}
pub inline fn vmull_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vmull_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vmull_high_n_u32(arg___p0: uint32x4_t, arg___p1: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_n_u32(vget_high_u32(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_u16(arg___p0: uint16x8_t, arg___p1: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_n_u16(vget_high_u16(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_s32(arg___p0: int32x4_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_n_s32(vget_high_s32(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_s16(arg___p0: int16x8_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_n_s16(vget_high_s16(__p0), __p1);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51307:25: warning: TODO implement function '__builtin_neon_vmulxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51305:18: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51329:25: warning: TODO implement function '__builtin_neon_vmulxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51327:18: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51350:25: warning: TODO implement function '__builtin_neon_vmulx_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51348:18: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51356:25: warning: TODO implement function '__builtin_neon_vmulx_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51354:18: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51377:23: warning: TODO implement function '__builtin_neon_vmulxd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51375:16: warning: unable to translate function, demoted to extern
pub extern fn vmulxd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51382:23: warning: TODO implement function '__builtin_neon_vmulxs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51380:16: warning: unable to translate function, demoted to extern
pub extern fn vmulxs_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
pub inline fn vnegq_f64(arg___p0: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s64(arg___p0: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f64(arg___p0: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s64(arg___p0: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51618:21: warning: TODO implement function '__builtin_neon_vnegd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51616:14: warning: unable to translate function, demoted to extern
pub extern fn vnegd_s64(arg___p0: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51624:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51622:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51641:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51639:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51658:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51656:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51675:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51673:17: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51692:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51690:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51709:25: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51707:18: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51726:25: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51724:18: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51743:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51741:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51760:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51758:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51777:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51775:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51794:22: warning: TODO implement function '__builtin_neon_vpaddd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51792:15: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_u64(arg___p0: uint64x2_t) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51809:23: warning: TODO implement function '__builtin_neon_vpaddd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51807:16: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51824:21: warning: TODO implement function '__builtin_neon_vpaddd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51822:14: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_s64(arg___p0: int64x2_t) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51839:23: warning: TODO implement function '__builtin_neon_vpadds_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51837:16: warning: unable to translate function, demoted to extern
pub extern fn vpadds_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51854:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51852:17: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51871:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51869:17: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51888:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51886:17: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51905:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51903:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51922:25: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51920:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51939:25: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51937:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51956:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51954:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51973:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51971:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51990:23: warning: TODO implement function '__builtin_neon_vpmaxqd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51988:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxqd_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52005:23: warning: TODO implement function '__builtin_neon_vpmaxs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52003:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxs_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52020:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52018:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52037:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52035:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52054:25: warning: TODO implement function '__builtin_neon_vpmaxnm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52052:18: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52071:23: warning: TODO implement function '__builtin_neon_vpmaxnmqd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52069:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmqd_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52086:23: warning: TODO implement function '__builtin_neon_vpmaxnms_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52084:16: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnms_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52101:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52099:17: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52118:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52116:17: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52135:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52133:17: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52152:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52150:16: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52169:25: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52167:18: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52186:25: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52184:18: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52203:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52201:16: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52220:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52218:16: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52237:23: warning: TODO implement function '__builtin_neon_vpminqd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52235:16: warning: unable to translate function, demoted to extern
pub extern fn vpminqd_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52252:23: warning: TODO implement function '__builtin_neon_vpmins_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52250:16: warning: unable to translate function, demoted to extern
pub extern fn vpmins_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52267:25: warning: TODO implement function '__builtin_neon_vpminnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52265:18: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52284:25: warning: TODO implement function '__builtin_neon_vpminnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52282:18: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52301:25: warning: TODO implement function '__builtin_neon_vpminnm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52299:18: warning: unable to translate function, demoted to extern
pub extern fn vpminnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52318:23: warning: TODO implement function '__builtin_neon_vpminnmqd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52316:16: warning: unable to translate function, demoted to extern
pub extern fn vpminnmqd_f64(arg___p0: float64x2_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52333:23: warning: TODO implement function '__builtin_neon_vpminnms_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52331:16: warning: unable to translate function, demoted to extern
pub extern fn vpminnms_f32(arg___p0: float32x2_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52348:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52346:16: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s64(arg___p0: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52363:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52361:16: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s64(arg___p0: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52368:20: warning: TODO implement function '__builtin_neon_vqabsb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52366:13: warning: unable to translate function, demoted to extern
pub extern fn vqabsb_s8(arg___p0: i8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52373:21: warning: TODO implement function '__builtin_neon_vqabss_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52371:14: warning: unable to translate function, demoted to extern
pub extern fn vqabss_s32(arg___p0: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52378:21: warning: TODO implement function '__builtin_neon_vqabsd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52376:14: warning: unable to translate function, demoted to extern
pub extern fn vqabsd_s64(arg___p0: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52383:21: warning: TODO implement function '__builtin_neon_vqabsh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52381:14: warning: unable to translate function, demoted to extern
pub extern fn vqabsh_s16(arg___p0: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52388:21: warning: TODO implement function '__builtin_neon_vqaddb_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52386:14: warning: unable to translate function, demoted to extern
pub extern fn vqaddb_u8(arg___p0: u8, arg___p1: u8) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52393:22: warning: TODO implement function '__builtin_neon_vqadds_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52391:15: warning: unable to translate function, demoted to extern
pub extern fn vqadds_u32(arg___p0: u32, arg___p1: u32) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52398:22: warning: TODO implement function '__builtin_neon_vqaddd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52396:15: warning: unable to translate function, demoted to extern
pub extern fn vqaddd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52403:22: warning: TODO implement function '__builtin_neon_vqaddh_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52401:15: warning: unable to translate function, demoted to extern
pub extern fn vqaddh_u16(arg___p0: u16, arg___p1: u16) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52408:20: warning: TODO implement function '__builtin_neon_vqaddb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52406:13: warning: unable to translate function, demoted to extern
pub extern fn vqaddb_s8(arg___p0: i8, arg___p1: i8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52413:21: warning: TODO implement function '__builtin_neon_vqadds_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52411:14: warning: unable to translate function, demoted to extern
pub extern fn vqadds_s32(arg___p0: i32, arg___p1: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52418:21: warning: TODO implement function '__builtin_neon_vqaddd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52416:14: warning: unable to translate function, demoted to extern
pub extern fn vqaddd_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52423:21: warning: TODO implement function '__builtin_neon_vqaddh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52421:14: warning: unable to translate function, demoted to extern
pub extern fn vqaddh_s16(arg___p0: i16, arg___p1: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52428:21: warning: TODO implement function '__builtin_neon_vqdmlals_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52426:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlals_s32(arg___p0: i64, arg___p1: i32, arg___p2: i32) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52433:21: warning: TODO implement function '__builtin_neon_vqdmlalh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52431:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlalh_s16(arg___p0: i32, arg___p1: i16, arg___p2: i16) i32;
pub inline fn vqdmlal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vqdmlal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vqdmlal_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vqdmlal_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52736:21: warning: TODO implement function '__builtin_neon_vqdmlsls_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52734:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsls_s32(arg___p0: i64, arg___p1: i32, arg___p2: i32) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52741:21: warning: TODO implement function '__builtin_neon_vqdmlslh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52739:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmlslh_s16(arg___p0: i32, arg___p1: i16, arg___p2: i16) i32;
pub inline fn vqdmlsl_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vqdmlsl_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vqdmlsl_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vqdmlsl_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53044:21: warning: TODO implement function '__builtin_neon_vqdmulhs_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53042:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhs_s32(arg___p0: i32, arg___p1: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53049:21: warning: TODO implement function '__builtin_neon_vqdmulhh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53047:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhh_s16(arg___p0: i16, arg___p1: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53298:21: warning: TODO implement function '__builtin_neon_vqdmulls_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53296:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmulls_s32(arg___p0: i32, arg___p1: i32) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53303:21: warning: TODO implement function '__builtin_neon_vqdmullh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53301:14: warning: unable to translate function, demoted to extern
pub extern fn vqdmullh_s16(arg___p0: i16, arg___p1: i16) i32;
pub inline fn vqdmull_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vqdmull_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vqdmull_high_n_s32(arg___p0: int32x4_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_n_s32(vget_high_s32(__p0), __p1);
    return __ret;
}
pub inline fn vqdmull_high_n_s16(arg___p0: int16x8_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_n_s16(vget_high_s16(__p0), __p1);
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53576:21: warning: TODO implement function '__builtin_neon_vqmovns_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53574:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovns_s32(arg___p0: i32) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53581:21: warning: TODO implement function '__builtin_neon_vqmovnd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53579:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovnd_s64(arg___p0: i64) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53586:20: warning: TODO implement function '__builtin_neon_vqmovnh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53584:13: warning: unable to translate function, demoted to extern
pub extern fn vqmovnh_s16(arg___p0: i16) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53591:22: warning: TODO implement function '__builtin_neon_vqmovns_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53589:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovns_u32(arg___p0: u32) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53596:22: warning: TODO implement function '__builtin_neon_vqmovnd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53594:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovnd_u64(arg___p0: u64) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53601:21: warning: TODO implement function '__builtin_neon_vqmovnh_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53599:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovnh_u16(arg___p0: u16) u8;
pub inline fn vqmovn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vqmovn_u32(__p1));
    return __ret;
}
pub inline fn vqmovn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vqmovn_u64(__p1));
    return __ret;
}
pub inline fn vqmovn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vqmovn_u16(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vqmovn_s32(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vqmovn_s64(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vqmovn_s16(__p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53708:22: warning: TODO implement function '__builtin_neon_vqmovuns_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53706:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovuns_s32(arg___p0: i32) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53713:22: warning: TODO implement function '__builtin_neon_vqmovund_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53711:15: warning: unable to translate function, demoted to extern
pub extern fn vqmovund_s64(arg___p0: i64) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53718:21: warning: TODO implement function '__builtin_neon_vqmovunh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53716:14: warning: unable to translate function, demoted to extern
pub extern fn vqmovunh_s16(arg___p0: i16) u8;
pub inline fn vqmovun_high_s32(arg___p0: uint16x4_t, arg___p1: int32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vqmovun_s32(__p1));
    return __ret;
}
pub inline fn vqmovun_high_s64(arg___p0: uint32x2_t, arg___p1: int64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vqmovun_s64(__p1));
    return __ret;
}
pub inline fn vqmovun_high_s16(arg___p0: uint8x8_t, arg___p1: int16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vqmovun_s16(__p1));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53775:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53773:16: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s64(arg___p0: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53790:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53788:16: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s64(arg___p0: int64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53795:20: warning: TODO implement function '__builtin_neon_vqnegb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53793:13: warning: unable to translate function, demoted to extern
pub extern fn vqnegb_s8(arg___p0: i8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53800:21: warning: TODO implement function '__builtin_neon_vqnegs_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53798:14: warning: unable to translate function, demoted to extern
pub extern fn vqnegs_s32(arg___p0: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53805:21: warning: TODO implement function '__builtin_neon_vqnegd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53803:14: warning: unable to translate function, demoted to extern
pub extern fn vqnegd_s64(arg___p0: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53810:21: warning: TODO implement function '__builtin_neon_vqnegh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53808:14: warning: unable to translate function, demoted to extern
pub extern fn vqnegh_s16(arg___p0: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53815:21: warning: TODO implement function '__builtin_neon_vqrdmulhs_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53813:14: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhs_s32(arg___p0: i32, arg___p1: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53820:21: warning: TODO implement function '__builtin_neon_vqrdmulhh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53818:14: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhh_s16(arg___p0: i16, arg___p1: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54069:21: warning: TODO implement function '__builtin_neon_vqrshlb_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54067:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshlb_u8(arg___p0: u8, arg___p1: i8) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54074:22: warning: TODO implement function '__builtin_neon_vqrshls_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54072:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshls_u32(arg___p0: u32, arg___p1: i32) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54079:22: warning: TODO implement function '__builtin_neon_vqrshld_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54077:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54084:22: warning: TODO implement function '__builtin_neon_vqrshlh_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54082:15: warning: unable to translate function, demoted to extern
pub extern fn vqrshlh_u16(arg___p0: u16, arg___p1: i16) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54089:20: warning: TODO implement function '__builtin_neon_vqrshlb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54087:13: warning: unable to translate function, demoted to extern
pub extern fn vqrshlb_s8(arg___p0: i8, arg___p1: i8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54094:21: warning: TODO implement function '__builtin_neon_vqrshls_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54092:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshls_s32(arg___p0: i32, arg___p1: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54099:21: warning: TODO implement function '__builtin_neon_vqrshld_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54097:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54104:21: warning: TODO implement function '__builtin_neon_vqrshlh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54102:14: warning: unable to translate function, demoted to extern
pub extern fn vqrshlh_s16(arg___p0: i16, arg___p1: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54352:21: warning: TODO implement function '__builtin_neon_vqshlb_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54350:14: warning: unable to translate function, demoted to extern
pub extern fn vqshlb_u8(arg___p0: u8, arg___p1: i8) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54357:22: warning: TODO implement function '__builtin_neon_vqshls_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54355:15: warning: unable to translate function, demoted to extern
pub extern fn vqshls_u32(arg___p0: u32, arg___p1: i32) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54362:22: warning: TODO implement function '__builtin_neon_vqshld_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54360:15: warning: unable to translate function, demoted to extern
pub extern fn vqshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54367:22: warning: TODO implement function '__builtin_neon_vqshlh_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54365:15: warning: unable to translate function, demoted to extern
pub extern fn vqshlh_u16(arg___p0: u16, arg___p1: i16) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54372:20: warning: TODO implement function '__builtin_neon_vqshlb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54370:13: warning: unable to translate function, demoted to extern
pub extern fn vqshlb_s8(arg___p0: i8, arg___p1: i8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54377:21: warning: TODO implement function '__builtin_neon_vqshls_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54375:14: warning: unable to translate function, demoted to extern
pub extern fn vqshls_s32(arg___p0: i32, arg___p1: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54382:21: warning: TODO implement function '__builtin_neon_vqshld_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54380:14: warning: unable to translate function, demoted to extern
pub extern fn vqshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54387:21: warning: TODO implement function '__builtin_neon_vqshlh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54385:14: warning: unable to translate function, demoted to extern
pub extern fn vqshlh_s16(arg___p0: i16, arg___p1: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54707:21: warning: TODO implement function '__builtin_neon_vqsubb_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54705:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubb_u8(arg___p0: u8, arg___p1: u8) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54712:22: warning: TODO implement function '__builtin_neon_vqsubs_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54710:15: warning: unable to translate function, demoted to extern
pub extern fn vqsubs_u32(arg___p0: u32, arg___p1: u32) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54717:22: warning: TODO implement function '__builtin_neon_vqsubd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54715:15: warning: unable to translate function, demoted to extern
pub extern fn vqsubd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54722:22: warning: TODO implement function '__builtin_neon_vqsubh_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54720:15: warning: unable to translate function, demoted to extern
pub extern fn vqsubh_u16(arg___p0: u16, arg___p1: u16) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54727:20: warning: TODO implement function '__builtin_neon_vqsubb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54725:13: warning: unable to translate function, demoted to extern
pub extern fn vqsubb_s8(arg___p0: i8, arg___p1: i8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54732:21: warning: TODO implement function '__builtin_neon_vqsubs_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54730:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubs_s32(arg___p0: i32, arg___p1: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54737:21: warning: TODO implement function '__builtin_neon_vqsubd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54735:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubd_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54742:21: warning: TODO implement function '__builtin_neon_vqsubh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54740:14: warning: unable to translate function, demoted to extern
pub extern fn vqsubh_s16(arg___p0: i16, arg___p1: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54748:23: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54746:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_p8(arg___p0: poly8x16_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54765:24: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54763:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_p8(arg___p0: poly8x16_t, arg___p1: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54782:24: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54780:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54799:23: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54797:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_s8(arg___p0: int8x16_t, arg___p1: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54816:23: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54814:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_u8(arg___p0: uint8x16_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54833:22: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54831:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_s8(arg___p0: int8x16_t, arg___p1: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54850:23: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54848:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_p8(arg___p0: poly8x16x2_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54869:24: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54867:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_p8(arg___p0: poly8x16x2_t, arg___p1: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54888:24: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54886:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_u8(arg___p0: uint8x16x2_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54907:23: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54905:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_s8(arg___p0: int8x16x2_t, arg___p1: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54926:23: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54924:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_u8(arg___p0: uint8x16x2_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54945:22: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54943:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_s8(arg___p0: int8x16x2_t, arg___p1: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54964:23: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54962:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_p8(arg___p0: poly8x16x3_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54984:24: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54982:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_p8(arg___p0: poly8x16x3_t, arg___p1: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55004:24: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55002:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_u8(arg___p0: uint8x16x3_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55024:23: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55022:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_s8(arg___p0: int8x16x3_t, arg___p1: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55044:23: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55042:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_u8(arg___p0: uint8x16x3_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55064:22: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55062:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_s8(arg___p0: int8x16x3_t, arg___p1: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55084:23: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55082:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_p8(arg___p0: poly8x16x4_t, arg___p1: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55105:24: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55103:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_p8(arg___p0: poly8x16x4_t, arg___p1: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55126:24: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55124:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_u8(arg___p0: uint8x16x4_t, arg___p1: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55147:23: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55145:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_s8(arg___p0: int8x16x4_t, arg___p1: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55168:23: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55166:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_u8(arg___p0: uint8x16x4_t, arg___p1: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55189:22: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55187:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_s8(arg___p0: int8x16x4_t, arg___p1: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55210:23: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55208:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_p8(arg___p0: poly8x8_t, arg___p1: poly8x16_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55228:24: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55226:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t, arg___p2: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55246:24: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55244:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55264:23: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55262:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55282:23: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55280:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_u8(arg___p0: uint8x8_t, arg___p1: uint8x16_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55300:22: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55298:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_s8(arg___p0: int8x8_t, arg___p1: int8x16_t, arg___p2: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55318:23: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55316:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x2_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55338:24: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55336:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x2_t, arg___p2: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55358:24: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55356:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x2_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55378:23: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55376:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_s8(arg___p0: int8x16_t, arg___p1: int8x16x2_t, arg___p2: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55398:23: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55396:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x2_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55418:22: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55416:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_s8(arg___p0: int8x8_t, arg___p1: int8x16x2_t, arg___p2: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55438:23: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55436:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x3_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55459:24: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55457:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x3_t, arg___p2: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55480:24: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55478:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x3_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55501:23: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55499:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_s8(arg___p0: int8x16_t, arg___p1: int8x16x3_t, arg___p2: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55522:23: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55520:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x3_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55543:22: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55541:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_s8(arg___p0: int8x8_t, arg___p1: int8x16x3_t, arg___p2: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55564:23: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55562:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x4_t, arg___p2: uint8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55586:24: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55584:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x4_t, arg___p2: uint8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55608:24: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55606:17: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x4_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55630:23: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55628:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_s8(arg___p0: int8x16_t, arg___p1: int8x16x4_t, arg___p2: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55652:23: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55650:16: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x4_t, arg___p2: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55674:22: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55672:15: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_s8(arg___p0: int8x8_t, arg___p1: int8x16x4_t, arg___p2: uint8x8_t) int8x8_t;
pub inline fn vraddhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vraddhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vraddhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vraddhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vraddhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vraddhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vraddhn_s16(__p1, __p2));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55804:23: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55802:16: warning: unable to translate function, demoted to extern
pub extern fn vrbit_p8(arg___p0: poly8x8_t) poly8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55820:24: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55818:17: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_p8(arg___p0: poly8x16_t) poly8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55836:24: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55834:17: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55852:23: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55850:16: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_s8(arg___p0: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55868:23: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55866:16: warning: unable to translate function, demoted to extern
pub extern fn vrbit_u8(arg___p0: uint8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55884:22: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55882:15: warning: unable to translate function, demoted to extern
pub extern fn vrbit_s8(arg___p0: int8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55900:25: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55898:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55915:25: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55913:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55920:23: warning: TODO implement function '__builtin_neon_vrecped_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55918:16: warning: unable to translate function, demoted to extern
pub extern fn vrecped_f64(arg___p0: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55925:23: warning: TODO implement function '__builtin_neon_vrecpes_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55923:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpes_f32(arg___p0: float32_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55931:25: warning: TODO implement function '__builtin_neon_vrecpsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55929:18: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55947:25: warning: TODO implement function '__builtin_neon_vrecps_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55945:18: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55952:23: warning: TODO implement function '__builtin_neon_vrecpsd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55950:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpsd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55957:23: warning: TODO implement function '__builtin_neon_vrecpss_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55955:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpss_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55962:23: warning: TODO implement function '__builtin_neon_vrecpxd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55960:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpxd_f64(arg___p0: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55967:23: warning: TODO implement function '__builtin_neon_vrecpxs_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:55965:16: warning: unable to translate function, demoted to extern
pub extern fn vrecpxs_f32(arg___p0: float32_t) float32_t;
pub inline fn vreinterpret_p8_p64(arg___p0: poly64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_p16(arg___p0: poly16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u8(arg___p0: uint8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u32(arg___p0: uint32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u64(arg___p0: uint64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u16(arg___p0: uint16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s8(arg___p0: int8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f64(arg___p0: float64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f32(arg___p0: float32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f16(arg___p0: float16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s32(arg___p0: int32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s64(arg___p0: int64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s16(arg___p0: int16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_p8(arg___p0: poly8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_p16(arg___p0: poly16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u8(arg___p0: uint8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u32(arg___p0: uint32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u64(arg___p0: uint64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u16(arg___p0: uint16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s8(arg___p0: int8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f64(arg___p0: float64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f32(arg___p0: float32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f16(arg___p0: float16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s32(arg___p0: int32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s64(arg___p0: int64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s16(arg___p0: int16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_p8(arg___p0: poly8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_p64(arg___p0: poly64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u8(arg___p0: uint8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u32(arg___p0: uint32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u64(arg___p0: uint64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u16(arg___p0: uint16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s8(arg___p0: int8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f64(arg___p0: float64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f32(arg___p0: float32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f16(arg___p0: float16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s32(arg___p0: int32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s64(arg___p0: int64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s16(arg___p0: int16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p128(arg___p0: poly128_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p64(arg___p0: poly64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p16(arg___p0: poly16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u8(arg___p0: uint8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u32(arg___p0: uint32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u64(arg___p0: uint64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u16(arg___p0: uint16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s8(arg___p0: int8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f64(arg___p0: float64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f32(arg___p0: float32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f16(arg___p0: float16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s32(arg___p0: int32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s64(arg___p0: int64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s16(arg___p0: int16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p8(arg___p0: poly8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p64(arg___p0: poly64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p16(arg___p0: poly16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u8(arg___p0: uint8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u32(arg___p0: uint32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u64(arg___p0: uint64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u16(arg___p0: uint16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s8(arg___p0: int8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f64(arg___p0: float64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f32(arg___p0: float32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f16(arg___p0: float16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s32(arg___p0: int32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s64(arg___p0: int64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s16(arg___p0: int16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p8(arg___p0: poly8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p128(arg___p0: poly128_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p16(arg___p0: poly16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u8(arg___p0: uint8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u32(arg___p0: uint32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u64(arg___p0: uint64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u16(arg___p0: uint16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s8(arg___p0: int8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f64(arg___p0: float64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f32(arg___p0: float32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f16(arg___p0: float16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s32(arg___p0: int32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s64(arg___p0: int64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s16(arg___p0: int16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p8(arg___p0: poly8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p128(arg___p0: poly128_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p64(arg___p0: poly64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u8(arg___p0: uint8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u32(arg___p0: uint32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u64(arg___p0: uint64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u16(arg___p0: uint16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s8(arg___p0: int8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f64(arg___p0: float64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f32(arg___p0: float32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f16(arg___p0: float16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s32(arg___p0: int32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s64(arg___p0: int64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s16(arg___p0: int16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p8(arg___p0: poly8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p128(arg___p0: poly128_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p64(arg___p0: poly64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p16(arg___p0: poly16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u32(arg___p0: uint32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u64(arg___p0: uint64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u16(arg___p0: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s8(arg___p0: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f64(arg___p0: float64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f32(arg___p0: float32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f16(arg___p0: float16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s32(arg___p0: int32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s64(arg___p0: int64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s16(arg___p0: int16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p8(arg___p0: poly8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p128(arg___p0: poly128_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p64(arg___p0: poly64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p16(arg___p0: poly16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u8(arg___p0: uint8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u64(arg___p0: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u16(arg___p0: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s8(arg___p0: int8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f64(arg___p0: float64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f32(arg___p0: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f16(arg___p0: float16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s32(arg___p0: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s64(arg___p0: int64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s16(arg___p0: int16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p8(arg___p0: poly8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p128(arg___p0: poly128_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p64(arg___p0: poly64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p16(arg___p0: poly16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u8(arg___p0: uint8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u32(arg___p0: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u16(arg___p0: uint16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s8(arg___p0: int8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f64(arg___p0: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f32(arg___p0: float32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f16(arg___p0: float16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s32(arg___p0: int32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s64(arg___p0: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s16(arg___p0: int16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p8(arg___p0: poly8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p128(arg___p0: poly128_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p64(arg___p0: poly64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p16(arg___p0: poly16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u8(arg___p0: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u32(arg___p0: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u64(arg___p0: uint64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s8(arg___p0: int8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f64(arg___p0: float64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f32(arg___p0: float32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f16(arg___p0: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s32(arg___p0: int32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s64(arg___p0: int64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s16(arg___p0: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p8(arg___p0: poly8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p128(arg___p0: poly128_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p64(arg___p0: poly64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p16(arg___p0: poly16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u8(arg___p0: uint8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u32(arg___p0: uint32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u64(arg___p0: uint64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u16(arg___p0: uint16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f64(arg___p0: float64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f32(arg___p0: float32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f16(arg___p0: float16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s32(arg___p0: int32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s64(arg___p0: int64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s16(arg___p0: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p8(arg___p0: poly8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p128(arg___p0: poly128_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p64(arg___p0: poly64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p16(arg___p0: poly16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u8(arg___p0: uint8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u32(arg___p0: uint32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u64(arg___p0: uint64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u16(arg___p0: uint16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s8(arg___p0: int8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_f32(arg___p0: float32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_f16(arg___p0: float16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s32(arg___p0: int32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s64(arg___p0: int64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s16(arg___p0: int16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p8(arg___p0: poly8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p128(arg___p0: poly128_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p64(arg___p0: poly64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p16(arg___p0: poly16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u8(arg___p0: uint8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u32(arg___p0: uint32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u64(arg___p0: uint64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u16(arg___p0: uint16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s8(arg___p0: int8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_f64(arg___p0: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_f16(arg___p0: float16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s32(arg___p0: int32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s64(arg___p0: int64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s16(arg___p0: int16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p8(arg___p0: poly8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p128(arg___p0: poly128_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p64(arg___p0: poly64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p16(arg___p0: poly16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u8(arg___p0: uint8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u32(arg___p0: uint32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u64(arg___p0: uint64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u16(arg___p0: uint16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s8(arg___p0: int8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_f64(arg___p0: float64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_f32(arg___p0: float32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s32(arg___p0: int32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s64(arg___p0: int64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s16(arg___p0: int16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p8(arg___p0: poly8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p128(arg___p0: poly128_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p64(arg___p0: poly64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p16(arg___p0: poly16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u8(arg___p0: uint8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u32(arg___p0: uint32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u64(arg___p0: uint64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u16(arg___p0: uint16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s8(arg___p0: int8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f64(arg___p0: float64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f32(arg___p0: float32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f16(arg___p0: float16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s64(arg___p0: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s16(arg___p0: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p8(arg___p0: poly8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p128(arg___p0: poly128_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p64(arg___p0: poly64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p16(arg___p0: poly16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u8(arg___p0: uint8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u32(arg___p0: uint32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u64(arg___p0: uint64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u16(arg___p0: uint16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s8(arg___p0: int8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f64(arg___p0: float64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f32(arg___p0: float32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f16(arg___p0: float16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s32(arg___p0: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s16(arg___p0: int16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p8(arg___p0: poly8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p128(arg___p0: poly128_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p64(arg___p0: poly64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p16(arg___p0: poly16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u8(arg___p0: uint8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u32(arg___p0: uint32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u64(arg___p0: uint64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u16(arg___p0: uint16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s8(arg___p0: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f64(arg___p0: float64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f32(arg___p0: float32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f16(arg___p0: float16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s32(arg___p0: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s64(arg___p0: int64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p8(arg___p0: poly8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p64(arg___p0: poly64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p16(arg___p0: poly16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u32(arg___p0: uint32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u64(arg___p0: uint64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u16(arg___p0: uint16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s8(arg___p0: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f64(arg___p0: float64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f32(arg___p0: float32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f16(arg___p0: float16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s32(arg___p0: int32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s64(arg___p0: int64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s16(arg___p0: int16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p8(arg___p0: poly8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p64(arg___p0: poly64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p16(arg___p0: poly16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u8(arg___p0: uint8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u64(arg___p0: uint64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u16(arg___p0: uint16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s8(arg___p0: int8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f64(arg___p0: float64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f32(arg___p0: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f16(arg___p0: float16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s32(arg___p0: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s64(arg___p0: int64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s16(arg___p0: int16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p8(arg___p0: poly8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p64(arg___p0: poly64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p16(arg___p0: poly16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u8(arg___p0: uint8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u32(arg___p0: uint32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u16(arg___p0: uint16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s8(arg___p0: int8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f64(arg___p0: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f32(arg___p0: float32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f16(arg___p0: float16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s32(arg___p0: int32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s64(arg___p0: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s16(arg___p0: int16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p8(arg___p0: poly8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p64(arg___p0: poly64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p16(arg___p0: poly16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u8(arg___p0: uint8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u32(arg___p0: uint32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u64(arg___p0: uint64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s8(arg___p0: int8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f64(arg___p0: float64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f32(arg___p0: float32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f16(arg___p0: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s32(arg___p0: int32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s64(arg___p0: int64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s16(arg___p0: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p8(arg___p0: poly8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p64(arg___p0: poly64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p16(arg___p0: poly16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u8(arg___p0: uint8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u32(arg___p0: uint32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u64(arg___p0: uint64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u16(arg___p0: uint16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f64(arg___p0: float64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f32(arg___p0: float32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f16(arg___p0: float16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s32(arg___p0: int32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s64(arg___p0: int64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s16(arg___p0: int16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p8(arg___p0: poly8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p64(arg___p0: poly64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p16(arg___p0: poly16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u8(arg___p0: uint8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u32(arg___p0: uint32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u64(arg___p0: uint64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u16(arg___p0: uint16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s8(arg___p0: int8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_f32(arg___p0: float32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_f16(arg___p0: float16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s32(arg___p0: int32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s64(arg___p0: int64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s16(arg___p0: int16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p8(arg___p0: poly8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p64(arg___p0: poly64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p16(arg___p0: poly16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u8(arg___p0: uint8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u32(arg___p0: uint32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u64(arg___p0: uint64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u16(arg___p0: uint16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s8(arg___p0: int8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_f64(arg___p0: float64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_f16(arg___p0: float16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s32(arg___p0: int32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s64(arg___p0: int64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s16(arg___p0: int16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p8(arg___p0: poly8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p64(arg___p0: poly64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p16(arg___p0: poly16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u8(arg___p0: uint8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u32(arg___p0: uint32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u64(arg___p0: uint64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u16(arg___p0: uint16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s8(arg___p0: int8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_f64(arg___p0: float64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_f32(arg___p0: float32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s32(arg___p0: int32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s64(arg___p0: int64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s16(arg___p0: int16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p8(arg___p0: poly8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p64(arg___p0: poly64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p16(arg___p0: poly16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u8(arg___p0: uint8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u32(arg___p0: uint32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u64(arg___p0: uint64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u16(arg___p0: uint16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s8(arg___p0: int8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f64(arg___p0: float64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f32(arg___p0: float32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f16(arg___p0: float16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s64(arg___p0: int64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s16(arg___p0: int16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p8(arg___p0: poly8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p64(arg___p0: poly64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p16(arg___p0: poly16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u8(arg___p0: uint8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u32(arg___p0: uint32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u64(arg___p0: uint64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u16(arg___p0: uint16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s8(arg___p0: int8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f64(arg___p0: float64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f32(arg___p0: float32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f16(arg___p0: float16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s32(arg___p0: int32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s16(arg___p0: int16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p8(arg___p0: poly8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p64(arg___p0: poly64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p16(arg___p0: poly16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u8(arg___p0: uint8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u32(arg___p0: uint32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u64(arg___p0: uint64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u16(arg___p0: uint16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s8(arg___p0: int8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f64(arg___p0: float64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f32(arg___p0: float32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f16(arg___p0: float16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s32(arg___p0: int32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s64(arg___p0: int64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57932:22: warning: TODO implement function '__builtin_neon_vrshld_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57930:15: warning: unable to translate function, demoted to extern
pub extern fn vrshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57937:21: warning: TODO implement function '__builtin_neon_vrshld_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57935:14: warning: unable to translate function, demoted to extern
pub extern fn vrshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58081:25: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58079:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58096:25: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58094:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58101:23: warning: TODO implement function '__builtin_neon_vrsqrted_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58099:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrted_f64(arg___p0: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58106:23: warning: TODO implement function '__builtin_neon_vrsqrtes_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58104:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtes_f32(arg___p0: float32_t) float32_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58112:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58110:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58128:25: warning: TODO implement function '__builtin_neon_vrsqrts_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58126:18: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58133:23: warning: TODO implement function '__builtin_neon_vrsqrtsd_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58131:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58138:23: warning: TODO implement function '__builtin_neon_vrsqrtss_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58136:16: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtss_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
pub inline fn vrsubhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vrsubhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vrsubhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vrsubhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vrsubhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vrsubhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vrsubhn_s16(__p1, __p2));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58333:22: warning: TODO implement function '__builtin_neon_vshld_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58331:15: warning: unable to translate function, demoted to extern
pub extern fn vshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58338:21: warning: TODO implement function '__builtin_neon_vshld_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58336:14: warning: unable to translate function, demoted to extern
pub extern fn vshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58643:21: warning: TODO implement function '__builtin_neon_vsqaddb_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58641:14: warning: unable to translate function, demoted to extern
pub extern fn vsqaddb_u8(arg___p0: u8, arg___p1: i8) u8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58648:22: warning: TODO implement function '__builtin_neon_vsqadds_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58646:15: warning: unable to translate function, demoted to extern
pub extern fn vsqadds_u32(arg___p0: u32, arg___p1: i32) u32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58653:22: warning: TODO implement function '__builtin_neon_vsqaddd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58651:15: warning: unable to translate function, demoted to extern
pub extern fn vsqaddd_u64(arg___p0: u64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58658:22: warning: TODO implement function '__builtin_neon_vsqaddh_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58656:15: warning: unable to translate function, demoted to extern
pub extern fn vsqaddh_u16(arg___p0: u16, arg___p1: i16) u16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58664:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58662:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58681:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58679:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58698:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58696:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58715:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58713:17: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58732:23: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58730:16: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58749:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58747:17: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58765:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58763:17: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58771:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58769:17: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58788:25: warning: TODO implement function '__builtin_neon_vsqrtq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58786:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58804:25: warning: TODO implement function '__builtin_neon_vsqrtq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58802:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58819:25: warning: TODO implement function '__builtin_neon_vsqrt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58817:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58825:25: warning: TODO implement function '__builtin_neon_vsqrt_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58823:18: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59688:22: warning: TODO implement function '__builtin_neon_vsubd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59686:15: warning: unable to translate function, demoted to extern
pub extern fn vsubd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59693:21: warning: TODO implement function '__builtin_neon_vsubd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59691:14: warning: unable to translate function, demoted to extern
pub extern fn vsubd_s64(arg___p0: i64, arg___p1: i64) i64;
pub inline fn vsubq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vsubhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vsubhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vsubhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vsubhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vsubhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vsubhn_s16(__p1, __p2));
    return __ret;
}
pub inline fn vsubl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u8(__p0) - vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vsubl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u32(__p0) - vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vsubl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u16(__p0) - vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vsubl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s8(__p0) - vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vsubl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s32(__p0) - vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vsubl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s16(__p0) - vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vsubw_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vsubw_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vsubw_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vsubw_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vsubw_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vsubw_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vtrn1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60780:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60778:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60786:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60784:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60803:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60801:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60820:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60818:17: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60836:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60834:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60841:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60839:17: warning: unable to translate function, demoted to extern
pub extern fn vtst_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60846:22: warning: TODO implement function '__builtin_neon_vtstd_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60844:15: warning: unable to translate function, demoted to extern
pub extern fn vtstd_u64(arg___p0: u64, arg___p1: u64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60851:22: warning: TODO implement function '__builtin_neon_vtstd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60849:15: warning: unable to translate function, demoted to extern
pub extern fn vtstd_s64(arg___p0: i64, arg___p1: i64) u64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60856:20: warning: TODO implement function '__builtin_neon_vuqaddb_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60854:13: warning: unable to translate function, demoted to extern
pub extern fn vuqaddb_s8(arg___p0: i8, arg___p1: u8) i8;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60861:21: warning: TODO implement function '__builtin_neon_vuqadds_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60859:14: warning: unable to translate function, demoted to extern
pub extern fn vuqadds_s32(arg___p0: i32, arg___p1: u32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60866:21: warning: TODO implement function '__builtin_neon_vuqaddd_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60864:14: warning: unable to translate function, demoted to extern
pub extern fn vuqaddd_s64(arg___p0: i64, arg___p1: u64) i64;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60871:21: warning: TODO implement function '__builtin_neon_vuqaddh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60869:14: warning: unable to translate function, demoted to extern
pub extern fn vuqaddh_s16(arg___p0: i16, arg___p1: u16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60877:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60875:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s8(arg___p0: int8x16_t, arg___p1: uint8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60894:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60892:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s32(arg___p0: int32x4_t, arg___p1: uint32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60911:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60909:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s64(arg___p0: int64x2_t, arg___p1: uint64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60928:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60926:16: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s16(arg___p0: int16x8_t, arg___p1: uint16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60945:22: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60943:15: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s8(arg___p0: int8x8_t, arg___p1: uint8x8_t) int8x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60962:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60960:16: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s32(arg___p0: int32x2_t, arg___p1: uint32x2_t) int32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60978:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60976:16: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s64(arg___p0: int64x1_t, arg___p1: uint64x1_t) int64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60984:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:60982:16: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s16(arg___p0: int16x4_t, arg___p1: uint16x4_t) int16x4_t;
pub inline fn vuzp1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62496:23: warning: TODO implement function '__builtin_neon_vmull_p64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62494:47: warning: unable to translate function, demoted to extern
pub extern fn vmull_p64(arg___p0: poly64_t, arg___p1: poly64_t) poly128_t;
pub inline fn vmull_high_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = vmull_p64(@as(poly64_t, @bitCast(vget_high_p64(__p0))), @as(poly64_t, @bitCast(vget_high_p64(__p1))));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62518:26: warning: TODO implement function '__builtin_neon___a64_vcvtq_low_bf16_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62516:51: warning: unable to translate function, demoted to extern
pub extern fn __a64_vcvtq_low_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t;
pub inline fn vcvt_bf16_f32(arg___p0: float32x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = vget_low_bf16(__a64_vcvtq_low_bf16_f32(__p0));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62639:26: warning: TODO implement function '__builtin_neon_vcvtq_high_bf16_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62637:51: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_high_bf16_f32(arg___p0: bfloat16x8_t, arg___p1: float32x4_t) bfloat16x8_t;
pub inline fn vcvtq_low_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = __a64_vcvtq_low_bf16_f32(__p0);
    return __ret;
}
pub inline fn vreinterpret_p8_bf16(arg___p0: bfloat16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_bf16(arg___p0: bfloat16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_bf16(arg___p0: bfloat16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_bf16(arg___p0: bfloat16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_bf16(arg___p0: bfloat16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_bf16(arg___p0: bfloat16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_bf16(arg___p0: bfloat16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_bf16(arg___p0: bfloat16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_bf16(arg___p0: bfloat16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_bf16(arg___p0: bfloat16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_bf16(arg___p0: bfloat16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_bf16(arg___p0: bfloat16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_bf16(arg___p0: bfloat16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_bf16(arg___p0: bfloat16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_bf16(arg___p0: bfloat16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_bf16(arg___p0: bfloat16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_bf16(arg___p0: bfloat16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_bf16(arg___p0: bfloat16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_bf16(arg___p0: bfloat16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_bf16(arg___p0: bfloat16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_bf16(arg___p0: bfloat16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_bf16(arg___p0: bfloat16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_bf16(arg___p0: bfloat16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_bf16(arg___p0: bfloat16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_bf16(arg___p0: bfloat16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_bf16(arg___p0: bfloat16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_bf16(arg___p0: bfloat16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_bf16(arg___p0: bfloat16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p8(arg___p0: poly8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p128(arg___p0: poly128_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p64(arg___p0: poly64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p16(arg___p0: poly16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u8(arg___p0: uint8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u32(arg___p0: uint32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u64(arg___p0: uint64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u16(arg___p0: uint16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s8(arg___p0: int8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f64(arg___p0: float64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f16(arg___p0: float16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s32(arg___p0: int32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s64(arg___p0: int64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s16(arg___p0: int16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p8(arg___p0: poly8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p64(arg___p0: poly64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p16(arg___p0: poly16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u8(arg___p0: uint8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u32(arg___p0: uint32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u64(arg___p0: uint64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u16(arg___p0: uint16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s8(arg___p0: int8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f64(arg___p0: float64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f32(arg___p0: float32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f16(arg___p0: float16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s32(arg___p0: int32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s64(arg___p0: int64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s16(arg___p0: int16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63074:25: warning: TODO implement function '__builtin_neon_vfmlalq_high_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63072:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlalq_high_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63097:25: warning: TODO implement function '__builtin_neon_vfmlal_high_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63095:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlal_high_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63120:25: warning: TODO implement function '__builtin_neon_vfmlalq_low_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63118:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlalq_low_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63143:25: warning: TODO implement function '__builtin_neon_vfmlal_low_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63141:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlal_low_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63166:25: warning: TODO implement function '__builtin_neon_vfmlslq_high_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63164:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlslq_high_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63189:25: warning: TODO implement function '__builtin_neon_vfmlsl_high_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63187:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlsl_high_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63212:25: warning: TODO implement function '__builtin_neon_vfmlslq_low_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63210:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlslq_low_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63235:25: warning: TODO implement function '__builtin_neon_vfmlsl_low_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63233:53: warning: unable to translate function, demoted to extern
pub extern fn vfmlsl_low_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
pub inline fn vdivq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63920:25: warning: TODO implement function '__builtin_neon_vmulxq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63918:54: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63942:25: warning: TODO implement function '__builtin_neon_vmulx_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63940:54: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64126:25: warning: TODO implement function '__builtin_neon_vpaddq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64124:54: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64143:25: warning: TODO implement function '__builtin_neon_vpmaxq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64141:54: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64160:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64158:54: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64177:25: warning: TODO implement function '__builtin_neon_vpmaxnm_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64175:54: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64194:25: warning: TODO implement function '__builtin_neon_vpminq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64192:54: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64211:25: warning: TODO implement function '__builtin_neon_vpminnmq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64209:54: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64228:25: warning: TODO implement function '__builtin_neon_vpminnm_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64226:54: warning: unable to translate function, demoted to extern
pub extern fn vpminnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64245:25: warning: TODO implement function '__builtin_neon_vrndiq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64243:54: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64261:25: warning: TODO implement function '__builtin_neon_vrndi_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64259:54: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f16(arg___p0: float16x4_t) float16x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64277:25: warning: TODO implement function '__builtin_neon_vsqrtq_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64275:54: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f16(arg___p0: float16x8_t) float16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64293:25: warning: TODO implement function '__builtin_neon_vsqrt_f16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64291:54: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f16(arg___p0: float16x4_t) float16x4_t;
pub inline fn vtrn1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
pub inline fn vzip2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).Vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).Vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).Vector.len),
    });
    return __ret;
}
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64781:24: warning: TODO implement function '__builtin_neon_vbcaxq_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64779:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64799:24: warning: TODO implement function '__builtin_neon_vbcaxq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64797:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64817:24: warning: TODO implement function '__builtin_neon_vbcaxq_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64815:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64835:24: warning: TODO implement function '__builtin_neon_vbcaxq_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64833:49: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64853:23: warning: TODO implement function '__builtin_neon_vbcaxq_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64851:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64871:23: warning: TODO implement function '__builtin_neon_vbcaxq_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64869:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64889:23: warning: TODO implement function '__builtin_neon_vbcaxq_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64887:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64907:23: warning: TODO implement function '__builtin_neon_vbcaxq_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64905:48: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64925:24: warning: TODO implement function '__builtin_neon_veor3q_u8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64923:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64943:24: warning: TODO implement function '__builtin_neon_veor3q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64941:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64961:24: warning: TODO implement function '__builtin_neon_veor3q_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64959:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64979:24: warning: TODO implement function '__builtin_neon_veor3q_u16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64977:49: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64997:23: warning: TODO implement function '__builtin_neon_veor3q_s8' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64995:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65015:23: warning: TODO implement function '__builtin_neon_veor3q_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65013:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65033:23: warning: TODO implement function '__builtin_neon_veor3q_s64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65031:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65051:23: warning: TODO implement function '__builtin_neon_veor3q_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65049:48: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65069:24: warning: TODO implement function '__builtin_neon_vrax1q_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65067:49: warning: unable to translate function, demoted to extern
pub extern fn vrax1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65086:24: warning: TODO implement function '__builtin_neon_vsha512hq_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65084:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512hq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65104:24: warning: TODO implement function '__builtin_neon_vsha512h2q_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65102:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512h2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65122:24: warning: TODO implement function '__builtin_neon_vsha512su0q_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65120:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512su0q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65139:24: warning: TODO implement function '__builtin_neon_vsha512su1q_u64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65137:49: warning: unable to translate function, demoted to extern
pub extern fn vsha512su1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65178:24: warning: TODO implement function '__builtin_neon_vsm3partw1q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65176:48: warning: unable to translate function, demoted to extern
pub extern fn vsm3partw1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65196:24: warning: TODO implement function '__builtin_neon_vsm3partw2q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65194:48: warning: unable to translate function, demoted to extern
pub extern fn vsm3partw2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65214:24: warning: TODO implement function '__builtin_neon_vsm3ss1q_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65212:48: warning: unable to translate function, demoted to extern
pub extern fn vsm3ss1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65328:24: warning: TODO implement function '__builtin_neon_vsm4eq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65326:48: warning: unable to translate function, demoted to extern
pub extern fn vsm4eq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65345:24: warning: TODO implement function '__builtin_neon_vsm4ekeyq_u32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65343:48: warning: unable to translate function, demoted to extern
pub extern fn vsm4ekeyq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65361:21: warning: TODO implement function '__builtin_neon_vqrdmlahs_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65359:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahs_s32(arg___p0: i32, arg___p1: i32, arg___p2: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65366:21: warning: TODO implement function '__builtin_neon_vqrdmlahh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65364:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahh_s16(arg___p0: i16, arg___p1: i16, arg___p2: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65551:21: warning: TODO implement function '__builtin_neon_vqrdmlshs_s32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65549:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshs_s32(arg___p0: i32, arg___p1: i32, arg___p2: i32) i32;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65556:21: warning: TODO implement function '__builtin_neon_vqrdmlshh_s16' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65554:47: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshh_s16(arg___p0: i16, arg___p1: i16, arg___p2: i16) i16;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65742:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65740:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65759:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65757:51: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65776:25: warning: TODO implement function '__builtin_neon_vcmlaq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65774:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65798:25: warning: TODO implement function '__builtin_neon_vcmla_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65796:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65894:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65892:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65916:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65914:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66012:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66010:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66034:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66032:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66130:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66128:51: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66152:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66150:51: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66248:25: warning: TODO implement function '__builtin_neon_vrnd32xq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66246:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32xq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66264:25: warning: TODO implement function '__builtin_neon_vrnd32x_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66262:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32x_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66280:25: warning: TODO implement function '__builtin_neon_vrnd32xq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66278:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32xq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66295:25: warning: TODO implement function '__builtin_neon_vrnd32x_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66293:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32x_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66301:25: warning: TODO implement function '__builtin_neon_vrnd32zq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66299:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32zq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66317:25: warning: TODO implement function '__builtin_neon_vrnd32z_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66315:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32z_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66333:25: warning: TODO implement function '__builtin_neon_vrnd32zq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66331:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32zq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66348:25: warning: TODO implement function '__builtin_neon_vrnd32z_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66346:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd32z_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66354:25: warning: TODO implement function '__builtin_neon_vrnd64xq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66352:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64xq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66370:25: warning: TODO implement function '__builtin_neon_vrnd64x_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66368:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64x_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66386:25: warning: TODO implement function '__builtin_neon_vrnd64xq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66384:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64xq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66401:25: warning: TODO implement function '__builtin_neon_vrnd64x_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66399:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64x_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66407:25: warning: TODO implement function '__builtin_neon_vrnd64zq_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66405:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64zq_f32(arg___p0: float32x4_t) float32x4_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66423:25: warning: TODO implement function '__builtin_neon_vrnd64z_f32' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66421:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64z_f32(arg___p0: float32x2_t) float32x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66439:25: warning: TODO implement function '__builtin_neon_vrnd64zq_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66437:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64zq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66454:25: warning: TODO implement function '__builtin_neon_vrnd64z_f64' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66452:51: warning: unable to translate function, demoted to extern
pub extern fn vrnd64z_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66462:25: warning: TODO implement function '__builtin_neon_vrndq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66460:18: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66477:25: warning: TODO implement function '__builtin_neon_vrnd_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66475:18: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66483:25: warning: TODO implement function '__builtin_neon_vrndaq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66481:18: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66498:25: warning: TODO implement function '__builtin_neon_vrnda_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66496:18: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66504:25: warning: TODO implement function '__builtin_neon_vrndiq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66502:18: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66519:25: warning: TODO implement function '__builtin_neon_vrndi_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66517:18: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66525:25: warning: TODO implement function '__builtin_neon_vrndmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66523:18: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66540:25: warning: TODO implement function '__builtin_neon_vrndm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66538:18: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66546:25: warning: TODO implement function '__builtin_neon_vrndnq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66544:18: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66561:25: warning: TODO implement function '__builtin_neon_vrndn_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66559:18: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66567:25: warning: TODO implement function '__builtin_neon_vrndpq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66565:18: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66582:25: warning: TODO implement function '__builtin_neon_vrndp_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66580:18: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66588:25: warning: TODO implement function '__builtin_neon_vrndxq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66586:18: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f64(arg___p0: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66603:25: warning: TODO implement function '__builtin_neon_vrndx_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66601:18: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f64(arg___p0: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66611:25: warning: TODO implement function '__builtin_neon_vmaxnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66609:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66627:25: warning: TODO implement function '__builtin_neon_vmaxnm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66625:18: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66633:25: warning: TODO implement function '__builtin_neon_vminnmq_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66631:18: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66649:25: warning: TODO implement function '__builtin_neon_vminnm_v' in std.zig.c_builtins

// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66647:18: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
pub inline fn vabaq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u8(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u32(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u16(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s8(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s32(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s16(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u8(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u32(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u16(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s8(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s32(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s16(__p1, __p2);
    return __ret;
}
pub inline fn vabdl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(vabd_u8(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(vabd_u32(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(vabd_u16(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(vmovl_u8(@as(uint8x8_t, @bitCast(vabd_s8(__p0, __p1))))));
    return __ret;
}
pub inline fn vabdl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(vmovl_u32(@as(uint32x2_t, @bitCast(vabd_s32(__p0, __p1))))));
    return __ret;
}
pub inline fn vabdl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(vmovl_u16(@as(uint16x4_t, @bitCast(vabd_s16(__p0, __p1))))));
    return __ret;
}
pub inline fn vaddl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(__p0) + vmovl_u8(__p1);
    return __ret;
}
pub inline fn vaddl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(__p0) + vmovl_u32(__p1);
    return __ret;
}
pub inline fn vaddl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(__p0) + vmovl_u16(__p1);
    return __ret;
}
pub inline fn vaddl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_s8(__p0) + vmovl_s8(__p1);
    return __ret;
}
pub inline fn vaddl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_s32(__p0) + vmovl_s32(__p1);
    return __ret;
}
pub inline fn vaddl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_s16(__p0) + vmovl_s16(__p1);
    return __ret;
}
pub inline fn vaddw_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u8(__p1);
    return __ret;
}
pub inline fn vaddw_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u32(__p1);
    return __ret;
}
pub inline fn vaddw_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u16(__p1);
    return __ret;
}
pub inline fn vaddw_s8(arg___p0: int16x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s8(__p1);
    return __ret;
}
pub inline fn vaddw_s32(arg___p0: int64x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s32(__p1);
    return __ret;
}
pub inline fn vaddw_s16(arg___p0: int32x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s16(__p1);
    return __ret;
}
pub inline fn vmlal_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u8(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u32(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u16(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s8(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s32(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s16(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlsl_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u8(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u32(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u16(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s8(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s32(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s16(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vcvtq_high_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_bf16(vget_high_bf16(__p0));
    return __ret;
}
pub inline fn vcvtq_low_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_bf16(vget_low_bf16(__p0));
    return __ret;
}
pub inline fn vabdl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vabdl_u8(vget_high_u8(__p0), vget_high_u8(__p1));
    return __ret;
}
pub inline fn vabdl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vabdl_u32(vget_high_u32(__p0), vget_high_u32(__p1));
    return __ret;
}
pub inline fn vabdl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vabdl_u16(vget_high_u16(__p0), vget_high_u16(__p1));
    return __ret;
}
pub inline fn vabdl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vabdl_s8(vget_high_s8(__p0), vget_high_s8(__p1));
    return __ret;
}
pub inline fn vabdl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vabdl_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vabdl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vabdl_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vaddl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u8(__p0) + vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vaddl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u32(__p0) + vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vaddl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u16(__p0) + vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vaddl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s8(__p0) + vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vaddl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s32(__p0) + vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vaddl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s16(__p0) + vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vaddw_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vaddw_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vaddw_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vaddw_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vaddw_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vaddw_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vmlal_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmlal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vmlal_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vmlal_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vmlal_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmlal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vmlal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vmlal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vmlal_high_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_u32(__p0, vget_high_u32(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_u16(__p0, vget_high_u16(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vmlsl_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vmlsl_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vmlsl_high_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_u32(__p0, vget_high_u32(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_u16(__p0, vget_high_u16(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
pub inline fn vabal_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u8(__p1, __p2);
    return __ret;
}
pub inline fn vabal_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u32(__p1, __p2);
    return __ret;
}
pub inline fn vabal_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u16(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s8(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s32(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s16(__p1, __p2);
    return __ret;
}
pub inline fn vabal_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vabal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vabal_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vabal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vabal_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vabal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vabal_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vabal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vabal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vabal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vabal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vabal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub extern fn SDL_GetCPUCount() c_int;
pub extern fn SDL_GetCPUCacheLineSize() c_int;
pub extern fn SDL_HasRDTSC() SDL_bool;
pub extern fn SDL_HasAltiVec() SDL_bool;
pub extern fn SDL_HasMMX() SDL_bool;
pub extern fn SDL_Has3DNow() SDL_bool;
pub extern fn SDL_HasSSE() SDL_bool;
pub extern fn SDL_HasSSE2() SDL_bool;
pub extern fn SDL_HasSSE3() SDL_bool;
pub extern fn SDL_HasSSE41() SDL_bool;
pub extern fn SDL_HasSSE42() SDL_bool;
pub extern fn SDL_HasAVX() SDL_bool;
pub extern fn SDL_HasAVX2() SDL_bool;
pub extern fn SDL_HasAVX512F() SDL_bool;
pub extern fn SDL_HasARMSIMD() SDL_bool;
pub extern fn SDL_HasNEON() SDL_bool;
pub extern fn SDL_HasLSX() SDL_bool;
pub extern fn SDL_HasLASX() SDL_bool;
pub extern fn SDL_GetSystemRAM() c_int;
pub extern fn SDL_SIMDGetAlignment() usize;
pub extern fn SDL_SIMDAlloc(len: usize) ?*anyopaque;
pub extern fn SDL_SIMDRealloc(mem: ?*anyopaque, len: usize) ?*anyopaque;
pub extern fn SDL_SIMDFree(ptr: ?*anyopaque) void;
pub const SDL_PIXELTYPE_UNKNOWN: c_int = 0;
pub const SDL_PIXELTYPE_INDEX1: c_int = 1;
pub const SDL_PIXELTYPE_INDEX4: c_int = 2;
pub const SDL_PIXELTYPE_INDEX8: c_int = 3;
pub const SDL_PIXELTYPE_PACKED8: c_int = 4;
pub const SDL_PIXELTYPE_PACKED16: c_int = 5;
pub const SDL_PIXELTYPE_PACKED32: c_int = 6;
pub const SDL_PIXELTYPE_ARRAYU8: c_int = 7;
pub const SDL_PIXELTYPE_ARRAYU16: c_int = 8;
pub const SDL_PIXELTYPE_ARRAYU32: c_int = 9;
pub const SDL_PIXELTYPE_ARRAYF16: c_int = 10;
pub const SDL_PIXELTYPE_ARRAYF32: c_int = 11;
pub const SDL_PixelType = c_uint;
pub const SDL_BITMAPORDER_NONE: c_int = 0;
pub const SDL_BITMAPORDER_4321: c_int = 1;
pub const SDL_BITMAPORDER_1234: c_int = 2;
pub const SDL_BitmapOrder = c_uint;
pub const SDL_PACKEDORDER_NONE: c_int = 0;
pub const SDL_PACKEDORDER_XRGB: c_int = 1;
pub const SDL_PACKEDORDER_RGBX: c_int = 2;
pub const SDL_PACKEDORDER_ARGB: c_int = 3;
pub const SDL_PACKEDORDER_RGBA: c_int = 4;
pub const SDL_PACKEDORDER_XBGR: c_int = 5;
pub const SDL_PACKEDORDER_BGRX: c_int = 6;
pub const SDL_PACKEDORDER_ABGR: c_int = 7;
pub const SDL_PACKEDORDER_BGRA: c_int = 8;
pub const SDL_PackedOrder = c_uint;
pub const SDL_ARRAYORDER_NONE: c_int = 0;
pub const SDL_ARRAYORDER_RGB: c_int = 1;
pub const SDL_ARRAYORDER_RGBA: c_int = 2;
pub const SDL_ARRAYORDER_ARGB: c_int = 3;
pub const SDL_ARRAYORDER_BGR: c_int = 4;
pub const SDL_ARRAYORDER_BGRA: c_int = 5;
pub const SDL_ARRAYORDER_ABGR: c_int = 6;
pub const SDL_ArrayOrder = c_uint;
pub const SDL_PACKEDLAYOUT_NONE: c_int = 0;
pub const SDL_PACKEDLAYOUT_332: c_int = 1;
pub const SDL_PACKEDLAYOUT_4444: c_int = 2;
pub const SDL_PACKEDLAYOUT_1555: c_int = 3;
pub const SDL_PACKEDLAYOUT_5551: c_int = 4;
pub const SDL_PACKEDLAYOUT_565: c_int = 5;
pub const SDL_PACKEDLAYOUT_8888: c_int = 6;
pub const SDL_PACKEDLAYOUT_2101010: c_int = 7;
pub const SDL_PACKEDLAYOUT_1010102: c_int = 8;
pub const SDL_PackedLayout = c_uint;
pub const SDL_PIXELFORMAT_UNKNOWN: c_int = 0;
pub const SDL_PIXELFORMAT_INDEX1LSB: c_int = 286261504;
pub const SDL_PIXELFORMAT_INDEX1MSB: c_int = 287310080;
pub const SDL_PIXELFORMAT_INDEX4LSB: c_int = 303039488;
pub const SDL_PIXELFORMAT_INDEX4MSB: c_int = 304088064;
pub const SDL_PIXELFORMAT_INDEX8: c_int = 318769153;
pub const SDL_PIXELFORMAT_RGB332: c_int = 336660481;
pub const SDL_PIXELFORMAT_XRGB4444: c_int = 353504258;
pub const SDL_PIXELFORMAT_RGB444: c_int = 353504258;
pub const SDL_PIXELFORMAT_XBGR4444: c_int = 357698562;
pub const SDL_PIXELFORMAT_BGR444: c_int = 357698562;
pub const SDL_PIXELFORMAT_XRGB1555: c_int = 353570562;
pub const SDL_PIXELFORMAT_RGB555: c_int = 353570562;
pub const SDL_PIXELFORMAT_XBGR1555: c_int = 357764866;
pub const SDL_PIXELFORMAT_BGR555: c_int = 357764866;
pub const SDL_PIXELFORMAT_ARGB4444: c_int = 355602434;
pub const SDL_PIXELFORMAT_RGBA4444: c_int = 356651010;
pub const SDL_PIXELFORMAT_ABGR4444: c_int = 359796738;
pub const SDL_PIXELFORMAT_BGRA4444: c_int = 360845314;
pub const SDL_PIXELFORMAT_ARGB1555: c_int = 355667970;
pub const SDL_PIXELFORMAT_RGBA5551: c_int = 356782082;
pub const SDL_PIXELFORMAT_ABGR1555: c_int = 359862274;
pub const SDL_PIXELFORMAT_BGRA5551: c_int = 360976386;
pub const SDL_PIXELFORMAT_RGB565: c_int = 353701890;
pub const SDL_PIXELFORMAT_BGR565: c_int = 357896194;
pub const SDL_PIXELFORMAT_RGB24: c_int = 386930691;
pub const SDL_PIXELFORMAT_BGR24: c_int = 390076419;
pub const SDL_PIXELFORMAT_XRGB8888: c_int = 370546692;
pub const SDL_PIXELFORMAT_RGB888: c_int = 370546692;
pub const SDL_PIXELFORMAT_RGBX8888: c_int = 371595268;
pub const SDL_PIXELFORMAT_XBGR8888: c_int = 374740996;
pub const SDL_PIXELFORMAT_BGR888: c_int = 374740996;
pub const SDL_PIXELFORMAT_BGRX8888: c_int = 375789572;
pub const SDL_PIXELFORMAT_ARGB8888: c_int = 372645892;
pub const SDL_PIXELFORMAT_RGBA8888: c_int = 373694468;
pub const SDL_PIXELFORMAT_ABGR8888: c_int = 376840196;
pub const SDL_PIXELFORMAT_BGRA8888: c_int = 377888772;
pub const SDL_PIXELFORMAT_ARGB2101010: c_int = 372711428;
pub const SDL_PIXELFORMAT_RGBA32: c_int = 376840196;
pub const SDL_PIXELFORMAT_ARGB32: c_int = 377888772;
pub const SDL_PIXELFORMAT_BGRA32: c_int = 372645892;
pub const SDL_PIXELFORMAT_ABGR32: c_int = 373694468;
pub const SDL_PIXELFORMAT_YV12: c_int = 842094169;
pub const SDL_PIXELFORMAT_IYUV: c_int = 1448433993;
pub const SDL_PIXELFORMAT_YUY2: c_int = 844715353;
pub const SDL_PIXELFORMAT_UYVY: c_int = 1498831189;
pub const SDL_PIXELFORMAT_YVYU: c_int = 1431918169;
pub const SDL_PIXELFORMAT_NV12: c_int = 842094158;
pub const SDL_PIXELFORMAT_NV21: c_int = 825382478;
pub const SDL_PIXELFORMAT_EXTERNAL_OES: c_int = 542328143;
pub const SDL_PixelFormatEnum = c_uint;
pub const struct_SDL_Color = extern struct {
    r: Uint8 = @import("std").mem.zeroes(Uint8),
    g: Uint8 = @import("std").mem.zeroes(Uint8),
    b: Uint8 = @import("std").mem.zeroes(Uint8),
    a: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_Color = struct_SDL_Color;
pub const struct_SDL_Palette = extern struct {
    ncolors: c_int = @import("std").mem.zeroes(c_int),
    colors: [*c]SDL_Color = @import("std").mem.zeroes([*c]SDL_Color),
    version: Uint32 = @import("std").mem.zeroes(Uint32),
    refcount: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Palette = struct_SDL_Palette;
pub const struct_SDL_PixelFormat = extern struct {
    format: Uint32 = @import("std").mem.zeroes(Uint32),
    palette: [*c]SDL_Palette = @import("std").mem.zeroes([*c]SDL_Palette),
    BitsPerPixel: Uint8 = @import("std").mem.zeroes(Uint8),
    BytesPerPixel: Uint8 = @import("std").mem.zeroes(Uint8),
    padding: [2]Uint8 = @import("std").mem.zeroes([2]Uint8),
    Rmask: Uint32 = @import("std").mem.zeroes(Uint32),
    Gmask: Uint32 = @import("std").mem.zeroes(Uint32),
    Bmask: Uint32 = @import("std").mem.zeroes(Uint32),
    Amask: Uint32 = @import("std").mem.zeroes(Uint32),
    Rloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Gloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Bloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Aloss: Uint8 = @import("std").mem.zeroes(Uint8),
    Rshift: Uint8 = @import("std").mem.zeroes(Uint8),
    Gshift: Uint8 = @import("std").mem.zeroes(Uint8),
    Bshift: Uint8 = @import("std").mem.zeroes(Uint8),
    Ashift: Uint8 = @import("std").mem.zeroes(Uint8),
    refcount: c_int = @import("std").mem.zeroes(c_int),
    next: [*c]struct_SDL_PixelFormat = @import("std").mem.zeroes([*c]struct_SDL_PixelFormat),
};
pub const SDL_PixelFormat = struct_SDL_PixelFormat;
pub extern fn SDL_GetPixelFormatName(format: Uint32) [*c]const u8;
pub extern fn SDL_PixelFormatEnumToMasks(format: Uint32, bpp: [*c]c_int, Rmask: [*c]Uint32, Gmask: [*c]Uint32, Bmask: [*c]Uint32, Amask: [*c]Uint32) SDL_bool;
pub extern fn SDL_MasksToPixelFormatEnum(bpp: c_int, Rmask: Uint32, Gmask: Uint32, Bmask: Uint32, Amask: Uint32) Uint32;
pub extern fn SDL_AllocFormat(pixel_format: Uint32) [*c]SDL_PixelFormat;
pub extern fn SDL_FreeFormat(format: [*c]SDL_PixelFormat) void;
pub extern fn SDL_AllocPalette(ncolors: c_int) [*c]SDL_Palette;
pub extern fn SDL_SetPixelFormatPalette(format: [*c]SDL_PixelFormat, palette: [*c]SDL_Palette) c_int;
pub extern fn SDL_SetPaletteColors(palette: [*c]SDL_Palette, colors: [*c]const SDL_Color, firstcolor: c_int, ncolors: c_int) c_int;
pub extern fn SDL_FreePalette(palette: [*c]SDL_Palette) void;
pub extern fn SDL_MapRGB(format: [*c]const SDL_PixelFormat, r: Uint8, g: Uint8, b: Uint8) Uint32;
pub extern fn SDL_MapRGBA(format: [*c]const SDL_PixelFormat, r: Uint8, g: Uint8, b: Uint8, a: Uint8) Uint32;
pub extern fn SDL_GetRGB(pixel: Uint32, format: [*c]const SDL_PixelFormat, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8) void;
pub extern fn SDL_GetRGBA(pixel: Uint32, format: [*c]const SDL_PixelFormat, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8, a: [*c]Uint8) void;
pub extern fn SDL_CalculateGammaRamp(gamma: f32, ramp: [*c]Uint16) void;
pub const struct_SDL_Point = extern struct {
    x: c_int = @import("std").mem.zeroes(c_int),
    y: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Point = struct_SDL_Point;
pub const struct_SDL_FPoint = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_FPoint = struct_SDL_FPoint;
pub const struct_SDL_Rect = extern struct {
    x: c_int = @import("std").mem.zeroes(c_int),
    y: c_int = @import("std").mem.zeroes(c_int),
    w: c_int = @import("std").mem.zeroes(c_int),
    h: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Rect = struct_SDL_Rect;
pub const struct_SDL_FRect = extern struct {
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    w: f32 = @import("std").mem.zeroes(f32),
    h: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_FRect = struct_SDL_FRect;
pub inline fn SDL_PointInRect(arg_p: [*c]const SDL_Point, arg_r: [*c]const SDL_Rect) SDL_bool {
    var p = arg_p;
    _ = &p;
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((((p.*.x >= r.*.x) and (p.*.x < (r.*.x + r.*.w))) and (p.*.y >= r.*.y)) and (p.*.y < (r.*.y + r.*.h))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_RectEmpty(arg_r: [*c]const SDL_Rect) SDL_bool {
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((!(r != null) or (r.*.w <= @as(c_int, 0))) or (r.*.h <= @as(c_int, 0))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_RectEquals(arg_a: [*c]const SDL_Rect, arg_b: [*c]const SDL_Rect) SDL_bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    return @as(c_uint, @bitCast(if ((((((a != null) and (b != null)) and (a.*.x == b.*.x)) and (a.*.y == b.*.y)) and (a.*.w == b.*.w)) and (a.*.h == b.*.h)) SDL_TRUE else SDL_FALSE));
}
pub extern fn SDL_HasIntersection(A: [*c]const SDL_Rect, B: [*c]const SDL_Rect) SDL_bool;
pub extern fn SDL_IntersectRect(A: [*c]const SDL_Rect, B: [*c]const SDL_Rect, result: [*c]SDL_Rect) SDL_bool;
pub extern fn SDL_UnionRect(A: [*c]const SDL_Rect, B: [*c]const SDL_Rect, result: [*c]SDL_Rect) void;
pub extern fn SDL_EnclosePoints(points: [*c]const SDL_Point, count: c_int, clip: [*c]const SDL_Rect, result: [*c]SDL_Rect) SDL_bool;
pub extern fn SDL_IntersectRectAndLine(rect: [*c]const SDL_Rect, X1: [*c]c_int, Y1: [*c]c_int, X2: [*c]c_int, Y2: [*c]c_int) SDL_bool;
pub inline fn SDL_PointInFRect(arg_p: [*c]const SDL_FPoint, arg_r: [*c]const SDL_FRect) SDL_bool {
    var p = arg_p;
    _ = &p;
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((((p.*.x >= r.*.x) and (p.*.x < (r.*.x + r.*.w))) and (p.*.y >= r.*.y)) and (p.*.y < (r.*.y + r.*.h))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_FRectEmpty(arg_r: [*c]const SDL_FRect) SDL_bool {
    var r = arg_r;
    _ = &r;
    return @as(c_uint, @bitCast(if ((!(r != null) or (r.*.w <= 0.0)) or (r.*.h <= 0.0)) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_FRectEqualsEpsilon(arg_a: [*c]const SDL_FRect, arg_b: [*c]const SDL_FRect, epsilon: f32) SDL_bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    _ = &epsilon;
    return @as(c_uint, @bitCast(if (((a != null) and (b != null)) and ((a == b) or ((((SDL_fabsf(a.*.x - b.*.x) <= epsilon) and (SDL_fabsf(a.*.y - b.*.y) <= epsilon)) and (SDL_fabsf(a.*.w - b.*.w) <= epsilon)) and (SDL_fabsf(a.*.h - b.*.h) <= epsilon)))) SDL_TRUE else SDL_FALSE));
}
pub inline fn SDL_FRectEquals(arg_a: [*c]const SDL_FRect, arg_b: [*c]const SDL_FRect) SDL_bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    return SDL_FRectEqualsEpsilon(a, b, 0.00000011920928955078125);
}
pub extern fn SDL_HasIntersectionF(A: [*c]const SDL_FRect, B: [*c]const SDL_FRect) SDL_bool;
pub extern fn SDL_IntersectFRect(A: [*c]const SDL_FRect, B: [*c]const SDL_FRect, result: [*c]SDL_FRect) SDL_bool;
pub extern fn SDL_UnionFRect(A: [*c]const SDL_FRect, B: [*c]const SDL_FRect, result: [*c]SDL_FRect) void;
pub extern fn SDL_EncloseFPoints(points: [*c]const SDL_FPoint, count: c_int, clip: [*c]const SDL_FRect, result: [*c]SDL_FRect) SDL_bool;
pub extern fn SDL_IntersectFRectAndLine(rect: [*c]const SDL_FRect, X1: [*c]f32, Y1: [*c]f32, X2: [*c]f32, Y2: [*c]f32) SDL_bool;
pub const SDL_BLENDMODE_NONE: c_int = 0;
pub const SDL_BLENDMODE_BLEND: c_int = 1;
pub const SDL_BLENDMODE_ADD: c_int = 2;
pub const SDL_BLENDMODE_MOD: c_int = 4;
pub const SDL_BLENDMODE_MUL: c_int = 8;
pub const SDL_BLENDMODE_INVALID: c_int = 2147483647;
pub const SDL_BlendMode = c_uint;
pub const SDL_BLENDOPERATION_ADD: c_int = 1;
pub const SDL_BLENDOPERATION_SUBTRACT: c_int = 2;
pub const SDL_BLENDOPERATION_REV_SUBTRACT: c_int = 3;
pub const SDL_BLENDOPERATION_MINIMUM: c_int = 4;
pub const SDL_BLENDOPERATION_MAXIMUM: c_int = 5;
pub const SDL_BlendOperation = c_uint;
pub const SDL_BLENDFACTOR_ZERO: c_int = 1;
pub const SDL_BLENDFACTOR_ONE: c_int = 2;
pub const SDL_BLENDFACTOR_SRC_COLOR: c_int = 3;
pub const SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR: c_int = 4;
pub const SDL_BLENDFACTOR_SRC_ALPHA: c_int = 5;
pub const SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA: c_int = 6;
pub const SDL_BLENDFACTOR_DST_COLOR: c_int = 7;
pub const SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR: c_int = 8;
pub const SDL_BLENDFACTOR_DST_ALPHA: c_int = 9;
pub const SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA: c_int = 10;
pub const SDL_BlendFactor = c_uint;
pub extern fn SDL_ComposeCustomBlendMode(srcColorFactor: SDL_BlendFactor, dstColorFactor: SDL_BlendFactor, colorOperation: SDL_BlendOperation, srcAlphaFactor: SDL_BlendFactor, dstAlphaFactor: SDL_BlendFactor, alphaOperation: SDL_BlendOperation) SDL_BlendMode;
pub const struct_SDL_BlitMap = opaque {};
pub const SDL_BlitMap = struct_SDL_BlitMap;
pub const struct_SDL_Surface = extern struct {
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    format: [*c]SDL_PixelFormat = @import("std").mem.zeroes([*c]SDL_PixelFormat),
    w: c_int = @import("std").mem.zeroes(c_int),
    h: c_int = @import("std").mem.zeroes(c_int),
    pitch: c_int = @import("std").mem.zeroes(c_int),
    pixels: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    userdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    locked: c_int = @import("std").mem.zeroes(c_int),
    list_blitmap: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    clip_rect: SDL_Rect = @import("std").mem.zeroes(SDL_Rect),
    map: ?*SDL_BlitMap = @import("std").mem.zeroes(?*SDL_BlitMap),
    refcount: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_Surface = struct_SDL_Surface;
pub const SDL_blit = ?*const fn ([*c]struct_SDL_Surface, [*c]SDL_Rect, [*c]struct_SDL_Surface, [*c]SDL_Rect) callconv(.C) c_int;
pub const SDL_YUV_CONVERSION_JPEG: c_int = 0;
pub const SDL_YUV_CONVERSION_BT601: c_int = 1;
pub const SDL_YUV_CONVERSION_BT709: c_int = 2;
pub const SDL_YUV_CONVERSION_AUTOMATIC: c_int = 3;
pub const SDL_YUV_CONVERSION_MODE = c_uint;
pub extern fn SDL_CreateRGBSurface(flags: Uint32, width: c_int, height: c_int, depth: c_int, Rmask: Uint32, Gmask: Uint32, Bmask: Uint32, Amask: Uint32) [*c]SDL_Surface;
pub extern fn SDL_CreateRGBSurfaceWithFormat(flags: Uint32, width: c_int, height: c_int, depth: c_int, format: Uint32) [*c]SDL_Surface;
pub extern fn SDL_CreateRGBSurfaceFrom(pixels: ?*anyopaque, width: c_int, height: c_int, depth: c_int, pitch: c_int, Rmask: Uint32, Gmask: Uint32, Bmask: Uint32, Amask: Uint32) [*c]SDL_Surface;
pub extern fn SDL_CreateRGBSurfaceWithFormatFrom(pixels: ?*anyopaque, width: c_int, height: c_int, depth: c_int, pitch: c_int, format: Uint32) [*c]SDL_Surface;
pub extern fn SDL_FreeSurface(surface: [*c]SDL_Surface) void;
pub extern fn SDL_SetSurfacePalette(surface: [*c]SDL_Surface, palette: [*c]SDL_Palette) c_int;
pub extern fn SDL_LockSurface(surface: [*c]SDL_Surface) c_int;
pub extern fn SDL_UnlockSurface(surface: [*c]SDL_Surface) void;
pub extern fn SDL_LoadBMP_RW(src: [*c]SDL_RWops, freesrc: c_int) [*c]SDL_Surface;
pub extern fn SDL_SaveBMP_RW(surface: [*c]SDL_Surface, dst: [*c]SDL_RWops, freedst: c_int) c_int;
pub extern fn SDL_SetSurfaceRLE(surface: [*c]SDL_Surface, flag: c_int) c_int;
pub extern fn SDL_HasSurfaceRLE(surface: [*c]SDL_Surface) SDL_bool;
pub extern fn SDL_SetColorKey(surface: [*c]SDL_Surface, flag: c_int, key: Uint32) c_int;
pub extern fn SDL_HasColorKey(surface: [*c]SDL_Surface) SDL_bool;
pub extern fn SDL_GetColorKey(surface: [*c]SDL_Surface, key: [*c]Uint32) c_int;
pub extern fn SDL_SetSurfaceColorMod(surface: [*c]SDL_Surface, r: Uint8, g: Uint8, b: Uint8) c_int;
pub extern fn SDL_GetSurfaceColorMod(surface: [*c]SDL_Surface, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8) c_int;
pub extern fn SDL_SetSurfaceAlphaMod(surface: [*c]SDL_Surface, alpha: Uint8) c_int;
pub extern fn SDL_GetSurfaceAlphaMod(surface: [*c]SDL_Surface, alpha: [*c]Uint8) c_int;
pub extern fn SDL_SetSurfaceBlendMode(surface: [*c]SDL_Surface, blendMode: SDL_BlendMode) c_int;
pub extern fn SDL_GetSurfaceBlendMode(surface: [*c]SDL_Surface, blendMode: [*c]SDL_BlendMode) c_int;
pub extern fn SDL_SetClipRect(surface: [*c]SDL_Surface, rect: [*c]const SDL_Rect) SDL_bool;
pub extern fn SDL_GetClipRect(surface: [*c]SDL_Surface, rect: [*c]SDL_Rect) void;
pub extern fn SDL_DuplicateSurface(surface: [*c]SDL_Surface) [*c]SDL_Surface;
pub extern fn SDL_ConvertSurface(src: [*c]SDL_Surface, fmt: [*c]const SDL_PixelFormat, flags: Uint32) [*c]SDL_Surface;
pub extern fn SDL_ConvertSurfaceFormat(src: [*c]SDL_Surface, pixel_format: Uint32, flags: Uint32) [*c]SDL_Surface;
pub extern fn SDL_ConvertPixels(width: c_int, height: c_int, src_format: Uint32, src: ?*const anyopaque, src_pitch: c_int, dst_format: Uint32, dst: ?*anyopaque, dst_pitch: c_int) c_int;
pub extern fn SDL_PremultiplyAlpha(width: c_int, height: c_int, src_format: Uint32, src: ?*const anyopaque, src_pitch: c_int, dst_format: Uint32, dst: ?*anyopaque, dst_pitch: c_int) c_int;
pub extern fn SDL_FillRect(dst: [*c]SDL_Surface, rect: [*c]const SDL_Rect, color: Uint32) c_int;
pub extern fn SDL_FillRects(dst: [*c]SDL_Surface, rects: [*c]const SDL_Rect, count: c_int, color: Uint32) c_int;
pub extern fn SDL_UpperBlit(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_LowerBlit(src: [*c]SDL_Surface, srcrect: [*c]SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_SoftStretch(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_SoftStretchLinear(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_UpperBlitScaled(src: [*c]SDL_Surface, srcrect: [*c]const SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_LowerBlitScaled(src: [*c]SDL_Surface, srcrect: [*c]SDL_Rect, dst: [*c]SDL_Surface, dstrect: [*c]SDL_Rect) c_int;
pub extern fn SDL_SetYUVConversionMode(mode: SDL_YUV_CONVERSION_MODE) void;
pub extern fn SDL_GetYUVConversionMode() SDL_YUV_CONVERSION_MODE;
pub extern fn SDL_GetYUVConversionModeForResolution(width: c_int, height: c_int) SDL_YUV_CONVERSION_MODE;
pub const SDL_DisplayMode = extern struct {
    format: Uint32 = @import("std").mem.zeroes(Uint32),
    w: c_int = @import("std").mem.zeroes(c_int),
    h: c_int = @import("std").mem.zeroes(c_int),
    refresh_rate: c_int = @import("std").mem.zeroes(c_int),
    driverdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const struct_SDL_Window = opaque {};
pub const SDL_Window = struct_SDL_Window;
pub const SDL_WINDOW_FULLSCREEN: c_int = 1;
pub const SDL_WINDOW_OPENGL: c_int = 2;
pub const SDL_WINDOW_SHOWN: c_int = 4;
pub const SDL_WINDOW_HIDDEN: c_int = 8;
pub const SDL_WINDOW_BORDERLESS: c_int = 16;
pub const SDL_WINDOW_RESIZABLE: c_int = 32;
pub const SDL_WINDOW_MINIMIZED: c_int = 64;
pub const SDL_WINDOW_MAXIMIZED: c_int = 128;
pub const SDL_WINDOW_MOUSE_GRABBED: c_int = 256;
pub const SDL_WINDOW_INPUT_FOCUS: c_int = 512;
pub const SDL_WINDOW_MOUSE_FOCUS: c_int = 1024;
pub const SDL_WINDOW_FULLSCREEN_DESKTOP: c_int = 4097;
pub const SDL_WINDOW_FOREIGN: c_int = 2048;
pub const SDL_WINDOW_ALLOW_HIGHDPI: c_int = 8192;
pub const SDL_WINDOW_MOUSE_CAPTURE: c_int = 16384;
pub const SDL_WINDOW_ALWAYS_ON_TOP: c_int = 32768;
pub const SDL_WINDOW_SKIP_TASKBAR: c_int = 65536;
pub const SDL_WINDOW_UTILITY: c_int = 131072;
pub const SDL_WINDOW_TOOLTIP: c_int = 262144;
pub const SDL_WINDOW_POPUP_MENU: c_int = 524288;
pub const SDL_WINDOW_KEYBOARD_GRABBED: c_int = 1048576;
pub const SDL_WINDOW_VULKAN: c_int = 268435456;
pub const SDL_WINDOW_METAL: c_int = 536870912;
pub const SDL_WINDOW_INPUT_GRABBED: c_int = 256;
pub const SDL_WindowFlags = c_uint;
pub const SDL_WINDOWEVENT_NONE: c_int = 0;
pub const SDL_WINDOWEVENT_SHOWN: c_int = 1;
pub const SDL_WINDOWEVENT_HIDDEN: c_int = 2;
pub const SDL_WINDOWEVENT_EXPOSED: c_int = 3;
pub const SDL_WINDOWEVENT_MOVED: c_int = 4;
pub const SDL_WINDOWEVENT_RESIZED: c_int = 5;
pub const SDL_WINDOWEVENT_SIZE_CHANGED: c_int = 6;
pub const SDL_WINDOWEVENT_MINIMIZED: c_int = 7;
pub const SDL_WINDOWEVENT_MAXIMIZED: c_int = 8;
pub const SDL_WINDOWEVENT_RESTORED: c_int = 9;
pub const SDL_WINDOWEVENT_ENTER: c_int = 10;
pub const SDL_WINDOWEVENT_LEAVE: c_int = 11;
pub const SDL_WINDOWEVENT_FOCUS_GAINED: c_int = 12;
pub const SDL_WINDOWEVENT_FOCUS_LOST: c_int = 13;
pub const SDL_WINDOWEVENT_CLOSE: c_int = 14;
pub const SDL_WINDOWEVENT_TAKE_FOCUS: c_int = 15;
pub const SDL_WINDOWEVENT_HIT_TEST: c_int = 16;
pub const SDL_WINDOWEVENT_ICCPROF_CHANGED: c_int = 17;
pub const SDL_WINDOWEVENT_DISPLAY_CHANGED: c_int = 18;
pub const SDL_WindowEventID = c_uint;
pub const SDL_DISPLAYEVENT_NONE: c_int = 0;
pub const SDL_DISPLAYEVENT_ORIENTATION: c_int = 1;
pub const SDL_DISPLAYEVENT_CONNECTED: c_int = 2;
pub const SDL_DISPLAYEVENT_DISCONNECTED: c_int = 3;
pub const SDL_DisplayEventID = c_uint;
pub const SDL_ORIENTATION_UNKNOWN: c_int = 0;
pub const SDL_ORIENTATION_LANDSCAPE: c_int = 1;
pub const SDL_ORIENTATION_LANDSCAPE_FLIPPED: c_int = 2;
pub const SDL_ORIENTATION_PORTRAIT: c_int = 3;
pub const SDL_ORIENTATION_PORTRAIT_FLIPPED: c_int = 4;
pub const SDL_DisplayOrientation = c_uint;
pub const SDL_FLASH_CANCEL: c_int = 0;
pub const SDL_FLASH_BRIEFLY: c_int = 1;
pub const SDL_FLASH_UNTIL_FOCUSED: c_int = 2;
pub const SDL_FlashOperation = c_uint;
pub const SDL_GLContext = ?*anyopaque;
pub const SDL_GL_RED_SIZE: c_int = 0;
pub const SDL_GL_GREEN_SIZE: c_int = 1;
pub const SDL_GL_BLUE_SIZE: c_int = 2;
pub const SDL_GL_ALPHA_SIZE: c_int = 3;
pub const SDL_GL_BUFFER_SIZE: c_int = 4;
pub const SDL_GL_DOUBLEBUFFER: c_int = 5;
pub const SDL_GL_DEPTH_SIZE: c_int = 6;
pub const SDL_GL_STENCIL_SIZE: c_int = 7;
pub const SDL_GL_ACCUM_RED_SIZE: c_int = 8;
pub const SDL_GL_ACCUM_GREEN_SIZE: c_int = 9;
pub const SDL_GL_ACCUM_BLUE_SIZE: c_int = 10;
pub const SDL_GL_ACCUM_ALPHA_SIZE: c_int = 11;
pub const SDL_GL_STEREO: c_int = 12;
pub const SDL_GL_MULTISAMPLEBUFFERS: c_int = 13;
pub const SDL_GL_MULTISAMPLESAMPLES: c_int = 14;
pub const SDL_GL_ACCELERATED_VISUAL: c_int = 15;
pub const SDL_GL_RETAINED_BACKING: c_int = 16;
pub const SDL_GL_CONTEXT_MAJOR_VERSION: c_int = 17;
pub const SDL_GL_CONTEXT_MINOR_VERSION: c_int = 18;
pub const SDL_GL_CONTEXT_EGL: c_int = 19;
pub const SDL_GL_CONTEXT_FLAGS: c_int = 20;
pub const SDL_GL_CONTEXT_PROFILE_MASK: c_int = 21;
pub const SDL_GL_SHARE_WITH_CURRENT_CONTEXT: c_int = 22;
pub const SDL_GL_FRAMEBUFFER_SRGB_CAPABLE: c_int = 23;
pub const SDL_GL_CONTEXT_RELEASE_BEHAVIOR: c_int = 24;
pub const SDL_GL_CONTEXT_RESET_NOTIFICATION: c_int = 25;
pub const SDL_GL_CONTEXT_NO_ERROR: c_int = 26;
pub const SDL_GL_FLOATBUFFERS: c_int = 27;
pub const SDL_GLattr = c_uint;
pub const SDL_GL_CONTEXT_PROFILE_CORE: c_int = 1;
pub const SDL_GL_CONTEXT_PROFILE_COMPATIBILITY: c_int = 2;
pub const SDL_GL_CONTEXT_PROFILE_ES: c_int = 4;
pub const SDL_GLprofile = c_uint;
pub const SDL_GL_CONTEXT_DEBUG_FLAG: c_int = 1;
pub const SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG: c_int = 2;
pub const SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG: c_int = 4;
pub const SDL_GL_CONTEXT_RESET_ISOLATION_FLAG: c_int = 8;
pub const SDL_GLcontextFlag = c_uint;
pub const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE: c_int = 0;
pub const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: c_int = 1;
pub const SDL_GLcontextReleaseFlag = c_uint;
pub const SDL_GL_CONTEXT_RESET_NO_NOTIFICATION: c_int = 0;
pub const SDL_GL_CONTEXT_RESET_LOSE_CONTEXT: c_int = 1;
pub const SDL_GLContextResetNotification = c_uint;
pub extern fn SDL_GetNumVideoDrivers() c_int;
pub extern fn SDL_GetVideoDriver(index: c_int) [*c]const u8;
pub extern fn SDL_VideoInit(driver_name: [*c]const u8) c_int;
pub extern fn SDL_VideoQuit() void;
pub extern fn SDL_GetCurrentVideoDriver() [*c]const u8;
pub extern fn SDL_GetNumVideoDisplays() c_int;
pub extern fn SDL_GetDisplayName(displayIndex: c_int) [*c]const u8;
pub extern fn SDL_GetDisplayBounds(displayIndex: c_int, rect: [*c]SDL_Rect) c_int;
pub extern fn SDL_GetDisplayUsableBounds(displayIndex: c_int, rect: [*c]SDL_Rect) c_int;
pub extern fn SDL_GetDisplayDPI(displayIndex: c_int, ddpi: [*c]f32, hdpi: [*c]f32, vdpi: [*c]f32) c_int;
pub extern fn SDL_GetDisplayOrientation(displayIndex: c_int) SDL_DisplayOrientation;
pub extern fn SDL_GetNumDisplayModes(displayIndex: c_int) c_int;
pub extern fn SDL_GetDisplayMode(displayIndex: c_int, modeIndex: c_int, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetDesktopDisplayMode(displayIndex: c_int, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetCurrentDisplayMode(displayIndex: c_int, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetClosestDisplayMode(displayIndex: c_int, mode: [*c]const SDL_DisplayMode, closest: [*c]SDL_DisplayMode) [*c]SDL_DisplayMode;
pub extern fn SDL_GetPointDisplayIndex(point: [*c]const SDL_Point) c_int;
pub extern fn SDL_GetRectDisplayIndex(rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_GetWindowDisplayIndex(window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowDisplayMode(window: ?*SDL_Window, mode: [*c]const SDL_DisplayMode) c_int;
pub extern fn SDL_GetWindowDisplayMode(window: ?*SDL_Window, mode: [*c]SDL_DisplayMode) c_int;
pub extern fn SDL_GetWindowICCProfile(window: ?*SDL_Window, size: [*c]usize) ?*anyopaque;
pub extern fn SDL_GetWindowPixelFormat(window: ?*SDL_Window) Uint32;
pub extern fn SDL_CreateWindow(title: [*c]const u8, x: c_int, y: c_int, w: c_int, h: c_int, flags: Uint32) ?*SDL_Window;
pub extern fn SDL_CreateWindowFrom(data: ?*const anyopaque) ?*SDL_Window;
pub extern fn SDL_GetWindowID(window: ?*SDL_Window) Uint32;
pub extern fn SDL_GetWindowFromID(id: Uint32) ?*SDL_Window;
pub extern fn SDL_GetWindowFlags(window: ?*SDL_Window) Uint32;
pub extern fn SDL_SetWindowTitle(window: ?*SDL_Window, title: [*c]const u8) void;
pub extern fn SDL_GetWindowTitle(window: ?*SDL_Window) [*c]const u8;
pub extern fn SDL_SetWindowIcon(window: ?*SDL_Window, icon: [*c]SDL_Surface) void;
pub extern fn SDL_SetWindowData(window: ?*SDL_Window, name: [*c]const u8, userdata: ?*anyopaque) ?*anyopaque;
pub extern fn SDL_GetWindowData(window: ?*SDL_Window, name: [*c]const u8) ?*anyopaque;
pub extern fn SDL_SetWindowPosition(window: ?*SDL_Window, x: c_int, y: c_int) void;
pub extern fn SDL_GetWindowPosition(window: ?*SDL_Window, x: [*c]c_int, y: [*c]c_int) void;
pub extern fn SDL_SetWindowSize(window: ?*SDL_Window, w: c_int, h: c_int) void;
pub extern fn SDL_GetWindowSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_GetWindowBordersSize(window: ?*SDL_Window, top: [*c]c_int, left: [*c]c_int, bottom: [*c]c_int, right: [*c]c_int) c_int;
pub extern fn SDL_SetWindowMinimumSize(window: ?*SDL_Window, min_w: c_int, min_h: c_int) void;
pub extern fn SDL_GetWindowMinimumSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_SetWindowMaximumSize(window: ?*SDL_Window, max_w: c_int, max_h: c_int) void;
pub extern fn SDL_GetWindowMaximumSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_SetWindowBordered(window: ?*SDL_Window, bordered: SDL_bool) void;
pub extern fn SDL_SetWindowResizable(window: ?*SDL_Window, resizable: SDL_bool) void;
pub extern fn SDL_SetWindowAlwaysOnTop(window: ?*SDL_Window, on_top: SDL_bool) void;
pub extern fn SDL_ShowWindow(window: ?*SDL_Window) void;
pub extern fn SDL_HideWindow(window: ?*SDL_Window) void;
pub extern fn SDL_RaiseWindow(window: ?*SDL_Window) void;
pub extern fn SDL_MaximizeWindow(window: ?*SDL_Window) void;
pub extern fn SDL_MinimizeWindow(window: ?*SDL_Window) void;
pub extern fn SDL_RestoreWindow(window: ?*SDL_Window) void;
pub extern fn SDL_SetWindowFullscreen(window: ?*SDL_Window, flags: Uint32) c_int;
pub extern fn SDL_GetWindowSurface(window: ?*SDL_Window) [*c]SDL_Surface;
pub extern fn SDL_UpdateWindowSurface(window: ?*SDL_Window) c_int;
pub extern fn SDL_UpdateWindowSurfaceRects(window: ?*SDL_Window, rects: [*c]const SDL_Rect, numrects: c_int) c_int;
pub extern fn SDL_SetWindowGrab(window: ?*SDL_Window, grabbed: SDL_bool) void;
pub extern fn SDL_SetWindowKeyboardGrab(window: ?*SDL_Window, grabbed: SDL_bool) void;
pub extern fn SDL_SetWindowMouseGrab(window: ?*SDL_Window, grabbed: SDL_bool) void;
pub extern fn SDL_GetWindowGrab(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetWindowKeyboardGrab(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetWindowMouseGrab(window: ?*SDL_Window) SDL_bool;
pub extern fn SDL_GetGrabbedWindow() ?*SDL_Window;
pub extern fn SDL_SetWindowMouseRect(window: ?*SDL_Window, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_GetWindowMouseRect(window: ?*SDL_Window) [*c]const SDL_Rect;
pub extern fn SDL_SetWindowBrightness(window: ?*SDL_Window, brightness: f32) c_int;
pub extern fn SDL_GetWindowBrightness(window: ?*SDL_Window) f32;
pub extern fn SDL_SetWindowOpacity(window: ?*SDL_Window, opacity: f32) c_int;
pub extern fn SDL_GetWindowOpacity(window: ?*SDL_Window, out_opacity: [*c]f32) c_int;
pub extern fn SDL_SetWindowModalFor(modal_window: ?*SDL_Window, parent_window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowInputFocus(window: ?*SDL_Window) c_int;
pub extern fn SDL_SetWindowGammaRamp(window: ?*SDL_Window, red: [*c]const Uint16, green: [*c]const Uint16, blue: [*c]const Uint16) c_int;
pub extern fn SDL_GetWindowGammaRamp(window: ?*SDL_Window, red: [*c]Uint16, green: [*c]Uint16, blue: [*c]Uint16) c_int;
pub const SDL_HITTEST_NORMAL: c_int = 0;
pub const SDL_HITTEST_DRAGGABLE: c_int = 1;
pub const SDL_HITTEST_RESIZE_TOPLEFT: c_int = 2;
pub const SDL_HITTEST_RESIZE_TOP: c_int = 3;
pub const SDL_HITTEST_RESIZE_TOPRIGHT: c_int = 4;
pub const SDL_HITTEST_RESIZE_RIGHT: c_int = 5;
pub const SDL_HITTEST_RESIZE_BOTTOMRIGHT: c_int = 6;
pub const SDL_HITTEST_RESIZE_BOTTOM: c_int = 7;
pub const SDL_HITTEST_RESIZE_BOTTOMLEFT: c_int = 8;
pub const SDL_HITTEST_RESIZE_LEFT: c_int = 9;
pub const SDL_HitTestResult = c_uint;
pub const SDL_HitTest = ?*const fn (?*SDL_Window, [*c]const SDL_Point, ?*anyopaque) callconv(.C) SDL_HitTestResult;
pub extern fn SDL_SetWindowHitTest(window: ?*SDL_Window, callback: SDL_HitTest, callback_data: ?*anyopaque) c_int;
pub extern fn SDL_FlashWindow(window: ?*SDL_Window, operation: SDL_FlashOperation) c_int;
pub extern fn SDL_DestroyWindow(window: ?*SDL_Window) void;
pub extern fn SDL_IsScreenSaverEnabled() SDL_bool;
pub extern fn SDL_EnableScreenSaver() void;
pub extern fn SDL_DisableScreenSaver() void;
pub extern fn SDL_GL_LoadLibrary(path: [*c]const u8) c_int;
pub extern fn SDL_GL_GetProcAddress(proc: [*c]const u8) ?*anyopaque;
pub extern fn SDL_GL_UnloadLibrary() void;
pub extern fn SDL_GL_ExtensionSupported(extension: [*c]const u8) SDL_bool;
pub extern fn SDL_GL_ResetAttributes() void;
pub extern fn SDL_GL_SetAttribute(attr: SDL_GLattr, value: c_int) c_int;
pub extern fn SDL_GL_GetAttribute(attr: SDL_GLattr, value: [*c]c_int) c_int;
pub extern fn SDL_GL_CreateContext(window: ?*SDL_Window) SDL_GLContext;
pub extern fn SDL_GL_MakeCurrent(window: ?*SDL_Window, context: SDL_GLContext) c_int;
pub extern fn SDL_GL_GetCurrentWindow() ?*SDL_Window;
pub extern fn SDL_GL_GetCurrentContext() SDL_GLContext;
pub extern fn SDL_GL_GetDrawableSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_GL_SetSwapInterval(interval: c_int) c_int;
pub extern fn SDL_GL_GetSwapInterval() c_int;
pub extern fn SDL_GL_SwapWindow(window: ?*SDL_Window) void;
pub extern fn SDL_GL_DeleteContext(context: SDL_GLContext) void;
pub const SDL_SCANCODE_UNKNOWN: c_int = 0;
pub const SDL_SCANCODE_A: c_int = 4;
pub const SDL_SCANCODE_B: c_int = 5;
pub const SDL_SCANCODE_C: c_int = 6;
pub const SDL_SCANCODE_D: c_int = 7;
pub const SDL_SCANCODE_E: c_int = 8;
pub const SDL_SCANCODE_F: c_int = 9;
pub const SDL_SCANCODE_G: c_int = 10;
pub const SDL_SCANCODE_H: c_int = 11;
pub const SDL_SCANCODE_I: c_int = 12;
pub const SDL_SCANCODE_J: c_int = 13;
pub const SDL_SCANCODE_K: c_int = 14;
pub const SDL_SCANCODE_L: c_int = 15;
pub const SDL_SCANCODE_M: c_int = 16;
pub const SDL_SCANCODE_N: c_int = 17;
pub const SDL_SCANCODE_O: c_int = 18;
pub const SDL_SCANCODE_P: c_int = 19;
pub const SDL_SCANCODE_Q: c_int = 20;
pub const SDL_SCANCODE_R: c_int = 21;
pub const SDL_SCANCODE_S: c_int = 22;
pub const SDL_SCANCODE_T: c_int = 23;
pub const SDL_SCANCODE_U: c_int = 24;
pub const SDL_SCANCODE_V: c_int = 25;
pub const SDL_SCANCODE_W: c_int = 26;
pub const SDL_SCANCODE_X: c_int = 27;
pub const SDL_SCANCODE_Y: c_int = 28;
pub const SDL_SCANCODE_Z: c_int = 29;
pub const SDL_SCANCODE_1: c_int = 30;
pub const SDL_SCANCODE_2: c_int = 31;
pub const SDL_SCANCODE_3: c_int = 32;
pub const SDL_SCANCODE_4: c_int = 33;
pub const SDL_SCANCODE_5: c_int = 34;
pub const SDL_SCANCODE_6: c_int = 35;
pub const SDL_SCANCODE_7: c_int = 36;
pub const SDL_SCANCODE_8: c_int = 37;
pub const SDL_SCANCODE_9: c_int = 38;
pub const SDL_SCANCODE_0: c_int = 39;
pub const SDL_SCANCODE_RETURN: c_int = 40;
pub const SDL_SCANCODE_ESCAPE: c_int = 41;
pub const SDL_SCANCODE_BACKSPACE: c_int = 42;
pub const SDL_SCANCODE_TAB: c_int = 43;
pub const SDL_SCANCODE_SPACE: c_int = 44;
pub const SDL_SCANCODE_MINUS: c_int = 45;
pub const SDL_SCANCODE_EQUALS: c_int = 46;
pub const SDL_SCANCODE_LEFTBRACKET: c_int = 47;
pub const SDL_SCANCODE_RIGHTBRACKET: c_int = 48;
pub const SDL_SCANCODE_BACKSLASH: c_int = 49;
pub const SDL_SCANCODE_NONUSHASH: c_int = 50;
pub const SDL_SCANCODE_SEMICOLON: c_int = 51;
pub const SDL_SCANCODE_APOSTROPHE: c_int = 52;
pub const SDL_SCANCODE_GRAVE: c_int = 53;
pub const SDL_SCANCODE_COMMA: c_int = 54;
pub const SDL_SCANCODE_PERIOD: c_int = 55;
pub const SDL_SCANCODE_SLASH: c_int = 56;
pub const SDL_SCANCODE_CAPSLOCK: c_int = 57;
pub const SDL_SCANCODE_F1: c_int = 58;
pub const SDL_SCANCODE_F2: c_int = 59;
pub const SDL_SCANCODE_F3: c_int = 60;
pub const SDL_SCANCODE_F4: c_int = 61;
pub const SDL_SCANCODE_F5: c_int = 62;
pub const SDL_SCANCODE_F6: c_int = 63;
pub const SDL_SCANCODE_F7: c_int = 64;
pub const SDL_SCANCODE_F8: c_int = 65;
pub const SDL_SCANCODE_F9: c_int = 66;
pub const SDL_SCANCODE_F10: c_int = 67;
pub const SDL_SCANCODE_F11: c_int = 68;
pub const SDL_SCANCODE_F12: c_int = 69;
pub const SDL_SCANCODE_PRINTSCREEN: c_int = 70;
pub const SDL_SCANCODE_SCROLLLOCK: c_int = 71;
pub const SDL_SCANCODE_PAUSE: c_int = 72;
pub const SDL_SCANCODE_INSERT: c_int = 73;
pub const SDL_SCANCODE_HOME: c_int = 74;
pub const SDL_SCANCODE_PAGEUP: c_int = 75;
pub const SDL_SCANCODE_DELETE: c_int = 76;
pub const SDL_SCANCODE_END: c_int = 77;
pub const SDL_SCANCODE_PAGEDOWN: c_int = 78;
pub const SDL_SCANCODE_RIGHT: c_int = 79;
pub const SDL_SCANCODE_LEFT: c_int = 80;
pub const SDL_SCANCODE_DOWN: c_int = 81;
pub const SDL_SCANCODE_UP: c_int = 82;
pub const SDL_SCANCODE_NUMLOCKCLEAR: c_int = 83;
pub const SDL_SCANCODE_KP_DIVIDE: c_int = 84;
pub const SDL_SCANCODE_KP_MULTIPLY: c_int = 85;
pub const SDL_SCANCODE_KP_MINUS: c_int = 86;
pub const SDL_SCANCODE_KP_PLUS: c_int = 87;
pub const SDL_SCANCODE_KP_ENTER: c_int = 88;
pub const SDL_SCANCODE_KP_1: c_int = 89;
pub const SDL_SCANCODE_KP_2: c_int = 90;
pub const SDL_SCANCODE_KP_3: c_int = 91;
pub const SDL_SCANCODE_KP_4: c_int = 92;
pub const SDL_SCANCODE_KP_5: c_int = 93;
pub const SDL_SCANCODE_KP_6: c_int = 94;
pub const SDL_SCANCODE_KP_7: c_int = 95;
pub const SDL_SCANCODE_KP_8: c_int = 96;
pub const SDL_SCANCODE_KP_9: c_int = 97;
pub const SDL_SCANCODE_KP_0: c_int = 98;
pub const SDL_SCANCODE_KP_PERIOD: c_int = 99;
pub const SDL_SCANCODE_NONUSBACKSLASH: c_int = 100;
pub const SDL_SCANCODE_APPLICATION: c_int = 101;
pub const SDL_SCANCODE_POWER: c_int = 102;
pub const SDL_SCANCODE_KP_EQUALS: c_int = 103;
pub const SDL_SCANCODE_F13: c_int = 104;
pub const SDL_SCANCODE_F14: c_int = 105;
pub const SDL_SCANCODE_F15: c_int = 106;
pub const SDL_SCANCODE_F16: c_int = 107;
pub const SDL_SCANCODE_F17: c_int = 108;
pub const SDL_SCANCODE_F18: c_int = 109;
pub const SDL_SCANCODE_F19: c_int = 110;
pub const SDL_SCANCODE_F20: c_int = 111;
pub const SDL_SCANCODE_F21: c_int = 112;
pub const SDL_SCANCODE_F22: c_int = 113;
pub const SDL_SCANCODE_F23: c_int = 114;
pub const SDL_SCANCODE_F24: c_int = 115;
pub const SDL_SCANCODE_EXECUTE: c_int = 116;
pub const SDL_SCANCODE_HELP: c_int = 117;
pub const SDL_SCANCODE_MENU: c_int = 118;
pub const SDL_SCANCODE_SELECT: c_int = 119;
pub const SDL_SCANCODE_STOP: c_int = 120;
pub const SDL_SCANCODE_AGAIN: c_int = 121;
pub const SDL_SCANCODE_UNDO: c_int = 122;
pub const SDL_SCANCODE_CUT: c_int = 123;
pub const SDL_SCANCODE_COPY: c_int = 124;
pub const SDL_SCANCODE_PASTE: c_int = 125;
pub const SDL_SCANCODE_FIND: c_int = 126;
pub const SDL_SCANCODE_MUTE: c_int = 127;
pub const SDL_SCANCODE_VOLUMEUP: c_int = 128;
pub const SDL_SCANCODE_VOLUMEDOWN: c_int = 129;
pub const SDL_SCANCODE_KP_COMMA: c_int = 133;
pub const SDL_SCANCODE_KP_EQUALSAS400: c_int = 134;
pub const SDL_SCANCODE_INTERNATIONAL1: c_int = 135;
pub const SDL_SCANCODE_INTERNATIONAL2: c_int = 136;
pub const SDL_SCANCODE_INTERNATIONAL3: c_int = 137;
pub const SDL_SCANCODE_INTERNATIONAL4: c_int = 138;
pub const SDL_SCANCODE_INTERNATIONAL5: c_int = 139;
pub const SDL_SCANCODE_INTERNATIONAL6: c_int = 140;
pub const SDL_SCANCODE_INTERNATIONAL7: c_int = 141;
pub const SDL_SCANCODE_INTERNATIONAL8: c_int = 142;
pub const SDL_SCANCODE_INTERNATIONAL9: c_int = 143;
pub const SDL_SCANCODE_LANG1: c_int = 144;
pub const SDL_SCANCODE_LANG2: c_int = 145;
pub const SDL_SCANCODE_LANG3: c_int = 146;
pub const SDL_SCANCODE_LANG4: c_int = 147;
pub const SDL_SCANCODE_LANG5: c_int = 148;
pub const SDL_SCANCODE_LANG6: c_int = 149;
pub const SDL_SCANCODE_LANG7: c_int = 150;
pub const SDL_SCANCODE_LANG8: c_int = 151;
pub const SDL_SCANCODE_LANG9: c_int = 152;
pub const SDL_SCANCODE_ALTERASE: c_int = 153;
pub const SDL_SCANCODE_SYSREQ: c_int = 154;
pub const SDL_SCANCODE_CANCEL: c_int = 155;
pub const SDL_SCANCODE_CLEAR: c_int = 156;
pub const SDL_SCANCODE_PRIOR: c_int = 157;
pub const SDL_SCANCODE_RETURN2: c_int = 158;
pub const SDL_SCANCODE_SEPARATOR: c_int = 159;
pub const SDL_SCANCODE_OUT: c_int = 160;
pub const SDL_SCANCODE_OPER: c_int = 161;
pub const SDL_SCANCODE_CLEARAGAIN: c_int = 162;
pub const SDL_SCANCODE_CRSEL: c_int = 163;
pub const SDL_SCANCODE_EXSEL: c_int = 164;
pub const SDL_SCANCODE_KP_00: c_int = 176;
pub const SDL_SCANCODE_KP_000: c_int = 177;
pub const SDL_SCANCODE_THOUSANDSSEPARATOR: c_int = 178;
pub const SDL_SCANCODE_DECIMALSEPARATOR: c_int = 179;
pub const SDL_SCANCODE_CURRENCYUNIT: c_int = 180;
pub const SDL_SCANCODE_CURRENCYSUBUNIT: c_int = 181;
pub const SDL_SCANCODE_KP_LEFTPAREN: c_int = 182;
pub const SDL_SCANCODE_KP_RIGHTPAREN: c_int = 183;
pub const SDL_SCANCODE_KP_LEFTBRACE: c_int = 184;
pub const SDL_SCANCODE_KP_RIGHTBRACE: c_int = 185;
pub const SDL_SCANCODE_KP_TAB: c_int = 186;
pub const SDL_SCANCODE_KP_BACKSPACE: c_int = 187;
pub const SDL_SCANCODE_KP_A: c_int = 188;
pub const SDL_SCANCODE_KP_B: c_int = 189;
pub const SDL_SCANCODE_KP_C: c_int = 190;
pub const SDL_SCANCODE_KP_D: c_int = 191;
pub const SDL_SCANCODE_KP_E: c_int = 192;
pub const SDL_SCANCODE_KP_F: c_int = 193;
pub const SDL_SCANCODE_KP_XOR: c_int = 194;
pub const SDL_SCANCODE_KP_POWER: c_int = 195;
pub const SDL_SCANCODE_KP_PERCENT: c_int = 196;
pub const SDL_SCANCODE_KP_LESS: c_int = 197;
pub const SDL_SCANCODE_KP_GREATER: c_int = 198;
pub const SDL_SCANCODE_KP_AMPERSAND: c_int = 199;
pub const SDL_SCANCODE_KP_DBLAMPERSAND: c_int = 200;
pub const SDL_SCANCODE_KP_VERTICALBAR: c_int = 201;
pub const SDL_SCANCODE_KP_DBLVERTICALBAR: c_int = 202;
pub const SDL_SCANCODE_KP_COLON: c_int = 203;
pub const SDL_SCANCODE_KP_HASH: c_int = 204;
pub const SDL_SCANCODE_KP_SPACE: c_int = 205;
pub const SDL_SCANCODE_KP_AT: c_int = 206;
pub const SDL_SCANCODE_KP_EXCLAM: c_int = 207;
pub const SDL_SCANCODE_KP_MEMSTORE: c_int = 208;
pub const SDL_SCANCODE_KP_MEMRECALL: c_int = 209;
pub const SDL_SCANCODE_KP_MEMCLEAR: c_int = 210;
pub const SDL_SCANCODE_KP_MEMADD: c_int = 211;
pub const SDL_SCANCODE_KP_MEMSUBTRACT: c_int = 212;
pub const SDL_SCANCODE_KP_MEMMULTIPLY: c_int = 213;
pub const SDL_SCANCODE_KP_MEMDIVIDE: c_int = 214;
pub const SDL_SCANCODE_KP_PLUSMINUS: c_int = 215;
pub const SDL_SCANCODE_KP_CLEAR: c_int = 216;
pub const SDL_SCANCODE_KP_CLEARENTRY: c_int = 217;
pub const SDL_SCANCODE_KP_BINARY: c_int = 218;
pub const SDL_SCANCODE_KP_OCTAL: c_int = 219;
pub const SDL_SCANCODE_KP_DECIMAL: c_int = 220;
pub const SDL_SCANCODE_KP_HEXADECIMAL: c_int = 221;
pub const SDL_SCANCODE_LCTRL: c_int = 224;
pub const SDL_SCANCODE_LSHIFT: c_int = 225;
pub const SDL_SCANCODE_LALT: c_int = 226;
pub const SDL_SCANCODE_LGUI: c_int = 227;
pub const SDL_SCANCODE_RCTRL: c_int = 228;
pub const SDL_SCANCODE_RSHIFT: c_int = 229;
pub const SDL_SCANCODE_RALT: c_int = 230;
pub const SDL_SCANCODE_RGUI: c_int = 231;
pub const SDL_SCANCODE_MODE: c_int = 257;
pub const SDL_SCANCODE_AUDIONEXT: c_int = 258;
pub const SDL_SCANCODE_AUDIOPREV: c_int = 259;
pub const SDL_SCANCODE_AUDIOSTOP: c_int = 260;
pub const SDL_SCANCODE_AUDIOPLAY: c_int = 261;
pub const SDL_SCANCODE_AUDIOMUTE: c_int = 262;
pub const SDL_SCANCODE_MEDIASELECT: c_int = 263;
pub const SDL_SCANCODE_WWW: c_int = 264;
pub const SDL_SCANCODE_MAIL: c_int = 265;
pub const SDL_SCANCODE_CALCULATOR: c_int = 266;
pub const SDL_SCANCODE_COMPUTER: c_int = 267;
pub const SDL_SCANCODE_AC_SEARCH: c_int = 268;
pub const SDL_SCANCODE_AC_HOME: c_int = 269;
pub const SDL_SCANCODE_AC_BACK: c_int = 270;
pub const SDL_SCANCODE_AC_FORWARD: c_int = 271;
pub const SDL_SCANCODE_AC_STOP: c_int = 272;
pub const SDL_SCANCODE_AC_REFRESH: c_int = 273;
pub const SDL_SCANCODE_AC_BOOKMARKS: c_int = 274;
pub const SDL_SCANCODE_BRIGHTNESSDOWN: c_int = 275;
pub const SDL_SCANCODE_BRIGHTNESSUP: c_int = 276;
pub const SDL_SCANCODE_DISPLAYSWITCH: c_int = 277;
pub const SDL_SCANCODE_KBDILLUMTOGGLE: c_int = 278;
pub const SDL_SCANCODE_KBDILLUMDOWN: c_int = 279;
pub const SDL_SCANCODE_KBDILLUMUP: c_int = 280;
pub const SDL_SCANCODE_EJECT: c_int = 281;
pub const SDL_SCANCODE_SLEEP: c_int = 282;
pub const SDL_SCANCODE_APP1: c_int = 283;
pub const SDL_SCANCODE_APP2: c_int = 284;
pub const SDL_SCANCODE_AUDIOREWIND: c_int = 285;
pub const SDL_SCANCODE_AUDIOFASTFORWARD: c_int = 286;
pub const SDL_SCANCODE_SOFTLEFT: c_int = 287;
pub const SDL_SCANCODE_SOFTRIGHT: c_int = 288;
pub const SDL_SCANCODE_CALL: c_int = 289;
pub const SDL_SCANCODE_ENDCALL: c_int = 290;
pub const SDL_NUM_SCANCODES: c_int = 512;
pub const SDL_Scancode = c_uint;
pub const SDL_Keycode = Sint32;
pub const SDLK_UNKNOWN: c_int = 0;
pub const SDLK_RETURN: c_int = 13;
pub const SDLK_ESCAPE: c_int = 27;
pub const SDLK_BACKSPACE: c_int = 8;
pub const SDLK_TAB: c_int = 9;
pub const SDLK_SPACE: c_int = 32;
pub const SDLK_EXCLAIM: c_int = 33;
pub const SDLK_QUOTEDBL: c_int = 34;
pub const SDLK_HASH: c_int = 35;
pub const SDLK_PERCENT: c_int = 37;
pub const SDLK_DOLLAR: c_int = 36;
pub const SDLK_AMPERSAND: c_int = 38;
pub const SDLK_QUOTE: c_int = 39;
pub const SDLK_LEFTPAREN: c_int = 40;
pub const SDLK_RIGHTPAREN: c_int = 41;
pub const SDLK_ASTERISK: c_int = 42;
pub const SDLK_PLUS: c_int = 43;
pub const SDLK_COMMA: c_int = 44;
pub const SDLK_MINUS: c_int = 45;
pub const SDLK_PERIOD: c_int = 46;
pub const SDLK_SLASH: c_int = 47;
pub const SDLK_0: c_int = 48;
pub const SDLK_1: c_int = 49;
pub const SDLK_2: c_int = 50;
pub const SDLK_3: c_int = 51;
pub const SDLK_4: c_int = 52;
pub const SDLK_5: c_int = 53;
pub const SDLK_6: c_int = 54;
pub const SDLK_7: c_int = 55;
pub const SDLK_8: c_int = 56;
pub const SDLK_9: c_int = 57;
pub const SDLK_COLON: c_int = 58;
pub const SDLK_SEMICOLON: c_int = 59;
pub const SDLK_LESS: c_int = 60;
pub const SDLK_EQUALS: c_int = 61;
pub const SDLK_GREATER: c_int = 62;
pub const SDLK_QUESTION: c_int = 63;
pub const SDLK_AT: c_int = 64;
pub const SDLK_LEFTBRACKET: c_int = 91;
pub const SDLK_BACKSLASH: c_int = 92;
pub const SDLK_RIGHTBRACKET: c_int = 93;
pub const SDLK_CARET: c_int = 94;
pub const SDLK_UNDERSCORE: c_int = 95;
pub const SDLK_BACKQUOTE: c_int = 96;
pub const SDLK_a: c_int = 97;
pub const SDLK_b: c_int = 98;
pub const SDLK_c: c_int = 99;
pub const SDLK_d: c_int = 100;
pub const SDLK_e: c_int = 101;
pub const SDLK_f: c_int = 102;
pub const SDLK_g: c_int = 103;
pub const SDLK_h: c_int = 104;
pub const SDLK_i: c_int = 105;
pub const SDLK_j: c_int = 106;
pub const SDLK_k: c_int = 107;
pub const SDLK_l: c_int = 108;
pub const SDLK_m: c_int = 109;
pub const SDLK_n: c_int = 110;
pub const SDLK_o: c_int = 111;
pub const SDLK_p: c_int = 112;
pub const SDLK_q: c_int = 113;
pub const SDLK_r: c_int = 114;
pub const SDLK_s: c_int = 115;
pub const SDLK_t: c_int = 116;
pub const SDLK_u: c_int = 117;
pub const SDLK_v: c_int = 118;
pub const SDLK_w: c_int = 119;
pub const SDLK_x: c_int = 120;
pub const SDLK_y: c_int = 121;
pub const SDLK_z: c_int = 122;
pub const SDLK_CAPSLOCK: c_int = 1073741881;
pub const SDLK_F1: c_int = 1073741882;
pub const SDLK_F2: c_int = 1073741883;
pub const SDLK_F3: c_int = 1073741884;
pub const SDLK_F4: c_int = 1073741885;
pub const SDLK_F5: c_int = 1073741886;
pub const SDLK_F6: c_int = 1073741887;
pub const SDLK_F7: c_int = 1073741888;
pub const SDLK_F8: c_int = 1073741889;
pub const SDLK_F9: c_int = 1073741890;
pub const SDLK_F10: c_int = 1073741891;
pub const SDLK_F11: c_int = 1073741892;
pub const SDLK_F12: c_int = 1073741893;
pub const SDLK_PRINTSCREEN: c_int = 1073741894;
pub const SDLK_SCROLLLOCK: c_int = 1073741895;
pub const SDLK_PAUSE: c_int = 1073741896;
pub const SDLK_INSERT: c_int = 1073741897;
pub const SDLK_HOME: c_int = 1073741898;
pub const SDLK_PAGEUP: c_int = 1073741899;
pub const SDLK_DELETE: c_int = 127;
pub const SDLK_END: c_int = 1073741901;
pub const SDLK_PAGEDOWN: c_int = 1073741902;
pub const SDLK_RIGHT: c_int = 1073741903;
pub const SDLK_LEFT: c_int = 1073741904;
pub const SDLK_DOWN: c_int = 1073741905;
pub const SDLK_UP: c_int = 1073741906;
pub const SDLK_NUMLOCKCLEAR: c_int = 1073741907;
pub const SDLK_KP_DIVIDE: c_int = 1073741908;
pub const SDLK_KP_MULTIPLY: c_int = 1073741909;
pub const SDLK_KP_MINUS: c_int = 1073741910;
pub const SDLK_KP_PLUS: c_int = 1073741911;
pub const SDLK_KP_ENTER: c_int = 1073741912;
pub const SDLK_KP_1: c_int = 1073741913;
pub const SDLK_KP_2: c_int = 1073741914;
pub const SDLK_KP_3: c_int = 1073741915;
pub const SDLK_KP_4: c_int = 1073741916;
pub const SDLK_KP_5: c_int = 1073741917;
pub const SDLK_KP_6: c_int = 1073741918;
pub const SDLK_KP_7: c_int = 1073741919;
pub const SDLK_KP_8: c_int = 1073741920;
pub const SDLK_KP_9: c_int = 1073741921;
pub const SDLK_KP_0: c_int = 1073741922;
pub const SDLK_KP_PERIOD: c_int = 1073741923;
pub const SDLK_APPLICATION: c_int = 1073741925;
pub const SDLK_POWER: c_int = 1073741926;
pub const SDLK_KP_EQUALS: c_int = 1073741927;
pub const SDLK_F13: c_int = 1073741928;
pub const SDLK_F14: c_int = 1073741929;
pub const SDLK_F15: c_int = 1073741930;
pub const SDLK_F16: c_int = 1073741931;
pub const SDLK_F17: c_int = 1073741932;
pub const SDLK_F18: c_int = 1073741933;
pub const SDLK_F19: c_int = 1073741934;
pub const SDLK_F20: c_int = 1073741935;
pub const SDLK_F21: c_int = 1073741936;
pub const SDLK_F22: c_int = 1073741937;
pub const SDLK_F23: c_int = 1073741938;
pub const SDLK_F24: c_int = 1073741939;
pub const SDLK_EXECUTE: c_int = 1073741940;
pub const SDLK_HELP: c_int = 1073741941;
pub const SDLK_MENU: c_int = 1073741942;
pub const SDLK_SELECT: c_int = 1073741943;
pub const SDLK_STOP: c_int = 1073741944;
pub const SDLK_AGAIN: c_int = 1073741945;
pub const SDLK_UNDO: c_int = 1073741946;
pub const SDLK_CUT: c_int = 1073741947;
pub const SDLK_COPY: c_int = 1073741948;
pub const SDLK_PASTE: c_int = 1073741949;
pub const SDLK_FIND: c_int = 1073741950;
pub const SDLK_MUTE: c_int = 1073741951;
pub const SDLK_VOLUMEUP: c_int = 1073741952;
pub const SDLK_VOLUMEDOWN: c_int = 1073741953;
pub const SDLK_KP_COMMA: c_int = 1073741957;
pub const SDLK_KP_EQUALSAS400: c_int = 1073741958;
pub const SDLK_ALTERASE: c_int = 1073741977;
pub const SDLK_SYSREQ: c_int = 1073741978;
pub const SDLK_CANCEL: c_int = 1073741979;
pub const SDLK_CLEAR: c_int = 1073741980;
pub const SDLK_PRIOR: c_int = 1073741981;
pub const SDLK_RETURN2: c_int = 1073741982;
pub const SDLK_SEPARATOR: c_int = 1073741983;
pub const SDLK_OUT: c_int = 1073741984;
pub const SDLK_OPER: c_int = 1073741985;
pub const SDLK_CLEARAGAIN: c_int = 1073741986;
pub const SDLK_CRSEL: c_int = 1073741987;
pub const SDLK_EXSEL: c_int = 1073741988;
pub const SDLK_KP_00: c_int = 1073742000;
pub const SDLK_KP_000: c_int = 1073742001;
pub const SDLK_THOUSANDSSEPARATOR: c_int = 1073742002;
pub const SDLK_DECIMALSEPARATOR: c_int = 1073742003;
pub const SDLK_CURRENCYUNIT: c_int = 1073742004;
pub const SDLK_CURRENCYSUBUNIT: c_int = 1073742005;
pub const SDLK_KP_LEFTPAREN: c_int = 1073742006;
pub const SDLK_KP_RIGHTPAREN: c_int = 1073742007;
pub const SDLK_KP_LEFTBRACE: c_int = 1073742008;
pub const SDLK_KP_RIGHTBRACE: c_int = 1073742009;
pub const SDLK_KP_TAB: c_int = 1073742010;
pub const SDLK_KP_BACKSPACE: c_int = 1073742011;
pub const SDLK_KP_A: c_int = 1073742012;
pub const SDLK_KP_B: c_int = 1073742013;
pub const SDLK_KP_C: c_int = 1073742014;
pub const SDLK_KP_D: c_int = 1073742015;
pub const SDLK_KP_E: c_int = 1073742016;
pub const SDLK_KP_F: c_int = 1073742017;
pub const SDLK_KP_XOR: c_int = 1073742018;
pub const SDLK_KP_POWER: c_int = 1073742019;
pub const SDLK_KP_PERCENT: c_int = 1073742020;
pub const SDLK_KP_LESS: c_int = 1073742021;
pub const SDLK_KP_GREATER: c_int = 1073742022;
pub const SDLK_KP_AMPERSAND: c_int = 1073742023;
pub const SDLK_KP_DBLAMPERSAND: c_int = 1073742024;
pub const SDLK_KP_VERTICALBAR: c_int = 1073742025;
pub const SDLK_KP_DBLVERTICALBAR: c_int = 1073742026;
pub const SDLK_KP_COLON: c_int = 1073742027;
pub const SDLK_KP_HASH: c_int = 1073742028;
pub const SDLK_KP_SPACE: c_int = 1073742029;
pub const SDLK_KP_AT: c_int = 1073742030;
pub const SDLK_KP_EXCLAM: c_int = 1073742031;
pub const SDLK_KP_MEMSTORE: c_int = 1073742032;
pub const SDLK_KP_MEMRECALL: c_int = 1073742033;
pub const SDLK_KP_MEMCLEAR: c_int = 1073742034;
pub const SDLK_KP_MEMADD: c_int = 1073742035;
pub const SDLK_KP_MEMSUBTRACT: c_int = 1073742036;
pub const SDLK_KP_MEMMULTIPLY: c_int = 1073742037;
pub const SDLK_KP_MEMDIVIDE: c_int = 1073742038;
pub const SDLK_KP_PLUSMINUS: c_int = 1073742039;
pub const SDLK_KP_CLEAR: c_int = 1073742040;
pub const SDLK_KP_CLEARENTRY: c_int = 1073742041;
pub const SDLK_KP_BINARY: c_int = 1073742042;
pub const SDLK_KP_OCTAL: c_int = 1073742043;
pub const SDLK_KP_DECIMAL: c_int = 1073742044;
pub const SDLK_KP_HEXADECIMAL: c_int = 1073742045;
pub const SDLK_LCTRL: c_int = 1073742048;
pub const SDLK_LSHIFT: c_int = 1073742049;
pub const SDLK_LALT: c_int = 1073742050;
pub const SDLK_LGUI: c_int = 1073742051;
pub const SDLK_RCTRL: c_int = 1073742052;
pub const SDLK_RSHIFT: c_int = 1073742053;
pub const SDLK_RALT: c_int = 1073742054;
pub const SDLK_RGUI: c_int = 1073742055;
pub const SDLK_MODE: c_int = 1073742081;
pub const SDLK_AUDIONEXT: c_int = 1073742082;
pub const SDLK_AUDIOPREV: c_int = 1073742083;
pub const SDLK_AUDIOSTOP: c_int = 1073742084;
pub const SDLK_AUDIOPLAY: c_int = 1073742085;
pub const SDLK_AUDIOMUTE: c_int = 1073742086;
pub const SDLK_MEDIASELECT: c_int = 1073742087;
pub const SDLK_WWW: c_int = 1073742088;
pub const SDLK_MAIL: c_int = 1073742089;
pub const SDLK_CALCULATOR: c_int = 1073742090;
pub const SDLK_COMPUTER: c_int = 1073742091;
pub const SDLK_AC_SEARCH: c_int = 1073742092;
pub const SDLK_AC_HOME: c_int = 1073742093;
pub const SDLK_AC_BACK: c_int = 1073742094;
pub const SDLK_AC_FORWARD: c_int = 1073742095;
pub const SDLK_AC_STOP: c_int = 1073742096;
pub const SDLK_AC_REFRESH: c_int = 1073742097;
pub const SDLK_AC_BOOKMARKS: c_int = 1073742098;
pub const SDLK_BRIGHTNESSDOWN: c_int = 1073742099;
pub const SDLK_BRIGHTNESSUP: c_int = 1073742100;
pub const SDLK_DISPLAYSWITCH: c_int = 1073742101;
pub const SDLK_KBDILLUMTOGGLE: c_int = 1073742102;
pub const SDLK_KBDILLUMDOWN: c_int = 1073742103;
pub const SDLK_KBDILLUMUP: c_int = 1073742104;
pub const SDLK_EJECT: c_int = 1073742105;
pub const SDLK_SLEEP: c_int = 1073742106;
pub const SDLK_APP1: c_int = 1073742107;
pub const SDLK_APP2: c_int = 1073742108;
pub const SDLK_AUDIOREWIND: c_int = 1073742109;
pub const SDLK_AUDIOFASTFORWARD: c_int = 1073742110;
pub const SDLK_SOFTLEFT: c_int = 1073742111;
pub const SDLK_SOFTRIGHT: c_int = 1073742112;
pub const SDLK_CALL: c_int = 1073742113;
pub const SDLK_ENDCALL: c_int = 1073742114;
pub const SDL_KeyCode = c_uint;
pub const KMOD_NONE: c_int = 0;
pub const KMOD_LSHIFT: c_int = 1;
pub const KMOD_RSHIFT: c_int = 2;
pub const KMOD_LCTRL: c_int = 64;
pub const KMOD_RCTRL: c_int = 128;
pub const KMOD_LALT: c_int = 256;
pub const KMOD_RALT: c_int = 512;
pub const KMOD_LGUI: c_int = 1024;
pub const KMOD_RGUI: c_int = 2048;
pub const KMOD_NUM: c_int = 4096;
pub const KMOD_CAPS: c_int = 8192;
pub const KMOD_MODE: c_int = 16384;
pub const KMOD_SCROLL: c_int = 32768;
pub const KMOD_CTRL: c_int = 192;
pub const KMOD_SHIFT: c_int = 3;
pub const KMOD_ALT: c_int = 768;
pub const KMOD_GUI: c_int = 3072;
pub const KMOD_RESERVED: c_int = 32768;
pub const SDL_Keymod = c_uint;
pub const struct_SDL_Keysym = extern struct {
    scancode: SDL_Scancode = @import("std").mem.zeroes(SDL_Scancode),
    sym: SDL_Keycode = @import("std").mem.zeroes(SDL_Keycode),
    mod: Uint16 = @import("std").mem.zeroes(Uint16),
    unused: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_Keysym = struct_SDL_Keysym;
pub extern fn SDL_GetKeyboardFocus() ?*SDL_Window;
pub extern fn SDL_GetKeyboardState(numkeys: [*c]c_int) [*c]const Uint8;
pub extern fn SDL_ResetKeyboard() void;
pub extern fn SDL_GetModState() SDL_Keymod;
pub extern fn SDL_SetModState(modstate: SDL_Keymod) void;
pub extern fn SDL_GetKeyFromScancode(scancode: SDL_Scancode) SDL_Keycode;
pub extern fn SDL_GetScancodeFromKey(key: SDL_Keycode) SDL_Scancode;
pub extern fn SDL_GetScancodeName(scancode: SDL_Scancode) [*c]const u8;
pub extern fn SDL_GetScancodeFromName(name: [*c]const u8) SDL_Scancode;
pub extern fn SDL_GetKeyName(key: SDL_Keycode) [*c]const u8;
pub extern fn SDL_GetKeyFromName(name: [*c]const u8) SDL_Keycode;
pub extern fn SDL_StartTextInput() void;
pub extern fn SDL_IsTextInputActive() SDL_bool;
pub extern fn SDL_StopTextInput() void;
pub extern fn SDL_ClearComposition() void;
pub extern fn SDL_IsTextInputShown() SDL_bool;
pub extern fn SDL_SetTextInputRect(rect: [*c]const SDL_Rect) void;
pub extern fn SDL_HasScreenKeyboardSupport() SDL_bool;
pub extern fn SDL_IsScreenKeyboardShown(window: ?*SDL_Window) SDL_bool;
pub const struct_SDL_Cursor = opaque {};
pub const SDL_Cursor = struct_SDL_Cursor;
pub const SDL_SYSTEM_CURSOR_ARROW: c_int = 0;
pub const SDL_SYSTEM_CURSOR_IBEAM: c_int = 1;
pub const SDL_SYSTEM_CURSOR_WAIT: c_int = 2;
pub const SDL_SYSTEM_CURSOR_CROSSHAIR: c_int = 3;
pub const SDL_SYSTEM_CURSOR_WAITARROW: c_int = 4;
pub const SDL_SYSTEM_CURSOR_SIZENWSE: c_int = 5;
pub const SDL_SYSTEM_CURSOR_SIZENESW: c_int = 6;
pub const SDL_SYSTEM_CURSOR_SIZEWE: c_int = 7;
pub const SDL_SYSTEM_CURSOR_SIZENS: c_int = 8;
pub const SDL_SYSTEM_CURSOR_SIZEALL: c_int = 9;
pub const SDL_SYSTEM_CURSOR_NO: c_int = 10;
pub const SDL_SYSTEM_CURSOR_HAND: c_int = 11;
pub const SDL_NUM_SYSTEM_CURSORS: c_int = 12;
pub const SDL_SystemCursor = c_uint;
pub const SDL_MOUSEWHEEL_NORMAL: c_int = 0;
pub const SDL_MOUSEWHEEL_FLIPPED: c_int = 1;
pub const SDL_MouseWheelDirection = c_uint;
pub extern fn SDL_GetMouseFocus() ?*SDL_Window;
pub extern fn SDL_GetMouseState(x: [*c]c_int, y: [*c]c_int) Uint32;
pub extern fn SDL_GetGlobalMouseState(x: [*c]c_int, y: [*c]c_int) Uint32;
pub extern fn SDL_GetRelativeMouseState(x: [*c]c_int, y: [*c]c_int) Uint32;
pub extern fn SDL_WarpMouseInWindow(window: ?*SDL_Window, x: c_int, y: c_int) void;
pub extern fn SDL_WarpMouseGlobal(x: c_int, y: c_int) c_int;
pub extern fn SDL_SetRelativeMouseMode(enabled: SDL_bool) c_int;
pub extern fn SDL_CaptureMouse(enabled: SDL_bool) c_int;
pub extern fn SDL_GetRelativeMouseMode() SDL_bool;
pub extern fn SDL_CreateCursor(data: [*c]const Uint8, mask: [*c]const Uint8, w: c_int, h: c_int, hot_x: c_int, hot_y: c_int) ?*SDL_Cursor;
pub extern fn SDL_CreateColorCursor(surface: [*c]SDL_Surface, hot_x: c_int, hot_y: c_int) ?*SDL_Cursor;
pub extern fn SDL_CreateSystemCursor(id: SDL_SystemCursor) ?*SDL_Cursor;
pub extern fn SDL_SetCursor(cursor: ?*SDL_Cursor) void;
pub extern fn SDL_GetCursor() ?*SDL_Cursor;
pub extern fn SDL_GetDefaultCursor() ?*SDL_Cursor;
pub extern fn SDL_FreeCursor(cursor: ?*SDL_Cursor) void;
pub extern fn SDL_ShowCursor(toggle: c_int) c_int;
pub const SDL_GUID = extern struct {
    data: [16]Uint8 = @import("std").mem.zeroes([16]Uint8),
};
pub extern fn SDL_GUIDToString(guid: SDL_GUID, pszGUID: [*c]u8, cbGUID: c_int) void;
pub extern fn SDL_GUIDFromString(pchGUID: [*c]const u8) SDL_GUID;
pub const struct__SDL_Joystick = opaque {};
pub const SDL_Joystick = struct__SDL_Joystick;
pub const SDL_JoystickGUID = SDL_GUID;
pub const SDL_JoystickID = Sint32;
pub const SDL_JOYSTICK_TYPE_UNKNOWN: c_int = 0;
pub const SDL_JOYSTICK_TYPE_GAMECONTROLLER: c_int = 1;
pub const SDL_JOYSTICK_TYPE_WHEEL: c_int = 2;
pub const SDL_JOYSTICK_TYPE_ARCADE_STICK: c_int = 3;
pub const SDL_JOYSTICK_TYPE_FLIGHT_STICK: c_int = 4;
pub const SDL_JOYSTICK_TYPE_DANCE_PAD: c_int = 5;
pub const SDL_JOYSTICK_TYPE_GUITAR: c_int = 6;
pub const SDL_JOYSTICK_TYPE_DRUM_KIT: c_int = 7;
pub const SDL_JOYSTICK_TYPE_ARCADE_PAD: c_int = 8;
pub const SDL_JOYSTICK_TYPE_THROTTLE: c_int = 9;
pub const SDL_JoystickType = c_uint;
pub const SDL_JOYSTICK_POWER_UNKNOWN: c_int = -1;
pub const SDL_JOYSTICK_POWER_EMPTY: c_int = 0;
pub const SDL_JOYSTICK_POWER_LOW: c_int = 1;
pub const SDL_JOYSTICK_POWER_MEDIUM: c_int = 2;
pub const SDL_JOYSTICK_POWER_FULL: c_int = 3;
pub const SDL_JOYSTICK_POWER_WIRED: c_int = 4;
pub const SDL_JOYSTICK_POWER_MAX: c_int = 5;
pub const SDL_JoystickPowerLevel = c_int;
pub extern fn SDL_LockJoysticks() void;
pub extern fn SDL_UnlockJoysticks() void;
pub extern fn SDL_NumJoysticks() c_int;
pub extern fn SDL_JoystickNameForIndex(device_index: c_int) [*c]const u8;
pub extern fn SDL_JoystickPathForIndex(device_index: c_int) [*c]const u8;
pub extern fn SDL_JoystickGetDevicePlayerIndex(device_index: c_int) c_int;
pub extern fn SDL_JoystickGetDeviceGUID(device_index: c_int) SDL_JoystickGUID;
pub extern fn SDL_JoystickGetDeviceVendor(device_index: c_int) Uint16;
pub extern fn SDL_JoystickGetDeviceProduct(device_index: c_int) Uint16;
pub extern fn SDL_JoystickGetDeviceProductVersion(device_index: c_int) Uint16;
pub extern fn SDL_JoystickGetDeviceType(device_index: c_int) SDL_JoystickType;
pub extern fn SDL_JoystickGetDeviceInstanceID(device_index: c_int) SDL_JoystickID;
pub extern fn SDL_JoystickOpen(device_index: c_int) ?*SDL_Joystick;
pub extern fn SDL_JoystickFromInstanceID(instance_id: SDL_JoystickID) ?*SDL_Joystick;
pub extern fn SDL_JoystickFromPlayerIndex(player_index: c_int) ?*SDL_Joystick;
pub extern fn SDL_JoystickAttachVirtual(@"type": SDL_JoystickType, naxes: c_int, nbuttons: c_int, nhats: c_int) c_int;
pub const struct_SDL_VirtualJoystickDesc = extern struct {
    version: Uint16 = @import("std").mem.zeroes(Uint16),
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    naxes: Uint16 = @import("std").mem.zeroes(Uint16),
    nbuttons: Uint16 = @import("std").mem.zeroes(Uint16),
    nhats: Uint16 = @import("std").mem.zeroes(Uint16),
    vendor_id: Uint16 = @import("std").mem.zeroes(Uint16),
    product_id: Uint16 = @import("std").mem.zeroes(Uint16),
    padding: Uint16 = @import("std").mem.zeroes(Uint16),
    button_mask: Uint32 = @import("std").mem.zeroes(Uint32),
    axis_mask: Uint32 = @import("std").mem.zeroes(Uint32),
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    userdata: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    Update: ?*const fn (?*anyopaque) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.C) void),
    SetPlayerIndex: ?*const fn (?*anyopaque, c_int) callconv(.C) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, c_int) callconv(.C) void),
    Rumble: ?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int),
    RumbleTriggers: ?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, Uint16, Uint16) callconv(.C) c_int),
    SetLED: ?*const fn (?*anyopaque, Uint8, Uint8, Uint8) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, Uint8, Uint8, Uint8) callconv(.C) c_int),
    SendEffect: ?*const fn (?*anyopaque, ?*const anyopaque, c_int) callconv(.C) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, ?*const anyopaque, c_int) callconv(.C) c_int),
};
pub const SDL_VirtualJoystickDesc = struct_SDL_VirtualJoystickDesc;
pub extern fn SDL_JoystickAttachVirtualEx(desc: [*c]const SDL_VirtualJoystickDesc) c_int;
pub extern fn SDL_JoystickDetachVirtual(device_index: c_int) c_int;
pub extern fn SDL_JoystickIsVirtual(device_index: c_int) SDL_bool;
pub extern fn SDL_JoystickSetVirtualAxis(joystick: ?*SDL_Joystick, axis: c_int, value: Sint16) c_int;
pub extern fn SDL_JoystickSetVirtualButton(joystick: ?*SDL_Joystick, button: c_int, value: Uint8) c_int;
pub extern fn SDL_JoystickSetVirtualHat(joystick: ?*SDL_Joystick, hat: c_int, value: Uint8) c_int;
pub extern fn SDL_JoystickName(joystick: ?*SDL_Joystick) [*c]const u8;
pub extern fn SDL_JoystickPath(joystick: ?*SDL_Joystick) [*c]const u8;
pub extern fn SDL_JoystickGetPlayerIndex(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickSetPlayerIndex(joystick: ?*SDL_Joystick, player_index: c_int) void;
pub extern fn SDL_JoystickGetGUID(joystick: ?*SDL_Joystick) SDL_JoystickGUID;
pub extern fn SDL_JoystickGetVendor(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetProduct(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetProductVersion(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetFirmwareVersion(joystick: ?*SDL_Joystick) Uint16;
pub extern fn SDL_JoystickGetSerial(joystick: ?*SDL_Joystick) [*c]const u8;
pub extern fn SDL_JoystickGetType(joystick: ?*SDL_Joystick) SDL_JoystickType;
pub extern fn SDL_JoystickGetGUIDString(guid: SDL_JoystickGUID, pszGUID: [*c]u8, cbGUID: c_int) void;
pub extern fn SDL_JoystickGetGUIDFromString(pchGUID: [*c]const u8) SDL_JoystickGUID;
pub extern fn SDL_JoystickGetAttached(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickInstanceID(joystick: ?*SDL_Joystick) SDL_JoystickID;
pub extern fn SDL_JoystickNumAxes(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickNumBalls(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickNumHats(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickNumButtons(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_JoystickUpdate() void;
pub extern fn SDL_JoystickEventState(state: c_int) c_int;
pub extern fn SDL_JoystickGetAxis(joystick: ?*SDL_Joystick, axis: c_int) Sint16;
pub extern fn SDL_JoystickGetAxisInitialState(joystick: ?*SDL_Joystick, axis: c_int, state: [*c]Sint16) SDL_bool;
pub extern fn SDL_JoystickGetHat(joystick: ?*SDL_Joystick, hat: c_int) Uint8;
pub extern fn SDL_JoystickGetBall(joystick: ?*SDL_Joystick, ball: c_int, dx: [*c]c_int, dy: [*c]c_int) c_int;
pub extern fn SDL_JoystickGetButton(joystick: ?*SDL_Joystick, button: c_int) Uint8;
pub extern fn SDL_JoystickRumble(joystick: ?*SDL_Joystick, low_frequency_rumble: Uint16, high_frequency_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_JoystickRumbleTriggers(joystick: ?*SDL_Joystick, left_rumble: Uint16, right_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_JoystickHasLED(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickHasRumble(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickHasRumbleTriggers(joystick: ?*SDL_Joystick) SDL_bool;
pub extern fn SDL_JoystickSetLED(joystick: ?*SDL_Joystick, red: Uint8, green: Uint8, blue: Uint8) c_int;
pub extern fn SDL_JoystickSendEffect(joystick: ?*SDL_Joystick, data: ?*const anyopaque, size: c_int) c_int;
pub extern fn SDL_JoystickClose(joystick: ?*SDL_Joystick) void;
pub extern fn SDL_JoystickCurrentPowerLevel(joystick: ?*SDL_Joystick) SDL_JoystickPowerLevel;
pub const struct__SDL_Sensor = opaque {};
pub const SDL_Sensor = struct__SDL_Sensor;
pub const SDL_SensorID = Sint32;
pub const SDL_SENSOR_INVALID: c_int = -1;
pub const SDL_SENSOR_UNKNOWN: c_int = 0;
pub const SDL_SENSOR_ACCEL: c_int = 1;
pub const SDL_SENSOR_GYRO: c_int = 2;
pub const SDL_SensorType = c_int;
pub extern fn SDL_LockSensors() void;
pub extern fn SDL_UnlockSensors() void;
pub extern fn SDL_NumSensors() c_int;
pub extern fn SDL_SensorGetDeviceName(device_index: c_int) [*c]const u8;
pub extern fn SDL_SensorGetDeviceType(device_index: c_int) SDL_SensorType;
pub extern fn SDL_SensorGetDeviceNonPortableType(device_index: c_int) c_int;
pub extern fn SDL_SensorGetDeviceInstanceID(device_index: c_int) SDL_SensorID;
pub extern fn SDL_SensorOpen(device_index: c_int) ?*SDL_Sensor;
pub extern fn SDL_SensorFromInstanceID(instance_id: SDL_SensorID) ?*SDL_Sensor;
pub extern fn SDL_SensorGetName(sensor: ?*SDL_Sensor) [*c]const u8;
pub extern fn SDL_SensorGetType(sensor: ?*SDL_Sensor) SDL_SensorType;
pub extern fn SDL_SensorGetNonPortableType(sensor: ?*SDL_Sensor) c_int;
pub extern fn SDL_SensorGetInstanceID(sensor: ?*SDL_Sensor) SDL_SensorID;
pub extern fn SDL_SensorGetData(sensor: ?*SDL_Sensor, data: [*c]f32, num_values: c_int) c_int;
pub extern fn SDL_SensorClose(sensor: ?*SDL_Sensor) void;
pub extern fn SDL_SensorUpdate() void;
pub const struct__SDL_GameController = opaque {};
pub const SDL_GameController = struct__SDL_GameController;
pub const SDL_CONTROLLER_TYPE_UNKNOWN: c_int = 0;
pub const SDL_CONTROLLER_TYPE_XBOX360: c_int = 1;
pub const SDL_CONTROLLER_TYPE_XBOXONE: c_int = 2;
pub const SDL_CONTROLLER_TYPE_PS3: c_int = 3;
pub const SDL_CONTROLLER_TYPE_PS4: c_int = 4;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO: c_int = 5;
pub const SDL_CONTROLLER_TYPE_VIRTUAL: c_int = 6;
pub const SDL_CONTROLLER_TYPE_PS5: c_int = 7;
pub const SDL_CONTROLLER_TYPE_AMAZON_LUNA: c_int = 8;
pub const SDL_CONTROLLER_TYPE_GOOGLE_STADIA: c_int = 9;
pub const SDL_CONTROLLER_TYPE_NVIDIA_SHIELD: c_int = 10;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT: c_int = 11;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT: c_int = 12;
pub const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR: c_int = 13;
pub const SDL_GameControllerType = c_uint;
pub const SDL_CONTROLLER_BINDTYPE_NONE: c_int = 0;
pub const SDL_CONTROLLER_BINDTYPE_BUTTON: c_int = 1;
pub const SDL_CONTROLLER_BINDTYPE_AXIS: c_int = 2;
pub const SDL_CONTROLLER_BINDTYPE_HAT: c_int = 3;
pub const SDL_GameControllerBindType = c_uint;
const struct_unnamed_12 = extern struct {
    hat: c_int = @import("std").mem.zeroes(c_int),
    hat_mask: c_int = @import("std").mem.zeroes(c_int),
};
const union_unnamed_11 = extern union {
    button: c_int,
    axis: c_int,
    hat: struct_unnamed_12,
};
pub const struct_SDL_GameControllerButtonBind = extern struct {
    bindType: SDL_GameControllerBindType = @import("std").mem.zeroes(SDL_GameControllerBindType),
    value: union_unnamed_11 = @import("std").mem.zeroes(union_unnamed_11),
};
pub const SDL_GameControllerButtonBind = struct_SDL_GameControllerButtonBind;
pub extern fn SDL_GameControllerAddMappingsFromRW(rw: [*c]SDL_RWops, freerw: c_int) c_int;
pub extern fn SDL_GameControllerAddMapping(mappingString: [*c]const u8) c_int;
pub extern fn SDL_GameControllerNumMappings() c_int;
pub extern fn SDL_GameControllerMappingForIndex(mapping_index: c_int) [*c]u8;
pub extern fn SDL_GameControllerMappingForGUID(guid: SDL_JoystickGUID) [*c]u8;
pub extern fn SDL_GameControllerMapping(gamecontroller: ?*SDL_GameController) [*c]u8;
pub extern fn SDL_IsGameController(joystick_index: c_int) SDL_bool;
pub extern fn SDL_GameControllerNameForIndex(joystick_index: c_int) [*c]const u8;
pub extern fn SDL_GameControllerPathForIndex(joystick_index: c_int) [*c]const u8;
pub extern fn SDL_GameControllerTypeForIndex(joystick_index: c_int) SDL_GameControllerType;
pub extern fn SDL_GameControllerMappingForDeviceIndex(joystick_index: c_int) [*c]u8;
pub extern fn SDL_GameControllerOpen(joystick_index: c_int) ?*SDL_GameController;
pub extern fn SDL_GameControllerFromInstanceID(joyid: SDL_JoystickID) ?*SDL_GameController;
pub extern fn SDL_GameControllerFromPlayerIndex(player_index: c_int) ?*SDL_GameController;
pub extern fn SDL_GameControllerName(gamecontroller: ?*SDL_GameController) [*c]const u8;
pub extern fn SDL_GameControllerPath(gamecontroller: ?*SDL_GameController) [*c]const u8;
pub extern fn SDL_GameControllerGetType(gamecontroller: ?*SDL_GameController) SDL_GameControllerType;
pub extern fn SDL_GameControllerGetPlayerIndex(gamecontroller: ?*SDL_GameController) c_int;
pub extern fn SDL_GameControllerSetPlayerIndex(gamecontroller: ?*SDL_GameController, player_index: c_int) void;
pub extern fn SDL_GameControllerGetVendor(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetProduct(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetProductVersion(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetFirmwareVersion(gamecontroller: ?*SDL_GameController) Uint16;
pub extern fn SDL_GameControllerGetSerial(gamecontroller: ?*SDL_GameController) [*c]const u8;
pub extern fn SDL_GameControllerGetAttached(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerGetJoystick(gamecontroller: ?*SDL_GameController) ?*SDL_Joystick;
pub extern fn SDL_GameControllerEventState(state: c_int) c_int;
pub extern fn SDL_GameControllerUpdate() void;
pub const SDL_CONTROLLER_AXIS_INVALID: c_int = -1;
pub const SDL_CONTROLLER_AXIS_LEFTX: c_int = 0;
pub const SDL_CONTROLLER_AXIS_LEFTY: c_int = 1;
pub const SDL_CONTROLLER_AXIS_RIGHTX: c_int = 2;
pub const SDL_CONTROLLER_AXIS_RIGHTY: c_int = 3;
pub const SDL_CONTROLLER_AXIS_TRIGGERLEFT: c_int = 4;
pub const SDL_CONTROLLER_AXIS_TRIGGERRIGHT: c_int = 5;
pub const SDL_CONTROLLER_AXIS_MAX: c_int = 6;
pub const SDL_GameControllerAxis = c_int;
pub extern fn SDL_GameControllerGetAxisFromString(str: [*c]const u8) SDL_GameControllerAxis;
pub extern fn SDL_GameControllerGetStringForAxis(axis: SDL_GameControllerAxis) [*c]const u8;
pub extern fn SDL_GameControllerGetBindForAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) SDL_GameControllerButtonBind;
pub extern fn SDL_GameControllerHasAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) SDL_bool;
pub extern fn SDL_GameControllerGetAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) Sint16;
pub const SDL_CONTROLLER_BUTTON_INVALID: c_int = -1;
pub const SDL_CONTROLLER_BUTTON_A: c_int = 0;
pub const SDL_CONTROLLER_BUTTON_B: c_int = 1;
pub const SDL_CONTROLLER_BUTTON_X: c_int = 2;
pub const SDL_CONTROLLER_BUTTON_Y: c_int = 3;
pub const SDL_CONTROLLER_BUTTON_BACK: c_int = 4;
pub const SDL_CONTROLLER_BUTTON_GUIDE: c_int = 5;
pub const SDL_CONTROLLER_BUTTON_START: c_int = 6;
pub const SDL_CONTROLLER_BUTTON_LEFTSTICK: c_int = 7;
pub const SDL_CONTROLLER_BUTTON_RIGHTSTICK: c_int = 8;
pub const SDL_CONTROLLER_BUTTON_LEFTSHOULDER: c_int = 9;
pub const SDL_CONTROLLER_BUTTON_RIGHTSHOULDER: c_int = 10;
pub const SDL_CONTROLLER_BUTTON_DPAD_UP: c_int = 11;
pub const SDL_CONTROLLER_BUTTON_DPAD_DOWN: c_int = 12;
pub const SDL_CONTROLLER_BUTTON_DPAD_LEFT: c_int = 13;
pub const SDL_CONTROLLER_BUTTON_DPAD_RIGHT: c_int = 14;
pub const SDL_CONTROLLER_BUTTON_MISC1: c_int = 15;
pub const SDL_CONTROLLER_BUTTON_PADDLE1: c_int = 16;
pub const SDL_CONTROLLER_BUTTON_PADDLE2: c_int = 17;
pub const SDL_CONTROLLER_BUTTON_PADDLE3: c_int = 18;
pub const SDL_CONTROLLER_BUTTON_PADDLE4: c_int = 19;
pub const SDL_CONTROLLER_BUTTON_TOUCHPAD: c_int = 20;
pub const SDL_CONTROLLER_BUTTON_MAX: c_int = 21;
pub const SDL_GameControllerButton = c_int;
pub extern fn SDL_GameControllerGetButtonFromString(str: [*c]const u8) SDL_GameControllerButton;
pub extern fn SDL_GameControllerGetStringForButton(button: SDL_GameControllerButton) [*c]const u8;
pub extern fn SDL_GameControllerGetBindForButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) SDL_GameControllerButtonBind;
pub extern fn SDL_GameControllerHasButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) SDL_bool;
pub extern fn SDL_GameControllerGetButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) Uint8;
pub extern fn SDL_GameControllerGetNumTouchpads(gamecontroller: ?*SDL_GameController) c_int;
pub extern fn SDL_GameControllerGetNumTouchpadFingers(gamecontroller: ?*SDL_GameController, touchpad: c_int) c_int;
pub extern fn SDL_GameControllerGetTouchpadFinger(gamecontroller: ?*SDL_GameController, touchpad: c_int, finger: c_int, state: [*c]Uint8, x: [*c]f32, y: [*c]f32, pressure: [*c]f32) c_int;
pub extern fn SDL_GameControllerHasSensor(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType) SDL_bool;
pub extern fn SDL_GameControllerSetSensorEnabled(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType, enabled: SDL_bool) c_int;
pub extern fn SDL_GameControllerIsSensorEnabled(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType) SDL_bool;
pub extern fn SDL_GameControllerGetSensorDataRate(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType) f32;
pub extern fn SDL_GameControllerGetSensorData(gamecontroller: ?*SDL_GameController, @"type": SDL_SensorType, data: [*c]f32, num_values: c_int) c_int;
pub extern fn SDL_GameControllerRumble(gamecontroller: ?*SDL_GameController, low_frequency_rumble: Uint16, high_frequency_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_GameControllerRumbleTriggers(gamecontroller: ?*SDL_GameController, left_rumble: Uint16, right_rumble: Uint16, duration_ms: Uint32) c_int;
pub extern fn SDL_GameControllerHasLED(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerHasRumble(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerHasRumbleTriggers(gamecontroller: ?*SDL_GameController) SDL_bool;
pub extern fn SDL_GameControllerSetLED(gamecontroller: ?*SDL_GameController, red: Uint8, green: Uint8, blue: Uint8) c_int;
pub extern fn SDL_GameControllerSendEffect(gamecontroller: ?*SDL_GameController, data: ?*const anyopaque, size: c_int) c_int;
pub extern fn SDL_GameControllerClose(gamecontroller: ?*SDL_GameController) void;
pub extern fn SDL_GameControllerGetAppleSFSymbolsNameForButton(gamecontroller: ?*SDL_GameController, button: SDL_GameControllerButton) [*c]const u8;
pub extern fn SDL_GameControllerGetAppleSFSymbolsNameForAxis(gamecontroller: ?*SDL_GameController, axis: SDL_GameControllerAxis) [*c]const u8;
pub const SDL_TouchID = Sint64;
pub const SDL_FingerID = Sint64;
pub const SDL_TOUCH_DEVICE_INVALID: c_int = -1;
pub const SDL_TOUCH_DEVICE_DIRECT: c_int = 0;
pub const SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE: c_int = 1;
pub const SDL_TOUCH_DEVICE_INDIRECT_RELATIVE: c_int = 2;
pub const SDL_TouchDeviceType = c_int;
pub const struct_SDL_Finger = extern struct {
    id: SDL_FingerID = @import("std").mem.zeroes(SDL_FingerID),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    pressure: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_Finger = struct_SDL_Finger;
pub extern fn SDL_GetNumTouchDevices() c_int;
pub extern fn SDL_GetTouchDevice(index: c_int) SDL_TouchID;
pub extern fn SDL_GetTouchName(index: c_int) [*c]const u8;
pub extern fn SDL_GetTouchDeviceType(touchID: SDL_TouchID) SDL_TouchDeviceType;
pub extern fn SDL_GetNumTouchFingers(touchID: SDL_TouchID) c_int;
pub extern fn SDL_GetTouchFinger(touchID: SDL_TouchID, index: c_int) [*c]SDL_Finger;
pub const SDL_GestureID = Sint64;
pub extern fn SDL_RecordGesture(touchId: SDL_TouchID) c_int;
pub extern fn SDL_SaveAllDollarTemplates(dst: [*c]SDL_RWops) c_int;
pub extern fn SDL_SaveDollarTemplate(gestureId: SDL_GestureID, dst: [*c]SDL_RWops) c_int;
pub extern fn SDL_LoadDollarTemplates(touchId: SDL_TouchID, src: [*c]SDL_RWops) c_int;
pub const SDL_FIRSTEVENT: c_int = 0;
pub const SDL_QUIT: c_int = 256;
pub const SDL_APP_TERMINATING: c_int = 257;
pub const SDL_APP_LOWMEMORY: c_int = 258;
pub const SDL_APP_WILLENTERBACKGROUND: c_int = 259;
pub const SDL_APP_DIDENTERBACKGROUND: c_int = 260;
pub const SDL_APP_WILLENTERFOREGROUND: c_int = 261;
pub const SDL_APP_DIDENTERFOREGROUND: c_int = 262;
pub const SDL_LOCALECHANGED: c_int = 263;
pub const SDL_DISPLAYEVENT: c_int = 336;
pub const SDL_WINDOWEVENT: c_int = 512;
pub const SDL_SYSWMEVENT: c_int = 513;
pub const SDL_KEYDOWN: c_int = 768;
pub const SDL_KEYUP: c_int = 769;
pub const SDL_TEXTEDITING: c_int = 770;
pub const SDL_TEXTINPUT: c_int = 771;
pub const SDL_KEYMAPCHANGED: c_int = 772;
pub const SDL_TEXTEDITING_EXT: c_int = 773;
pub const SDL_MOUSEMOTION: c_int = 1024;
pub const SDL_MOUSEBUTTONDOWN: c_int = 1025;
pub const SDL_MOUSEBUTTONUP: c_int = 1026;
pub const SDL_MOUSEWHEEL: c_int = 1027;
pub const SDL_JOYAXISMOTION: c_int = 1536;
pub const SDL_JOYBALLMOTION: c_int = 1537;
pub const SDL_JOYHATMOTION: c_int = 1538;
pub const SDL_JOYBUTTONDOWN: c_int = 1539;
pub const SDL_JOYBUTTONUP: c_int = 1540;
pub const SDL_JOYDEVICEADDED: c_int = 1541;
pub const SDL_JOYDEVICEREMOVED: c_int = 1542;
pub const SDL_JOYBATTERYUPDATED: c_int = 1543;
pub const SDL_CONTROLLERAXISMOTION: c_int = 1616;
pub const SDL_CONTROLLERBUTTONDOWN: c_int = 1617;
pub const SDL_CONTROLLERBUTTONUP: c_int = 1618;
pub const SDL_CONTROLLERDEVICEADDED: c_int = 1619;
pub const SDL_CONTROLLERDEVICEREMOVED: c_int = 1620;
pub const SDL_CONTROLLERDEVICEREMAPPED: c_int = 1621;
pub const SDL_CONTROLLERTOUCHPADDOWN: c_int = 1622;
pub const SDL_CONTROLLERTOUCHPADMOTION: c_int = 1623;
pub const SDL_CONTROLLERTOUCHPADUP: c_int = 1624;
pub const SDL_CONTROLLERSENSORUPDATE: c_int = 1625;
pub const SDL_FINGERDOWN: c_int = 1792;
pub const SDL_FINGERUP: c_int = 1793;
pub const SDL_FINGERMOTION: c_int = 1794;
pub const SDL_DOLLARGESTURE: c_int = 2048;
pub const SDL_DOLLARRECORD: c_int = 2049;
pub const SDL_MULTIGESTURE: c_int = 2050;
pub const SDL_CLIPBOARDUPDATE: c_int = 2304;
pub const SDL_DROPFILE: c_int = 4096;
pub const SDL_DROPTEXT: c_int = 4097;
pub const SDL_DROPBEGIN: c_int = 4098;
pub const SDL_DROPCOMPLETE: c_int = 4099;
pub const SDL_AUDIODEVICEADDED: c_int = 4352;
pub const SDL_AUDIODEVICEREMOVED: c_int = 4353;
pub const SDL_SENSORUPDATE: c_int = 4608;
pub const SDL_RENDER_TARGETS_RESET: c_int = 8192;
pub const SDL_RENDER_DEVICE_RESET: c_int = 8193;
pub const SDL_POLLSENTINEL: c_int = 32512;
pub const SDL_USEREVENT: c_int = 32768;
pub const SDL_LASTEVENT: c_int = 65535;
pub const SDL_EventType = c_uint;
pub const struct_SDL_CommonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_CommonEvent = struct_SDL_CommonEvent;
pub const struct_SDL_DisplayEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    display: Uint32 = @import("std").mem.zeroes(Uint32),
    event: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    data1: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_DisplayEvent = struct_SDL_DisplayEvent;
pub const struct_SDL_WindowEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    event: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    data1: Sint32 = @import("std").mem.zeroes(Sint32),
    data2: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_WindowEvent = struct_SDL_WindowEvent;
pub const struct_SDL_KeyboardEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    repeat: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    keysym: SDL_Keysym = @import("std").mem.zeroes(SDL_Keysym),
};
pub const SDL_KeyboardEvent = struct_SDL_KeyboardEvent;
pub const struct_SDL_TextEditingEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    text: [32]u8 = @import("std").mem.zeroes([32]u8),
    start: Sint32 = @import("std").mem.zeroes(Sint32),
    length: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_TextEditingEvent = struct_SDL_TextEditingEvent;
pub const struct_SDL_TextEditingExtEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    text: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    start: Sint32 = @import("std").mem.zeroes(Sint32),
    length: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_TextEditingExtEvent = struct_SDL_TextEditingExtEvent;
pub const struct_SDL_TextInputEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    text: [32]u8 = @import("std").mem.zeroes([32]u8),
};
pub const SDL_TextInputEvent = struct_SDL_TextInputEvent;
pub const struct_SDL_MouseMotionEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    state: Uint32 = @import("std").mem.zeroes(Uint32),
    x: Sint32 = @import("std").mem.zeroes(Sint32),
    y: Sint32 = @import("std").mem.zeroes(Sint32),
    xrel: Sint32 = @import("std").mem.zeroes(Sint32),
    yrel: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_MouseMotionEvent = struct_SDL_MouseMotionEvent;
pub const struct_SDL_MouseButtonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    button: Uint8 = @import("std").mem.zeroes(Uint8),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    clicks: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    x: Sint32 = @import("std").mem.zeroes(Sint32),
    y: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_MouseButtonEvent = struct_SDL_MouseButtonEvent;
pub const struct_SDL_MouseWheelEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    x: Sint32 = @import("std").mem.zeroes(Sint32),
    y: Sint32 = @import("std").mem.zeroes(Sint32),
    direction: Uint32 = @import("std").mem.zeroes(Uint32),
    preciseX: f32 = @import("std").mem.zeroes(f32),
    preciseY: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_MouseWheelEvent = struct_SDL_MouseWheelEvent;
pub const struct_SDL_JoyAxisEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    axis: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    value: Sint16 = @import("std").mem.zeroes(Sint16),
    padding4: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_JoyAxisEvent = struct_SDL_JoyAxisEvent;
pub const struct_SDL_JoyBallEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    ball: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    xrel: Sint16 = @import("std").mem.zeroes(Sint16),
    yrel: Sint16 = @import("std").mem.zeroes(Sint16),
};
pub const SDL_JoyBallEvent = struct_SDL_JoyBallEvent;
pub const struct_SDL_JoyHatEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    hat: Uint8 = @import("std").mem.zeroes(Uint8),
    value: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_JoyHatEvent = struct_SDL_JoyHatEvent;
pub const struct_SDL_JoyButtonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    button: Uint8 = @import("std").mem.zeroes(Uint8),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_JoyButtonEvent = struct_SDL_JoyButtonEvent;
pub const struct_SDL_JoyDeviceEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_JoyDeviceEvent = struct_SDL_JoyDeviceEvent;
pub const struct_SDL_JoyBatteryEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    level: SDL_JoystickPowerLevel = @import("std").mem.zeroes(SDL_JoystickPowerLevel),
};
pub const SDL_JoyBatteryEvent = struct_SDL_JoyBatteryEvent;
pub const struct_SDL_ControllerAxisEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    axis: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
    value: Sint16 = @import("std").mem.zeroes(Sint16),
    padding4: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_ControllerAxisEvent = struct_SDL_ControllerAxisEvent;
pub const struct_SDL_ControllerButtonEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    button: Uint8 = @import("std").mem.zeroes(Uint8),
    state: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_ControllerButtonEvent = struct_SDL_ControllerButtonEvent;
pub const struct_SDL_ControllerDeviceEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Sint32 = @import("std").mem.zeroes(Sint32),
};
pub const SDL_ControllerDeviceEvent = struct_SDL_ControllerDeviceEvent;
pub const struct_SDL_ControllerTouchpadEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    touchpad: Sint32 = @import("std").mem.zeroes(Sint32),
    finger: Sint32 = @import("std").mem.zeroes(Sint32),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    pressure: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_ControllerTouchpadEvent = struct_SDL_ControllerTouchpadEvent;
pub const struct_SDL_ControllerSensorEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: SDL_JoystickID = @import("std").mem.zeroes(SDL_JoystickID),
    sensor: Sint32 = @import("std").mem.zeroes(Sint32),
    data: [3]f32 = @import("std").mem.zeroes([3]f32),
};
pub const SDL_ControllerSensorEvent = struct_SDL_ControllerSensorEvent;
pub const struct_SDL_AudioDeviceEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Uint32 = @import("std").mem.zeroes(Uint32),
    iscapture: Uint8 = @import("std").mem.zeroes(Uint8),
    padding1: Uint8 = @import("std").mem.zeroes(Uint8),
    padding2: Uint8 = @import("std").mem.zeroes(Uint8),
    padding3: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_AudioDeviceEvent = struct_SDL_AudioDeviceEvent;
pub const struct_SDL_TouchFingerEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    touchId: SDL_TouchID = @import("std").mem.zeroes(SDL_TouchID),
    fingerId: SDL_FingerID = @import("std").mem.zeroes(SDL_FingerID),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    dx: f32 = @import("std").mem.zeroes(f32),
    dy: f32 = @import("std").mem.zeroes(f32),
    pressure: f32 = @import("std").mem.zeroes(f32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_TouchFingerEvent = struct_SDL_TouchFingerEvent;
pub const struct_SDL_MultiGestureEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    touchId: SDL_TouchID = @import("std").mem.zeroes(SDL_TouchID),
    dTheta: f32 = @import("std").mem.zeroes(f32),
    dDist: f32 = @import("std").mem.zeroes(f32),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
    numFingers: Uint16 = @import("std").mem.zeroes(Uint16),
    padding: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_MultiGestureEvent = struct_SDL_MultiGestureEvent;
pub const struct_SDL_DollarGestureEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    touchId: SDL_TouchID = @import("std").mem.zeroes(SDL_TouchID),
    gestureId: SDL_GestureID = @import("std").mem.zeroes(SDL_GestureID),
    numFingers: Uint32 = @import("std").mem.zeroes(Uint32),
    @"error": f32 = @import("std").mem.zeroes(f32),
    x: f32 = @import("std").mem.zeroes(f32),
    y: f32 = @import("std").mem.zeroes(f32),
};
pub const SDL_DollarGestureEvent = struct_SDL_DollarGestureEvent;
pub const struct_SDL_DropEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    file: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_DropEvent = struct_SDL_DropEvent;
pub const struct_SDL_SensorEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    which: Sint32 = @import("std").mem.zeroes(Sint32),
    data: [6]f32 = @import("std").mem.zeroes([6]f32),
};
pub const SDL_SensorEvent = struct_SDL_SensorEvent;
pub const struct_SDL_QuitEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_QuitEvent = struct_SDL_QuitEvent;
pub const struct_SDL_OSEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
};
pub const SDL_OSEvent = struct_SDL_OSEvent;
pub const struct_SDL_UserEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    windowID: Uint32 = @import("std").mem.zeroes(Uint32),
    code: Sint32 = @import("std").mem.zeroes(Sint32),
    data1: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    data2: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const SDL_UserEvent = struct_SDL_UserEvent;
pub const struct_SDL_SysWMmsg = opaque {};
pub const SDL_SysWMmsg = struct_SDL_SysWMmsg;
pub const struct_SDL_SysWMEvent = extern struct {
    type: Uint32 = @import("std").mem.zeroes(Uint32),
    timestamp: Uint32 = @import("std").mem.zeroes(Uint32),
    msg: ?*SDL_SysWMmsg = @import("std").mem.zeroes(?*SDL_SysWMmsg),
};
pub const SDL_SysWMEvent = struct_SDL_SysWMEvent;
pub const union_SDL_Event = extern union {
    type: Uint32,
    common: SDL_CommonEvent,
    display: SDL_DisplayEvent,
    window: SDL_WindowEvent,
    key: SDL_KeyboardEvent,
    edit: SDL_TextEditingEvent,
    editExt: SDL_TextEditingExtEvent,
    text: SDL_TextInputEvent,
    motion: SDL_MouseMotionEvent,
    button: SDL_MouseButtonEvent,
    wheel: SDL_MouseWheelEvent,
    jaxis: SDL_JoyAxisEvent,
    jball: SDL_JoyBallEvent,
    jhat: SDL_JoyHatEvent,
    jbutton: SDL_JoyButtonEvent,
    jdevice: SDL_JoyDeviceEvent,
    jbattery: SDL_JoyBatteryEvent,
    caxis: SDL_ControllerAxisEvent,
    cbutton: SDL_ControllerButtonEvent,
    cdevice: SDL_ControllerDeviceEvent,
    ctouchpad: SDL_ControllerTouchpadEvent,
    csensor: SDL_ControllerSensorEvent,
    adevice: SDL_AudioDeviceEvent,
    sensor: SDL_SensorEvent,
    quit: SDL_QuitEvent,
    user: SDL_UserEvent,
    syswm: SDL_SysWMEvent,
    tfinger: SDL_TouchFingerEvent,
    mgesture: SDL_MultiGestureEvent,
    dgesture: SDL_DollarGestureEvent,
    drop: SDL_DropEvent,
    padding: [56]Uint8,
};
pub const SDL_Event = union_SDL_Event;
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:42: warning: ignoring StaticAssert declaration
pub extern fn SDL_PumpEvents() void;
pub const SDL_ADDEVENT: c_int = 0;
pub const SDL_PEEKEVENT: c_int = 1;
pub const SDL_GETEVENT: c_int = 2;
pub const SDL_eventaction = c_uint;
pub extern fn SDL_PeepEvents(events: [*c]SDL_Event, numevents: c_int, action: SDL_eventaction, minType: Uint32, maxType: Uint32) c_int;
pub extern fn SDL_HasEvent(@"type": Uint32) SDL_bool;
pub extern fn SDL_HasEvents(minType: Uint32, maxType: Uint32) SDL_bool;
pub extern fn SDL_FlushEvent(@"type": Uint32) void;
pub extern fn SDL_FlushEvents(minType: Uint32, maxType: Uint32) void;
pub extern fn SDL_PollEvent(event: [*c]SDL_Event) c_int;
pub extern fn SDL_WaitEvent(event: [*c]SDL_Event) c_int;
pub extern fn SDL_WaitEventTimeout(event: [*c]SDL_Event, timeout: c_int) c_int;
pub extern fn SDL_PushEvent(event: [*c]SDL_Event) c_int;
pub const SDL_EventFilter = ?*const fn (?*anyopaque, [*c]SDL_Event) callconv(.C) c_int;
pub extern fn SDL_SetEventFilter(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_GetEventFilter(filter: [*c]SDL_EventFilter, userdata: [*c]?*anyopaque) SDL_bool;
pub extern fn SDL_AddEventWatch(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_DelEventWatch(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_FilterEvents(filter: SDL_EventFilter, userdata: ?*anyopaque) void;
pub extern fn SDL_EventState(@"type": Uint32, state: c_int) Uint8;
pub extern fn SDL_RegisterEvents(numevents: c_int) Uint32;
pub extern fn SDL_GetBasePath() [*c]u8;
pub extern fn SDL_GetPrefPath(org: [*c]const u8, app: [*c]const u8) [*c]u8;
pub const struct__SDL_Haptic = opaque {};
pub const SDL_Haptic = struct__SDL_Haptic;
pub const struct_SDL_HapticDirection = extern struct {
    type: Uint8 = @import("std").mem.zeroes(Uint8),
    dir: [3]Sint32 = @import("std").mem.zeroes([3]Sint32),
};
pub const SDL_HapticDirection = struct_SDL_HapticDirection;
pub const struct_SDL_HapticConstant = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    level: Sint16 = @import("std").mem.zeroes(Sint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticConstant = struct_SDL_HapticConstant;
pub const struct_SDL_HapticPeriodic = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    period: Uint16 = @import("std").mem.zeroes(Uint16),
    magnitude: Sint16 = @import("std").mem.zeroes(Sint16),
    offset: Sint16 = @import("std").mem.zeroes(Sint16),
    phase: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticPeriodic = struct_SDL_HapticPeriodic;
pub const struct_SDL_HapticCondition = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    right_sat: [3]Uint16 = @import("std").mem.zeroes([3]Uint16),
    left_sat: [3]Uint16 = @import("std").mem.zeroes([3]Uint16),
    right_coeff: [3]Sint16 = @import("std").mem.zeroes([3]Sint16),
    left_coeff: [3]Sint16 = @import("std").mem.zeroes([3]Sint16),
    deadband: [3]Uint16 = @import("std").mem.zeroes([3]Uint16),
    center: [3]Sint16 = @import("std").mem.zeroes([3]Sint16),
};
pub const SDL_HapticCondition = struct_SDL_HapticCondition;
pub const struct_SDL_HapticRamp = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    start: Sint16 = @import("std").mem.zeroes(Sint16),
    end: Sint16 = @import("std").mem.zeroes(Sint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticRamp = struct_SDL_HapticRamp;
pub const struct_SDL_HapticLeftRight = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    large_magnitude: Uint16 = @import("std").mem.zeroes(Uint16),
    small_magnitude: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticLeftRight = struct_SDL_HapticLeftRight;
pub const struct_SDL_HapticCustom = extern struct {
    type: Uint16 = @import("std").mem.zeroes(Uint16),
    direction: SDL_HapticDirection = @import("std").mem.zeroes(SDL_HapticDirection),
    length: Uint32 = @import("std").mem.zeroes(Uint32),
    delay: Uint16 = @import("std").mem.zeroes(Uint16),
    button: Uint16 = @import("std").mem.zeroes(Uint16),
    interval: Uint16 = @import("std").mem.zeroes(Uint16),
    channels: Uint8 = @import("std").mem.zeroes(Uint8),
    period: Uint16 = @import("std").mem.zeroes(Uint16),
    samples: Uint16 = @import("std").mem.zeroes(Uint16),
    data: [*c]Uint16 = @import("std").mem.zeroes([*c]Uint16),
    attack_length: Uint16 = @import("std").mem.zeroes(Uint16),
    attack_level: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_length: Uint16 = @import("std").mem.zeroes(Uint16),
    fade_level: Uint16 = @import("std").mem.zeroes(Uint16),
};
pub const SDL_HapticCustom = struct_SDL_HapticCustom;
pub const union_SDL_HapticEffect = extern union {
    type: Uint16,
    constant: SDL_HapticConstant,
    periodic: SDL_HapticPeriodic,
    condition: SDL_HapticCondition,
    ramp: SDL_HapticRamp,
    leftright: SDL_HapticLeftRight,
    custom: SDL_HapticCustom,
};
pub const SDL_HapticEffect = union_SDL_HapticEffect;
pub extern fn SDL_NumHaptics() c_int;
pub extern fn SDL_HapticName(device_index: c_int) [*c]const u8;
pub extern fn SDL_HapticOpen(device_index: c_int) ?*SDL_Haptic;
pub extern fn SDL_HapticOpened(device_index: c_int) c_int;
pub extern fn SDL_HapticIndex(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_MouseIsHaptic() c_int;
pub extern fn SDL_HapticOpenFromMouse() ?*SDL_Haptic;
pub extern fn SDL_JoystickIsHaptic(joystick: ?*SDL_Joystick) c_int;
pub extern fn SDL_HapticOpenFromJoystick(joystick: ?*SDL_Joystick) ?*SDL_Haptic;
pub extern fn SDL_HapticClose(haptic: ?*SDL_Haptic) void;
pub extern fn SDL_HapticNumEffects(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticNumEffectsPlaying(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticQuery(haptic: ?*SDL_Haptic) c_uint;
pub extern fn SDL_HapticNumAxes(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticEffectSupported(haptic: ?*SDL_Haptic, effect: [*c]SDL_HapticEffect) c_int;
pub extern fn SDL_HapticNewEffect(haptic: ?*SDL_Haptic, effect: [*c]SDL_HapticEffect) c_int;
pub extern fn SDL_HapticUpdateEffect(haptic: ?*SDL_Haptic, effect: c_int, data: [*c]SDL_HapticEffect) c_int;
pub extern fn SDL_HapticRunEffect(haptic: ?*SDL_Haptic, effect: c_int, iterations: Uint32) c_int;
pub extern fn SDL_HapticStopEffect(haptic: ?*SDL_Haptic, effect: c_int) c_int;
pub extern fn SDL_HapticDestroyEffect(haptic: ?*SDL_Haptic, effect: c_int) void;
pub extern fn SDL_HapticGetEffectStatus(haptic: ?*SDL_Haptic, effect: c_int) c_int;
pub extern fn SDL_HapticSetGain(haptic: ?*SDL_Haptic, gain: c_int) c_int;
pub extern fn SDL_HapticSetAutocenter(haptic: ?*SDL_Haptic, autocenter: c_int) c_int;
pub extern fn SDL_HapticPause(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticUnpause(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticStopAll(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticRumbleSupported(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticRumbleInit(haptic: ?*SDL_Haptic) c_int;
pub extern fn SDL_HapticRumblePlay(haptic: ?*SDL_Haptic, strength: f32, length: Uint32) c_int;
pub extern fn SDL_HapticRumbleStop(haptic: ?*SDL_Haptic) c_int;
pub const struct_SDL_hid_device_ = opaque {};
pub const SDL_hid_device = struct_SDL_hid_device_;
pub const struct_SDL_hid_device_info = extern struct {
    path: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    vendor_id: c_ushort = @import("std").mem.zeroes(c_ushort),
    product_id: c_ushort = @import("std").mem.zeroes(c_ushort),
    serial_number: [*c]wchar_t = @import("std").mem.zeroes([*c]wchar_t),
    release_number: c_ushort = @import("std").mem.zeroes(c_ushort),
    manufacturer_string: [*c]wchar_t = @import("std").mem.zeroes([*c]wchar_t),
    product_string: [*c]wchar_t = @import("std").mem.zeroes([*c]wchar_t),
    usage_page: c_ushort = @import("std").mem.zeroes(c_ushort),
    usage: c_ushort = @import("std").mem.zeroes(c_ushort),
    interface_number: c_int = @import("std").mem.zeroes(c_int),
    interface_class: c_int = @import("std").mem.zeroes(c_int),
    interface_subclass: c_int = @import("std").mem.zeroes(c_int),
    interface_protocol: c_int = @import("std").mem.zeroes(c_int),
    next: [*c]struct_SDL_hid_device_info = @import("std").mem.zeroes([*c]struct_SDL_hid_device_info),
};
pub const SDL_hid_device_info = struct_SDL_hid_device_info;
pub extern fn SDL_hid_init() c_int;
pub extern fn SDL_hid_exit() c_int;
pub extern fn SDL_hid_device_change_count() Uint32;
pub extern fn SDL_hid_enumerate(vendor_id: c_ushort, product_id: c_ushort) [*c]SDL_hid_device_info;
pub extern fn SDL_hid_free_enumeration(devs: [*c]SDL_hid_device_info) void;
pub extern fn SDL_hid_open(vendor_id: c_ushort, product_id: c_ushort, serial_number: [*c]const wchar_t) ?*SDL_hid_device;
pub extern fn SDL_hid_open_path(path: [*c]const u8, bExclusive: c_int) ?*SDL_hid_device;
pub extern fn SDL_hid_write(dev: ?*SDL_hid_device, data: [*c]const u8, length: usize) c_int;
pub extern fn SDL_hid_read_timeout(dev: ?*SDL_hid_device, data: [*c]u8, length: usize, milliseconds: c_int) c_int;
pub extern fn SDL_hid_read(dev: ?*SDL_hid_device, data: [*c]u8, length: usize) c_int;
pub extern fn SDL_hid_set_nonblocking(dev: ?*SDL_hid_device, nonblock: c_int) c_int;
pub extern fn SDL_hid_send_feature_report(dev: ?*SDL_hid_device, data: [*c]const u8, length: usize) c_int;
pub extern fn SDL_hid_get_feature_report(dev: ?*SDL_hid_device, data: [*c]u8, length: usize) c_int;
pub extern fn SDL_hid_close(dev: ?*SDL_hid_device) void;
pub extern fn SDL_hid_get_manufacturer_string(dev: ?*SDL_hid_device, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_get_product_string(dev: ?*SDL_hid_device, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_get_serial_number_string(dev: ?*SDL_hid_device, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_get_indexed_string(dev: ?*SDL_hid_device, string_index: c_int, string: [*c]wchar_t, maxlen: usize) c_int;
pub extern fn SDL_hid_ble_scan(active: SDL_bool) void;
pub const SDL_HINT_DEFAULT: c_int = 0;
pub const SDL_HINT_NORMAL: c_int = 1;
pub const SDL_HINT_OVERRIDE: c_int = 2;
pub const SDL_HintPriority = c_uint;
pub extern fn SDL_SetHintWithPriority(name: [*c]const u8, value: [*c]const u8, priority: SDL_HintPriority) SDL_bool;
pub extern fn SDL_SetHint(name: [*c]const u8, value: [*c]const u8) SDL_bool;
pub extern fn SDL_ResetHint(name: [*c]const u8) SDL_bool;
pub extern fn SDL_GetHint(name: [*c]const u8) [*c]const u8;
pub extern fn SDL_GetHintBoolean(name: [*c]const u8, default_value: SDL_bool) SDL_bool;
pub const SDL_HintCallback = ?*const fn (?*anyopaque, [*c]const u8, [*c]const u8, [*c]const u8) callconv(.C) void;
pub extern fn SDL_AddHintCallback(name: [*c]const u8, callback: SDL_HintCallback, userdata: ?*anyopaque) void;
pub extern fn SDL_DelHintCallback(name: [*c]const u8, callback: SDL_HintCallback, userdata: ?*anyopaque) void;
pub extern fn SDL_ClearHints() void;
pub extern fn SDL_LoadObject(sofile: [*c]const u8) ?*anyopaque;
pub extern fn SDL_LoadFunction(handle: ?*anyopaque, name: [*c]const u8) ?*anyopaque;
pub extern fn SDL_UnloadObject(handle: ?*anyopaque) void;
pub const SDL_LOG_CATEGORY_APPLICATION: c_int = 0;
pub const SDL_LOG_CATEGORY_ERROR: c_int = 1;
pub const SDL_LOG_CATEGORY_ASSERT: c_int = 2;
pub const SDL_LOG_CATEGORY_SYSTEM: c_int = 3;
pub const SDL_LOG_CATEGORY_AUDIO: c_int = 4;
pub const SDL_LOG_CATEGORY_VIDEO: c_int = 5;
pub const SDL_LOG_CATEGORY_RENDER: c_int = 6;
pub const SDL_LOG_CATEGORY_INPUT: c_int = 7;
pub const SDL_LOG_CATEGORY_TEST: c_int = 8;
pub const SDL_LOG_CATEGORY_RESERVED1: c_int = 9;
pub const SDL_LOG_CATEGORY_RESERVED2: c_int = 10;
pub const SDL_LOG_CATEGORY_RESERVED3: c_int = 11;
pub const SDL_LOG_CATEGORY_RESERVED4: c_int = 12;
pub const SDL_LOG_CATEGORY_RESERVED5: c_int = 13;
pub const SDL_LOG_CATEGORY_RESERVED6: c_int = 14;
pub const SDL_LOG_CATEGORY_RESERVED7: c_int = 15;
pub const SDL_LOG_CATEGORY_RESERVED8: c_int = 16;
pub const SDL_LOG_CATEGORY_RESERVED9: c_int = 17;
pub const SDL_LOG_CATEGORY_RESERVED10: c_int = 18;
pub const SDL_LOG_CATEGORY_CUSTOM: c_int = 19;
pub const SDL_LogCategory = c_uint;
pub const SDL_LOG_PRIORITY_VERBOSE: c_int = 1;
pub const SDL_LOG_PRIORITY_DEBUG: c_int = 2;
pub const SDL_LOG_PRIORITY_INFO: c_int = 3;
pub const SDL_LOG_PRIORITY_WARN: c_int = 4;
pub const SDL_LOG_PRIORITY_ERROR: c_int = 5;
pub const SDL_LOG_PRIORITY_CRITICAL: c_int = 6;
pub const SDL_NUM_LOG_PRIORITIES: c_int = 7;
pub const SDL_LogPriority = c_uint;
pub extern fn SDL_LogSetAllPriority(priority: SDL_LogPriority) void;
pub extern fn SDL_LogSetPriority(category: c_int, priority: SDL_LogPriority) void;
pub extern fn SDL_LogGetPriority(category: c_int) SDL_LogPriority;
pub extern fn SDL_LogResetPriorities() void;
pub extern fn SDL_Log(fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogVerbose(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogDebug(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogInfo(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogWarn(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogError(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogCritical(category: c_int, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogMessage(category: c_int, priority: SDL_LogPriority, fmt: [*c]const u8, ...) void;
pub extern fn SDL_LogMessageV(category: c_int, priority: SDL_LogPriority, fmt: [*c]const u8, ap: va_list) void;
pub const SDL_LogOutputFunction = ?*const fn (?*anyopaque, c_int, SDL_LogPriority, [*c]const u8) callconv(.C) void;
pub extern fn SDL_LogGetOutputFunction(callback: [*c]SDL_LogOutputFunction, userdata: [*c]?*anyopaque) void;
pub extern fn SDL_LogSetOutputFunction(callback: SDL_LogOutputFunction, userdata: ?*anyopaque) void;
pub const SDL_MESSAGEBOX_ERROR: c_int = 16;
pub const SDL_MESSAGEBOX_WARNING: c_int = 32;
pub const SDL_MESSAGEBOX_INFORMATION: c_int = 64;
pub const SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT: c_int = 128;
pub const SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT: c_int = 256;
pub const SDL_MessageBoxFlags = c_uint;
pub const SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT: c_int = 1;
pub const SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT: c_int = 2;
pub const SDL_MessageBoxButtonFlags = c_uint;
pub const SDL_MessageBoxButtonData = extern struct {
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    buttonid: c_int = @import("std").mem.zeroes(c_int),
    text: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const SDL_MessageBoxColor = extern struct {
    r: Uint8 = @import("std").mem.zeroes(Uint8),
    g: Uint8 = @import("std").mem.zeroes(Uint8),
    b: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_MESSAGEBOX_COLOR_BACKGROUND: c_int = 0;
pub const SDL_MESSAGEBOX_COLOR_TEXT: c_int = 1;
pub const SDL_MESSAGEBOX_COLOR_BUTTON_BORDER: c_int = 2;
pub const SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND: c_int = 3;
pub const SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED: c_int = 4;
pub const SDL_MESSAGEBOX_COLOR_MAX: c_int = 5;
pub const SDL_MessageBoxColorType = c_uint;
pub const SDL_MessageBoxColorScheme = extern struct {
    colors: [5]SDL_MessageBoxColor = @import("std").mem.zeroes([5]SDL_MessageBoxColor),
};
pub const SDL_MessageBoxData = extern struct {
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    window: ?*SDL_Window = @import("std").mem.zeroes(?*SDL_Window),
    title: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    message: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    numbuttons: c_int = @import("std").mem.zeroes(c_int),
    buttons: [*c]const SDL_MessageBoxButtonData = @import("std").mem.zeroes([*c]const SDL_MessageBoxButtonData),
    colorScheme: [*c]const SDL_MessageBoxColorScheme = @import("std").mem.zeroes([*c]const SDL_MessageBoxColorScheme),
};
pub extern fn SDL_ShowMessageBox(messageboxdata: [*c]const SDL_MessageBoxData, buttonid: [*c]c_int) c_int;
pub extern fn SDL_ShowSimpleMessageBox(flags: Uint32, title: [*c]const u8, message: [*c]const u8, window: ?*SDL_Window) c_int;
pub const SDL_MetalView = ?*anyopaque;
pub extern fn SDL_Metal_CreateView(window: ?*SDL_Window) SDL_MetalView;
pub extern fn SDL_Metal_DestroyView(view: SDL_MetalView) void;
pub extern fn SDL_Metal_GetLayer(view: SDL_MetalView) ?*anyopaque;
pub extern fn SDL_Metal_GetDrawableSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub const SDL_POWERSTATE_UNKNOWN: c_int = 0;
pub const SDL_POWERSTATE_ON_BATTERY: c_int = 1;
pub const SDL_POWERSTATE_NO_BATTERY: c_int = 2;
pub const SDL_POWERSTATE_CHARGING: c_int = 3;
pub const SDL_POWERSTATE_CHARGED: c_int = 4;
pub const SDL_PowerState = c_uint;
pub extern fn SDL_GetPowerInfo(secs: [*c]c_int, pct: [*c]c_int) SDL_PowerState;
pub const SDL_RENDERER_SOFTWARE: c_int = 1;
pub const SDL_RENDERER_ACCELERATED: c_int = 2;
pub const SDL_RENDERER_PRESENTVSYNC: c_int = 4;
pub const SDL_RENDERER_TARGETTEXTURE: c_int = 8;
pub const SDL_RendererFlags = c_uint;
pub const struct_SDL_RendererInfo = extern struct {
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    flags: Uint32 = @import("std").mem.zeroes(Uint32),
    num_texture_formats: Uint32 = @import("std").mem.zeroes(Uint32),
    texture_formats: [16]Uint32 = @import("std").mem.zeroes([16]Uint32),
    max_texture_width: c_int = @import("std").mem.zeroes(c_int),
    max_texture_height: c_int = @import("std").mem.zeroes(c_int),
};
pub const SDL_RendererInfo = struct_SDL_RendererInfo;
pub const struct_SDL_Vertex = extern struct {
    position: SDL_FPoint = @import("std").mem.zeroes(SDL_FPoint),
    color: SDL_Color = @import("std").mem.zeroes(SDL_Color),
    tex_coord: SDL_FPoint = @import("std").mem.zeroes(SDL_FPoint),
};
pub const SDL_Vertex = struct_SDL_Vertex;
pub const SDL_ScaleModeNearest: c_int = 0;
pub const SDL_ScaleModeLinear: c_int = 1;
pub const SDL_ScaleModeBest: c_int = 2;
pub const SDL_ScaleMode = c_uint;
pub const SDL_TEXTUREACCESS_STATIC: c_int = 0;
pub const SDL_TEXTUREACCESS_STREAMING: c_int = 1;
pub const SDL_TEXTUREACCESS_TARGET: c_int = 2;
pub const SDL_TextureAccess = c_uint;
pub const SDL_TEXTUREMODULATE_NONE: c_int = 0;
pub const SDL_TEXTUREMODULATE_COLOR: c_int = 1;
pub const SDL_TEXTUREMODULATE_ALPHA: c_int = 2;
pub const SDL_TextureModulate = c_uint;
pub const SDL_FLIP_NONE: c_int = 0;
pub const SDL_FLIP_HORIZONTAL: c_int = 1;
pub const SDL_FLIP_VERTICAL: c_int = 2;
pub const SDL_RendererFlip = c_uint;
pub const struct_SDL_Renderer = opaque {};
pub const SDL_Renderer = struct_SDL_Renderer;
pub const struct_SDL_Texture = opaque {};
pub const SDL_Texture = struct_SDL_Texture;
pub extern fn SDL_GetNumRenderDrivers() c_int;
pub extern fn SDL_GetRenderDriverInfo(index: c_int, info: [*c]SDL_RendererInfo) c_int;
pub extern fn SDL_CreateWindowAndRenderer(width: c_int, height: c_int, window_flags: Uint32, window: [*c]?*SDL_Window, renderer: [*c]?*SDL_Renderer) c_int;
pub extern fn SDL_CreateRenderer(window: ?*SDL_Window, index: c_int, flags: Uint32) ?*SDL_Renderer;
pub extern fn SDL_CreateSoftwareRenderer(surface: [*c]SDL_Surface) ?*SDL_Renderer;
pub extern fn SDL_GetRenderer(window: ?*SDL_Window) ?*SDL_Renderer;
pub extern fn SDL_RenderGetWindow(renderer: ?*SDL_Renderer) ?*SDL_Window;
pub extern fn SDL_GetRendererInfo(renderer: ?*SDL_Renderer, info: [*c]SDL_RendererInfo) c_int;
pub extern fn SDL_GetRendererOutputSize(renderer: ?*SDL_Renderer, w: [*c]c_int, h: [*c]c_int) c_int;
pub extern fn SDL_CreateTexture(renderer: ?*SDL_Renderer, format: Uint32, access: c_int, w: c_int, h: c_int) ?*SDL_Texture;
pub extern fn SDL_CreateTextureFromSurface(renderer: ?*SDL_Renderer, surface: [*c]SDL_Surface) ?*SDL_Texture;
pub extern fn SDL_QueryTexture(texture: ?*SDL_Texture, format: [*c]Uint32, access: [*c]c_int, w: [*c]c_int, h: [*c]c_int) c_int;
pub extern fn SDL_SetTextureColorMod(texture: ?*SDL_Texture, r: Uint8, g: Uint8, b: Uint8) c_int;
pub extern fn SDL_GetTextureColorMod(texture: ?*SDL_Texture, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8) c_int;
pub extern fn SDL_SetTextureAlphaMod(texture: ?*SDL_Texture, alpha: Uint8) c_int;
pub extern fn SDL_GetTextureAlphaMod(texture: ?*SDL_Texture, alpha: [*c]Uint8) c_int;
pub extern fn SDL_SetTextureBlendMode(texture: ?*SDL_Texture, blendMode: SDL_BlendMode) c_int;
pub extern fn SDL_GetTextureBlendMode(texture: ?*SDL_Texture, blendMode: [*c]SDL_BlendMode) c_int;
pub extern fn SDL_SetTextureScaleMode(texture: ?*SDL_Texture, scaleMode: SDL_ScaleMode) c_int;
pub extern fn SDL_GetTextureScaleMode(texture: ?*SDL_Texture, scaleMode: [*c]SDL_ScaleMode) c_int;
pub extern fn SDL_SetTextureUserData(texture: ?*SDL_Texture, userdata: ?*anyopaque) c_int;
pub extern fn SDL_GetTextureUserData(texture: ?*SDL_Texture) ?*anyopaque;
pub extern fn SDL_UpdateTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, pixels: ?*const anyopaque, pitch: c_int) c_int;
pub extern fn SDL_UpdateYUVTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, Yplane: [*c]const Uint8, Ypitch: c_int, Uplane: [*c]const Uint8, Upitch: c_int, Vplane: [*c]const Uint8, Vpitch: c_int) c_int;
pub extern fn SDL_UpdateNVTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, Yplane: [*c]const Uint8, Ypitch: c_int, UVplane: [*c]const Uint8, UVpitch: c_int) c_int;
pub extern fn SDL_LockTexture(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, pixels: [*c]?*anyopaque, pitch: [*c]c_int) c_int;
pub extern fn SDL_LockTextureToSurface(texture: ?*SDL_Texture, rect: [*c]const SDL_Rect, surface: [*c][*c]SDL_Surface) c_int;
pub extern fn SDL_UnlockTexture(texture: ?*SDL_Texture) void;
pub extern fn SDL_RenderTargetSupported(renderer: ?*SDL_Renderer) SDL_bool;
pub extern fn SDL_SetRenderTarget(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture) c_int;
pub extern fn SDL_GetRenderTarget(renderer: ?*SDL_Renderer) ?*SDL_Texture;
pub extern fn SDL_RenderSetLogicalSize(renderer: ?*SDL_Renderer, w: c_int, h: c_int) c_int;
pub extern fn SDL_RenderGetLogicalSize(renderer: ?*SDL_Renderer, w: [*c]c_int, h: [*c]c_int) void;
pub extern fn SDL_RenderSetIntegerScale(renderer: ?*SDL_Renderer, enable: SDL_bool) c_int;
pub extern fn SDL_RenderGetIntegerScale(renderer: ?*SDL_Renderer) SDL_bool;
pub extern fn SDL_RenderSetViewport(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderGetViewport(renderer: ?*SDL_Renderer, rect: [*c]SDL_Rect) void;
pub extern fn SDL_RenderSetClipRect(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderGetClipRect(renderer: ?*SDL_Renderer, rect: [*c]SDL_Rect) void;
pub extern fn SDL_RenderIsClipEnabled(renderer: ?*SDL_Renderer) SDL_bool;
pub extern fn SDL_RenderSetScale(renderer: ?*SDL_Renderer, scaleX: f32, scaleY: f32) c_int;
pub extern fn SDL_RenderGetScale(renderer: ?*SDL_Renderer, scaleX: [*c]f32, scaleY: [*c]f32) void;
pub extern fn SDL_RenderWindowToLogical(renderer: ?*SDL_Renderer, windowX: c_int, windowY: c_int, logicalX: [*c]f32, logicalY: [*c]f32) void;
pub extern fn SDL_RenderLogicalToWindow(renderer: ?*SDL_Renderer, logicalX: f32, logicalY: f32, windowX: [*c]c_int, windowY: [*c]c_int) void;
pub extern fn SDL_SetRenderDrawColor(renderer: ?*SDL_Renderer, r: Uint8, g: Uint8, b: Uint8, a: Uint8) c_int;
pub extern fn SDL_GetRenderDrawColor(renderer: ?*SDL_Renderer, r: [*c]Uint8, g: [*c]Uint8, b: [*c]Uint8, a: [*c]Uint8) c_int;
pub extern fn SDL_SetRenderDrawBlendMode(renderer: ?*SDL_Renderer, blendMode: SDL_BlendMode) c_int;
pub extern fn SDL_GetRenderDrawBlendMode(renderer: ?*SDL_Renderer, blendMode: [*c]SDL_BlendMode) c_int;
pub extern fn SDL_RenderClear(renderer: ?*SDL_Renderer) c_int;
pub extern fn SDL_RenderDrawPoint(renderer: ?*SDL_Renderer, x: c_int, y: c_int) c_int;
pub extern fn SDL_RenderDrawPoints(renderer: ?*SDL_Renderer, points: [*c]const SDL_Point, count: c_int) c_int;
pub extern fn SDL_RenderDrawLine(renderer: ?*SDL_Renderer, x1: c_int, y1: c_int, x2: c_int, y2: c_int) c_int;
pub extern fn SDL_RenderDrawLines(renderer: ?*SDL_Renderer, points: [*c]const SDL_Point, count: c_int) c_int;
pub extern fn SDL_RenderDrawRect(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderDrawRects(renderer: ?*SDL_Renderer, rects: [*c]const SDL_Rect, count: c_int) c_int;
pub extern fn SDL_RenderFillRect(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderFillRects(renderer: ?*SDL_Renderer, rects: [*c]const SDL_Rect, count: c_int) c_int;
pub extern fn SDL_RenderCopy(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_Rect) c_int;
pub extern fn SDL_RenderCopyEx(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_Rect, angle: f64, center: [*c]const SDL_Point, flip: SDL_RendererFlip) c_int;
pub extern fn SDL_RenderDrawPointF(renderer: ?*SDL_Renderer, x: f32, y: f32) c_int;
pub extern fn SDL_RenderDrawPointsF(renderer: ?*SDL_Renderer, points: [*c]const SDL_FPoint, count: c_int) c_int;
pub extern fn SDL_RenderDrawLineF(renderer: ?*SDL_Renderer, x1: f32, y1: f32, x2: f32, y2: f32) c_int;
pub extern fn SDL_RenderDrawLinesF(renderer: ?*SDL_Renderer, points: [*c]const SDL_FPoint, count: c_int) c_int;
pub extern fn SDL_RenderDrawRectF(renderer: ?*SDL_Renderer, rect: [*c]const SDL_FRect) c_int;
pub extern fn SDL_RenderDrawRectsF(renderer: ?*SDL_Renderer, rects: [*c]const SDL_FRect, count: c_int) c_int;
pub extern fn SDL_RenderFillRectF(renderer: ?*SDL_Renderer, rect: [*c]const SDL_FRect) c_int;
pub extern fn SDL_RenderFillRectsF(renderer: ?*SDL_Renderer, rects: [*c]const SDL_FRect, count: c_int) c_int;
pub extern fn SDL_RenderCopyF(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_FRect) c_int;
pub extern fn SDL_RenderCopyExF(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, srcrect: [*c]const SDL_Rect, dstrect: [*c]const SDL_FRect, angle: f64, center: [*c]const SDL_FPoint, flip: SDL_RendererFlip) c_int;
pub extern fn SDL_RenderGeometry(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, vertices: [*c]const SDL_Vertex, num_vertices: c_int, indices: [*c]const c_int, num_indices: c_int) c_int;
pub extern fn SDL_RenderGeometryRaw(renderer: ?*SDL_Renderer, texture: ?*SDL_Texture, xy: [*c]const f32, xy_stride: c_int, color: [*c]const SDL_Color, color_stride: c_int, uv: [*c]const f32, uv_stride: c_int, num_vertices: c_int, indices: ?*const anyopaque, num_indices: c_int, size_indices: c_int) c_int;
pub extern fn SDL_RenderReadPixels(renderer: ?*SDL_Renderer, rect: [*c]const SDL_Rect, format: Uint32, pixels: ?*anyopaque, pitch: c_int) c_int;
pub extern fn SDL_RenderPresent(renderer: ?*SDL_Renderer) void;
pub extern fn SDL_DestroyTexture(texture: ?*SDL_Texture) void;
pub extern fn SDL_DestroyRenderer(renderer: ?*SDL_Renderer) void;
pub extern fn SDL_RenderFlush(renderer: ?*SDL_Renderer) c_int;
pub extern fn SDL_GL_BindTexture(texture: ?*SDL_Texture, texw: [*c]f32, texh: [*c]f32) c_int;
pub extern fn SDL_GL_UnbindTexture(texture: ?*SDL_Texture) c_int;
pub extern fn SDL_RenderGetMetalLayer(renderer: ?*SDL_Renderer) ?*anyopaque;
pub extern fn SDL_RenderGetMetalCommandEncoder(renderer: ?*SDL_Renderer) ?*anyopaque;
pub extern fn SDL_RenderSetVSync(renderer: ?*SDL_Renderer, vsync: c_int) c_int;
pub extern fn SDL_CreateShapedWindow(title: [*c]const u8, x: c_uint, y: c_uint, w: c_uint, h: c_uint, flags: Uint32) ?*SDL_Window;
pub extern fn SDL_IsShapedWindow(window: ?*const SDL_Window) SDL_bool;
pub const ShapeModeDefault: c_int = 0;
pub const ShapeModeBinarizeAlpha: c_int = 1;
pub const ShapeModeReverseBinarizeAlpha: c_int = 2;
pub const ShapeModeColorKey: c_int = 3;
pub const WindowShapeMode = c_uint;
pub const SDL_WindowShapeParams = extern union {
    binarizationCutoff: Uint8,
    colorKey: SDL_Color,
};
pub const struct_SDL_WindowShapeMode = extern struct {
    mode: WindowShapeMode = @import("std").mem.zeroes(WindowShapeMode),
    parameters: SDL_WindowShapeParams = @import("std").mem.zeroes(SDL_WindowShapeParams),
};
pub const SDL_WindowShapeMode = struct_SDL_WindowShapeMode;
pub extern fn SDL_SetWindowShape(window: ?*SDL_Window, shape: [*c]SDL_Surface, shape_mode: [*c]SDL_WindowShapeMode) c_int;
pub extern fn SDL_GetShapedWindowMode(window: ?*SDL_Window, shape_mode: [*c]SDL_WindowShapeMode) c_int;
pub extern fn SDL_IsTablet() SDL_bool;
pub extern fn SDL_OnApplicationWillTerminate() void;
pub extern fn SDL_OnApplicationDidReceiveMemoryWarning() void;
pub extern fn SDL_OnApplicationWillResignActive() void;
pub extern fn SDL_OnApplicationDidEnterBackground() void;
pub extern fn SDL_OnApplicationWillEnterForeground() void;
pub extern fn SDL_OnApplicationDidBecomeActive() void;
pub extern fn SDL_GetTicks() Uint32;
pub extern fn SDL_GetTicks64() Uint64;
pub extern fn SDL_GetPerformanceCounter() Uint64;
pub extern fn SDL_GetPerformanceFrequency() Uint64;
pub extern fn SDL_Delay(ms: Uint32) void;
pub const SDL_TimerCallback = ?*const fn (Uint32, ?*anyopaque) callconv(.C) Uint32;
pub const SDL_TimerID = c_int;
pub extern fn SDL_AddTimer(interval: Uint32, callback: SDL_TimerCallback, param: ?*anyopaque) SDL_TimerID;
pub extern fn SDL_RemoveTimer(id: SDL_TimerID) SDL_bool;
pub const struct_SDL_version = extern struct {
    major: Uint8 = @import("std").mem.zeroes(Uint8),
    minor: Uint8 = @import("std").mem.zeroes(Uint8),
    patch: Uint8 = @import("std").mem.zeroes(Uint8),
};
pub const SDL_version = struct_SDL_version;
pub extern fn SDL_GetVersion(ver: [*c]SDL_version) void;
pub extern fn SDL_GetRevision() [*c]const u8;
pub extern fn SDL_GetRevisionNumber() c_int;
pub const struct_SDL_Locale = extern struct {
    language: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    country: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const SDL_Locale = struct_SDL_Locale;
pub extern fn SDL_GetPreferredLocales() [*c]SDL_Locale;
pub extern fn SDL_OpenURL(url: [*c]const u8) c_int;
pub extern fn SDL_Init(flags: Uint32) c_int;
pub extern fn SDL_InitSubSystem(flags: Uint32) c_int;
pub extern fn SDL_QuitSubSystem(flags: Uint32) void;
pub extern fn SDL_WasInit(flags: Uint32) Uint32;
pub extern fn SDL_Quit() void;
pub const SDL_vulkanInstance = VkInstance;
pub const SDL_vulkanSurface = VkSurfaceKHR;
pub extern fn SDL_Vulkan_LoadLibrary(path: [*c]const u8) c_int;
pub extern fn SDL_Vulkan_GetVkGetInstanceProcAddr() ?*anyopaque;
pub extern fn SDL_Vulkan_UnloadLibrary() void;
pub extern fn SDL_Vulkan_GetInstanceExtensions(window: ?*SDL_Window, pCount: [*c]c_uint, pNames: [*c][*c]const u8) SDL_bool;
pub extern fn SDL_Vulkan_CreateSurface(window: ?*SDL_Window, instance: VkInstance, surface: [*c]VkSurfaceKHR) SDL_bool;
pub extern fn SDL_Vulkan_GetDrawableSize(window: ?*SDL_Window, w: [*c]c_int, h: [*c]c_int) void;
pub const GLbitfield = u32;
pub const GLboolean = u8;
pub const GLbyte = i8;
pub const GLclampf = f32;
pub const GLenum = u32;
pub const GLfloat = f32;
pub const GLint = i32;
pub const GLshort = i16;
pub const GLsizei = i32;
pub const GLubyte = u8;
pub const GLuint = u32;
pub const GLushort = u16;
pub const GLvoid = anyopaque;
pub const GLchar = u8;
pub const GLcharARB = u8;
pub const GLhandleARB = ?*anyopaque;
pub const GLdouble = f64;
pub const GLclampd = f64;
pub const GLfixed = i32;
pub const GLhalf = u16;
pub const GLhalfARB = u16;
pub const GLint64 = i64;
pub const struct___GLsync = opaque {};
pub const GLsync = ?*struct___GLsync;
pub const GLuint64 = u64;
pub const GLint64EXT = i64;
pub const GLuint64EXT = u64;
pub const GLintptr = isize;
pub const GLsizeiptr = isize;
pub const GLintptrARB = isize;
pub const GLsizeiptrARB = isize;
pub extern fn glAccum(op: GLenum, value: GLfloat) void;
pub extern fn glAlphaFunc(func: GLenum, ref: GLclampf) void;
pub extern fn glAreTexturesResident(n: GLsizei, textures: [*c]const GLuint, residences: [*c]GLboolean) GLboolean;
pub extern fn glArrayElement(i: GLint) void;
pub extern fn glBegin(mode: GLenum) void;
pub extern fn glBindTexture(target: GLenum, texture: GLuint) void;
pub extern fn glBitmap(width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: [*c]const GLubyte) void;
pub extern fn glBlendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) void;
pub extern fn glBlendEquation(mode: GLenum) void;
pub extern fn glBlendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum) void;
pub extern fn glBlendFunc(sfactor: GLenum, dfactor: GLenum) void;
pub extern fn glCallList(list: GLuint) void;
pub extern fn glCallLists(n: GLsizei, @"type": GLenum, lists: ?*const GLvoid) void;
pub extern fn glClear(mask: GLbitfield) void;
pub extern fn glClearAccum(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) void;
pub extern fn glClearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) void;
pub extern fn glClearDepth(depth: GLclampd) void;
pub extern fn glClearIndex(c: GLfloat) void;
pub extern fn glClearStencil(s: GLint) void;
pub extern fn glClipPlane(plane: GLenum, equation: [*c]const GLdouble) void;
pub extern fn glColor3b(red: GLbyte, green: GLbyte, blue: GLbyte) void;
pub extern fn glColor3bv(v: [*c]const GLbyte) void;
pub extern fn glColor3d(red: GLdouble, green: GLdouble, blue: GLdouble) void;
pub extern fn glColor3dv(v: [*c]const GLdouble) void;
pub extern fn glColor3f(red: GLfloat, green: GLfloat, blue: GLfloat) void;
pub extern fn glColor3fv(v: [*c]const GLfloat) void;
pub extern fn glColor3i(red: GLint, green: GLint, blue: GLint) void;
pub extern fn glColor3iv(v: [*c]const GLint) void;
pub extern fn glColor3s(red: GLshort, green: GLshort, blue: GLshort) void;
pub extern fn glColor3sv(v: [*c]const GLshort) void;
pub extern fn glColor3ub(red: GLubyte, green: GLubyte, blue: GLubyte) void;
pub extern fn glColor3ubv(v: [*c]const GLubyte) void;
pub extern fn glColor3ui(red: GLuint, green: GLuint, blue: GLuint) void;
pub extern fn glColor3uiv(v: [*c]const GLuint) void;
pub extern fn glColor3us(red: GLushort, green: GLushort, blue: GLushort) void;
pub extern fn glColor3usv(v: [*c]const GLushort) void;
pub extern fn glColor4b(red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) void;
pub extern fn glColor4bv(v: [*c]const GLbyte) void;
pub extern fn glColor4d(red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) void;
pub extern fn glColor4dv(v: [*c]const GLdouble) void;
pub extern fn glColor4f(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) void;
pub extern fn glColor4fv(v: [*c]const GLfloat) void;
pub extern fn glColor4i(red: GLint, green: GLint, blue: GLint, alpha: GLint) void;
pub extern fn glColor4iv(v: [*c]const GLint) void;
pub extern fn glColor4s(red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) void;
pub extern fn glColor4sv(v: [*c]const GLshort) void;
pub extern fn glColor4ub(red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) void;
pub extern fn glColor4ubv(v: [*c]const GLubyte) void;
pub extern fn glColor4ui(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) void;
pub extern fn glColor4uiv(v: [*c]const GLuint) void;
pub extern fn glColor4us(red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) void;
pub extern fn glColor4usv(v: [*c]const GLushort) void;
pub extern fn glColorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) void;
pub extern fn glColorMaterial(face: GLenum, mode: GLenum) void;
pub extern fn glColorPointer(size: GLint, @"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glColorSubTable(target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, @"type": GLenum, data: ?*const GLvoid) void;
pub extern fn glColorTable(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, @"type": GLenum, table: ?*const GLvoid) void;
pub extern fn glColorTableParameterfv(target: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glColorTableParameteriv(target: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glConvolutionFilter1D(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, @"type": GLenum, image: ?*const GLvoid) void;
pub extern fn glConvolutionFilter2D(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, image: ?*const GLvoid) void;
pub extern fn glConvolutionParameterf(target: GLenum, pname: GLenum, params: GLfloat) void;
pub extern fn glConvolutionParameterfv(target: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glConvolutionParameteri(target: GLenum, pname: GLenum, params: GLint) void;
pub extern fn glConvolutionParameteriv(target: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glCopyColorSubTable(target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) void;
pub extern fn glCopyColorTable(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) void;
pub extern fn glCopyConvolutionFilter1D(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) void;
pub extern fn glCopyConvolutionFilter2D(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) void;
pub extern fn glCopyPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, @"type": GLenum) void;
pub extern fn glCopyTexImage1D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) void;
pub extern fn glCopyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) void;
pub extern fn glCopyTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) void;
pub extern fn glCopyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) void;
pub extern fn glCopyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) void;
pub extern fn glCullFace(mode: GLenum) void;
pub extern fn glDeleteLists(list: GLuint, range: GLsizei) void;
pub extern fn glDeleteTextures(n: GLsizei, textures: [*c]const GLuint) void;
pub extern fn glDepthFunc(func: GLenum) void;
pub extern fn glDepthMask(flag: GLboolean) void;
pub extern fn glDepthRange(zNear: GLclampd, zFar: GLclampd) void;
pub extern fn glDisable(cap: GLenum) void;
pub extern fn glDisableClientState(array: GLenum) void;
pub extern fn glDrawArrays(mode: GLenum, first: GLint, count: GLsizei) void;
pub extern fn glDrawBuffer(mode: GLenum) void;
pub extern fn glDrawElements(mode: GLenum, count: GLsizei, @"type": GLenum, indices: ?*const GLvoid) void;
pub extern fn glDrawPixels(width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glDrawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, @"type": GLenum, indices: ?*const GLvoid) void;
pub extern fn glEdgeFlag(flag: GLboolean) void;
pub extern fn glEdgeFlagPointer(stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glEdgeFlagv(flag: [*c]const GLboolean) void;
pub extern fn glEnable(cap: GLenum) void;
pub extern fn glEnableClientState(array: GLenum) void;
pub extern fn glEnd() void;
pub extern fn glEndList() void;
pub extern fn glEvalCoord1d(u: GLdouble) void;
pub extern fn glEvalCoord1dv(u: [*c]const GLdouble) void;
pub extern fn glEvalCoord1f(u: GLfloat) void;
pub extern fn glEvalCoord1fv(u: [*c]const GLfloat) void;
pub extern fn glEvalCoord2d(u: GLdouble, v: GLdouble) void;
pub extern fn glEvalCoord2dv(u: [*c]const GLdouble) void;
pub extern fn glEvalCoord2f(u: GLfloat, v: GLfloat) void;
pub extern fn glEvalCoord2fv(u: [*c]const GLfloat) void;
pub extern fn glEvalMesh1(mode: GLenum, @"i1": GLint, @"i2": GLint) void;
pub extern fn glEvalMesh2(mode: GLenum, @"i1": GLint, @"i2": GLint, j1: GLint, j2: GLint) void;
pub extern fn glEvalPoint1(i: GLint) void;
pub extern fn glEvalPoint2(i: GLint, j: GLint) void;
pub extern fn glFeedbackBuffer(size: GLsizei, @"type": GLenum, buffer: [*c]GLfloat) void;
pub extern fn glFinish() void;
pub extern fn glFlush() void;
pub extern fn glFogf(pname: GLenum, param: GLfloat) void;
pub extern fn glFogfv(pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glFogi(pname: GLenum, param: GLint) void;
pub extern fn glFogiv(pname: GLenum, params: [*c]const GLint) void;
pub extern fn glFrontFace(mode: GLenum) void;
pub extern fn glFrustum(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) void;
pub extern fn glGenLists(range: GLsizei) GLuint;
pub extern fn glGenTextures(n: GLsizei, textures: [*c]GLuint) void;
pub extern fn glGetBooleanv(pname: GLenum, params: [*c]GLboolean) void;
pub extern fn glGetClipPlane(plane: GLenum, equation: [*c]GLdouble) void;
pub extern fn glGetColorTable(target: GLenum, format: GLenum, @"type": GLenum, table: ?*GLvoid) void;
pub extern fn glGetColorTableParameterfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetColorTableParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetConvolutionFilter(target: GLenum, format: GLenum, @"type": GLenum, image: ?*GLvoid) void;
pub extern fn glGetConvolutionParameterfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetConvolutionParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetDoublev(pname: GLenum, params: [*c]GLdouble) void;
pub extern fn glGetError() GLenum;
pub extern fn glGetFloatv(pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetHistogram(target: GLenum, reset: GLboolean, format: GLenum, @"type": GLenum, values: ?*GLvoid) void;
pub extern fn glGetHistogramParameterfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetHistogramParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetIntegerv(pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetLightfv(light: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetLightiv(light: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetMapdv(target: GLenum, query: GLenum, v: [*c]GLdouble) void;
pub extern fn glGetMapfv(target: GLenum, query: GLenum, v: [*c]GLfloat) void;
pub extern fn glGetMapiv(target: GLenum, query: GLenum, v: [*c]GLint) void;
pub extern fn glGetMaterialfv(face: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetMaterialiv(face: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetMinmax(target: GLenum, reset: GLboolean, format: GLenum, @"type": GLenum, values: ?*GLvoid) void;
pub extern fn glGetMinmaxParameterfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetMinmaxParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetPixelMapfv(map: GLenum, values: [*c]GLfloat) void;
pub extern fn glGetPixelMapuiv(map: GLenum, values: [*c]GLuint) void;
pub extern fn glGetPixelMapusv(map: GLenum, values: [*c]GLushort) void;
pub extern fn glGetPointerv(pname: GLenum, params: [*c]?*GLvoid) void;
pub extern fn glGetPolygonStipple(mask: [*c]GLubyte) void;
pub extern fn glGetSeparableFilter(target: GLenum, format: GLenum, @"type": GLenum, row: ?*GLvoid, column: ?*GLvoid, span: ?*GLvoid) void;
pub extern fn glGetString(name: GLenum) [*c]const GLubyte;
pub extern fn glGetTexEnvfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetTexEnviv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetTexGendv(coord: GLenum, pname: GLenum, params: [*c]GLdouble) void;
pub extern fn glGetTexGenfv(coord: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetTexGeniv(coord: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetTexImage(target: GLenum, level: GLint, format: GLenum, @"type": GLenum, pixels: ?*GLvoid) void;
pub extern fn glGetTexLevelParameterfv(target: GLenum, level: GLint, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetTexLevelParameteriv(target: GLenum, level: GLint, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetTexParameterfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetTexParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glHint(target: GLenum, mode: GLenum) void;
pub extern fn glHistogram(target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) void;
pub extern fn glIndexMask(mask: GLuint) void;
pub extern fn glIndexPointer(@"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glIndexd(c: GLdouble) void;
pub extern fn glIndexdv(c: [*c]const GLdouble) void;
pub extern fn glIndexf(c: GLfloat) void;
pub extern fn glIndexfv(c: [*c]const GLfloat) void;
pub extern fn glIndexi(c: GLint) void;
pub extern fn glIndexiv(c: [*c]const GLint) void;
pub extern fn glIndexs(c: GLshort) void;
pub extern fn glIndexsv(c: [*c]const GLshort) void;
pub extern fn glIndexub(c: GLubyte) void;
pub extern fn glIndexubv(c: [*c]const GLubyte) void;
pub extern fn glInitNames() void;
pub extern fn glInterleavedArrays(format: GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glIsEnabled(cap: GLenum) GLboolean;
pub extern fn glIsList(list: GLuint) GLboolean;
pub extern fn glIsTexture(texture: GLuint) GLboolean;
pub extern fn glLightModelf(pname: GLenum, param: GLfloat) void;
pub extern fn glLightModelfv(pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glLightModeli(pname: GLenum, param: GLint) void;
pub extern fn glLightModeliv(pname: GLenum, params: [*c]const GLint) void;
pub extern fn glLightf(light: GLenum, pname: GLenum, param: GLfloat) void;
pub extern fn glLightfv(light: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glLighti(light: GLenum, pname: GLenum, param: GLint) void;
pub extern fn glLightiv(light: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glLineStipple(factor: GLint, pattern: GLushort) void;
pub extern fn glLineWidth(width: GLfloat) void;
pub extern fn glListBase(base: GLuint) void;
pub extern fn glLoadIdentity() void;
pub extern fn glLoadMatrixd(m: [*c]const GLdouble) void;
pub extern fn glLoadMatrixf(m: [*c]const GLfloat) void;
pub extern fn glLoadName(name: GLuint) void;
pub extern fn glLogicOp(opcode: GLenum) void;
pub extern fn glMap1d(target: GLenum, @"u1": GLdouble, @"u2": GLdouble, stride: GLint, order: GLint, points: [*c]const GLdouble) void;
pub extern fn glMap1f(target: GLenum, @"u1": GLfloat, @"u2": GLfloat, stride: GLint, order: GLint, points: [*c]const GLfloat) void;
pub extern fn glMap2d(target: GLenum, @"u1": GLdouble, @"u2": GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: [*c]const GLdouble) void;
pub extern fn glMap2f(target: GLenum, @"u1": GLfloat, @"u2": GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: [*c]const GLfloat) void;
pub extern fn glMapGrid1d(un: GLint, @"u1": GLdouble, @"u2": GLdouble) void;
pub extern fn glMapGrid1f(un: GLint, @"u1": GLfloat, @"u2": GLfloat) void;
pub extern fn glMapGrid2d(un: GLint, @"u1": GLdouble, @"u2": GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble) void;
pub extern fn glMapGrid2f(un: GLint, @"u1": GLfloat, @"u2": GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat) void;
pub extern fn glMaterialf(face: GLenum, pname: GLenum, param: GLfloat) void;
pub extern fn glMaterialfv(face: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glMateriali(face: GLenum, pname: GLenum, param: GLint) void;
pub extern fn glMaterialiv(face: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glMatrixMode(mode: GLenum) void;
pub extern fn glMinmax(target: GLenum, internalformat: GLenum, sink: GLboolean) void;
pub extern fn glMultMatrixd(m: [*c]const GLdouble) void;
pub extern fn glMultMatrixf(m: [*c]const GLfloat) void;
pub extern fn glNewList(list: GLuint, mode: GLenum) void;
pub extern fn glNormal3b(nx: GLbyte, ny: GLbyte, nz: GLbyte) void;
pub extern fn glNormal3bv(v: [*c]const GLbyte) void;
pub extern fn glNormal3d(nx: GLdouble, ny: GLdouble, nz: GLdouble) void;
pub extern fn glNormal3dv(v: [*c]const GLdouble) void;
pub extern fn glNormal3f(nx: GLfloat, ny: GLfloat, nz: GLfloat) void;
pub extern fn glNormal3fv(v: [*c]const GLfloat) void;
pub extern fn glNormal3i(nx: GLint, ny: GLint, nz: GLint) void;
pub extern fn glNormal3iv(v: [*c]const GLint) void;
pub extern fn glNormal3s(nx: GLshort, ny: GLshort, nz: GLshort) void;
pub extern fn glNormal3sv(v: [*c]const GLshort) void;
pub extern fn glNormalPointer(@"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glOrtho(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) void;
pub extern fn glPassThrough(token: GLfloat) void;
pub extern fn glPixelMapfv(map: GLenum, mapsize: GLint, values: [*c]const GLfloat) void;
pub extern fn glPixelMapuiv(map: GLenum, mapsize: GLint, values: [*c]const GLuint) void;
pub extern fn glPixelMapusv(map: GLenum, mapsize: GLint, values: [*c]const GLushort) void;
pub extern fn glPixelStoref(pname: GLenum, param: GLfloat) void;
pub extern fn glPixelStorei(pname: GLenum, param: GLint) void;
pub extern fn glPixelTransferf(pname: GLenum, param: GLfloat) void;
pub extern fn glPixelTransferi(pname: GLenum, param: GLint) void;
pub extern fn glPixelZoom(xfactor: GLfloat, yfactor: GLfloat) void;
pub extern fn glPointSize(size: GLfloat) void;
pub extern fn glPolygonMode(face: GLenum, mode: GLenum) void;
pub extern fn glPolygonOffset(factor: GLfloat, units: GLfloat) void;
pub extern fn glPolygonStipple(mask: [*c]const GLubyte) void;
pub extern fn glPopAttrib() void;
pub extern fn glPopClientAttrib() void;
pub extern fn glPopMatrix() void;
pub extern fn glPopName() void;
pub extern fn glPrioritizeTextures(n: GLsizei, textures: [*c]const GLuint, priorities: [*c]const GLclampf) void;
pub extern fn glPushAttrib(mask: GLbitfield) void;
pub extern fn glPushClientAttrib(mask: GLbitfield) void;
pub extern fn glPushMatrix() void;
pub extern fn glPushName(name: GLuint) void;
pub extern fn glRasterPos2d(x: GLdouble, y: GLdouble) void;
pub extern fn glRasterPos2dv(v: [*c]const GLdouble) void;
pub extern fn glRasterPos2f(x: GLfloat, y: GLfloat) void;
pub extern fn glRasterPos2fv(v: [*c]const GLfloat) void;
pub extern fn glRasterPos2i(x: GLint, y: GLint) void;
pub extern fn glRasterPos2iv(v: [*c]const GLint) void;
pub extern fn glRasterPos2s(x: GLshort, y: GLshort) void;
pub extern fn glRasterPos2sv(v: [*c]const GLshort) void;
pub extern fn glRasterPos3d(x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glRasterPos3dv(v: [*c]const GLdouble) void;
pub extern fn glRasterPos3f(x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glRasterPos3fv(v: [*c]const GLfloat) void;
pub extern fn glRasterPos3i(x: GLint, y: GLint, z: GLint) void;
pub extern fn glRasterPos3iv(v: [*c]const GLint) void;
pub extern fn glRasterPos3s(x: GLshort, y: GLshort, z: GLshort) void;
pub extern fn glRasterPos3sv(v: [*c]const GLshort) void;
pub extern fn glRasterPos4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) void;
pub extern fn glRasterPos4dv(v: [*c]const GLdouble) void;
pub extern fn glRasterPos4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) void;
pub extern fn glRasterPos4fv(v: [*c]const GLfloat) void;
pub extern fn glRasterPos4i(x: GLint, y: GLint, z: GLint, w: GLint) void;
pub extern fn glRasterPos4iv(v: [*c]const GLint) void;
pub extern fn glRasterPos4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) void;
pub extern fn glRasterPos4sv(v: [*c]const GLshort) void;
pub extern fn glReadBuffer(mode: GLenum) void;
pub extern fn glReadPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*GLvoid) void;
pub extern fn glRectd(x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) void;
pub extern fn glRectdv(v1: [*c]const GLdouble, v2: [*c]const GLdouble) void;
pub extern fn glRectf(x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) void;
pub extern fn glRectfv(v1: [*c]const GLfloat, v2: [*c]const GLfloat) void;
pub extern fn glRecti(x1: GLint, y1: GLint, x2: GLint, y2: GLint) void;
pub extern fn glRectiv(v1: [*c]const GLint, v2: [*c]const GLint) void;
pub extern fn glRects(x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) void;
pub extern fn glRectsv(v1: [*c]const GLshort, v2: [*c]const GLshort) void;
pub extern fn glRenderMode(mode: GLenum) GLint;
pub extern fn glResetHistogram(target: GLenum) void;
pub extern fn glResetMinmax(target: GLenum) void;
pub extern fn glRotated(angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glRotatef(angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glScaled(x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glScalef(x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glScissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei) void;
pub extern fn glSelectBuffer(size: GLsizei, buffer: [*c]GLuint) void;
pub extern fn glSeparableFilter2D(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, row: ?*const GLvoid, column: ?*const GLvoid) void;
pub extern fn glShadeModel(mode: GLenum) void;
pub extern fn glStencilFunc(func: GLenum, ref: GLint, mask: GLuint) void;
pub extern fn glStencilMask(mask: GLuint) void;
pub extern fn glStencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum) void;
pub extern fn glTexCoord1d(s: GLdouble) void;
pub extern fn glTexCoord1dv(v: [*c]const GLdouble) void;
pub extern fn glTexCoord1f(s: GLfloat) void;
pub extern fn glTexCoord1fv(v: [*c]const GLfloat) void;
pub extern fn glTexCoord1i(s: GLint) void;
pub extern fn glTexCoord1iv(v: [*c]const GLint) void;
pub extern fn glTexCoord1s(s: GLshort) void;
pub extern fn glTexCoord1sv(v: [*c]const GLshort) void;
pub extern fn glTexCoord2d(s: GLdouble, t: GLdouble) void;
pub extern fn glTexCoord2dv(v: [*c]const GLdouble) void;
pub extern fn glTexCoord2f(s: GLfloat, t: GLfloat) void;
pub extern fn glTexCoord2fv(v: [*c]const GLfloat) void;
pub extern fn glTexCoord2i(s: GLint, t: GLint) void;
pub extern fn glTexCoord2iv(v: [*c]const GLint) void;
pub extern fn glTexCoord2s(s: GLshort, t: GLshort) void;
pub extern fn glTexCoord2sv(v: [*c]const GLshort) void;
pub extern fn glTexCoord3d(s: GLdouble, t: GLdouble, r: GLdouble) void;
pub extern fn glTexCoord3dv(v: [*c]const GLdouble) void;
pub extern fn glTexCoord3f(s: GLfloat, t: GLfloat, r: GLfloat) void;
pub extern fn glTexCoord3fv(v: [*c]const GLfloat) void;
pub extern fn glTexCoord3i(s: GLint, t: GLint, r: GLint) void;
pub extern fn glTexCoord3iv(v: [*c]const GLint) void;
pub extern fn glTexCoord3s(s: GLshort, t: GLshort, r: GLshort) void;
pub extern fn glTexCoord3sv(v: [*c]const GLshort) void;
pub extern fn glTexCoord4d(s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) void;
pub extern fn glTexCoord4dv(v: [*c]const GLdouble) void;
pub extern fn glTexCoord4f(s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) void;
pub extern fn glTexCoord4fv(v: [*c]const GLfloat) void;
pub extern fn glTexCoord4i(s: GLint, t: GLint, r: GLint, q: GLint) void;
pub extern fn glTexCoord4iv(v: [*c]const GLint) void;
pub extern fn glTexCoord4s(s: GLshort, t: GLshort, r: GLshort, q: GLshort) void;
pub extern fn glTexCoord4sv(v: [*c]const GLshort) void;
pub extern fn glTexCoordPointer(size: GLint, @"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glTexEnvf(target: GLenum, pname: GLenum, param: GLfloat) void;
pub extern fn glTexEnvfv(target: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glTexEnvi(target: GLenum, pname: GLenum, param: GLint) void;
pub extern fn glTexEnviv(target: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glTexGend(coord: GLenum, pname: GLenum, param: GLdouble) void;
pub extern fn glTexGendv(coord: GLenum, pname: GLenum, params: [*c]const GLdouble) void;
pub extern fn glTexGenf(coord: GLenum, pname: GLenum, param: GLfloat) void;
pub extern fn glTexGenfv(coord: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glTexGeni(coord: GLenum, pname: GLenum, param: GLint) void;
pub extern fn glTexGeniv(coord: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glTexImage1D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glTexImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glTexImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glTexParameterf(target: GLenum, pname: GLenum, param: GLfloat) void;
pub extern fn glTexParameterfv(target: GLenum, pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glTexParameteri(target: GLenum, pname: GLenum, param: GLint) void;
pub extern fn glTexParameteriv(target: GLenum, pname: GLenum, params: [*c]const GLint) void;
pub extern fn glTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) void;
pub extern fn glTranslated(x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glTranslatef(x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glVertex2d(x: GLdouble, y: GLdouble) void;
pub extern fn glVertex2dv(v: [*c]const GLdouble) void;
pub extern fn glVertex2f(x: GLfloat, y: GLfloat) void;
pub extern fn glVertex2fv(v: [*c]const GLfloat) void;
pub extern fn glVertex2i(x: GLint, y: GLint) void;
pub extern fn glVertex2iv(v: [*c]const GLint) void;
pub extern fn glVertex2s(x: GLshort, y: GLshort) void;
pub extern fn glVertex2sv(v: [*c]const GLshort) void;
pub extern fn glVertex3d(x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glVertex3dv(v: [*c]const GLdouble) void;
pub extern fn glVertex3f(x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glVertex3fv(v: [*c]const GLfloat) void;
pub extern fn glVertex3i(x: GLint, y: GLint, z: GLint) void;
pub extern fn glVertex3iv(v: [*c]const GLint) void;
pub extern fn glVertex3s(x: GLshort, y: GLshort, z: GLshort) void;
pub extern fn glVertex3sv(v: [*c]const GLshort) void;
pub extern fn glVertex4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) void;
pub extern fn glVertex4dv(v: [*c]const GLdouble) void;
pub extern fn glVertex4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) void;
pub extern fn glVertex4fv(v: [*c]const GLfloat) void;
pub extern fn glVertex4i(x: GLint, y: GLint, z: GLint, w: GLint) void;
pub extern fn glVertex4iv(v: [*c]const GLint) void;
pub extern fn glVertex4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) void;
pub extern fn glVertex4sv(v: [*c]const GLshort) void;
pub extern fn glVertexPointer(size: GLint, @"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glViewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei) void;
pub extern fn glSampleCoverage(value: GLclampf, invert: GLboolean) void;
pub extern fn glLoadTransposeMatrixf(m: [*c]const GLfloat) void;
pub extern fn glLoadTransposeMatrixd(m: [*c]const GLdouble) void;
pub extern fn glMultTransposeMatrixf(m: [*c]const GLfloat) void;
pub extern fn glMultTransposeMatrixd(m: [*c]const GLdouble) void;
pub extern fn glCompressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const GLvoid) void;
pub extern fn glCompressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const GLvoid) void;
pub extern fn glCompressedTexImage1D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const GLvoid) void;
pub extern fn glCompressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const GLvoid) void;
pub extern fn glCompressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const GLvoid) void;
pub extern fn glCompressedTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const GLvoid) void;
pub extern fn glGetCompressedTexImage(target: GLenum, lod: GLint, img: ?*GLvoid) void;
pub extern fn glActiveTexture(texture: GLenum) void;
pub extern fn glClientActiveTexture(texture: GLenum) void;
pub extern fn glMultiTexCoord1d(target: GLenum, s: GLdouble) void;
pub extern fn glMultiTexCoord1dv(target: GLenum, v: [*c]const GLdouble) void;
pub extern fn glMultiTexCoord1f(target: GLenum, s: GLfloat) void;
pub extern fn glMultiTexCoord1fv(target: GLenum, v: [*c]const GLfloat) void;
pub extern fn glMultiTexCoord1i(target: GLenum, s: GLint) void;
pub extern fn glMultiTexCoord1iv(target: GLenum, v: [*c]const GLint) void;
pub extern fn glMultiTexCoord1s(target: GLenum, s: GLshort) void;
pub extern fn glMultiTexCoord1sv(target: GLenum, v: [*c]const GLshort) void;
pub extern fn glMultiTexCoord2d(target: GLenum, s: GLdouble, t: GLdouble) void;
pub extern fn glMultiTexCoord2dv(target: GLenum, v: [*c]const GLdouble) void;
pub extern fn glMultiTexCoord2f(target: GLenum, s: GLfloat, t: GLfloat) void;
pub extern fn glMultiTexCoord2fv(target: GLenum, v: [*c]const GLfloat) void;
pub extern fn glMultiTexCoord2i(target: GLenum, s: GLint, t: GLint) void;
pub extern fn glMultiTexCoord2iv(target: GLenum, v: [*c]const GLint) void;
pub extern fn glMultiTexCoord2s(target: GLenum, s: GLshort, t: GLshort) void;
pub extern fn glMultiTexCoord2sv(target: GLenum, v: [*c]const GLshort) void;
pub extern fn glMultiTexCoord3d(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) void;
pub extern fn glMultiTexCoord3dv(target: GLenum, v: [*c]const GLdouble) void;
pub extern fn glMultiTexCoord3f(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) void;
pub extern fn glMultiTexCoord3fv(target: GLenum, v: [*c]const GLfloat) void;
pub extern fn glMultiTexCoord3i(target: GLenum, s: GLint, t: GLint, r: GLint) void;
pub extern fn glMultiTexCoord3iv(target: GLenum, v: [*c]const GLint) void;
pub extern fn glMultiTexCoord3s(target: GLenum, s: GLshort, t: GLshort, r: GLshort) void;
pub extern fn glMultiTexCoord3sv(target: GLenum, v: [*c]const GLshort) void;
pub extern fn glMultiTexCoord4d(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) void;
pub extern fn glMultiTexCoord4dv(target: GLenum, v: [*c]const GLdouble) void;
pub extern fn glMultiTexCoord4f(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) void;
pub extern fn glMultiTexCoord4fv(target: GLenum, v: [*c]const GLfloat) void;
pub extern fn glMultiTexCoord4i(target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) void;
pub extern fn glMultiTexCoord4iv(target: GLenum, v: [*c]const GLint) void;
pub extern fn glMultiTexCoord4s(target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) void;
pub extern fn glMultiTexCoord4sv(target: GLenum, v: [*c]const GLshort) void;
pub extern fn glFogCoordf(coord: GLfloat) void;
pub extern fn glFogCoordfv(coord: [*c]const GLfloat) void;
pub extern fn glFogCoordd(coord: GLdouble) void;
pub extern fn glFogCoorddv(coord: [*c]const GLdouble) void;
pub extern fn glFogCoordPointer(@"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glSecondaryColor3b(red: GLbyte, green: GLbyte, blue: GLbyte) void;
pub extern fn glSecondaryColor3bv(v: [*c]const GLbyte) void;
pub extern fn glSecondaryColor3d(red: GLdouble, green: GLdouble, blue: GLdouble) void;
pub extern fn glSecondaryColor3dv(v: [*c]const GLdouble) void;
pub extern fn glSecondaryColor3f(red: GLfloat, green: GLfloat, blue: GLfloat) void;
pub extern fn glSecondaryColor3fv(v: [*c]const GLfloat) void;
pub extern fn glSecondaryColor3i(red: GLint, green: GLint, blue: GLint) void;
pub extern fn glSecondaryColor3iv(v: [*c]const GLint) void;
pub extern fn glSecondaryColor3s(red: GLshort, green: GLshort, blue: GLshort) void;
pub extern fn glSecondaryColor3sv(v: [*c]const GLshort) void;
pub extern fn glSecondaryColor3ub(red: GLubyte, green: GLubyte, blue: GLubyte) void;
pub extern fn glSecondaryColor3ubv(v: [*c]const GLubyte) void;
pub extern fn glSecondaryColor3ui(red: GLuint, green: GLuint, blue: GLuint) void;
pub extern fn glSecondaryColor3uiv(v: [*c]const GLuint) void;
pub extern fn glSecondaryColor3us(red: GLushort, green: GLushort, blue: GLushort) void;
pub extern fn glSecondaryColor3usv(v: [*c]const GLushort) void;
pub extern fn glSecondaryColorPointer(size: GLint, @"type": GLenum, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glPointParameterf(pname: GLenum, param: GLfloat) void;
pub extern fn glPointParameterfv(pname: GLenum, params: [*c]const GLfloat) void;
pub extern fn glPointParameteri(pname: GLenum, param: GLint) void;
pub extern fn glPointParameteriv(pname: GLenum, params: [*c]const GLint) void;
pub extern fn glBlendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) void;
pub extern fn glMultiDrawArrays(mode: GLenum, first: [*c]const GLint, count: [*c]const GLsizei, primcount: GLsizei) void;
pub extern fn glMultiDrawElements(mode: GLenum, count: [*c]const GLsizei, @"type": GLenum, indices: [*c]const ?*const GLvoid, primcount: GLsizei) void;
pub extern fn glWindowPos2d(x: GLdouble, y: GLdouble) void;
pub extern fn glWindowPos2dv(v: [*c]const GLdouble) void;
pub extern fn glWindowPos2f(x: GLfloat, y: GLfloat) void;
pub extern fn glWindowPos2fv(v: [*c]const GLfloat) void;
pub extern fn glWindowPos2i(x: GLint, y: GLint) void;
pub extern fn glWindowPos2iv(v: [*c]const GLint) void;
pub extern fn glWindowPos2s(x: GLshort, y: GLshort) void;
pub extern fn glWindowPos2sv(v: [*c]const GLshort) void;
pub extern fn glWindowPos3d(x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glWindowPos3dv(v: [*c]const GLdouble) void;
pub extern fn glWindowPos3f(x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glWindowPos3fv(v: [*c]const GLfloat) void;
pub extern fn glWindowPos3i(x: GLint, y: GLint, z: GLint) void;
pub extern fn glWindowPos3iv(v: [*c]const GLint) void;
pub extern fn glWindowPos3s(x: GLshort, y: GLshort, z: GLshort) void;
pub extern fn glWindowPos3sv(v: [*c]const GLshort) void;
pub extern fn glGenQueries(n: GLsizei, ids: [*c]GLuint) void;
pub extern fn glDeleteQueries(n: GLsizei, ids: [*c]const GLuint) void;
pub extern fn glIsQuery(id: GLuint) GLboolean;
pub extern fn glBeginQuery(target: GLenum, id: GLuint) void;
pub extern fn glEndQuery(target: GLenum) void;
pub extern fn glGetQueryiv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetQueryObjectiv(id: GLuint, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetQueryObjectuiv(id: GLuint, pname: GLenum, params: [*c]GLuint) void;
pub extern fn glBindBuffer(target: GLenum, buffer: GLuint) void;
pub extern fn glDeleteBuffers(n: GLsizei, buffers: [*c]const GLuint) void;
pub extern fn glGenBuffers(n: GLsizei, buffers: [*c]GLuint) void;
pub extern fn glIsBuffer(buffer: GLuint) GLboolean;
pub extern fn glBufferData(target: GLenum, size: GLsizeiptr, data: ?*const GLvoid, usage: GLenum) void;
pub extern fn glBufferSubData(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: ?*const GLvoid) void;
pub extern fn glGetBufferSubData(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: ?*GLvoid) void;
pub extern fn glMapBuffer(target: GLenum, access: GLenum) ?*GLvoid;
pub extern fn glUnmapBuffer(target: GLenum) GLboolean;
pub extern fn glGetBufferParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetBufferPointerv(target: GLenum, pname: GLenum, params: [*c]?*GLvoid) void;
pub extern fn glDrawBuffers(n: GLsizei, bufs: [*c]const GLenum) void;
pub extern fn glVertexAttrib1d(index: GLuint, x: GLdouble) void;
pub extern fn glVertexAttrib1dv(index: GLuint, v: [*c]const GLdouble) void;
pub extern fn glVertexAttrib1f(index: GLuint, x: GLfloat) void;
pub extern fn glVertexAttrib1fv(index: GLuint, v: [*c]const GLfloat) void;
pub extern fn glVertexAttrib1s(index: GLuint, x: GLshort) void;
pub extern fn glVertexAttrib1sv(index: GLuint, v: [*c]const GLshort) void;
pub extern fn glVertexAttrib2d(index: GLuint, x: GLdouble, y: GLdouble) void;
pub extern fn glVertexAttrib2dv(index: GLuint, v: [*c]const GLdouble) void;
pub extern fn glVertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat) void;
pub extern fn glVertexAttrib2fv(index: GLuint, v: [*c]const GLfloat) void;
pub extern fn glVertexAttrib2s(index: GLuint, x: GLshort, y: GLshort) void;
pub extern fn glVertexAttrib2sv(index: GLuint, v: [*c]const GLshort) void;
pub extern fn glVertexAttrib3d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) void;
pub extern fn glVertexAttrib3dv(index: GLuint, v: [*c]const GLdouble) void;
pub extern fn glVertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) void;
pub extern fn glVertexAttrib3fv(index: GLuint, v: [*c]const GLfloat) void;
pub extern fn glVertexAttrib3s(index: GLuint, x: GLshort, y: GLshort, z: GLshort) void;
pub extern fn glVertexAttrib3sv(index: GLuint, v: [*c]const GLshort) void;
pub extern fn glVertexAttrib4Nbv(index: GLuint, v: [*c]const GLbyte) void;
pub extern fn glVertexAttrib4Niv(index: GLuint, v: [*c]const GLint) void;
pub extern fn glVertexAttrib4Nsv(index: GLuint, v: [*c]const GLshort) void;
pub extern fn glVertexAttrib4Nub(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) void;
pub extern fn glVertexAttrib4Nubv(index: GLuint, v: [*c]const GLubyte) void;
pub extern fn glVertexAttrib4Nuiv(index: GLuint, v: [*c]const GLuint) void;
pub extern fn glVertexAttrib4Nusv(index: GLuint, v: [*c]const GLushort) void;
pub extern fn glVertexAttrib4bv(index: GLuint, v: [*c]const GLbyte) void;
pub extern fn glVertexAttrib4d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) void;
pub extern fn glVertexAttrib4dv(index: GLuint, v: [*c]const GLdouble) void;
pub extern fn glVertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) void;
pub extern fn glVertexAttrib4fv(index: GLuint, v: [*c]const GLfloat) void;
pub extern fn glVertexAttrib4iv(index: GLuint, v: [*c]const GLint) void;
pub extern fn glVertexAttrib4s(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) void;
pub extern fn glVertexAttrib4sv(index: GLuint, v: [*c]const GLshort) void;
pub extern fn glVertexAttrib4ubv(index: GLuint, v: [*c]const GLubyte) void;
pub extern fn glVertexAttrib4uiv(index: GLuint, v: [*c]const GLuint) void;
pub extern fn glVertexAttrib4usv(index: GLuint, v: [*c]const GLushort) void;
pub extern fn glVertexAttribPointer(index: GLuint, size: GLint, @"type": GLenum, normalized: GLboolean, stride: GLsizei, pointer: ?*const GLvoid) void;
pub extern fn glEnableVertexAttribArray(index: GLuint) void;
pub extern fn glDisableVertexAttribArray(index: GLuint) void;
pub extern fn glGetVertexAttribdv(index: GLuint, pname: GLenum, params: [*c]GLdouble) void;
pub extern fn glGetVertexAttribfv(index: GLuint, pname: GLenum, params: [*c]GLfloat) void;
pub extern fn glGetVertexAttribiv(index: GLuint, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetVertexAttribPointerv(index: GLuint, pname: GLenum, pointer: [*c]?*GLvoid) void;
pub extern fn glDeleteShader(shader: GLuint) void;
pub extern fn glDetachShader(program: GLuint, shader: GLuint) void;
pub extern fn glCreateShader(@"type": GLenum) GLuint;
pub extern fn glShaderSource(shader: GLuint, count: GLsizei, string: [*c]const [*c]const GLchar, length: [*c]const GLint) void;
pub extern fn glCompileShader(shader: GLuint) void;
pub extern fn glCreateProgram() GLuint;
pub extern fn glAttachShader(program: GLuint, shader: GLuint) void;
pub extern fn glLinkProgram(program: GLuint) void;
pub extern fn glUseProgram(program: GLuint) void;
pub extern fn glDeleteProgram(program: GLuint) void;
pub extern fn glValidateProgram(program: GLuint) void;
pub extern fn glUniform1f(location: GLint, v0: GLfloat) void;
pub extern fn glUniform2f(location: GLint, v0: GLfloat, v1: GLfloat) void;
pub extern fn glUniform3f(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) void;
pub extern fn glUniform4f(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) void;
pub extern fn glUniform1i(location: GLint, v0: GLint) void;
pub extern fn glUniform2i(location: GLint, v0: GLint, v1: GLint) void;
pub extern fn glUniform3i(location: GLint, v0: GLint, v1: GLint, v2: GLint) void;
pub extern fn glUniform4i(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) void;
pub extern fn glUniform1fv(location: GLint, count: GLsizei, value: [*c]const GLfloat) void;
pub extern fn glUniform2fv(location: GLint, count: GLsizei, value: [*c]const GLfloat) void;
pub extern fn glUniform3fv(location: GLint, count: GLsizei, value: [*c]const GLfloat) void;
pub extern fn glUniform4fv(location: GLint, count: GLsizei, value: [*c]const GLfloat) void;
pub extern fn glUniform1iv(location: GLint, count: GLsizei, value: [*c]const GLint) void;
pub extern fn glUniform2iv(location: GLint, count: GLsizei, value: [*c]const GLint) void;
pub extern fn glUniform3iv(location: GLint, count: GLsizei, value: [*c]const GLint) void;
pub extern fn glUniform4iv(location: GLint, count: GLsizei, value: [*c]const GLint) void;
pub extern fn glUniformMatrix2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glIsShader(shader: GLuint) GLboolean;
pub extern fn glIsProgram(program: GLuint) GLboolean;
pub extern fn glGetShaderiv(shader: GLuint, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetProgramiv(program: GLuint, pname: GLenum, params: [*c]GLint) void;
pub extern fn glGetAttachedShaders(program: GLuint, maxCount: GLsizei, count: [*c]GLsizei, shaders: [*c]GLuint) void;
pub extern fn glGetShaderInfoLog(shader: GLuint, bufSize: GLsizei, length: [*c]GLsizei, infoLog: [*c]GLchar) void;
pub extern fn glGetProgramInfoLog(program: GLuint, bufSize: GLsizei, length: [*c]GLsizei, infoLog: [*c]GLchar) void;
pub extern fn glGetUniformLocation(program: GLuint, name: [*c]const GLchar) GLint;
pub extern fn glGetActiveUniform(program: GLuint, index: GLuint, bufSize: GLsizei, length: [*c]GLsizei, size: [*c]GLint, @"type": [*c]GLenum, name: [*c]GLchar) void;
pub extern fn glGetUniformfv(program: GLuint, location: GLint, params: [*c]GLfloat) void;
pub extern fn glGetUniformiv(program: GLuint, location: GLint, params: [*c]GLint) void;
pub extern fn glGetShaderSource(shader: GLuint, bufSize: GLsizei, length: [*c]GLsizei, source: [*c]GLchar) void;
pub extern fn glBindAttribLocation(program: GLuint, index: GLuint, name: [*c]const GLchar) void;
pub extern fn glGetActiveAttrib(program: GLuint, index: GLuint, bufSize: GLsizei, length: [*c]GLsizei, size: [*c]GLint, @"type": [*c]GLenum, name: [*c]GLchar) void;
pub extern fn glGetAttribLocation(program: GLuint, name: [*c]const GLchar) GLint;
pub extern fn glStencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint) void;
pub extern fn glStencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum) void;
pub extern fn glStencilMaskSeparate(face: GLenum, mask: GLuint) void;
pub extern fn glUniformMatrix2x3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix3x2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix2x4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix4x2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix3x4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub extern fn glUniformMatrix4x3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: [*c]const GLfloat) void;
pub const GLFWglproc = ?*const fn () callconv(.C) void;
pub const GLFWvkproc = ?*const fn () callconv(.C) void;
pub const struct_GLFWmonitor = opaque {};
pub const GLFWmonitor = struct_GLFWmonitor;
pub const struct_GLFWwindow = opaque {};
pub const GLFWwindow = struct_GLFWwindow;
pub const struct_GLFWcursor = opaque {};
pub const GLFWcursor = struct_GLFWcursor;
pub const GLFWerrorfun = ?*const fn (c_int, [*c]const u8) callconv(.C) void;
pub const GLFWwindowposfun = ?*const fn (?*GLFWwindow, c_int, c_int) callconv(.C) void;
pub const GLFWwindowsizefun = ?*const fn (?*GLFWwindow, c_int, c_int) callconv(.C) void;
pub const GLFWwindowclosefun = ?*const fn (?*GLFWwindow) callconv(.C) void;
pub const GLFWwindowrefreshfun = ?*const fn (?*GLFWwindow) callconv(.C) void;
pub const GLFWwindowfocusfun = ?*const fn (?*GLFWwindow, c_int) callconv(.C) void;
pub const GLFWwindowiconifyfun = ?*const fn (?*GLFWwindow, c_int) callconv(.C) void;
pub const GLFWwindowmaximizefun = ?*const fn (?*GLFWwindow, c_int) callconv(.C) void;
pub const GLFWframebuffersizefun = ?*const fn (?*GLFWwindow, c_int, c_int) callconv(.C) void;
pub const GLFWwindowcontentscalefun = ?*const fn (?*GLFWwindow, f32, f32) callconv(.C) void;
pub const GLFWmousebuttonfun = ?*const fn (?*GLFWwindow, c_int, c_int, c_int) callconv(.C) void;
pub const GLFWcursorposfun = ?*const fn (?*GLFWwindow, f64, f64) callconv(.C) void;
pub const GLFWcursorenterfun = ?*const fn (?*GLFWwindow, c_int) callconv(.C) void;
pub const GLFWscrollfun = ?*const fn (?*GLFWwindow, f64, f64) callconv(.C) void;
pub const GLFWkeyfun = ?*const fn (?*GLFWwindow, c_int, c_int, c_int, c_int) callconv(.C) void;
pub const GLFWcharfun = ?*const fn (?*GLFWwindow, c_uint) callconv(.C) void;
pub const GLFWcharmodsfun = ?*const fn (?*GLFWwindow, c_uint, c_int) callconv(.C) void;
pub const GLFWdropfun = ?*const fn (?*GLFWwindow, c_int, [*c][*c]const u8) callconv(.C) void;
pub const GLFWmonitorfun = ?*const fn (?*GLFWmonitor, c_int) callconv(.C) void;
pub const GLFWjoystickfun = ?*const fn (c_int, c_int) callconv(.C) void;
pub const struct_GLFWvidmode = extern struct {
    width: c_int = @import("std").mem.zeroes(c_int),
    height: c_int = @import("std").mem.zeroes(c_int),
    redBits: c_int = @import("std").mem.zeroes(c_int),
    greenBits: c_int = @import("std").mem.zeroes(c_int),
    blueBits: c_int = @import("std").mem.zeroes(c_int),
    refreshRate: c_int = @import("std").mem.zeroes(c_int),
};
pub const GLFWvidmode = struct_GLFWvidmode;
pub const struct_GLFWgammaramp = extern struct {
    red: [*c]c_ushort = @import("std").mem.zeroes([*c]c_ushort),
    green: [*c]c_ushort = @import("std").mem.zeroes([*c]c_ushort),
    blue: [*c]c_ushort = @import("std").mem.zeroes([*c]c_ushort),
    size: c_uint = @import("std").mem.zeroes(c_uint),
};
pub const GLFWgammaramp = struct_GLFWgammaramp;
pub const struct_GLFWimage = extern struct {
    width: c_int = @import("std").mem.zeroes(c_int),
    height: c_int = @import("std").mem.zeroes(c_int),
    pixels: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub const GLFWimage = struct_GLFWimage;
pub const struct_GLFWgamepadstate = extern struct {
    buttons: [15]u8 = @import("std").mem.zeroes([15]u8),
    axes: [6]f32 = @import("std").mem.zeroes([6]f32),
};
pub const GLFWgamepadstate = struct_GLFWgamepadstate;
pub extern fn glfwInit() c_int;
pub extern fn glfwTerminate() void;
pub extern fn glfwInitHint(hint: c_int, value: c_int) void;
pub extern fn glfwGetVersion(major: [*c]c_int, minor: [*c]c_int, rev: [*c]c_int) void;
pub extern fn glfwGetVersionString() [*c]const u8;
pub extern fn glfwGetError(description: [*c][*c]const u8) c_int;
pub extern fn glfwSetErrorCallback(callback: GLFWerrorfun) GLFWerrorfun;
pub extern fn glfwGetMonitors(count: [*c]c_int) [*c]?*GLFWmonitor;
pub extern fn glfwGetPrimaryMonitor() ?*GLFWmonitor;
pub extern fn glfwGetMonitorPos(monitor: ?*GLFWmonitor, xpos: [*c]c_int, ypos: [*c]c_int) void;
pub extern fn glfwGetMonitorWorkarea(monitor: ?*GLFWmonitor, xpos: [*c]c_int, ypos: [*c]c_int, width: [*c]c_int, height: [*c]c_int) void;
pub extern fn glfwGetMonitorPhysicalSize(monitor: ?*GLFWmonitor, widthMM: [*c]c_int, heightMM: [*c]c_int) void;
pub extern fn glfwGetMonitorContentScale(monitor: ?*GLFWmonitor, xscale: [*c]f32, yscale: [*c]f32) void;
pub extern fn glfwGetMonitorName(monitor: ?*GLFWmonitor) [*c]const u8;
pub extern fn glfwSetMonitorUserPointer(monitor: ?*GLFWmonitor, pointer: ?*anyopaque) void;
pub extern fn glfwGetMonitorUserPointer(monitor: ?*GLFWmonitor) ?*anyopaque;
pub extern fn glfwSetMonitorCallback(callback: GLFWmonitorfun) GLFWmonitorfun;
pub extern fn glfwGetVideoModes(monitor: ?*GLFWmonitor, count: [*c]c_int) [*c]const GLFWvidmode;
pub extern fn glfwGetVideoMode(monitor: ?*GLFWmonitor) [*c]const GLFWvidmode;
pub extern fn glfwSetGamma(monitor: ?*GLFWmonitor, gamma: f32) void;
pub extern fn glfwGetGammaRamp(monitor: ?*GLFWmonitor) [*c]const GLFWgammaramp;
pub extern fn glfwSetGammaRamp(monitor: ?*GLFWmonitor, ramp: [*c]const GLFWgammaramp) void;
pub extern fn glfwDefaultWindowHints() void;
pub extern fn glfwWindowHint(hint: c_int, value: c_int) void;
pub extern fn glfwWindowHintString(hint: c_int, value: [*c]const u8) void;
pub extern fn glfwCreateWindow(width: c_int, height: c_int, title: [*c]const u8, monitor: ?*GLFWmonitor, share: ?*GLFWwindow) ?*GLFWwindow;
pub extern fn glfwDestroyWindow(window: ?*GLFWwindow) void;
pub extern fn glfwWindowShouldClose(window: ?*GLFWwindow) c_int;
pub extern fn glfwSetWindowShouldClose(window: ?*GLFWwindow, value: c_int) void;
pub extern fn glfwSetWindowTitle(window: ?*GLFWwindow, title: [*c]const u8) void;
pub extern fn glfwSetWindowIcon(window: ?*GLFWwindow, count: c_int, images: [*c]const GLFWimage) void;
pub extern fn glfwGetWindowPos(window: ?*GLFWwindow, xpos: [*c]c_int, ypos: [*c]c_int) void;
pub extern fn glfwSetWindowPos(window: ?*GLFWwindow, xpos: c_int, ypos: c_int) void;
pub extern fn glfwGetWindowSize(window: ?*GLFWwindow, width: [*c]c_int, height: [*c]c_int) void;
pub extern fn glfwSetWindowSizeLimits(window: ?*GLFWwindow, minwidth: c_int, minheight: c_int, maxwidth: c_int, maxheight: c_int) void;
pub extern fn glfwSetWindowAspectRatio(window: ?*GLFWwindow, numer: c_int, denom: c_int) void;
pub extern fn glfwSetWindowSize(window: ?*GLFWwindow, width: c_int, height: c_int) void;
pub extern fn glfwGetFramebufferSize(window: ?*GLFWwindow, width: [*c]c_int, height: [*c]c_int) void;
pub extern fn glfwGetWindowFrameSize(window: ?*GLFWwindow, left: [*c]c_int, top: [*c]c_int, right: [*c]c_int, bottom: [*c]c_int) void;
pub extern fn glfwGetWindowContentScale(window: ?*GLFWwindow, xscale: [*c]f32, yscale: [*c]f32) void;
pub extern fn glfwGetWindowOpacity(window: ?*GLFWwindow) f32;
pub extern fn glfwSetWindowOpacity(window: ?*GLFWwindow, opacity: f32) void;
pub extern fn glfwIconifyWindow(window: ?*GLFWwindow) void;
pub extern fn glfwRestoreWindow(window: ?*GLFWwindow) void;
pub extern fn glfwMaximizeWindow(window: ?*GLFWwindow) void;
pub extern fn glfwShowWindow(window: ?*GLFWwindow) void;
pub extern fn glfwHideWindow(window: ?*GLFWwindow) void;
pub extern fn glfwFocusWindow(window: ?*GLFWwindow) void;
pub extern fn glfwRequestWindowAttention(window: ?*GLFWwindow) void;
pub extern fn glfwGetWindowMonitor(window: ?*GLFWwindow) ?*GLFWmonitor;
pub extern fn glfwSetWindowMonitor(window: ?*GLFWwindow, monitor: ?*GLFWmonitor, xpos: c_int, ypos: c_int, width: c_int, height: c_int, refreshRate: c_int) void;
pub extern fn glfwGetWindowAttrib(window: ?*GLFWwindow, attrib: c_int) c_int;
pub extern fn glfwSetWindowAttrib(window: ?*GLFWwindow, attrib: c_int, value: c_int) void;
pub extern fn glfwSetWindowUserPointer(window: ?*GLFWwindow, pointer: ?*anyopaque) void;
pub extern fn glfwGetWindowUserPointer(window: ?*GLFWwindow) ?*anyopaque;
pub extern fn glfwSetWindowPosCallback(window: ?*GLFWwindow, callback: GLFWwindowposfun) GLFWwindowposfun;
pub extern fn glfwSetWindowSizeCallback(window: ?*GLFWwindow, callback: GLFWwindowsizefun) GLFWwindowsizefun;
pub extern fn glfwSetWindowCloseCallback(window: ?*GLFWwindow, callback: GLFWwindowclosefun) GLFWwindowclosefun;
pub extern fn glfwSetWindowRefreshCallback(window: ?*GLFWwindow, callback: GLFWwindowrefreshfun) GLFWwindowrefreshfun;
pub extern fn glfwSetWindowFocusCallback(window: ?*GLFWwindow, callback: GLFWwindowfocusfun) GLFWwindowfocusfun;
pub extern fn glfwSetWindowIconifyCallback(window: ?*GLFWwindow, callback: GLFWwindowiconifyfun) GLFWwindowiconifyfun;
pub extern fn glfwSetWindowMaximizeCallback(window: ?*GLFWwindow, callback: GLFWwindowmaximizefun) GLFWwindowmaximizefun;
pub extern fn glfwSetFramebufferSizeCallback(window: ?*GLFWwindow, callback: GLFWframebuffersizefun) GLFWframebuffersizefun;
pub extern fn glfwSetWindowContentScaleCallback(window: ?*GLFWwindow, callback: GLFWwindowcontentscalefun) GLFWwindowcontentscalefun;
pub extern fn glfwPollEvents() void;
pub extern fn glfwWaitEvents() void;
pub extern fn glfwWaitEventsTimeout(timeout: f64) void;
pub extern fn glfwPostEmptyEvent() void;
pub extern fn glfwGetInputMode(window: ?*GLFWwindow, mode: c_int) c_int;
pub extern fn glfwSetInputMode(window: ?*GLFWwindow, mode: c_int, value: c_int) void;
pub extern fn glfwRawMouseMotionSupported() c_int;
pub extern fn glfwGetKeyName(key: c_int, scancode: c_int) [*c]const u8;
pub extern fn glfwGetKeyScancode(key: c_int) c_int;
pub extern fn glfwGetKey(window: ?*GLFWwindow, key: c_int) c_int;
pub extern fn glfwGetMouseButton(window: ?*GLFWwindow, button: c_int) c_int;
pub extern fn glfwGetCursorPos(window: ?*GLFWwindow, xpos: [*c]f64, ypos: [*c]f64) void;
pub extern fn glfwSetCursorPos(window: ?*GLFWwindow, xpos: f64, ypos: f64) void;
pub extern fn glfwCreateCursor(image: [*c]const GLFWimage, xhot: c_int, yhot: c_int) ?*GLFWcursor;
pub extern fn glfwCreateStandardCursor(shape: c_int) ?*GLFWcursor;
pub extern fn glfwDestroyCursor(cursor: ?*GLFWcursor) void;
pub extern fn glfwSetCursor(window: ?*GLFWwindow, cursor: ?*GLFWcursor) void;
pub extern fn glfwSetKeyCallback(window: ?*GLFWwindow, callback: GLFWkeyfun) GLFWkeyfun;
pub extern fn glfwSetCharCallback(window: ?*GLFWwindow, callback: GLFWcharfun) GLFWcharfun;
pub extern fn glfwSetCharModsCallback(window: ?*GLFWwindow, callback: GLFWcharmodsfun) GLFWcharmodsfun;
pub extern fn glfwSetMouseButtonCallback(window: ?*GLFWwindow, callback: GLFWmousebuttonfun) GLFWmousebuttonfun;
pub extern fn glfwSetCursorPosCallback(window: ?*GLFWwindow, callback: GLFWcursorposfun) GLFWcursorposfun;
pub extern fn glfwSetCursorEnterCallback(window: ?*GLFWwindow, callback: GLFWcursorenterfun) GLFWcursorenterfun;
pub extern fn glfwSetScrollCallback(window: ?*GLFWwindow, callback: GLFWscrollfun) GLFWscrollfun;
pub extern fn glfwSetDropCallback(window: ?*GLFWwindow, callback: GLFWdropfun) GLFWdropfun;
pub extern fn glfwJoystickPresent(jid: c_int) c_int;
pub extern fn glfwGetJoystickAxes(jid: c_int, count: [*c]c_int) [*c]const f32;
pub extern fn glfwGetJoystickButtons(jid: c_int, count: [*c]c_int) [*c]const u8;
pub extern fn glfwGetJoystickHats(jid: c_int, count: [*c]c_int) [*c]const u8;
pub extern fn glfwGetJoystickName(jid: c_int) [*c]const u8;
pub extern fn glfwGetJoystickGUID(jid: c_int) [*c]const u8;
pub extern fn glfwSetJoystickUserPointer(jid: c_int, pointer: ?*anyopaque) void;
pub extern fn glfwGetJoystickUserPointer(jid: c_int) ?*anyopaque;
pub extern fn glfwJoystickIsGamepad(jid: c_int) c_int;
pub extern fn glfwSetJoystickCallback(callback: GLFWjoystickfun) GLFWjoystickfun;
pub extern fn glfwUpdateGamepadMappings(string: [*c]const u8) c_int;
pub extern fn glfwGetGamepadName(jid: c_int) [*c]const u8;
pub extern fn glfwGetGamepadState(jid: c_int, state: [*c]GLFWgamepadstate) c_int;
pub extern fn glfwSetClipboardString(window: ?*GLFWwindow, string: [*c]const u8) void;
pub extern fn glfwGetClipboardString(window: ?*GLFWwindow) [*c]const u8;
pub extern fn glfwGetTime() f64;
pub extern fn glfwSetTime(time: f64) void;
pub extern fn glfwGetTimerValue() u64;
pub extern fn glfwGetTimerFrequency() u64;
pub extern fn glfwMakeContextCurrent(window: ?*GLFWwindow) void;
pub extern fn glfwGetCurrentContext() ?*GLFWwindow;
pub extern fn glfwSwapBuffers(window: ?*GLFWwindow) void;
pub extern fn glfwSwapInterval(interval: c_int) void;
pub extern fn glfwExtensionSupported(extension: [*c]const u8) c_int;
pub extern fn glfwGetProcAddress(procname: [*c]const u8) GLFWglproc;
pub extern fn glfwVulkanSupported() c_int;
pub extern fn glfwGetRequiredInstanceExtensions(count: [*c]u32) [*c][*c]const u8;
pub extern fn glfwGetInstanceProcAddress(instance: VkInstance, procname: [*c]const u8) GLFWvkproc;
pub extern fn glfwGetPhysicalDevicePresentationSupport(instance: VkInstance, device: VkPhysicalDevice, queuefamily: u32) c_int;
pub extern fn glfwCreateWindowSurface(instance: VkInstance, window: ?*GLFWwindow, allocator: [*c]const VkAllocationCallbacks, surface: [*c]VkSurfaceKHR) VkResult;
pub const __llvm__ = @as(c_int, 1);
pub const __clang__ = @as(c_int, 1);
pub const __clang_major__ = @as(c_int, 18);
pub const __clang_minor__ = @as(c_int, 1);
pub const __clang_patchlevel__ = @as(c_int, 7);
pub const __clang_version__ = "18.1.7 ";
pub const __GNUC__ = @as(c_int, 4);
pub const __GNUC_MINOR__ = @as(c_int, 2);
pub const __GNUC_PATCHLEVEL__ = @as(c_int, 1);
pub const __GXX_ABI_VERSION = @as(c_int, 1002);
pub const __ATOMIC_RELAXED = @as(c_int, 0);
pub const __ATOMIC_CONSUME = @as(c_int, 1);
pub const __ATOMIC_ACQUIRE = @as(c_int, 2);
pub const __ATOMIC_RELEASE = @as(c_int, 3);
pub const __ATOMIC_ACQ_REL = @as(c_int, 4);
pub const __ATOMIC_SEQ_CST = @as(c_int, 5);
pub const __MEMORY_SCOPE_SYSTEM = @as(c_int, 0);
pub const __MEMORY_SCOPE_DEVICE = @as(c_int, 1);
pub const __MEMORY_SCOPE_WRKGRP = @as(c_int, 2);
pub const __MEMORY_SCOPE_WVFRNT = @as(c_int, 3);
pub const __MEMORY_SCOPE_SINGLE = @as(c_int, 4);
pub const __OPENCL_MEMORY_SCOPE_WORK_ITEM = @as(c_int, 0);
pub const __OPENCL_MEMORY_SCOPE_WORK_GROUP = @as(c_int, 1);
pub const __OPENCL_MEMORY_SCOPE_DEVICE = @as(c_int, 2);
pub const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES = @as(c_int, 3);
pub const __OPENCL_MEMORY_SCOPE_SUB_GROUP = @as(c_int, 4);
pub const __FPCLASS_SNAN = @as(c_int, 0x0001);
pub const __FPCLASS_QNAN = @as(c_int, 0x0002);
pub const __FPCLASS_NEGINF = @as(c_int, 0x0004);
pub const __FPCLASS_NEGNORMAL = @as(c_int, 0x0008);
pub const __FPCLASS_NEGSUBNORMAL = @as(c_int, 0x0010);
pub const __FPCLASS_NEGZERO = @as(c_int, 0x0020);
pub const __FPCLASS_POSZERO = @as(c_int, 0x0040);
pub const __FPCLASS_POSSUBNORMAL = @as(c_int, 0x0080);
pub const __FPCLASS_POSNORMAL = @as(c_int, 0x0100);
pub const __FPCLASS_POSINF = @as(c_int, 0x0200);
pub const __PRAGMA_REDEFINE_EXTNAME = @as(c_int, 1);
pub const __VERSION__ = "Clang 18.1.7";
pub const __OBJC_BOOL_IS_BOOL = @as(c_int, 1);
pub const __CONSTANT_CFSTRINGS__ = @as(c_int, 1);
pub const __block = @compileError("unable to translate macro: undefined identifier `__blocks__`");
// (no file):42:9
pub const __BLOCKS__ = @as(c_int, 1);
pub const __clang_literal_encoding__ = "UTF-8";
pub const __clang_wide_literal_encoding__ = "UTF-32";
pub const __ORDER_LITTLE_ENDIAN__ = @as(c_int, 1234);
pub const __ORDER_BIG_ENDIAN__ = @as(c_int, 4321);
pub const __ORDER_PDP_ENDIAN__ = @as(c_int, 3412);
pub const __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
pub const __LITTLE_ENDIAN__ = @as(c_int, 1);
pub const _LP64 = @as(c_int, 1);
pub const __LP64__ = @as(c_int, 1);
pub const __CHAR_BIT__ = @as(c_int, 8);
pub const __BOOL_WIDTH__ = @as(c_int, 8);
pub const __SHRT_WIDTH__ = @as(c_int, 16);
pub const __INT_WIDTH__ = @as(c_int, 32);
pub const __LONG_WIDTH__ = @as(c_int, 64);
pub const __LLONG_WIDTH__ = @as(c_int, 64);
pub const __BITINT_MAXWIDTH__ = @as(c_int, 128);
pub const __SCHAR_MAX__ = @as(c_int, 127);
pub const __SHRT_MAX__ = @as(c_int, 32767);
pub const __INT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __LONG_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __LONG_LONG_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __WCHAR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WCHAR_WIDTH__ = @as(c_int, 32);
pub const __WINT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WINT_WIDTH__ = @as(c_int, 32);
pub const __INTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTMAX_WIDTH__ = @as(c_int, 64);
pub const __SIZE_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __SIZE_WIDTH__ = @as(c_int, 64);
pub const __UINTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTMAX_WIDTH__ = @as(c_int, 64);
pub const __PTRDIFF_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __PTRDIFF_WIDTH__ = @as(c_int, 64);
pub const __INTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTPTR_WIDTH__ = @as(c_int, 64);
pub const __UINTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTPTR_WIDTH__ = @as(c_int, 64);
pub const __SIZEOF_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_FLOAT__ = @as(c_int, 4);
pub const __SIZEOF_INT__ = @as(c_int, 4);
pub const __SIZEOF_LONG__ = @as(c_int, 8);
pub const __SIZEOF_LONG_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_LONG_LONG__ = @as(c_int, 8);
pub const __SIZEOF_POINTER__ = @as(c_int, 8);
pub const __SIZEOF_SHORT__ = @as(c_int, 2);
pub const __SIZEOF_PTRDIFF_T__ = @as(c_int, 8);
pub const __SIZEOF_SIZE_T__ = @as(c_int, 8);
pub const __SIZEOF_WCHAR_T__ = @as(c_int, 4);
pub const __SIZEOF_WINT_T__ = @as(c_int, 4);
pub const __SIZEOF_INT128__ = @as(c_int, 16);
pub const __INTMAX_TYPE__ = c_long;
pub const __INTMAX_FMTd__ = "ld";
pub const __INTMAX_FMTi__ = "li";
pub const __INTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `L`");
// (no file):97:9
pub const __UINTMAX_TYPE__ = c_ulong;
pub const __UINTMAX_FMTo__ = "lo";
pub const __UINTMAX_FMTu__ = "lu";
pub const __UINTMAX_FMTx__ = "lx";
pub const __UINTMAX_FMTX__ = "lX";
pub const __UINTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `UL`");
// (no file):103:9
pub const __PTRDIFF_TYPE__ = c_long;
pub const __PTRDIFF_FMTd__ = "ld";
pub const __PTRDIFF_FMTi__ = "li";
pub const __INTPTR_TYPE__ = c_long;
pub const __INTPTR_FMTd__ = "ld";
pub const __INTPTR_FMTi__ = "li";
pub const __SIZE_TYPE__ = c_ulong;
pub const __SIZE_FMTo__ = "lo";
pub const __SIZE_FMTu__ = "lu";
pub const __SIZE_FMTx__ = "lx";
pub const __SIZE_FMTX__ = "lX";
pub const __WCHAR_TYPE__ = c_int;
pub const __WINT_TYPE__ = c_int;
pub const __SIG_ATOMIC_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __SIG_ATOMIC_WIDTH__ = @as(c_int, 32);
pub const __CHAR16_TYPE__ = c_ushort;
pub const __CHAR32_TYPE__ = c_uint;
pub const __UINTPTR_TYPE__ = c_ulong;
pub const __UINTPTR_FMTo__ = "lo";
pub const __UINTPTR_FMTu__ = "lu";
pub const __UINTPTR_FMTx__ = "lx";
pub const __UINTPTR_FMTX__ = "lX";
pub const __FLT16_DENORM_MIN__ = @as(f16, 5.9604644775390625e-8);
pub const __FLT16_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT16_DIG__ = @as(c_int, 3);
pub const __FLT16_DECIMAL_DIG__ = @as(c_int, 5);
pub const __FLT16_EPSILON__ = @as(f16, 9.765625e-4);
pub const __FLT16_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT16_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT16_MANT_DIG__ = @as(c_int, 11);
pub const __FLT16_MAX_10_EXP__ = @as(c_int, 4);
pub const __FLT16_MAX_EXP__ = @as(c_int, 16);
pub const __FLT16_MAX__ = @as(f16, 6.5504e+4);
pub const __FLT16_MIN_10_EXP__ = -@as(c_int, 4);
pub const __FLT16_MIN_EXP__ = -@as(c_int, 13);
pub const __FLT16_MIN__ = @as(f16, 6.103515625e-5);
pub const __FLT_DENORM_MIN__ = @as(f32, 1.40129846e-45);
pub const __FLT_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT_DIG__ = @as(c_int, 6);
pub const __FLT_DECIMAL_DIG__ = @as(c_int, 9);
pub const __FLT_EPSILON__ = @as(f32, 1.19209290e-7);
pub const __FLT_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT_MANT_DIG__ = @as(c_int, 24);
pub const __FLT_MAX_10_EXP__ = @as(c_int, 38);
pub const __FLT_MAX_EXP__ = @as(c_int, 128);
pub const __FLT_MAX__ = @as(f32, 3.40282347e+38);
pub const __FLT_MIN_10_EXP__ = -@as(c_int, 37);
pub const __FLT_MIN_EXP__ = -@as(c_int, 125);
pub const __FLT_MIN__ = @as(f32, 1.17549435e-38);
pub const __DBL_DENORM_MIN__ = @as(f64, 4.9406564584124654e-324);
pub const __DBL_HAS_DENORM__ = @as(c_int, 1);
pub const __DBL_DIG__ = @as(c_int, 15);
pub const __DBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __DBL_EPSILON__ = @as(f64, 2.2204460492503131e-16);
pub const __DBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __DBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __DBL_MANT_DIG__ = @as(c_int, 53);
pub const __DBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __DBL_MAX_EXP__ = @as(c_int, 1024);
pub const __DBL_MAX__ = @as(f64, 1.7976931348623157e+308);
pub const __DBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __DBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __DBL_MIN__ = @as(f64, 2.2250738585072014e-308);
pub const __LDBL_DENORM_MIN__ = @as(c_longdouble, 4.9406564584124654e-324);
pub const __LDBL_HAS_DENORM__ = @as(c_int, 1);
pub const __LDBL_DIG__ = @as(c_int, 15);
pub const __LDBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __LDBL_EPSILON__ = @as(c_longdouble, 2.2204460492503131e-16);
pub const __LDBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __LDBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __LDBL_MANT_DIG__ = @as(c_int, 53);
pub const __LDBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __LDBL_MAX_EXP__ = @as(c_int, 1024);
pub const __LDBL_MAX__ = @as(c_longdouble, 1.7976931348623157e+308);
pub const __LDBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __LDBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __LDBL_MIN__ = @as(c_longdouble, 2.2250738585072014e-308);
pub const __POINTER_WIDTH__ = @as(c_int, 64);
pub const __BIGGEST_ALIGNMENT__ = @as(c_int, 8);
pub const __INT8_TYPE__ = i8;
pub const __INT8_FMTd__ = "hhd";
pub const __INT8_FMTi__ = "hhi";
pub const __INT8_C_SUFFIX__ = "";
pub const __INT16_TYPE__ = c_short;
pub const __INT16_FMTd__ = "hd";
pub const __INT16_FMTi__ = "hi";
pub const __INT16_C_SUFFIX__ = "";
pub const __INT32_TYPE__ = c_int;
pub const __INT32_FMTd__ = "d";
pub const __INT32_FMTi__ = "i";
pub const __INT32_C_SUFFIX__ = "";
pub const __INT64_TYPE__ = c_longlong;
pub const __INT64_FMTd__ = "lld";
pub const __INT64_FMTi__ = "lli";
pub const __INT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `LL`");
// (no file):199:9
pub const __UINT8_TYPE__ = u8;
pub const __UINT8_FMTo__ = "hho";
pub const __UINT8_FMTu__ = "hhu";
pub const __UINT8_FMTx__ = "hhx";
pub const __UINT8_FMTX__ = "hhX";
pub const __UINT8_C_SUFFIX__ = "";
pub const __UINT8_MAX__ = @as(c_int, 255);
pub const __INT8_MAX__ = @as(c_int, 127);
pub const __UINT16_TYPE__ = c_ushort;
pub const __UINT16_FMTo__ = "ho";
pub const __UINT16_FMTu__ = "hu";
pub const __UINT16_FMTx__ = "hx";
pub const __UINT16_FMTX__ = "hX";
pub const __UINT16_C_SUFFIX__ = "";
pub const __UINT16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __INT16_MAX__ = @as(c_int, 32767);
pub const __UINT32_TYPE__ = c_uint;
pub const __UINT32_FMTo__ = "o";
pub const __UINT32_FMTu__ = "u";
pub const __UINT32_FMTx__ = "x";
pub const __UINT32_FMTX__ = "X";
pub const __UINT32_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `U`");
// (no file):221:9
pub const __UINT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __INT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __UINT64_TYPE__ = c_ulonglong;
pub const __UINT64_FMTo__ = "llo";
pub const __UINT64_FMTu__ = "llu";
pub const __UINT64_FMTx__ = "llx";
pub const __UINT64_FMTX__ = "llX";
pub const __UINT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `ULL`");
// (no file):229:9
pub const __UINT64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __INT64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_LEAST8_TYPE__ = i8;
pub const __INT_LEAST8_MAX__ = @as(c_int, 127);
pub const __INT_LEAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_LEAST8_FMTd__ = "hhd";
pub const __INT_LEAST8_FMTi__ = "hhi";
pub const __UINT_LEAST8_TYPE__ = u8;
pub const __UINT_LEAST8_MAX__ = @as(c_int, 255);
pub const __UINT_LEAST8_FMTo__ = "hho";
pub const __UINT_LEAST8_FMTu__ = "hhu";
pub const __UINT_LEAST8_FMTx__ = "hhx";
pub const __UINT_LEAST8_FMTX__ = "hhX";
pub const __INT_LEAST16_TYPE__ = c_short;
pub const __INT_LEAST16_MAX__ = @as(c_int, 32767);
pub const __INT_LEAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_LEAST16_FMTd__ = "hd";
pub const __INT_LEAST16_FMTi__ = "hi";
pub const __UINT_LEAST16_TYPE__ = c_ushort;
pub const __UINT_LEAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_LEAST16_FMTo__ = "ho";
pub const __UINT_LEAST16_FMTu__ = "hu";
pub const __UINT_LEAST16_FMTx__ = "hx";
pub const __UINT_LEAST16_FMTX__ = "hX";
pub const __INT_LEAST32_TYPE__ = c_int;
pub const __INT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_LEAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_LEAST32_FMTd__ = "d";
pub const __INT_LEAST32_FMTi__ = "i";
pub const __UINT_LEAST32_TYPE__ = c_uint;
pub const __UINT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_LEAST32_FMTo__ = "o";
pub const __UINT_LEAST32_FMTu__ = "u";
pub const __UINT_LEAST32_FMTx__ = "x";
pub const __UINT_LEAST32_FMTX__ = "X";
pub const __INT_LEAST64_TYPE__ = c_longlong;
pub const __INT_LEAST64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_LEAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_LEAST64_FMTd__ = "lld";
pub const __INT_LEAST64_FMTi__ = "lli";
pub const __UINT_LEAST64_TYPE__ = c_ulonglong;
pub const __UINT_LEAST64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __UINT_LEAST64_FMTo__ = "llo";
pub const __UINT_LEAST64_FMTu__ = "llu";
pub const __UINT_LEAST64_FMTx__ = "llx";
pub const __UINT_LEAST64_FMTX__ = "llX";
pub const __INT_FAST8_TYPE__ = i8;
pub const __INT_FAST8_MAX__ = @as(c_int, 127);
pub const __INT_FAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_FAST8_FMTd__ = "hhd";
pub const __INT_FAST8_FMTi__ = "hhi";
pub const __UINT_FAST8_TYPE__ = u8;
pub const __UINT_FAST8_MAX__ = @as(c_int, 255);
pub const __UINT_FAST8_FMTo__ = "hho";
pub const __UINT_FAST8_FMTu__ = "hhu";
pub const __UINT_FAST8_FMTx__ = "hhx";
pub const __UINT_FAST8_FMTX__ = "hhX";
pub const __INT_FAST16_TYPE__ = c_short;
pub const __INT_FAST16_MAX__ = @as(c_int, 32767);
pub const __INT_FAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_FAST16_FMTd__ = "hd";
pub const __INT_FAST16_FMTi__ = "hi";
pub const __UINT_FAST16_TYPE__ = c_ushort;
pub const __UINT_FAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_FAST16_FMTo__ = "ho";
pub const __UINT_FAST16_FMTu__ = "hu";
pub const __UINT_FAST16_FMTx__ = "hx";
pub const __UINT_FAST16_FMTX__ = "hX";
pub const __INT_FAST32_TYPE__ = c_int;
pub const __INT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_FAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_FAST32_FMTd__ = "d";
pub const __INT_FAST32_FMTi__ = "i";
pub const __UINT_FAST32_TYPE__ = c_uint;
pub const __UINT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_FAST32_FMTo__ = "o";
pub const __UINT_FAST32_FMTu__ = "u";
pub const __UINT_FAST32_FMTx__ = "x";
pub const __UINT_FAST32_FMTX__ = "X";
pub const __INT_FAST64_TYPE__ = c_longlong;
pub const __INT_FAST64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_FAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_FAST64_FMTd__ = "lld";
pub const __INT_FAST64_FMTi__ = "lli";
pub const __UINT_FAST64_TYPE__ = c_ulonglong;
pub const __UINT_FAST64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __UINT_FAST64_FMTo__ = "llo";
pub const __UINT_FAST64_FMTu__ = "llu";
pub const __UINT_FAST64_FMTx__ = "llx";
pub const __UINT_FAST64_FMTX__ = "llX";
pub const __USER_LABEL_PREFIX__ = @compileError("unable to translate macro: undefined identifier `_`");
// (no file):320:9
pub const __NO_MATH_ERRNO__ = @as(c_int, 1);
pub const __FINITE_MATH_ONLY__ = @as(c_int, 0);
pub const __GNUC_STDC_INLINE__ = @as(c_int, 1);
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL = @as(c_int, 1);
pub const __CLANG_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __NO_INLINE__ = @as(c_int, 1);
pub const __PIC__ = @as(c_int, 2);
pub const __pic__ = @as(c_int, 2);
pub const __FLT_RADIX__ = @as(c_int, 2);
pub const __DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__;
pub const __SSP_STRONG__ = @as(c_int, 2);
pub const __nonnull = @compileError("unable to translate macro: undefined identifier `_Nonnull`");
// (no file):351:9
pub const __null_unspecified = @compileError("unable to translate macro: undefined identifier `_Null_unspecified`");
// (no file):352:9
pub const __nullable = @compileError("unable to translate macro: undefined identifier `_Nullable`");
// (no file):353:9
pub const TARGET_OS_WIN32 = @as(c_int, 0);
pub const TARGET_OS_WINDOWS = @as(c_int, 0);
pub const TARGET_OS_LINUX = @as(c_int, 0);
pub const TARGET_OS_UNIX = @as(c_int, 0);
pub const TARGET_OS_MAC = @as(c_int, 1);
pub const TARGET_OS_OSX = @as(c_int, 1);
pub const TARGET_OS_IPHONE = @as(c_int, 0);
pub const TARGET_OS_IOS = @as(c_int, 0);
pub const TARGET_OS_TV = @as(c_int, 0);
pub const TARGET_OS_WATCH = @as(c_int, 0);
pub const TARGET_OS_DRIVERKIT = @as(c_int, 0);
pub const TARGET_OS_MACCATALYST = @as(c_int, 0);
pub const TARGET_OS_SIMULATOR = @as(c_int, 0);
pub const TARGET_OS_EMBEDDED = @as(c_int, 0);
pub const TARGET_OS_NANO = @as(c_int, 0);
pub const TARGET_IPHONE_SIMULATOR = @as(c_int, 0);
pub const TARGET_OS_UIKITFORMAC = @as(c_int, 0);
pub const __AARCH64EL__ = @as(c_int, 1);
pub const __aarch64__ = @as(c_int, 1);
pub const __GCC_ASM_FLAG_OUTPUTS__ = @as(c_int, 1);
pub const __AARCH64_CMODEL_SMALL__ = @as(c_int, 1);
pub const __ARM_ACLE = @as(c_int, 200);
pub const __ARM_ARCH = @as(c_int, 8);
pub const __ARM_ARCH_PROFILE = 'A';
pub const __ARM_64BIT_STATE = @as(c_int, 1);
pub const __ARM_PCS_AAPCS64 = @as(c_int, 1);
pub const __ARM_ARCH_ISA_A64 = @as(c_int, 1);
pub const __ARM_FEATURE_CLZ = @as(c_int, 1);
pub const __ARM_FEATURE_FMA = @as(c_int, 1);
pub const __ARM_FEATURE_LDREX = @as(c_int, 0xF);
pub const __ARM_FEATURE_IDIV = @as(c_int, 1);
pub const __ARM_FEATURE_DIV = @as(c_int, 1);
pub const __ARM_FEATURE_NUMERIC_MAXMIN = @as(c_int, 1);
pub const __ARM_FEATURE_DIRECTED_ROUNDING = @as(c_int, 1);
pub const __ARM_ALIGN_MAX_STACK_PWR = @as(c_int, 4);
pub const __ARM_STATE_ZA = @as(c_int, 1);
pub const __ARM_STATE_ZT0 = @as(c_int, 1);
pub const __ARM_FP = @as(c_int, 0xE);
pub const __ARM_FP16_FORMAT_IEEE = @as(c_int, 1);
pub const __ARM_FP16_ARGS = @as(c_int, 1);
pub const __ARM_SIZEOF_WCHAR_T = @as(c_int, 4);
pub const __ARM_SIZEOF_MINIMAL_ENUM = @as(c_int, 4);
pub const __ARM_NEON = @as(c_int, 1);
pub const __ARM_NEON_FP = @as(c_int, 0xE);
pub const __ARM_FEATURE_CRC32 = @as(c_int, 1);
pub const __ARM_FEATURE_RCPC = @as(c_int, 1);
pub const __ARM_FEATURE_CRYPTO = @as(c_int, 1);
pub const __ARM_FEATURE_AES = @as(c_int, 1);
pub const __ARM_FEATURE_SHA2 = @as(c_int, 1);
pub const __ARM_FEATURE_SHA3 = @as(c_int, 1);
pub const __ARM_FEATURE_SHA512 = @as(c_int, 1);
pub const __ARM_FEATURE_PAUTH = @as(c_int, 1);
pub const __ARM_FEATURE_UNALIGNED = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_VECTOR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_SCALAR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_DOTPROD = @as(c_int, 1);
pub const __ARM_FEATURE_ATOMICS = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_FML = @as(c_int, 1);
pub const __ARM_FEATURE_COMPLEX = @as(c_int, 1);
pub const __ARM_FEATURE_JCVT = @as(c_int, 1);
pub const __ARM_FEATURE_QRDMX = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 = @as(c_int, 1);
pub const __FP_FAST_FMA = @as(c_int, 1);
pub const __FP_FAST_FMAF = @as(c_int, 1);
pub const __AARCH64_SIMD__ = @as(c_int, 1);
pub const __ARM64_ARCH_8__ = @as(c_int, 1);
pub const __ARM_NEON__ = @as(c_int, 1);
pub const __REGISTER_PREFIX__ = "";
pub const __arm64 = @as(c_int, 1);
pub const __arm64__ = @as(c_int, 1);
pub const __APPLE_CC__ = @as(c_int, 6000);
pub const __APPLE__ = @as(c_int, 1);
pub const __STDC_NO_THREADS__ = @as(c_int, 1);
pub const __weak = @compileError("unable to translate macro: undefined identifier `objc_gc`");
// (no file):431:9
pub const __strong = "";
pub const __unsafe_unretained = "";
pub const __DYNAMIC__ = @as(c_int, 1);
pub const __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __MACH__ = @as(c_int, 1);
pub const __STDC__ = @as(c_int, 1);
pub const __STDC_HOSTED__ = @as(c_int, 1);
pub const __STDC_VERSION__ = @as(c_long, 201710);
pub const __STDC_UTF_16__ = @as(c_int, 1);
pub const __STDC_UTF_32__ = @as(c_int, 1);
pub const _DEBUG = @as(c_int, 1);
pub const _THREAD_SAFE = @as(c_int, 1);
pub const __GCC_HAVE_DWARF2_CFI_ASM = @as(c_int, 1);
pub const VULKAN_H_ = @as(c_int, 1);
pub const VK_PLATFORM_H_ = "";
pub const VKAPI_ATTR = "";
pub const VKAPI_CALL = "";
pub const VKAPI_PTR = "";
pub const __STDDEF_H = "";
pub const __need_ptrdiff_t = "";
pub const __need_size_t = "";
pub const __need_wchar_t = "";
pub const __need_NULL = "";
pub const __need_max_align_t = "";
pub const __need_offsetof = "";
pub const _PTRDIFF_T = "";
pub const _SIZE_T = "";
pub const _WCHAR_T = "";
pub const NULL = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0));
pub const __CLANG_MAX_ALIGN_T_DEFINED = "";
pub const offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/__stddef_offsetof.h:16:9
pub const __CLANG_STDINT_H = "";
pub const _STDINT_H_ = "";
pub const __WORDSIZE = @as(c_int, 64);
pub const _INT8_T = "";
pub const _INT16_T = "";
pub const _INT32_T = "";
pub const _INT64_T = "";
pub const _UINT8_T = "";
pub const _UINT16_T = "";
pub const _UINT32_T = "";
pub const _UINT64_T = "";
pub const _SYS__TYPES_H_ = "";
pub const _CDEFS_H_ = "";
pub const __BEGIN_DECLS = "";
pub const __END_DECLS = "";
pub inline fn __has_cpp_attribute(x: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &x;
    return @as(c_int, 0);
}
pub inline fn __P(protos: anytype) @TypeOf(protos) {
    _ = &protos;
    return protos;
}
pub const __CONCAT = @compileError("unable to translate C expr: unexpected token '##'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:116:9
pub const __STRING = @compileError("unable to translate C expr: unexpected token '#'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:117:9
pub const __const = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:119:9
pub const __signed = c_int;
pub const __volatile = @compileError("unable to translate C expr: unexpected token 'volatile'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:121:9
pub const __dead2 = @compileError("unable to translate macro: undefined identifier `__noreturn__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:165:9
pub const __pure2 = @compileError("unable to translate C expr: unexpected token '__attribute__'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:166:9
pub const __stateful_pure = @compileError("unable to translate macro: undefined identifier `__pure__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:167:9
pub const __unused = @compileError("unable to translate macro: undefined identifier `__unused__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:172:9
pub const __used = @compileError("unable to translate macro: undefined identifier `__used__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:177:9
pub const __cold = @compileError("unable to translate macro: undefined identifier `__cold__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:183:9
pub const __returns_nonnull = @compileError("unable to translate macro: undefined identifier `returns_nonnull`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:190:9
pub const __exported = @compileError("unable to translate macro: undefined identifier `__visibility__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:200:9
pub const __exported_push = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:201:9
pub const __exported_pop = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:202:9
pub const __deprecated = @compileError("unable to translate macro: undefined identifier `__deprecated__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:214:9
pub const __deprecated_msg = @compileError("unable to translate macro: undefined identifier `__deprecated__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:218:10
pub inline fn __deprecated_enum_msg(_msg: anytype) @TypeOf(__deprecated_msg(_msg)) {
    _ = &_msg;
    return __deprecated_msg(_msg);
}
pub const __kpi_deprecated = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:229:9
pub const __unavailable = @compileError("unable to translate macro: undefined identifier `__unavailable__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:235:9
pub const __kpi_unavailable = "";
pub const __kpi_deprecated_arm64_macos_unavailable = "";
pub const __dead = "";
pub const __pure = "";
pub const __restrict = @compileError("unable to translate C expr: unexpected token 'restrict'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:257:9
pub const __disable_tail_calls = @compileError("unable to translate macro: undefined identifier `__disable_tail_calls__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:290:9
pub const __not_tail_called = @compileError("unable to translate macro: undefined identifier `__not_tail_called__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:302:9
pub const __result_use_check = @compileError("unable to translate macro: undefined identifier `__warn_unused_result__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:313:9
pub const __swift_unavailable = @compileError("unable to translate macro: undefined identifier `__availability__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:323:9
pub const __abortlike = __dead2 ++ __cold ++ __not_tail_called;
pub const __header_inline = @compileError("unable to translate C expr: unexpected token 'inline'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:357:10
pub const __header_always_inline = @compileError("unable to translate macro: undefined identifier `__always_inline__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:370:10
pub const __unreachable_ok_push = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:383:10
pub const __unreachable_ok_pop = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:386:10
pub const __printflike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:407:9
pub const __printf0like = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:409:9
pub const __scanflike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:411:9
pub const __osloglike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:413:9
pub const __IDSTRING = @compileError("unable to translate C expr: unexpected token 'static'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:416:9
pub const __COPYRIGHT = @compileError("unable to translate macro: undefined identifier `copyright`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:419:9
pub const __RCSID = @compileError("unable to translate macro: undefined identifier `rcsid`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:423:9
pub const __SCCSID = @compileError("unable to translate macro: undefined identifier `sccsid`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:427:9
pub const __PROJECT_VERSION = @compileError("unable to translate macro: undefined identifier `project_version`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:431:9
pub const __FBSDID = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:436:9
pub const __DECONST = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:440:9
pub const __DEVOLATILE = @compileError("unable to translate C expr: unexpected token 'volatile'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:444:9
pub const __DEQUALIFY = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:448:9
pub const __alloc_align = @compileError("unable to translate macro: undefined identifier `alloc_align`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:457:9
pub const __alloc_size = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:478:9
pub const __has_safe_buffers = @as(c_int, 1);
pub const __unsafe_buffer_usage = @compileError("unable to translate macro: undefined identifier `__unsafe_buffer_usage__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:559:9
pub const __unsafe_buffer_usage_begin = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:565:9
pub const __unsafe_buffer_usage_end = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:566:9
pub const __DARWIN_ONLY_64_BIT_INO_T = @as(c_int, 1);
pub const __DARWIN_ONLY_UNIX_CONFORMANCE = @as(c_int, 1);
pub const __DARWIN_ONLY_VERS_1050 = @as(c_int, 1);
pub const __DARWIN_UNIX03 = @as(c_int, 1);
pub const __DARWIN_64_BIT_INO_T = @as(c_int, 1);
pub const __DARWIN_VERS_1050 = @as(c_int, 1);
pub const __DARWIN_NON_CANCELABLE = @as(c_int, 0);
pub const __DARWIN_SUF_UNIX03 = "";
pub const __DARWIN_SUF_64_BIT_INO_T = "";
pub const __DARWIN_SUF_1050 = "";
pub const __DARWIN_SUF_NON_CANCELABLE = "";
pub const __DARWIN_SUF_EXTSN = "$DARWIN_EXTSN";
pub const __DARWIN_ALIAS = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:751:9
pub const __DARWIN_ALIAS_C = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:752:9
pub const __DARWIN_ALIAS_I = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:753:9
pub const __DARWIN_NOCANCEL = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:754:9
pub const __DARWIN_INODE64 = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:755:9
pub const __DARWIN_1050 = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:757:9
pub const __DARWIN_1050ALIAS = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:758:9
pub const __DARWIN_1050ALIAS_C = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:759:9
pub const __DARWIN_1050ALIAS_I = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:760:9
pub const __DARWIN_1050INODE64 = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:761:9
pub const __DARWIN_EXTSN = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:763:9
pub const __DARWIN_EXTSN_C = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:764:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:35:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:41:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:47:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:53:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:59:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:65:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:71:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:77:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:83:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:89:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:95:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:101:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:107:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:113:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:119:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:125:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:131:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:137:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:143:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:149:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:155:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:161:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:167:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:173:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:179:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:185:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:191:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:197:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:203:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:209:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:215:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:221:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:227:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:233:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:239:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:245:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:251:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:257:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:263:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:269:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:275:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:281:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:287:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:293:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:299:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:305:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:311:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:317:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:323:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:329:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:335:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:341:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:347:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:359:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:365:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_8 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:371:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:377:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:383:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:389:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:395:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:401:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:407:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:413:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:419:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_8 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:425:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:431:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:437:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:443:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:449:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:455:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:461:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:467:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:473:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:479:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:485:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:491:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:497:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:503:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_symbol_aliasing.h:509:9
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_9(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_16(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub const __DARWIN_ALIAS_STARTING = @compileError("unable to translate macro: undefined identifier `__DARWIN_ALIAS_STARTING_MAC_`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:774:9
pub const ___POSIX_C_DEPRECATED_STARTING_198808L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199009L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199209L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199309L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199506L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_200112L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_200809L = "";
pub const __POSIX_C_DEPRECATED = @compileError("unable to translate macro: undefined identifier `___POSIX_C_DEPRECATED_STARTING_`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:837:9
pub const __DARWIN_C_ANSI = @as(c_long, 0o10000);
pub const __DARWIN_C_FULL = @as(c_long, 900000);
pub const __DARWIN_C_LEVEL = __DARWIN_C_FULL;
pub const __STDC_WANT_LIB_EXT1__ = @as(c_int, 1);
pub const __DARWIN_NO_LONG_LONG = @as(c_int, 0);
pub const _DARWIN_FEATURE_64_BIT_INODE = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_VERS_1050 = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = @as(c_int, 1);
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE = @as(c_int, 3);
pub const __CAST_AWAY_QUALIFIER = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:935:9
pub const __XNU_PRIVATE_EXTERN = @compileError("unable to translate macro: undefined identifier `visibility`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:949:9
pub const __has_ptrcheck = @as(c_int, 0);
pub const __single = "";
pub const __unsafe_indexable = "";
pub const __counted_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:963:9
pub const __sized_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:964:9
pub const __ended_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:965:9
pub const __terminated_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:966:9
pub const __null_terminated = "";
pub const __ptrcheck_abi_assume_single = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:976:9
pub const __ptrcheck_abi_assume_unsafe_indexable = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:977:9
pub inline fn __unsafe_forge_bidi_indexable(T: anytype, P: anytype, S: anytype) @TypeOf(T(P)) {
    _ = &T;
    _ = &P;
    _ = &S;
    return T(P);
}
pub const __unsafe_forge_single = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn __unsafe_forge_terminated_by(T: anytype, P: anytype, E: anytype) @TypeOf(T(P)) {
    _ = &T;
    _ = &P;
    _ = &E;
    return T(P);
}
pub const __unsafe_forge_null_terminated = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn __terminated_by_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __unsafe_terminated_by_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __null_terminated_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __unsafe_null_terminated_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub const __unsafe_terminated_by_from_indexable = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:988:9
pub const __unsafe_null_terminated_from_indexable = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:989:9
pub const __array_decay_dicards_count_in_parameters = "";
pub const __unsafe_late_const = "";
pub const __ptrcheck_unavailable = "";
pub const __ptrcheck_unavailable_r = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:998:9
pub const __ASSUME_PTR_ABI_SINGLE_BEGIN = __ptrcheck_abi_assume_single();
pub const __ASSUME_PTR_ABI_SINGLE_END = __ptrcheck_abi_assume_unsafe_indexable();
pub const __header_indexable = "";
pub const __header_bidi_indexable = "";
pub const __compiler_barrier = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1027:9
pub const __enum_open = @compileError("unable to translate macro: undefined identifier `__enum_extensibility__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1030:9
pub const __enum_closed = @compileError("unable to translate macro: undefined identifier `__enum_extensibility__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1031:9
pub const __enum_options = @compileError("unable to translate macro: undefined identifier `__flag_enum__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1038:9
pub const __enum_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1051:9
pub const __enum_closed_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1053:9
pub const __options_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1055:9
pub const __options_closed_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/cdefs.h:1057:9
pub const __kernel_ptr_semantics = "";
pub const __kernel_data_semantics = "";
pub const __kernel_dual_semantics = "";
pub const _BSD_MACHINE__TYPES_H_ = "";
pub const _BSD_ARM__TYPES_H_ = "";
pub const __DARWIN_NULL = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0));
pub const _SYS__PTHREAD_TYPES_H_ = "";
pub const __PTHREAD_SIZE__ = @as(c_int, 8176);
pub const __PTHREAD_ATTR_SIZE__ = @as(c_int, 56);
pub const __PTHREAD_MUTEXATTR_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_MUTEX_SIZE__ = @as(c_int, 56);
pub const __PTHREAD_CONDATTR_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_COND_SIZE__ = @as(c_int, 40);
pub const __PTHREAD_ONCE_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_RWLOCK_SIZE__ = @as(c_int, 192);
pub const __PTHREAD_RWLOCKATTR_SIZE__ = @as(c_int, 16);
pub const __offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_types.h:83:9
pub const _INTPTR_T = "";
pub const _BSD_MACHINE_TYPES_H_ = "";
pub const _ARM_MACHTYPES_H_ = "";
pub const _MACHTYPES_H_ = "";
pub const _U_INT8_T = "";
pub const _U_INT16_T = "";
pub const _U_INT32_T = "";
pub const _U_INT64_T = "";
pub const _UINTPTR_T = "";
pub const USER_ADDR_NULL = @import("std").zig.c_translation.cast(user_addr_t, @as(c_int, 0));
pub inline fn CAST_USER_ADDR_T(a_ptr: anytype) user_addr_t {
    _ = &a_ptr;
    return @import("std").zig.c_translation.cast(user_addr_t, @import("std").zig.c_translation.cast(usize, a_ptr));
}
pub const _INTMAX_T = "";
pub const _UINTMAX_T = "";
pub inline fn INT8_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn INT16_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn INT32_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub const INT64_C = @import("std").zig.c_translation.Macros.LL_SUFFIX;
pub inline fn UINT8_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn UINT16_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub const UINT32_C = @import("std").zig.c_translation.Macros.U_SUFFIX;
pub const UINT64_C = @import("std").zig.c_translation.Macros.ULL_SUFFIX;
pub const INTMAX_C = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub const UINTMAX_C = @import("std").zig.c_translation.Macros.UL_SUFFIX;
pub const INT8_MAX = @as(c_int, 127);
pub const INT16_MAX = @as(c_int, 32767);
pub const INT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const INT64_MAX = @as(c_longlong, 9223372036854775807);
pub const INT8_MIN = -@as(c_int, 128);
pub const INT16_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const INT32_MIN = -INT32_MAX - @as(c_int, 1);
pub const INT64_MIN = -INT64_MAX - @as(c_int, 1);
pub const UINT8_MAX = @as(c_int, 255);
pub const UINT16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const UINT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const UINT64_MAX = @as(c_ulonglong, 18446744073709551615);
pub const INT_LEAST8_MIN = INT8_MIN;
pub const INT_LEAST16_MIN = INT16_MIN;
pub const INT_LEAST32_MIN = INT32_MIN;
pub const INT_LEAST64_MIN = INT64_MIN;
pub const INT_LEAST8_MAX = INT8_MAX;
pub const INT_LEAST16_MAX = INT16_MAX;
pub const INT_LEAST32_MAX = INT32_MAX;
pub const INT_LEAST64_MAX = INT64_MAX;
pub const UINT_LEAST8_MAX = UINT8_MAX;
pub const UINT_LEAST16_MAX = UINT16_MAX;
pub const UINT_LEAST32_MAX = UINT32_MAX;
pub const UINT_LEAST64_MAX = UINT64_MAX;
pub const INT_FAST8_MIN = INT8_MIN;
pub const INT_FAST16_MIN = INT16_MIN;
pub const INT_FAST32_MIN = INT32_MIN;
pub const INT_FAST64_MIN = INT64_MIN;
pub const INT_FAST8_MAX = INT8_MAX;
pub const INT_FAST16_MAX = INT16_MAX;
pub const INT_FAST32_MAX = INT32_MAX;
pub const INT_FAST64_MAX = INT64_MAX;
pub const UINT_FAST8_MAX = UINT8_MAX;
pub const UINT_FAST16_MAX = UINT16_MAX;
pub const UINT_FAST32_MAX = UINT32_MAX;
pub const UINT_FAST64_MAX = UINT64_MAX;
pub const INTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const INTPTR_MIN = -INTPTR_MAX - @as(c_int, 1);
pub const UINTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const INTMAX_MAX = INTMAX_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINTMAX_MAX = UINTMAX_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const INTMAX_MIN = -INTMAX_MAX - @as(c_int, 1);
pub const PTRDIFF_MIN = INTMAX_MIN;
pub const PTRDIFF_MAX = INTMAX_MAX;
pub const SIZE_MAX = UINTPTR_MAX;
pub const RSIZE_MAX = SIZE_MAX >> @as(c_int, 1);
pub const WCHAR_MAX = __WCHAR_MAX__;
pub const WCHAR_MIN = -WCHAR_MAX - @as(c_int, 1);
pub const WINT_MIN = INT32_MIN;
pub const WINT_MAX = INT32_MAX;
pub const SIG_ATOMIC_MIN = INT32_MIN;
pub const SIG_ATOMIC_MAX = INT32_MAX;
pub const VULKAN_CORE_H_ = @as(c_int, 1);
pub const VK_VERSION_1_0 = @as(c_int, 1);
pub const VK_DEFINE_HANDLE = @compileError("unable to translate macro: untranslatable usage of arg `object`");
// /usr/local/include/vulkan/vulkan_core.h:26:9
pub const VK_USE_64_BIT_PTR_DEFINES = @as(c_int, 1);
pub const VK_NULL_HANDLE = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0));
pub const VK_DEFINE_NON_DISPATCHABLE_HANDLE = @compileError("unable to translate macro: untranslatable usage of arg `object`");
// /usr/local/include/vulkan/vulkan_core.h:56:17
pub inline fn VK_MAKE_API_VERSION(variant: anytype, major_1: anytype, minor_2: anytype, patch: anytype) @TypeOf((((@import("std").zig.c_translation.cast(u32, variant) << @as(c_uint, 29)) | (@import("std").zig.c_translation.cast(u32, major_1) << @as(c_uint, 22))) | (@import("std").zig.c_translation.cast(u32, minor_2) << @as(c_uint, 12))) | @import("std").zig.c_translation.cast(u32, patch)) {
    _ = &variant;
    _ = &major_1;
    _ = &minor_2;
    _ = &patch;
    return (((@import("std").zig.c_translation.cast(u32, variant) << @as(c_uint, 29)) | (@import("std").zig.c_translation.cast(u32, major_1) << @as(c_uint, 22))) | (@import("std").zig.c_translation.cast(u32, minor_2) << @as(c_uint, 12))) | @import("std").zig.c_translation.cast(u32, patch);
}
pub const VK_API_VERSION_1_0 = VK_MAKE_API_VERSION(@as(c_int, 0), @as(c_int, 1), @as(c_int, 0), @as(c_int, 0));
pub const VK_HEADER_VERSION = @as(c_int, 283);
pub const VK_HEADER_VERSION_COMPLETE = VK_MAKE_API_VERSION(@as(c_int, 0), @as(c_int, 1), @as(c_int, 3), VK_HEADER_VERSION);
pub inline fn VK_MAKE_VERSION(major_1: anytype, minor_2: anytype, patch: anytype) @TypeOf(((@import("std").zig.c_translation.cast(u32, major_1) << @as(c_uint, 22)) | (@import("std").zig.c_translation.cast(u32, minor_2) << @as(c_uint, 12))) | @import("std").zig.c_translation.cast(u32, patch)) {
    _ = &major_1;
    _ = &minor_2;
    _ = &patch;
    return ((@import("std").zig.c_translation.cast(u32, major_1) << @as(c_uint, 22)) | (@import("std").zig.c_translation.cast(u32, minor_2) << @as(c_uint, 12))) | @import("std").zig.c_translation.cast(u32, patch);
}
pub inline fn VK_VERSION_MAJOR(version: anytype) @TypeOf(@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 22)) {
    _ = &version;
    return @import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 22);
}
pub inline fn VK_VERSION_MINOR(version: anytype) @TypeOf((@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 12)) & @as(c_uint, 0x3FF)) {
    _ = &version;
    return (@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 12)) & @as(c_uint, 0x3FF);
}
pub inline fn VK_VERSION_PATCH(version: anytype) @TypeOf(@import("std").zig.c_translation.cast(u32, version) & @as(c_uint, 0xFFF)) {
    _ = &version;
    return @import("std").zig.c_translation.cast(u32, version) & @as(c_uint, 0xFFF);
}
pub inline fn VK_API_VERSION_VARIANT(version: anytype) @TypeOf(@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 29)) {
    _ = &version;
    return @import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 29);
}
pub inline fn VK_API_VERSION_MAJOR(version: anytype) @TypeOf((@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 22)) & @as(c_uint, 0x7F)) {
    _ = &version;
    return (@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 22)) & @as(c_uint, 0x7F);
}
pub inline fn VK_API_VERSION_MINOR(version: anytype) @TypeOf((@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 12)) & @as(c_uint, 0x3FF)) {
    _ = &version;
    return (@import("std").zig.c_translation.cast(u32, version) >> @as(c_uint, 12)) & @as(c_uint, 0x3FF);
}
pub inline fn VK_API_VERSION_PATCH(version: anytype) @TypeOf(@import("std").zig.c_translation.cast(u32, version) & @as(c_uint, 0xFFF)) {
    _ = &version;
    return @import("std").zig.c_translation.cast(u32, version) & @as(c_uint, 0xFFF);
}
pub const VK_ATTACHMENT_UNUSED = ~@as(c_uint, 0);
pub const VK_FALSE = @as(c_uint, 0);
pub const VK_LOD_CLAMP_NONE = @as(f32, 1000.0);
pub const VK_QUEUE_FAMILY_IGNORED = ~@as(c_uint, 0);
pub const VK_REMAINING_ARRAY_LAYERS = ~@as(c_uint, 0);
pub const VK_REMAINING_MIP_LEVELS = ~@as(c_uint, 0);
pub const VK_SUBPASS_EXTERNAL = ~@as(c_uint, 0);
pub const VK_TRUE = @as(c_uint, 1);
pub const VK_WHOLE_SIZE = ~@as(c_ulonglong, 0);
pub const VK_MAX_MEMORY_TYPES = @as(c_uint, 32);
pub const VK_MAX_PHYSICAL_DEVICE_NAME_SIZE = @as(c_uint, 256);
pub const VK_UUID_SIZE = @as(c_uint, 16);
pub const VK_MAX_EXTENSION_NAME_SIZE = @as(c_uint, 256);
pub const VK_MAX_DESCRIPTION_SIZE = @as(c_uint, 256);
pub const VK_MAX_MEMORY_HEAPS = @as(c_uint, 16);
pub const VK_VERSION_1_1 = @as(c_int, 1);
pub const VK_API_VERSION_1_1 = VK_MAKE_API_VERSION(@as(c_int, 0), @as(c_int, 1), @as(c_int, 1), @as(c_int, 0));
pub const VK_MAX_DEVICE_GROUP_SIZE = @as(c_uint, 32);
pub const VK_LUID_SIZE = @as(c_uint, 8);
pub const VK_QUEUE_FAMILY_EXTERNAL = ~@as(c_uint, 1);
pub const VK_VERSION_1_2 = @as(c_int, 1);
pub const VK_API_VERSION_1_2 = VK_MAKE_API_VERSION(@as(c_int, 0), @as(c_int, 1), @as(c_int, 2), @as(c_int, 0));
pub const VK_MAX_DRIVER_NAME_SIZE = @as(c_uint, 256);
pub const VK_MAX_DRIVER_INFO_SIZE = @as(c_uint, 256);
pub const VK_VERSION_1_3 = @as(c_int, 1);
pub const VK_API_VERSION_1_3 = VK_MAKE_API_VERSION(@as(c_int, 0), @as(c_int, 1), @as(c_int, 3), @as(c_int, 0));
pub const VK_KHR_surface = @as(c_int, 1);
pub const VK_KHR_SURFACE_SPEC_VERSION = @as(c_int, 25);
pub const VK_KHR_SURFACE_EXTENSION_NAME = "VK_KHR_surface";
pub const VK_KHR_swapchain = @as(c_int, 1);
pub const VK_KHR_SWAPCHAIN_SPEC_VERSION = @as(c_int, 70);
pub const VK_KHR_SWAPCHAIN_EXTENSION_NAME = "VK_KHR_swapchain";
pub const VK_KHR_display = @as(c_int, 1);
pub const VK_KHR_DISPLAY_SPEC_VERSION = @as(c_int, 23);
pub const VK_KHR_DISPLAY_EXTENSION_NAME = "VK_KHR_display";
pub const VK_KHR_display_swapchain = @as(c_int, 1);
pub const VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION = @as(c_int, 10);
pub const VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME = "VK_KHR_display_swapchain";
pub const VK_KHR_sampler_mirror_clamp_to_edge = @as(c_int, 1);
pub const VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION = @as(c_int, 3);
pub const VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME = "VK_KHR_sampler_mirror_clamp_to_edge";
pub const VK_KHR_video_queue = @as(c_int, 1);
pub const VK_KHR_VIDEO_QUEUE_SPEC_VERSION = @as(c_int, 8);
pub const VK_KHR_VIDEO_QUEUE_EXTENSION_NAME = "VK_KHR_video_queue";
pub const VK_KHR_video_decode_queue = @as(c_int, 1);
pub const VK_KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION = @as(c_int, 8);
pub const VK_KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME = "VK_KHR_video_decode_queue";
pub const VK_KHR_video_encode_h264 = @as(c_int, 1);
pub const VULKAN_VIDEO_CODEC_H264STD_H_ = @as(c_int, 1);
pub const vulkan_video_codec_h264std = @as(c_int, 1);
pub const VULKAN_VIDEO_CODECS_COMMON_H_ = @as(c_int, 1);
pub const vulkan_video_codecs_common = @as(c_int, 1);
pub inline fn VK_MAKE_VIDEO_STD_VERSION(major_1: anytype, minor_2: anytype, patch: anytype) @TypeOf(((@import("std").zig.c_translation.cast(u32, major_1) << @as(c_int, 22)) | (@import("std").zig.c_translation.cast(u32, minor_2) << @as(c_int, 12))) | @import("std").zig.c_translation.cast(u32, patch)) {
    _ = &major_1;
    _ = &minor_2;
    _ = &patch;
    return ((@import("std").zig.c_translation.cast(u32, major_1) << @as(c_int, 22)) | (@import("std").zig.c_translation.cast(u32, minor_2) << @as(c_int, 12))) | @import("std").zig.c_translation.cast(u32, patch);
}
pub const STD_VIDEO_H264_CPB_CNT_LIST_SIZE = @as(c_int, 32);
pub const STD_VIDEO_H264_SCALING_LIST_4X4_NUM_LISTS = @as(c_int, 6);
pub const STD_VIDEO_H264_SCALING_LIST_4X4_NUM_ELEMENTS = @as(c_int, 16);
pub const STD_VIDEO_H264_SCALING_LIST_8X8_NUM_LISTS = @as(c_int, 6);
pub const STD_VIDEO_H264_SCALING_LIST_8X8_NUM_ELEMENTS = @as(c_int, 64);
pub const STD_VIDEO_H264_MAX_NUM_LIST_REF = @as(c_int, 32);
pub const STD_VIDEO_H264_MAX_CHROMA_PLANES = @as(c_int, 2);
pub const STD_VIDEO_H264_NO_REFERENCE_PICTURE = @as(c_int, 0xFF);
pub const VULKAN_VIDEO_CODEC_H264STD_ENCODE_H_ = @as(c_int, 1);
pub const vulkan_video_codec_h264std_encode = @as(c_int, 1);
pub const VK_STD_VULKAN_VIDEO_CODEC_H264_ENCODE_API_VERSION_1_0_0 = VK_MAKE_VIDEO_STD_VERSION(@as(c_int, 1), @as(c_int, 0), @as(c_int, 0));
pub const VK_STD_VULKAN_VIDEO_CODEC_H264_ENCODE_SPEC_VERSION = VK_STD_VULKAN_VIDEO_CODEC_H264_ENCODE_API_VERSION_1_0_0;
pub const VK_STD_VULKAN_VIDEO_CODEC_H264_ENCODE_EXTENSION_NAME = "VK_STD_vulkan_video_codec_h264_encode";
pub const VK_KHR_VIDEO_ENCODE_H264_SPEC_VERSION = @as(c_int, 14);
pub const VK_KHR_VIDEO_ENCODE_H264_EXTENSION_NAME = "VK_KHR_video_encode_h264";
pub const VK_KHR_video_encode_h265 = @as(c_int, 1);
pub const VULKAN_VIDEO_CODEC_H265STD_H_ = @as(c_int, 1);
pub const vulkan_video_codec_h265std = @as(c_int, 1);
pub const STD_VIDEO_H265_CPB_CNT_LIST_SIZE = @as(c_int, 32);
pub const STD_VIDEO_H265_SUBLAYERS_LIST_SIZE = @as(c_int, 7);
pub const STD_VIDEO_H265_SCALING_LIST_4X4_NUM_LISTS = @as(c_int, 6);
pub const STD_VIDEO_H265_SCALING_LIST_4X4_NUM_ELEMENTS = @as(c_int, 16);
pub const STD_VIDEO_H265_SCALING_LIST_8X8_NUM_LISTS = @as(c_int, 6);
pub const STD_VIDEO_H265_SCALING_LIST_8X8_NUM_ELEMENTS = @as(c_int, 64);
pub const STD_VIDEO_H265_SCALING_LIST_16X16_NUM_LISTS = @as(c_int, 6);
pub const STD_VIDEO_H265_SCALING_LIST_16X16_NUM_ELEMENTS = @as(c_int, 64);
pub const STD_VIDEO_H265_SCALING_LIST_32X32_NUM_LISTS = @as(c_int, 2);
pub const STD_VIDEO_H265_SCALING_LIST_32X32_NUM_ELEMENTS = @as(c_int, 64);
pub const STD_VIDEO_H265_CHROMA_QP_OFFSET_LIST_SIZE = @as(c_int, 6);
pub const STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_COLS_LIST_SIZE = @as(c_int, 19);
pub const STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_ROWS_LIST_SIZE = @as(c_int, 21);
pub const STD_VIDEO_H265_PREDICTOR_PALETTE_COMPONENTS_LIST_SIZE = @as(c_int, 3);
pub const STD_VIDEO_H265_PREDICTOR_PALETTE_COMP_ENTRIES_LIST_SIZE = @as(c_int, 128);
pub const STD_VIDEO_H265_MAX_NUM_LIST_REF = @as(c_int, 15);
pub const STD_VIDEO_H265_MAX_CHROMA_PLANES = @as(c_int, 2);
pub const STD_VIDEO_H265_MAX_SHORT_TERM_REF_PIC_SETS = @as(c_int, 64);
pub const STD_VIDEO_H265_MAX_DPB_SIZE = @as(c_int, 16);
pub const STD_VIDEO_H265_MAX_LONG_TERM_REF_PICS_SPS = @as(c_int, 32);
pub const STD_VIDEO_H265_MAX_LONG_TERM_PICS = @as(c_int, 16);
pub const STD_VIDEO_H265_MAX_DELTA_POC = @as(c_int, 48);
pub const STD_VIDEO_H265_NO_REFERENCE_PICTURE = @as(c_int, 0xFF);
pub const VULKAN_VIDEO_CODEC_H265STD_ENCODE_H_ = @as(c_int, 1);
pub const vulkan_video_codec_h265std_encode = @as(c_int, 1);
pub const VK_STD_VULKAN_VIDEO_CODEC_H265_ENCODE_API_VERSION_1_0_0 = VK_MAKE_VIDEO_STD_VERSION(@as(c_int, 1), @as(c_int, 0), @as(c_int, 0));
pub const VK_STD_VULKAN_VIDEO_CODEC_H265_ENCODE_SPEC_VERSION = VK_STD_VULKAN_VIDEO_CODEC_H265_ENCODE_API_VERSION_1_0_0;
pub const VK_STD_VULKAN_VIDEO_CODEC_H265_ENCODE_EXTENSION_NAME = "VK_STD_vulkan_video_codec_h265_encode";
pub const VK_KHR_VIDEO_ENCODE_H265_SPEC_VERSION = @as(c_int, 14);
pub const VK_KHR_VIDEO_ENCODE_H265_EXTENSION_NAME = "VK_KHR_video_encode_h265";
pub const VK_KHR_video_decode_h264 = @as(c_int, 1);
pub const VULKAN_VIDEO_CODEC_H264STD_DECODE_H_ = @as(c_int, 1);
pub const vulkan_video_codec_h264std_decode = @as(c_int, 1);
pub const VK_STD_VULKAN_VIDEO_CODEC_H264_DECODE_API_VERSION_1_0_0 = VK_MAKE_VIDEO_STD_VERSION(@as(c_int, 1), @as(c_int, 0), @as(c_int, 0));
pub const VK_STD_VULKAN_VIDEO_CODEC_H264_DECODE_SPEC_VERSION = VK_STD_VULKAN_VIDEO_CODEC_H264_DECODE_API_VERSION_1_0_0;
pub const VK_STD_VULKAN_VIDEO_CODEC_H264_DECODE_EXTENSION_NAME = "VK_STD_vulkan_video_codec_h264_decode";
pub const STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_LIST_SIZE = @as(c_int, 2);
pub const VK_KHR_VIDEO_DECODE_H264_SPEC_VERSION = @as(c_int, 9);
pub const VK_KHR_VIDEO_DECODE_H264_EXTENSION_NAME = "VK_KHR_video_decode_h264";
pub const VK_KHR_dynamic_rendering = @as(c_int, 1);
pub const VK_KHR_DYNAMIC_RENDERING_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DYNAMIC_RENDERING_EXTENSION_NAME = "VK_KHR_dynamic_rendering";
pub const VK_KHR_multiview = @as(c_int, 1);
pub const VK_KHR_MULTIVIEW_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_MULTIVIEW_EXTENSION_NAME = "VK_KHR_multiview";
pub const VK_KHR_get_physical_device_properties2 = @as(c_int, 1);
pub const VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME = "VK_KHR_get_physical_device_properties2";
pub const VK_KHR_device_group = @as(c_int, 1);
pub const VK_KHR_DEVICE_GROUP_SPEC_VERSION = @as(c_int, 4);
pub const VK_KHR_DEVICE_GROUP_EXTENSION_NAME = "VK_KHR_device_group";
pub const VK_KHR_shader_draw_parameters = @as(c_int, 1);
pub const VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME = "VK_KHR_shader_draw_parameters";
pub const VK_KHR_maintenance1 = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_1_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_MAINTENANCE_1_EXTENSION_NAME = "VK_KHR_maintenance1";
pub const VK_KHR_MAINTENANCE1_SPEC_VERSION = VK_KHR_MAINTENANCE_1_SPEC_VERSION;
pub const VK_KHR_MAINTENANCE1_EXTENSION_NAME = VK_KHR_MAINTENANCE_1_EXTENSION_NAME;
pub const VK_KHR_device_group_creation = @as(c_int, 1);
pub const VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME = "VK_KHR_device_group_creation";
pub const VK_MAX_DEVICE_GROUP_SIZE_KHR = VK_MAX_DEVICE_GROUP_SIZE;
pub const VK_KHR_external_memory_capabilities = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME = "VK_KHR_external_memory_capabilities";
pub const VK_LUID_SIZE_KHR = VK_LUID_SIZE;
pub const VK_KHR_external_memory = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME = "VK_KHR_external_memory";
pub const VK_QUEUE_FAMILY_EXTERNAL_KHR = VK_QUEUE_FAMILY_EXTERNAL;
pub const VK_KHR_external_memory_fd = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME = "VK_KHR_external_memory_fd";
pub const VK_KHR_external_semaphore_capabilities = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME = "VK_KHR_external_semaphore_capabilities";
pub const VK_KHR_external_semaphore = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME = "VK_KHR_external_semaphore";
pub const VK_KHR_external_semaphore_fd = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME = "VK_KHR_external_semaphore_fd";
pub const VK_KHR_push_descriptor = @as(c_int, 1);
pub const VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME = "VK_KHR_push_descriptor";
pub const VK_KHR_shader_float16_int8 = @as(c_int, 1);
pub const VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME = "VK_KHR_shader_float16_int8";
pub const VK_KHR_16bit_storage = @as(c_int, 1);
pub const VK_KHR_16BIT_STORAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_16BIT_STORAGE_EXTENSION_NAME = "VK_KHR_16bit_storage";
pub const VK_KHR_incremental_present = @as(c_int, 1);
pub const VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME = "VK_KHR_incremental_present";
pub const VK_KHR_descriptor_update_template = @as(c_int, 1);
pub const VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME = "VK_KHR_descriptor_update_template";
pub const VK_KHR_imageless_framebuffer = @as(c_int, 1);
pub const VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME = "VK_KHR_imageless_framebuffer";
pub const VK_KHR_create_renderpass2 = @as(c_int, 1);
pub const VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME = "VK_KHR_create_renderpass2";
pub const VK_KHR_shared_presentable_image = @as(c_int, 1);
pub const VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME = "VK_KHR_shared_presentable_image";
pub const VK_KHR_external_fence_capabilities = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME = "VK_KHR_external_fence_capabilities";
pub const VK_KHR_external_fence = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_FENCE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME = "VK_KHR_external_fence";
pub const VK_KHR_external_fence_fd = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME = "VK_KHR_external_fence_fd";
pub const VK_KHR_performance_query = @as(c_int, 1);
pub const VK_KHR_PERFORMANCE_QUERY_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_PERFORMANCE_QUERY_EXTENSION_NAME = "VK_KHR_performance_query";
pub const VK_KHR_maintenance2 = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_2_EXTENSION_NAME = "VK_KHR_maintenance2";
pub const VK_KHR_MAINTENANCE2_SPEC_VERSION = VK_KHR_MAINTENANCE_2_SPEC_VERSION;
pub const VK_KHR_MAINTENANCE2_EXTENSION_NAME = VK_KHR_MAINTENANCE_2_EXTENSION_NAME;
pub const VK_KHR_get_surface_capabilities2 = @as(c_int, 1);
pub const VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME = "VK_KHR_get_surface_capabilities2";
pub const VK_KHR_variable_pointers = @as(c_int, 1);
pub const VK_KHR_VARIABLE_POINTERS_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME = "VK_KHR_variable_pointers";
pub const VK_KHR_get_display_properties2 = @as(c_int, 1);
pub const VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME = "VK_KHR_get_display_properties2";
pub const VK_KHR_dedicated_allocation = @as(c_int, 1);
pub const VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION = @as(c_int, 3);
pub const VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME = "VK_KHR_dedicated_allocation";
pub const VK_KHR_storage_buffer_storage_class = @as(c_int, 1);
pub const VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME = "VK_KHR_storage_buffer_storage_class";
pub const VK_KHR_relaxed_block_layout = @as(c_int, 1);
pub const VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME = "VK_KHR_relaxed_block_layout";
pub const VK_KHR_get_memory_requirements2 = @as(c_int, 1);
pub const VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME = "VK_KHR_get_memory_requirements2";
pub const VK_KHR_image_format_list = @as(c_int, 1);
pub const VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME = "VK_KHR_image_format_list";
pub const VK_KHR_sampler_ycbcr_conversion = @as(c_int, 1);
pub const VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION = @as(c_int, 14);
pub const VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME = "VK_KHR_sampler_ycbcr_conversion";
pub const VK_KHR_bind_memory2 = @as(c_int, 1);
pub const VK_KHR_BIND_MEMORY_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_BIND_MEMORY_2_EXTENSION_NAME = "VK_KHR_bind_memory2";
pub const VK_KHR_maintenance3 = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_3_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_3_EXTENSION_NAME = "VK_KHR_maintenance3";
pub const VK_KHR_MAINTENANCE3_SPEC_VERSION = VK_KHR_MAINTENANCE_3_SPEC_VERSION;
pub const VK_KHR_MAINTENANCE3_EXTENSION_NAME = VK_KHR_MAINTENANCE_3_EXTENSION_NAME;
pub const VK_KHR_draw_indirect_count = @as(c_int, 1);
pub const VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME = "VK_KHR_draw_indirect_count";
pub const VK_KHR_shader_subgroup_extended_types = @as(c_int, 1);
pub const VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME = "VK_KHR_shader_subgroup_extended_types";
pub const VK_KHR_8bit_storage = @as(c_int, 1);
pub const VK_KHR_8BIT_STORAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_8BIT_STORAGE_EXTENSION_NAME = "VK_KHR_8bit_storage";
pub const VK_KHR_shader_atomic_int64 = @as(c_int, 1);
pub const VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME = "VK_KHR_shader_atomic_int64";
pub const VK_KHR_shader_clock = @as(c_int, 1);
pub const VK_KHR_SHADER_CLOCK_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_CLOCK_EXTENSION_NAME = "VK_KHR_shader_clock";
pub const VK_KHR_video_decode_h265 = @as(c_int, 1);
pub const VULKAN_VIDEO_CODEC_H265STD_DECODE_H_ = @as(c_int, 1);
pub const vulkan_video_codec_h265std_decode = @as(c_int, 1);
pub const VK_STD_VULKAN_VIDEO_CODEC_H265_DECODE_API_VERSION_1_0_0 = VK_MAKE_VIDEO_STD_VERSION(@as(c_int, 1), @as(c_int, 0), @as(c_int, 0));
pub const VK_STD_VULKAN_VIDEO_CODEC_H265_DECODE_SPEC_VERSION = VK_STD_VULKAN_VIDEO_CODEC_H265_DECODE_API_VERSION_1_0_0;
pub const VK_STD_VULKAN_VIDEO_CODEC_H265_DECODE_EXTENSION_NAME = "VK_STD_vulkan_video_codec_h265_decode";
pub const STD_VIDEO_DECODE_H265_REF_PIC_SET_LIST_SIZE = @as(c_int, 8);
pub const VK_KHR_VIDEO_DECODE_H265_SPEC_VERSION = @as(c_int, 8);
pub const VK_KHR_VIDEO_DECODE_H265_EXTENSION_NAME = "VK_KHR_video_decode_h265";
pub const VK_KHR_global_priority = @as(c_int, 1);
pub const VK_MAX_GLOBAL_PRIORITY_SIZE_KHR = @as(c_uint, 16);
pub const VK_KHR_GLOBAL_PRIORITY_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_GLOBAL_PRIORITY_EXTENSION_NAME = "VK_KHR_global_priority";
pub const VK_KHR_driver_properties = @as(c_int, 1);
pub const VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME = "VK_KHR_driver_properties";
pub const VK_MAX_DRIVER_NAME_SIZE_KHR = VK_MAX_DRIVER_NAME_SIZE;
pub const VK_MAX_DRIVER_INFO_SIZE_KHR = VK_MAX_DRIVER_INFO_SIZE;
pub const VK_KHR_shader_float_controls = @as(c_int, 1);
pub const VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION = @as(c_int, 4);
pub const VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME = "VK_KHR_shader_float_controls";
pub const VK_KHR_depth_stencil_resolve = @as(c_int, 1);
pub const VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME = "VK_KHR_depth_stencil_resolve";
pub const VK_KHR_swapchain_mutable_format = @as(c_int, 1);
pub const VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME = "VK_KHR_swapchain_mutable_format";
pub const VK_KHR_timeline_semaphore = @as(c_int, 1);
pub const VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME = "VK_KHR_timeline_semaphore";
pub const VK_KHR_vulkan_memory_model = @as(c_int, 1);
pub const VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION = @as(c_int, 3);
pub const VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME = "VK_KHR_vulkan_memory_model";
pub const VK_KHR_shader_terminate_invocation = @as(c_int, 1);
pub const VK_KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME = "VK_KHR_shader_terminate_invocation";
pub const VK_KHR_fragment_shading_rate = @as(c_int, 1);
pub const VK_KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME = "VK_KHR_fragment_shading_rate";
pub const VK_KHR_dynamic_rendering_local_read = @as(c_int, 1);
pub const VK_KHR_DYNAMIC_RENDERING_LOCAL_READ_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_DYNAMIC_RENDERING_LOCAL_READ_EXTENSION_NAME = "VK_KHR_dynamic_rendering_local_read";
pub const VK_KHR_shader_quad_control = @as(c_int, 1);
pub const VK_KHR_SHADER_QUAD_CONTROL_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_QUAD_CONTROL_EXTENSION_NAME = "VK_KHR_shader_quad_control";
pub const VK_KHR_spirv_1_4 = @as(c_int, 1);
pub const VK_KHR_SPIRV_1_4_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SPIRV_1_4_EXTENSION_NAME = "VK_KHR_spirv_1_4";
pub const VK_KHR_surface_protected_capabilities = @as(c_int, 1);
pub const VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME = "VK_KHR_surface_protected_capabilities";
pub const VK_KHR_separate_depth_stencil_layouts = @as(c_int, 1);
pub const VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME = "VK_KHR_separate_depth_stencil_layouts";
pub const VK_KHR_present_wait = @as(c_int, 1);
pub const VK_KHR_PRESENT_WAIT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_PRESENT_WAIT_EXTENSION_NAME = "VK_KHR_present_wait";
pub const VK_KHR_uniform_buffer_standard_layout = @as(c_int, 1);
pub const VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME = "VK_KHR_uniform_buffer_standard_layout";
pub const VK_KHR_buffer_device_address = @as(c_int, 1);
pub const VK_KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME = "VK_KHR_buffer_device_address";
pub const VK_KHR_deferred_host_operations = @as(c_int, 1);
pub const VK_KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION = @as(c_int, 4);
pub const VK_KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME = "VK_KHR_deferred_host_operations";
pub const VK_KHR_pipeline_executable_properties = @as(c_int, 1);
pub const VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME = "VK_KHR_pipeline_executable_properties";
pub const VK_KHR_map_memory2 = @as(c_int, 1);
pub const VK_KHR_MAP_MEMORY_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_MAP_MEMORY_2_EXTENSION_NAME = "VK_KHR_map_memory2";
pub const VK_KHR_shader_integer_dot_product = @as(c_int, 1);
pub const VK_KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME = "VK_KHR_shader_integer_dot_product";
pub const VK_KHR_pipeline_library = @as(c_int, 1);
pub const VK_KHR_PIPELINE_LIBRARY_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_PIPELINE_LIBRARY_EXTENSION_NAME = "VK_KHR_pipeline_library";
pub const VK_KHR_shader_non_semantic_info = @as(c_int, 1);
pub const VK_KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME = "VK_KHR_shader_non_semantic_info";
pub const VK_KHR_present_id = @as(c_int, 1);
pub const VK_KHR_PRESENT_ID_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_PRESENT_ID_EXTENSION_NAME = "VK_KHR_present_id";
pub const VK_KHR_video_encode_queue = @as(c_int, 1);
pub const VK_KHR_VIDEO_ENCODE_QUEUE_SPEC_VERSION = @as(c_int, 12);
pub const VK_KHR_VIDEO_ENCODE_QUEUE_EXTENSION_NAME = "VK_KHR_video_encode_queue";
pub const VK_KHR_synchronization2 = @as(c_int, 1);
pub const VK_KHR_SYNCHRONIZATION_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SYNCHRONIZATION_2_EXTENSION_NAME = "VK_KHR_synchronization2";
pub const VK_KHR_fragment_shader_barycentric = @as(c_int, 1);
pub const VK_KHR_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME = "VK_KHR_fragment_shader_barycentric";
pub const VK_KHR_shader_subgroup_uniform_control_flow = @as(c_int, 1);
pub const VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME = "VK_KHR_shader_subgroup_uniform_control_flow";
pub const VK_KHR_zero_initialize_workgroup_memory = @as(c_int, 1);
pub const VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME = "VK_KHR_zero_initialize_workgroup_memory";
pub const VK_KHR_workgroup_memory_explicit_layout = @as(c_int, 1);
pub const VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME = "VK_KHR_workgroup_memory_explicit_layout";
pub const VK_KHR_copy_commands2 = @as(c_int, 1);
pub const VK_KHR_COPY_COMMANDS_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_COPY_COMMANDS_2_EXTENSION_NAME = "VK_KHR_copy_commands2";
pub const VK_KHR_format_feature_flags2 = @as(c_int, 1);
pub const VK_KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME = "VK_KHR_format_feature_flags2";
pub const VK_KHR_ray_tracing_maintenance1 = @as(c_int, 1);
pub const VK_KHR_RAY_TRACING_MAINTENANCE_1_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_RAY_TRACING_MAINTENANCE_1_EXTENSION_NAME = "VK_KHR_ray_tracing_maintenance1";
pub const VK_KHR_portability_enumeration = @as(c_int, 1);
pub const VK_KHR_PORTABILITY_ENUMERATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME = "VK_KHR_portability_enumeration";
pub const VK_KHR_maintenance4 = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_4_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_MAINTENANCE_4_EXTENSION_NAME = "VK_KHR_maintenance4";
pub const VK_KHR_shader_subgroup_rotate = @as(c_int, 1);
pub const VK_KHR_SHADER_SUBGROUP_ROTATE_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_SHADER_SUBGROUP_ROTATE_EXTENSION_NAME = "VK_KHR_shader_subgroup_rotate";
pub const VK_KHR_shader_maximal_reconvergence = @as(c_int, 1);
pub const VK_KHR_SHADER_MAXIMAL_RECONVERGENCE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_MAXIMAL_RECONVERGENCE_EXTENSION_NAME = "VK_KHR_shader_maximal_reconvergence";
pub const VK_KHR_maintenance5 = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_5_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_5_EXTENSION_NAME = "VK_KHR_maintenance5";
pub const VK_KHR_ray_tracing_position_fetch = @as(c_int, 1);
pub const VK_KHR_RAY_TRACING_POSITION_FETCH_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_RAY_TRACING_POSITION_FETCH_EXTENSION_NAME = "VK_KHR_ray_tracing_position_fetch";
pub const VK_KHR_cooperative_matrix = @as(c_int, 1);
pub const VK_KHR_COOPERATIVE_MATRIX_SPEC_VERSION = @as(c_int, 2);
pub const VK_KHR_COOPERATIVE_MATRIX_EXTENSION_NAME = "VK_KHR_cooperative_matrix";
pub const VK_KHR_video_decode_av1 = @as(c_int, 1);
pub const VULKAN_VIDEO_CODEC_AV1STD_H_ = @as(c_int, 1);
pub const vulkan_video_codec_av1std = @as(c_int, 1);
pub const STD_VIDEO_AV1_NUM_REF_FRAMES = @as(c_int, 8);
pub const STD_VIDEO_AV1_REFS_PER_FRAME = @as(c_int, 7);
pub const STD_VIDEO_AV1_TOTAL_REFS_PER_FRAME = @as(c_int, 8);
pub const STD_VIDEO_AV1_MAX_TILE_COLS = @as(c_int, 64);
pub const STD_VIDEO_AV1_MAX_TILE_ROWS = @as(c_int, 64);
pub const STD_VIDEO_AV1_MAX_SEGMENTS = @as(c_int, 8);
pub const STD_VIDEO_AV1_SEG_LVL_MAX = @as(c_int, 8);
pub const STD_VIDEO_AV1_PRIMARY_REF_NONE = @as(c_int, 7);
pub const STD_VIDEO_AV1_SELECT_INTEGER_MV = @as(c_int, 2);
pub const STD_VIDEO_AV1_SELECT_SCREEN_CONTENT_TOOLS = @as(c_int, 2);
pub const STD_VIDEO_AV1_SKIP_MODE_FRAMES = @as(c_int, 2);
pub const STD_VIDEO_AV1_MAX_LOOP_FILTER_STRENGTHS = @as(c_int, 4);
pub const STD_VIDEO_AV1_LOOP_FILTER_ADJUSTMENTS = @as(c_int, 2);
pub const STD_VIDEO_AV1_MAX_CDEF_FILTER_STRENGTHS = @as(c_int, 8);
pub const STD_VIDEO_AV1_MAX_NUM_PLANES = @as(c_int, 3);
pub const STD_VIDEO_AV1_GLOBAL_MOTION_PARAMS = @as(c_int, 6);
pub const STD_VIDEO_AV1_MAX_NUM_Y_POINTS = @as(c_int, 14);
pub const STD_VIDEO_AV1_MAX_NUM_CB_POINTS = @as(c_int, 10);
pub const STD_VIDEO_AV1_MAX_NUM_CR_POINTS = @as(c_int, 10);
pub const STD_VIDEO_AV1_MAX_NUM_POS_LUMA = @as(c_int, 24);
pub const STD_VIDEO_AV1_MAX_NUM_POS_CHROMA = @as(c_int, 25);
pub const VULKAN_VIDEO_CODEC_AV1STD_DECODE_H_ = @as(c_int, 1);
pub const vulkan_video_codec_av1std_decode = @as(c_int, 1);
pub const VK_STD_VULKAN_VIDEO_CODEC_AV1_DECODE_API_VERSION_1_0_0 = VK_MAKE_VIDEO_STD_VERSION(@as(c_int, 1), @as(c_int, 0), @as(c_int, 0));
pub const VK_STD_VULKAN_VIDEO_CODEC_AV1_DECODE_SPEC_VERSION = VK_STD_VULKAN_VIDEO_CODEC_AV1_DECODE_API_VERSION_1_0_0;
pub const VK_STD_VULKAN_VIDEO_CODEC_AV1_DECODE_EXTENSION_NAME = "VK_STD_vulkan_video_codec_av1_decode";
pub const VK_MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR = @as(c_uint, 7);
pub const VK_KHR_VIDEO_DECODE_AV1_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_VIDEO_DECODE_AV1_EXTENSION_NAME = "VK_KHR_video_decode_av1";
pub const VK_KHR_video_maintenance1 = @as(c_int, 1);
pub const VK_KHR_VIDEO_MAINTENANCE_1_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_VIDEO_MAINTENANCE_1_EXTENSION_NAME = "VK_KHR_video_maintenance1";
pub const VK_KHR_vertex_attribute_divisor = @as(c_int, 1);
pub const VK_KHR_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME = "VK_KHR_vertex_attribute_divisor";
pub const VK_KHR_load_store_op_none = @as(c_int, 1);
pub const VK_KHR_LOAD_STORE_OP_NONE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_LOAD_STORE_OP_NONE_EXTENSION_NAME = "VK_KHR_load_store_op_none";
pub const VK_KHR_shader_float_controls2 = @as(c_int, 1);
pub const VK_KHR_SHADER_FLOAT_CONTROLS_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_FLOAT_CONTROLS_2_EXTENSION_NAME = "VK_KHR_shader_float_controls2";
pub const VK_KHR_index_type_uint8 = @as(c_int, 1);
pub const VK_KHR_INDEX_TYPE_UINT8_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_INDEX_TYPE_UINT8_EXTENSION_NAME = "VK_KHR_index_type_uint8";
pub const VK_KHR_line_rasterization = @as(c_int, 1);
pub const VK_KHR_LINE_RASTERIZATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_LINE_RASTERIZATION_EXTENSION_NAME = "VK_KHR_line_rasterization";
pub const VK_KHR_calibrated_timestamps = @as(c_int, 1);
pub const VK_KHR_CALIBRATED_TIMESTAMPS_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_CALIBRATED_TIMESTAMPS_EXTENSION_NAME = "VK_KHR_calibrated_timestamps";
pub const VK_KHR_shader_expect_assume = @as(c_int, 1);
pub const VK_KHR_SHADER_EXPECT_ASSUME_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_SHADER_EXPECT_ASSUME_EXTENSION_NAME = "VK_KHR_shader_expect_assume";
pub const VK_KHR_maintenance6 = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_6_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_MAINTENANCE_6_EXTENSION_NAME = "VK_KHR_maintenance6";
pub const VK_EXT_debug_report = @as(c_int, 1);
pub const VK_EXT_DEBUG_REPORT_SPEC_VERSION = @as(c_int, 10);
pub const VK_EXT_DEBUG_REPORT_EXTENSION_NAME = "VK_EXT_debug_report";
pub const VK_NV_glsl_shader = @as(c_int, 1);
pub const VK_NV_GLSL_SHADER_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_GLSL_SHADER_EXTENSION_NAME = "VK_NV_glsl_shader";
pub const VK_EXT_depth_range_unrestricted = @as(c_int, 1);
pub const VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME = "VK_EXT_depth_range_unrestricted";
pub const VK_IMG_filter_cubic = @as(c_int, 1);
pub const VK_IMG_FILTER_CUBIC_SPEC_VERSION = @as(c_int, 1);
pub const VK_IMG_FILTER_CUBIC_EXTENSION_NAME = "VK_IMG_filter_cubic";
pub const VK_AMD_rasterization_order = @as(c_int, 1);
pub const VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME = "VK_AMD_rasterization_order";
pub const VK_AMD_shader_trinary_minmax = @as(c_int, 1);
pub const VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME = "VK_AMD_shader_trinary_minmax";
pub const VK_AMD_shader_explicit_vertex_parameter = @as(c_int, 1);
pub const VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME = "VK_AMD_shader_explicit_vertex_parameter";
pub const VK_EXT_debug_marker = @as(c_int, 1);
pub const VK_EXT_DEBUG_MARKER_SPEC_VERSION = @as(c_int, 4);
pub const VK_EXT_DEBUG_MARKER_EXTENSION_NAME = "VK_EXT_debug_marker";
pub const VK_AMD_gcn_shader = @as(c_int, 1);
pub const VK_AMD_GCN_SHADER_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_GCN_SHADER_EXTENSION_NAME = "VK_AMD_gcn_shader";
pub const VK_NV_dedicated_allocation = @as(c_int, 1);
pub const VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME = "VK_NV_dedicated_allocation";
pub const VK_EXT_transform_feedback = @as(c_int, 1);
pub const VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME = "VK_EXT_transform_feedback";
pub const VK_NVX_binary_import = @as(c_int, 1);
pub const VK_NVX_BINARY_IMPORT_SPEC_VERSION = @as(c_int, 1);
pub const VK_NVX_BINARY_IMPORT_EXTENSION_NAME = "VK_NVX_binary_import";
pub const VK_NVX_image_view_handle = @as(c_int, 1);
pub const VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION = @as(c_int, 2);
pub const VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME = "VK_NVX_image_view_handle";
pub const VK_AMD_draw_indirect_count = @as(c_int, 1);
pub const VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION = @as(c_int, 2);
pub const VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME = "VK_AMD_draw_indirect_count";
pub const VK_AMD_negative_viewport_height = @as(c_int, 1);
pub const VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME = "VK_AMD_negative_viewport_height";
pub const VK_AMD_gpu_shader_half_float = @as(c_int, 1);
pub const VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION = @as(c_int, 2);
pub const VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME = "VK_AMD_gpu_shader_half_float";
pub const VK_AMD_shader_ballot = @as(c_int, 1);
pub const VK_AMD_SHADER_BALLOT_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_BALLOT_EXTENSION_NAME = "VK_AMD_shader_ballot";
pub const VK_AMD_texture_gather_bias_lod = @as(c_int, 1);
pub const VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME = "VK_AMD_texture_gather_bias_lod";
pub const VK_AMD_shader_info = @as(c_int, 1);
pub const VK_AMD_SHADER_INFO_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_INFO_EXTENSION_NAME = "VK_AMD_shader_info";
pub const VK_AMD_shader_image_load_store_lod = @as(c_int, 1);
pub const VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME = "VK_AMD_shader_image_load_store_lod";
pub const VK_NV_corner_sampled_image = @as(c_int, 1);
pub const VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME = "VK_NV_corner_sampled_image";
pub const VK_IMG_format_pvrtc = @as(c_int, 1);
pub const VK_IMG_FORMAT_PVRTC_SPEC_VERSION = @as(c_int, 1);
pub const VK_IMG_FORMAT_PVRTC_EXTENSION_NAME = "VK_IMG_format_pvrtc";
pub const VK_NV_external_memory_capabilities = @as(c_int, 1);
pub const VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME = "VK_NV_external_memory_capabilities";
pub const VK_NV_external_memory = @as(c_int, 1);
pub const VK_NV_EXTERNAL_MEMORY_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME = "VK_NV_external_memory";
pub const VK_EXT_validation_flags = @as(c_int, 1);
pub const VK_EXT_VALIDATION_FLAGS_SPEC_VERSION = @as(c_int, 3);
pub const VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME = "VK_EXT_validation_flags";
pub const VK_EXT_shader_subgroup_ballot = @as(c_int, 1);
pub const VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME = "VK_EXT_shader_subgroup_ballot";
pub const VK_EXT_shader_subgroup_vote = @as(c_int, 1);
pub const VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME = "VK_EXT_shader_subgroup_vote";
pub const VK_EXT_texture_compression_astc_hdr = @as(c_int, 1);
pub const VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME = "VK_EXT_texture_compression_astc_hdr";
pub const VK_EXT_astc_decode_mode = @as(c_int, 1);
pub const VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME = "VK_EXT_astc_decode_mode";
pub const VK_EXT_pipeline_robustness = @as(c_int, 1);
pub const VK_EXT_PIPELINE_ROBUSTNESS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PIPELINE_ROBUSTNESS_EXTENSION_NAME = "VK_EXT_pipeline_robustness";
pub const VK_EXT_conditional_rendering = @as(c_int, 1);
pub const VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME = "VK_EXT_conditional_rendering";
pub const VK_NV_clip_space_w_scaling = @as(c_int, 1);
pub const VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME = "VK_NV_clip_space_w_scaling";
pub const VK_EXT_direct_mode_display = @as(c_int, 1);
pub const VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME = "VK_EXT_direct_mode_display";
pub const VK_EXT_display_surface_counter = @as(c_int, 1);
pub const VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME = "VK_EXT_display_surface_counter";
pub const VK_EXT_display_control = @as(c_int, 1);
pub const VK_EXT_DISPLAY_CONTROL_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME = "VK_EXT_display_control";
pub const VK_GOOGLE_display_timing = @as(c_int, 1);
pub const VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION = @as(c_int, 1);
pub const VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME = "VK_GOOGLE_display_timing";
pub const VK_NV_sample_mask_override_coverage = @as(c_int, 1);
pub const VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME = "VK_NV_sample_mask_override_coverage";
pub const VK_NV_geometry_shader_passthrough = @as(c_int, 1);
pub const VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME = "VK_NV_geometry_shader_passthrough";
pub const VK_NV_viewport_array2 = @as(c_int, 1);
pub const VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME = "VK_NV_viewport_array2";
pub const VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION = VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION;
pub const VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME = VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME;
pub const VK_NVX_multiview_per_view_attributes = @as(c_int, 1);
pub const VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION = @as(c_int, 1);
pub const VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME = "VK_NVX_multiview_per_view_attributes";
pub const VK_NV_viewport_swizzle = @as(c_int, 1);
pub const VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME = "VK_NV_viewport_swizzle";
pub const VK_EXT_discard_rectangles = @as(c_int, 1);
pub const VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME = "VK_EXT_discard_rectangles";
pub const VK_EXT_conservative_rasterization = @as(c_int, 1);
pub const VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME = "VK_EXT_conservative_rasterization";
pub const VK_EXT_depth_clip_enable = @as(c_int, 1);
pub const VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME = "VK_EXT_depth_clip_enable";
pub const VK_EXT_swapchain_colorspace = @as(c_int, 1);
pub const VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION = @as(c_int, 4);
pub const VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME = "VK_EXT_swapchain_colorspace";
pub const VK_EXT_hdr_metadata = @as(c_int, 1);
pub const VK_EXT_HDR_METADATA_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_HDR_METADATA_EXTENSION_NAME = "VK_EXT_hdr_metadata";
pub const VK_IMG_relaxed_line_rasterization = @as(c_int, 1);
pub const VK_IMG_RELAXED_LINE_RASTERIZATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_IMG_RELAXED_LINE_RASTERIZATION_EXTENSION_NAME = "VK_IMG_relaxed_line_rasterization";
pub const VK_EXT_external_memory_dma_buf = @as(c_int, 1);
pub const VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME = "VK_EXT_external_memory_dma_buf";
pub const VK_EXT_queue_family_foreign = @as(c_int, 1);
pub const VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME = "VK_EXT_queue_family_foreign";
pub const VK_QUEUE_FAMILY_FOREIGN_EXT = ~@as(c_uint, 2);
pub const VK_EXT_debug_utils = @as(c_int, 1);
pub const VK_EXT_DEBUG_UTILS_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_DEBUG_UTILS_EXTENSION_NAME = "VK_EXT_debug_utils";
pub const VK_EXT_sampler_filter_minmax = @as(c_int, 1);
pub const VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME = "VK_EXT_sampler_filter_minmax";
pub const VK_AMD_gpu_shader_int16 = @as(c_int, 1);
pub const VK_AMD_GPU_SHADER_INT16_SPEC_VERSION = @as(c_int, 2);
pub const VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME = "VK_AMD_gpu_shader_int16";
pub const VK_AMD_mixed_attachment_samples = @as(c_int, 1);
pub const VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME = "VK_AMD_mixed_attachment_samples";
pub const VK_AMD_shader_fragment_mask = @as(c_int, 1);
pub const VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME = "VK_AMD_shader_fragment_mask";
pub const VK_EXT_inline_uniform_block = @as(c_int, 1);
pub const VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME = "VK_EXT_inline_uniform_block";
pub const VK_EXT_shader_stencil_export = @as(c_int, 1);
pub const VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME = "VK_EXT_shader_stencil_export";
pub const VK_EXT_sample_locations = @as(c_int, 1);
pub const VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME = "VK_EXT_sample_locations";
pub const VK_EXT_blend_operation_advanced = @as(c_int, 1);
pub const VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME = "VK_EXT_blend_operation_advanced";
pub const VK_NV_fragment_coverage_to_color = @as(c_int, 1);
pub const VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME = "VK_NV_fragment_coverage_to_color";
pub const VK_NV_framebuffer_mixed_samples = @as(c_int, 1);
pub const VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME = "VK_NV_framebuffer_mixed_samples";
pub const VK_NV_fill_rectangle = @as(c_int, 1);
pub const VK_NV_FILL_RECTANGLE_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_FILL_RECTANGLE_EXTENSION_NAME = "VK_NV_fill_rectangle";
pub const VK_NV_shader_sm_builtins = @as(c_int, 1);
pub const VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME = "VK_NV_shader_sm_builtins";
pub const VK_EXT_post_depth_coverage = @as(c_int, 1);
pub const VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME = "VK_EXT_post_depth_coverage";
pub const VK_EXT_image_drm_format_modifier = @as(c_int, 1);
pub const VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME = "VK_EXT_image_drm_format_modifier";
pub const VK_EXT_validation_cache = @as(c_int, 1);
pub const VK_EXT_VALIDATION_CACHE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_VALIDATION_CACHE_EXTENSION_NAME = "VK_EXT_validation_cache";
pub const VK_EXT_descriptor_indexing = @as(c_int, 1);
pub const VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME = "VK_EXT_descriptor_indexing";
pub const VK_EXT_shader_viewport_index_layer = @as(c_int, 1);
pub const VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME = "VK_EXT_shader_viewport_index_layer";
pub const VK_NV_shading_rate_image = @as(c_int, 1);
pub const VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION = @as(c_int, 3);
pub const VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME = "VK_NV_shading_rate_image";
pub const VK_NV_ray_tracing = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_SPEC_VERSION = @as(c_int, 3);
pub const VK_NV_RAY_TRACING_EXTENSION_NAME = "VK_NV_ray_tracing";
pub const VK_SHADER_UNUSED_KHR = ~@as(c_uint, 0);
pub const VK_SHADER_UNUSED_NV = VK_SHADER_UNUSED_KHR;
pub const VK_NV_representative_fragment_test = @as(c_int, 1);
pub const VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME = "VK_NV_representative_fragment_test";
pub const VK_EXT_filter_cubic = @as(c_int, 1);
pub const VK_EXT_FILTER_CUBIC_SPEC_VERSION = @as(c_int, 3);
pub const VK_EXT_FILTER_CUBIC_EXTENSION_NAME = "VK_EXT_filter_cubic";
pub const VK_QCOM_render_pass_shader_resolve = @as(c_int, 1);
pub const VK_QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION = @as(c_int, 4);
pub const VK_QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME = "VK_QCOM_render_pass_shader_resolve";
pub const VK_EXT_global_priority = @as(c_int, 1);
pub const VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME = "VK_EXT_global_priority";
pub const VK_EXT_external_memory_host = @as(c_int, 1);
pub const VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME = "VK_EXT_external_memory_host";
pub const VK_AMD_buffer_marker = @as(c_int, 1);
pub const VK_AMD_BUFFER_MARKER_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_BUFFER_MARKER_EXTENSION_NAME = "VK_AMD_buffer_marker";
pub const VK_AMD_pipeline_compiler_control = @as(c_int, 1);
pub const VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME = "VK_AMD_pipeline_compiler_control";
pub const VK_EXT_calibrated_timestamps = @as(c_int, 1);
pub const VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME = "VK_EXT_calibrated_timestamps";
pub const VK_AMD_shader_core_properties = @as(c_int, 1);
pub const VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION = @as(c_int, 2);
pub const VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME = "VK_AMD_shader_core_properties";
pub const VK_AMD_memory_overallocation_behavior = @as(c_int, 1);
pub const VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME = "VK_AMD_memory_overallocation_behavior";
pub const VK_EXT_vertex_attribute_divisor = @as(c_int, 1);
pub const VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION = @as(c_int, 3);
pub const VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME = "VK_EXT_vertex_attribute_divisor";
pub const VK_EXT_pipeline_creation_feedback = @as(c_int, 1);
pub const VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME = "VK_EXT_pipeline_creation_feedback";
pub const VK_NV_shader_subgroup_partitioned = @as(c_int, 1);
pub const VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME = "VK_NV_shader_subgroup_partitioned";
pub const VK_NV_compute_shader_derivatives = @as(c_int, 1);
pub const VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME = "VK_NV_compute_shader_derivatives";
pub const VK_NV_mesh_shader = @as(c_int, 1);
pub const VK_NV_MESH_SHADER_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_MESH_SHADER_EXTENSION_NAME = "VK_NV_mesh_shader";
pub const VK_NV_fragment_shader_barycentric = @as(c_int, 1);
pub const VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME = "VK_NV_fragment_shader_barycentric";
pub const VK_NV_shader_image_footprint = @as(c_int, 1);
pub const VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME = "VK_NV_shader_image_footprint";
pub const VK_NV_scissor_exclusive = @as(c_int, 1);
pub const VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME = "VK_NV_scissor_exclusive";
pub const VK_NV_device_diagnostic_checkpoints = @as(c_int, 1);
pub const VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME = "VK_NV_device_diagnostic_checkpoints";
pub const VK_INTEL_shader_integer_functions2 = @as(c_int, 1);
pub const VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME = "VK_INTEL_shader_integer_functions2";
pub const VK_INTEL_performance_query = @as(c_int, 1);
pub const VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION = @as(c_int, 2);
pub const VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME = "VK_INTEL_performance_query";
pub const VK_EXT_pci_bus_info = @as(c_int, 1);
pub const VK_EXT_PCI_BUS_INFO_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_PCI_BUS_INFO_EXTENSION_NAME = "VK_EXT_pci_bus_info";
pub const VK_AMD_display_native_hdr = @as(c_int, 1);
pub const VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME = "VK_AMD_display_native_hdr";
pub const VK_EXT_fragment_density_map = @as(c_int, 1);
pub const VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME = "VK_EXT_fragment_density_map";
pub const VK_EXT_scalar_block_layout = @as(c_int, 1);
pub const VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME = "VK_EXT_scalar_block_layout";
pub const VK_GOOGLE_hlsl_functionality1 = @as(c_int, 1);
pub const VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION = @as(c_int, 1);
pub const VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME = "VK_GOOGLE_hlsl_functionality1";
pub const VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION = VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION;
pub const VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME = VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME;
pub const VK_GOOGLE_decorate_string = @as(c_int, 1);
pub const VK_GOOGLE_DECORATE_STRING_SPEC_VERSION = @as(c_int, 1);
pub const VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME = "VK_GOOGLE_decorate_string";
pub const VK_EXT_subgroup_size_control = @as(c_int, 1);
pub const VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME = "VK_EXT_subgroup_size_control";
pub const VK_AMD_shader_core_properties2 = @as(c_int, 1);
pub const VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME = "VK_AMD_shader_core_properties2";
pub const VK_AMD_device_coherent_memory = @as(c_int, 1);
pub const VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME = "VK_AMD_device_coherent_memory";
pub const VK_EXT_shader_image_atomic_int64 = @as(c_int, 1);
pub const VK_EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME = "VK_EXT_shader_image_atomic_int64";
pub const VK_EXT_memory_budget = @as(c_int, 1);
pub const VK_EXT_MEMORY_BUDGET_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MEMORY_BUDGET_EXTENSION_NAME = "VK_EXT_memory_budget";
pub const VK_EXT_memory_priority = @as(c_int, 1);
pub const VK_EXT_MEMORY_PRIORITY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME = "VK_EXT_memory_priority";
pub const VK_NV_dedicated_allocation_image_aliasing = @as(c_int, 1);
pub const VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME = "VK_NV_dedicated_allocation_image_aliasing";
pub const VK_EXT_buffer_device_address = @as(c_int, 1);
pub const VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME = "VK_EXT_buffer_device_address";
pub const VK_EXT_tooling_info = @as(c_int, 1);
pub const VK_EXT_TOOLING_INFO_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_TOOLING_INFO_EXTENSION_NAME = "VK_EXT_tooling_info";
pub const VK_EXT_separate_stencil_usage = @as(c_int, 1);
pub const VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME = "VK_EXT_separate_stencil_usage";
pub const VK_EXT_validation_features = @as(c_int, 1);
pub const VK_EXT_VALIDATION_FEATURES_SPEC_VERSION = @as(c_int, 6);
pub const VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME = "VK_EXT_validation_features";
pub const VK_NV_cooperative_matrix = @as(c_int, 1);
pub const VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME = "VK_NV_cooperative_matrix";
pub const VK_NV_coverage_reduction_mode = @as(c_int, 1);
pub const VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME = "VK_NV_coverage_reduction_mode";
pub const VK_EXT_fragment_shader_interlock = @as(c_int, 1);
pub const VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME = "VK_EXT_fragment_shader_interlock";
pub const VK_EXT_ycbcr_image_arrays = @as(c_int, 1);
pub const VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME = "VK_EXT_ycbcr_image_arrays";
pub const VK_EXT_provoking_vertex = @as(c_int, 1);
pub const VK_EXT_PROVOKING_VERTEX_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME = "VK_EXT_provoking_vertex";
pub const VK_EXT_headless_surface = @as(c_int, 1);
pub const VK_EXT_HEADLESS_SURFACE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME = "VK_EXT_headless_surface";
pub const VK_EXT_line_rasterization = @as(c_int, 1);
pub const VK_EXT_LINE_RASTERIZATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME = "VK_EXT_line_rasterization";
pub const VK_EXT_shader_atomic_float = @as(c_int, 1);
pub const VK_EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME = "VK_EXT_shader_atomic_float";
pub const VK_EXT_host_query_reset = @as(c_int, 1);
pub const VK_EXT_HOST_QUERY_RESET_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME = "VK_EXT_host_query_reset";
pub const VK_EXT_index_type_uint8 = @as(c_int, 1);
pub const VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME = "VK_EXT_index_type_uint8";
pub const VK_EXT_extended_dynamic_state = @as(c_int, 1);
pub const VK_EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME = "VK_EXT_extended_dynamic_state";
pub const VK_EXT_host_image_copy = @as(c_int, 1);
pub const VK_EXT_HOST_IMAGE_COPY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_HOST_IMAGE_COPY_EXTENSION_NAME = "VK_EXT_host_image_copy";
pub const VK_EXT_map_memory_placed = @as(c_int, 1);
pub const VK_EXT_MAP_MEMORY_PLACED_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MAP_MEMORY_PLACED_EXTENSION_NAME = "VK_EXT_map_memory_placed";
pub const VK_EXT_shader_atomic_float2 = @as(c_int, 1);
pub const VK_EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME = "VK_EXT_shader_atomic_float2";
pub const VK_EXT_surface_maintenance1 = @as(c_int, 1);
pub const VK_EXT_SURFACE_MAINTENANCE_1_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SURFACE_MAINTENANCE_1_EXTENSION_NAME = "VK_EXT_surface_maintenance1";
pub const VK_EXT_swapchain_maintenance1 = @as(c_int, 1);
pub const VK_EXT_SWAPCHAIN_MAINTENANCE_1_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SWAPCHAIN_MAINTENANCE_1_EXTENSION_NAME = "VK_EXT_swapchain_maintenance1";
pub const VK_EXT_shader_demote_to_helper_invocation = @as(c_int, 1);
pub const VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME = "VK_EXT_shader_demote_to_helper_invocation";
pub const VK_NV_device_generated_commands = @as(c_int, 1);
pub const VK_NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION = @as(c_int, 3);
pub const VK_NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME = "VK_NV_device_generated_commands";
pub const VK_NV_inherited_viewport_scissor = @as(c_int, 1);
pub const VK_NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME = "VK_NV_inherited_viewport_scissor";
pub const VK_EXT_texel_buffer_alignment = @as(c_int, 1);
pub const VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME = "VK_EXT_texel_buffer_alignment";
pub const VK_QCOM_render_pass_transform = @as(c_int, 1);
pub const VK_QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION = @as(c_int, 4);
pub const VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME = "VK_QCOM_render_pass_transform";
pub const VK_EXT_depth_bias_control = @as(c_int, 1);
pub const VK_EXT_DEPTH_BIAS_CONTROL_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DEPTH_BIAS_CONTROL_EXTENSION_NAME = "VK_EXT_depth_bias_control";
pub const VK_EXT_device_memory_report = @as(c_int, 1);
pub const VK_EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME = "VK_EXT_device_memory_report";
pub const VK_EXT_acquire_drm_display = @as(c_int, 1);
pub const VK_EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME = "VK_EXT_acquire_drm_display";
pub const VK_EXT_robustness2 = @as(c_int, 1);
pub const VK_EXT_ROBUSTNESS_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_ROBUSTNESS_2_EXTENSION_NAME = "VK_EXT_robustness2";
pub const VK_EXT_custom_border_color = @as(c_int, 1);
pub const VK_EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION = @as(c_int, 12);
pub const VK_EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME = "VK_EXT_custom_border_color";
pub const VK_GOOGLE_user_type = @as(c_int, 1);
pub const VK_GOOGLE_USER_TYPE_SPEC_VERSION = @as(c_int, 1);
pub const VK_GOOGLE_USER_TYPE_EXTENSION_NAME = "VK_GOOGLE_user_type";
pub const VK_NV_present_barrier = @as(c_int, 1);
pub const VK_NV_PRESENT_BARRIER_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_PRESENT_BARRIER_EXTENSION_NAME = "VK_NV_present_barrier";
pub const VK_EXT_private_data = @as(c_int, 1);
pub const VK_EXT_PRIVATE_DATA_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PRIVATE_DATA_EXTENSION_NAME = "VK_EXT_private_data";
pub const VK_EXT_pipeline_creation_cache_control = @as(c_int, 1);
pub const VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION = @as(c_int, 3);
pub const VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME = "VK_EXT_pipeline_creation_cache_control";
pub const VK_NV_device_diagnostics_config = @as(c_int, 1);
pub const VK_NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME = "VK_NV_device_diagnostics_config";
pub const VK_QCOM_render_pass_store_ops = @as(c_int, 1);
pub const VK_QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION = @as(c_int, 2);
pub const VK_QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME = "VK_QCOM_render_pass_store_ops";
pub const VK_NV_cuda_kernel_launch = @as(c_int, 1);
pub const VK_NV_CUDA_KERNEL_LAUNCH_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_CUDA_KERNEL_LAUNCH_EXTENSION_NAME = "VK_NV_cuda_kernel_launch";
pub const VK_NV_low_latency = @as(c_int, 1);
pub const VK_NV_LOW_LATENCY_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_LOW_LATENCY_EXTENSION_NAME = "VK_NV_low_latency";
pub const VK_EXT_descriptor_buffer = @as(c_int, 1);
pub const VK_EXT_DESCRIPTOR_BUFFER_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DESCRIPTOR_BUFFER_EXTENSION_NAME = "VK_EXT_descriptor_buffer";
pub const VK_EXT_graphics_pipeline_library = @as(c_int, 1);
pub const VK_EXT_GRAPHICS_PIPELINE_LIBRARY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_GRAPHICS_PIPELINE_LIBRARY_EXTENSION_NAME = "VK_EXT_graphics_pipeline_library";
pub const VK_AMD_shader_early_and_late_fragment_tests = @as(c_int, 1);
pub const VK_AMD_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_SPEC_VERSION = @as(c_int, 1);
pub const VK_AMD_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_EXTENSION_NAME = "VK_AMD_shader_early_and_late_fragment_tests";
pub const VK_NV_fragment_shading_rate_enums = @as(c_int, 1);
pub const VK_NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME = "VK_NV_fragment_shading_rate_enums";
pub const VK_NV_ray_tracing_motion_blur = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME = "VK_NV_ray_tracing_motion_blur";
pub const VK_EXT_ycbcr_2plane_444_formats = @as(c_int, 1);
pub const VK_EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME = "VK_EXT_ycbcr_2plane_444_formats";
pub const VK_EXT_fragment_density_map2 = @as(c_int, 1);
pub const VK_EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME = "VK_EXT_fragment_density_map2";
pub const VK_QCOM_rotated_copy_commands = @as(c_int, 1);
pub const VK_QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION = @as(c_int, 2);
pub const VK_QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME = "VK_QCOM_rotated_copy_commands";
pub const VK_EXT_image_robustness = @as(c_int, 1);
pub const VK_EXT_IMAGE_ROBUSTNESS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME = "VK_EXT_image_robustness";
pub const VK_EXT_image_compression_control = @as(c_int, 1);
pub const VK_EXT_IMAGE_COMPRESSION_CONTROL_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_IMAGE_COMPRESSION_CONTROL_EXTENSION_NAME = "VK_EXT_image_compression_control";
pub const VK_EXT_attachment_feedback_loop_layout = @as(c_int, 1);
pub const VK_EXT_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_EXTENSION_NAME = "VK_EXT_attachment_feedback_loop_layout";
pub const VK_EXT_4444_formats = @as(c_int, 1);
pub const VK_EXT_4444_FORMATS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_4444_FORMATS_EXTENSION_NAME = "VK_EXT_4444_formats";
pub const VK_EXT_device_fault = @as(c_int, 1);
pub const VK_EXT_DEVICE_FAULT_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_DEVICE_FAULT_EXTENSION_NAME = "VK_EXT_device_fault";
pub const VK_ARM_rasterization_order_attachment_access = @as(c_int, 1);
pub const VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION = @as(c_int, 1);
pub const VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME = "VK_ARM_rasterization_order_attachment_access";
pub const VK_EXT_rgba10x6_formats = @as(c_int, 1);
pub const VK_EXT_RGBA10X6_FORMATS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_RGBA10X6_FORMATS_EXTENSION_NAME = "VK_EXT_rgba10x6_formats";
pub const VK_VALVE_mutable_descriptor_type = @as(c_int, 1);
pub const VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION = @as(c_int, 1);
pub const VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME = "VK_VALVE_mutable_descriptor_type";
pub const VK_EXT_vertex_input_dynamic_state = @as(c_int, 1);
pub const VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME = "VK_EXT_vertex_input_dynamic_state";
pub const VK_EXT_physical_device_drm = @as(c_int, 1);
pub const VK_EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME = "VK_EXT_physical_device_drm";
pub const VK_EXT_device_address_binding_report = @as(c_int, 1);
pub const VK_EXT_DEVICE_ADDRESS_BINDING_REPORT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DEVICE_ADDRESS_BINDING_REPORT_EXTENSION_NAME = "VK_EXT_device_address_binding_report";
pub const VK_EXT_depth_clip_control = @as(c_int, 1);
pub const VK_EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME = "VK_EXT_depth_clip_control";
pub const VK_EXT_primitive_topology_list_restart = @as(c_int, 1);
pub const VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME = "VK_EXT_primitive_topology_list_restart";
pub const VK_HUAWEI_subpass_shading = @as(c_int, 1);
pub const VK_HUAWEI_SUBPASS_SHADING_SPEC_VERSION = @as(c_int, 3);
pub const VK_HUAWEI_SUBPASS_SHADING_EXTENSION_NAME = "VK_HUAWEI_subpass_shading";
pub const VK_HUAWEI_invocation_mask = @as(c_int, 1);
pub const VK_HUAWEI_INVOCATION_MASK_SPEC_VERSION = @as(c_int, 1);
pub const VK_HUAWEI_INVOCATION_MASK_EXTENSION_NAME = "VK_HUAWEI_invocation_mask";
pub const VK_NV_external_memory_rdma = @as(c_int, 1);
pub const VK_NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME = "VK_NV_external_memory_rdma";
pub const VK_EXT_pipeline_properties = @as(c_int, 1);
pub const VK_EXT_PIPELINE_PROPERTIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PIPELINE_PROPERTIES_EXTENSION_NAME = "VK_EXT_pipeline_properties";
pub const VK_EXT_frame_boundary = @as(c_int, 1);
pub const VK_EXT_FRAME_BOUNDARY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_FRAME_BOUNDARY_EXTENSION_NAME = "VK_EXT_frame_boundary";
pub const VK_EXT_multisampled_render_to_single_sampled = @as(c_int, 1);
pub const VK_EXT_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_EXTENSION_NAME = "VK_EXT_multisampled_render_to_single_sampled";
pub const VK_EXT_extended_dynamic_state2 = @as(c_int, 1);
pub const VK_EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME = "VK_EXT_extended_dynamic_state2";
pub const VK_EXT_color_write_enable = @as(c_int, 1);
pub const VK_EXT_COLOR_WRITE_ENABLE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME = "VK_EXT_color_write_enable";
pub const VK_EXT_primitives_generated_query = @as(c_int, 1);
pub const VK_EXT_PRIMITIVES_GENERATED_QUERY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PRIMITIVES_GENERATED_QUERY_EXTENSION_NAME = "VK_EXT_primitives_generated_query";
pub const VK_EXT_global_priority_query = @as(c_int, 1);
pub const VK_EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME = "VK_EXT_global_priority_query";
pub const VK_MAX_GLOBAL_PRIORITY_SIZE_EXT = VK_MAX_GLOBAL_PRIORITY_SIZE_KHR;
pub const VK_EXT_image_view_min_lod = @as(c_int, 1);
pub const VK_EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME = "VK_EXT_image_view_min_lod";
pub const VK_EXT_multi_draw = @as(c_int, 1);
pub const VK_EXT_MULTI_DRAW_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MULTI_DRAW_EXTENSION_NAME = "VK_EXT_multi_draw";
pub const VK_EXT_image_2d_view_of_3d = @as(c_int, 1);
pub const VK_EXT_IMAGE_2D_VIEW_OF_3D_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_IMAGE_2D_VIEW_OF_3D_EXTENSION_NAME = "VK_EXT_image_2d_view_of_3d";
pub const VK_EXT_shader_tile_image = @as(c_int, 1);
pub const VK_EXT_SHADER_TILE_IMAGE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_TILE_IMAGE_EXTENSION_NAME = "VK_EXT_shader_tile_image";
pub const VK_EXT_opacity_micromap = @as(c_int, 1);
pub const VK_EXT_OPACITY_MICROMAP_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_OPACITY_MICROMAP_EXTENSION_NAME = "VK_EXT_opacity_micromap";
pub const VK_EXT_load_store_op_none = @as(c_int, 1);
pub const VK_EXT_LOAD_STORE_OP_NONE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME = "VK_EXT_load_store_op_none";
pub const VK_HUAWEI_cluster_culling_shader = @as(c_int, 1);
pub const VK_HUAWEI_CLUSTER_CULLING_SHADER_SPEC_VERSION = @as(c_int, 3);
pub const VK_HUAWEI_CLUSTER_CULLING_SHADER_EXTENSION_NAME = "VK_HUAWEI_cluster_culling_shader";
pub const VK_EXT_border_color_swizzle = @as(c_int, 1);
pub const VK_EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME = "VK_EXT_border_color_swizzle";
pub const VK_EXT_pageable_device_local_memory = @as(c_int, 1);
pub const VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME = "VK_EXT_pageable_device_local_memory";
pub const VK_ARM_shader_core_properties = @as(c_int, 1);
pub const VK_ARM_SHADER_CORE_PROPERTIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_ARM_SHADER_CORE_PROPERTIES_EXTENSION_NAME = "VK_ARM_shader_core_properties";
pub const VK_ARM_scheduling_controls = @as(c_int, 1);
pub const VK_ARM_SCHEDULING_CONTROLS_SPEC_VERSION = @as(c_int, 1);
pub const VK_ARM_SCHEDULING_CONTROLS_EXTENSION_NAME = "VK_ARM_scheduling_controls";
pub const VK_EXT_image_sliced_view_of_3d = @as(c_int, 1);
pub const VK_EXT_IMAGE_SLICED_VIEW_OF_3D_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_IMAGE_SLICED_VIEW_OF_3D_EXTENSION_NAME = "VK_EXT_image_sliced_view_of_3d";
pub const VK_REMAINING_3D_SLICES_EXT = ~@as(c_uint, 0);
pub const VK_VALVE_descriptor_set_host_mapping = @as(c_int, 1);
pub const VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION = @as(c_int, 1);
pub const VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME = "VK_VALVE_descriptor_set_host_mapping";
pub const VK_EXT_depth_clamp_zero_one = @as(c_int, 1);
pub const VK_EXT_DEPTH_CLAMP_ZERO_ONE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DEPTH_CLAMP_ZERO_ONE_EXTENSION_NAME = "VK_EXT_depth_clamp_zero_one";
pub const VK_EXT_non_seamless_cube_map = @as(c_int, 1);
pub const VK_EXT_NON_SEAMLESS_CUBE_MAP_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_NON_SEAMLESS_CUBE_MAP_EXTENSION_NAME = "VK_EXT_non_seamless_cube_map";
pub const VK_ARM_render_pass_striped = @as(c_int, 1);
pub const VK_ARM_RENDER_PASS_STRIPED_SPEC_VERSION = @as(c_int, 1);
pub const VK_ARM_RENDER_PASS_STRIPED_EXTENSION_NAME = "VK_ARM_render_pass_striped";
pub const VK_QCOM_fragment_density_map_offset = @as(c_int, 1);
pub const VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME = "VK_QCOM_fragment_density_map_offset";
pub const VK_NV_copy_memory_indirect = @as(c_int, 1);
pub const VK_NV_COPY_MEMORY_INDIRECT_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_COPY_MEMORY_INDIRECT_EXTENSION_NAME = "VK_NV_copy_memory_indirect";
pub const VK_NV_memory_decompression = @as(c_int, 1);
pub const VK_NV_MEMORY_DECOMPRESSION_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_MEMORY_DECOMPRESSION_EXTENSION_NAME = "VK_NV_memory_decompression";
pub const VK_NV_device_generated_commands_compute = @as(c_int, 1);
pub const VK_NV_DEVICE_GENERATED_COMMANDS_COMPUTE_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_DEVICE_GENERATED_COMMANDS_COMPUTE_EXTENSION_NAME = "VK_NV_device_generated_commands_compute";
pub const VK_NV_linear_color_attachment = @as(c_int, 1);
pub const VK_NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME = "VK_NV_linear_color_attachment";
pub const VK_GOOGLE_surfaceless_query = @as(c_int, 1);
pub const VK_GOOGLE_SURFACELESS_QUERY_SPEC_VERSION = @as(c_int, 2);
pub const VK_GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME = "VK_GOOGLE_surfaceless_query";
pub const VK_EXT_image_compression_control_swapchain = @as(c_int, 1);
pub const VK_EXT_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_EXTENSION_NAME = "VK_EXT_image_compression_control_swapchain";
pub const VK_QCOM_image_processing = @as(c_int, 1);
pub const VK_QCOM_IMAGE_PROCESSING_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_IMAGE_PROCESSING_EXTENSION_NAME = "VK_QCOM_image_processing";
pub const VK_EXT_nested_command_buffer = @as(c_int, 1);
pub const VK_EXT_NESTED_COMMAND_BUFFER_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_NESTED_COMMAND_BUFFER_EXTENSION_NAME = "VK_EXT_nested_command_buffer";
pub const VK_EXT_external_memory_acquire_unmodified = @as(c_int, 1);
pub const VK_EXT_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXTENSION_NAME = "VK_EXT_external_memory_acquire_unmodified";
pub const VK_EXT_extended_dynamic_state3 = @as(c_int, 1);
pub const VK_EXT_EXTENDED_DYNAMIC_STATE_3_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_EXTENDED_DYNAMIC_STATE_3_EXTENSION_NAME = "VK_EXT_extended_dynamic_state3";
pub const VK_EXT_subpass_merge_feedback = @as(c_int, 1);
pub const VK_EXT_SUBPASS_MERGE_FEEDBACK_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_SUBPASS_MERGE_FEEDBACK_EXTENSION_NAME = "VK_EXT_subpass_merge_feedback";
pub const VK_LUNARG_direct_driver_loading = @as(c_int, 1);
pub const VK_LUNARG_DIRECT_DRIVER_LOADING_SPEC_VERSION = @as(c_int, 1);
pub const VK_LUNARG_DIRECT_DRIVER_LOADING_EXTENSION_NAME = "VK_LUNARG_direct_driver_loading";
pub const VK_EXT_shader_module_identifier = @as(c_int, 1);
pub const VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT = @as(c_uint, 32);
pub const VK_EXT_SHADER_MODULE_IDENTIFIER_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_MODULE_IDENTIFIER_EXTENSION_NAME = "VK_EXT_shader_module_identifier";
pub const VK_EXT_rasterization_order_attachment_access = @as(c_int, 1);
pub const VK_EXT_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME = "VK_EXT_rasterization_order_attachment_access";
pub const VK_NV_optical_flow = @as(c_int, 1);
pub const VK_NV_OPTICAL_FLOW_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_OPTICAL_FLOW_EXTENSION_NAME = "VK_NV_optical_flow";
pub const VK_EXT_legacy_dithering = @as(c_int, 1);
pub const VK_EXT_LEGACY_DITHERING_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_LEGACY_DITHERING_EXTENSION_NAME = "VK_EXT_legacy_dithering";
pub const VK_EXT_pipeline_protected_access = @as(c_int, 1);
pub const VK_EXT_PIPELINE_PROTECTED_ACCESS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PIPELINE_PROTECTED_ACCESS_EXTENSION_NAME = "VK_EXT_pipeline_protected_access";
pub const VK_EXT_shader_object = @as(c_int, 1);
pub const VK_EXT_SHADER_OBJECT_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_SHADER_OBJECT_EXTENSION_NAME = "VK_EXT_shader_object";
pub const VK_QCOM_tile_properties = @as(c_int, 1);
pub const VK_QCOM_TILE_PROPERTIES_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_TILE_PROPERTIES_EXTENSION_NAME = "VK_QCOM_tile_properties";
pub const VK_SEC_amigo_profiling = @as(c_int, 1);
pub const VK_SEC_AMIGO_PROFILING_SPEC_VERSION = @as(c_int, 1);
pub const VK_SEC_AMIGO_PROFILING_EXTENSION_NAME = "VK_SEC_amigo_profiling";
pub const VK_QCOM_multiview_per_view_viewports = @as(c_int, 1);
pub const VK_QCOM_MULTIVIEW_PER_VIEW_VIEWPORTS_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_MULTIVIEW_PER_VIEW_VIEWPORTS_EXTENSION_NAME = "VK_QCOM_multiview_per_view_viewports";
pub const VK_NV_ray_tracing_invocation_reorder = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_INVOCATION_REORDER_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_INVOCATION_REORDER_EXTENSION_NAME = "VK_NV_ray_tracing_invocation_reorder";
pub const VK_NV_extended_sparse_address_space = @as(c_int, 1);
pub const VK_NV_EXTENDED_SPARSE_ADDRESS_SPACE_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_EXTENDED_SPARSE_ADDRESS_SPACE_EXTENSION_NAME = "VK_NV_extended_sparse_address_space";
pub const VK_EXT_mutable_descriptor_type = @as(c_int, 1);
pub const VK_EXT_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME = "VK_EXT_mutable_descriptor_type";
pub const VK_EXT_layer_settings = @as(c_int, 1);
pub const VK_EXT_LAYER_SETTINGS_SPEC_VERSION = @as(c_int, 2);
pub const VK_EXT_LAYER_SETTINGS_EXTENSION_NAME = "VK_EXT_layer_settings";
pub const VK_ARM_shader_core_builtins = @as(c_int, 1);
pub const VK_ARM_SHADER_CORE_BUILTINS_SPEC_VERSION = @as(c_int, 2);
pub const VK_ARM_SHADER_CORE_BUILTINS_EXTENSION_NAME = "VK_ARM_shader_core_builtins";
pub const VK_EXT_pipeline_library_group_handles = @as(c_int, 1);
pub const VK_EXT_PIPELINE_LIBRARY_GROUP_HANDLES_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_PIPELINE_LIBRARY_GROUP_HANDLES_EXTENSION_NAME = "VK_EXT_pipeline_library_group_handles";
pub const VK_EXT_dynamic_rendering_unused_attachments = @as(c_int, 1);
pub const VK_EXT_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_EXTENSION_NAME = "VK_EXT_dynamic_rendering_unused_attachments";
pub const VK_NV_low_latency2 = @as(c_int, 1);
pub const VK_NV_LOW_LATENCY_2_SPEC_VERSION = @as(c_int, 2);
pub const VK_NV_LOW_LATENCY_2_EXTENSION_NAME = "VK_NV_low_latency2";
pub const VK_QCOM_multiview_per_view_render_areas = @as(c_int, 1);
pub const VK_QCOM_MULTIVIEW_PER_VIEW_RENDER_AREAS_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_MULTIVIEW_PER_VIEW_RENDER_AREAS_EXTENSION_NAME = "VK_QCOM_multiview_per_view_render_areas";
pub const VK_NV_per_stage_descriptor_set = @as(c_int, 1);
pub const VK_NV_PER_STAGE_DESCRIPTOR_SET_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_PER_STAGE_DESCRIPTOR_SET_EXTENSION_NAME = "VK_NV_per_stage_descriptor_set";
pub const VK_QCOM_image_processing2 = @as(c_int, 1);
pub const VK_QCOM_IMAGE_PROCESSING_2_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_IMAGE_PROCESSING_2_EXTENSION_NAME = "VK_QCOM_image_processing2";
pub const VK_QCOM_filter_cubic_weights = @as(c_int, 1);
pub const VK_QCOM_FILTER_CUBIC_WEIGHTS_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_FILTER_CUBIC_WEIGHTS_EXTENSION_NAME = "VK_QCOM_filter_cubic_weights";
pub const VK_QCOM_ycbcr_degamma = @as(c_int, 1);
pub const VK_QCOM_YCBCR_DEGAMMA_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_YCBCR_DEGAMMA_EXTENSION_NAME = "VK_QCOM_ycbcr_degamma";
pub const VK_QCOM_filter_cubic_clamp = @as(c_int, 1);
pub const VK_QCOM_FILTER_CUBIC_CLAMP_SPEC_VERSION = @as(c_int, 1);
pub const VK_QCOM_FILTER_CUBIC_CLAMP_EXTENSION_NAME = "VK_QCOM_filter_cubic_clamp";
pub const VK_EXT_attachment_feedback_loop_dynamic_state = @as(c_int, 1);
pub const VK_EXT_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_EXTENSION_NAME = "VK_EXT_attachment_feedback_loop_dynamic_state";
pub const VK_MSFT_layered_driver = @as(c_int, 1);
pub const VK_MSFT_LAYERED_DRIVER_SPEC_VERSION = @as(c_int, 1);
pub const VK_MSFT_LAYERED_DRIVER_EXTENSION_NAME = "VK_MSFT_layered_driver";
pub const VK_NV_descriptor_pool_overallocation = @as(c_int, 1);
pub const VK_NV_DESCRIPTOR_POOL_OVERALLOCATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_DESCRIPTOR_POOL_OVERALLOCATION_EXTENSION_NAME = "VK_NV_descriptor_pool_overallocation";
pub const VK_NV_raw_access_chains = @as(c_int, 1);
pub const VK_NV_RAW_ACCESS_CHAINS_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_RAW_ACCESS_CHAINS_EXTENSION_NAME = "VK_NV_raw_access_chains";
pub const VK_NV_shader_atomic_float16_vector = @as(c_int, 1);
pub const VK_NV_SHADER_ATOMIC_FLOAT16_VECTOR_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_SHADER_ATOMIC_FLOAT16_VECTOR_EXTENSION_NAME = "VK_NV_shader_atomic_float16_vector";
pub const VK_NV_ray_tracing_validation = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_VALIDATION_SPEC_VERSION = @as(c_int, 1);
pub const VK_NV_RAY_TRACING_VALIDATION_EXTENSION_NAME = "VK_NV_ray_tracing_validation";
pub const VK_KHR_acceleration_structure = @as(c_int, 1);
pub const VK_KHR_ACCELERATION_STRUCTURE_SPEC_VERSION = @as(c_int, 13);
pub const VK_KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME = "VK_KHR_acceleration_structure";
pub const VK_KHR_ray_tracing_pipeline = @as(c_int, 1);
pub const VK_KHR_RAY_TRACING_PIPELINE_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME = "VK_KHR_ray_tracing_pipeline";
pub const VK_KHR_ray_query = @as(c_int, 1);
pub const VK_KHR_RAY_QUERY_SPEC_VERSION = @as(c_int, 1);
pub const VK_KHR_RAY_QUERY_EXTENSION_NAME = "VK_KHR_ray_query";
pub const VK_EXT_mesh_shader = @as(c_int, 1);
pub const VK_EXT_MESH_SHADER_SPEC_VERSION = @as(c_int, 1);
pub const VK_EXT_MESH_SHADER_EXTENSION_NAME = "VK_EXT_mesh_shader";
pub const SDL_h_ = "";
pub const SDL_main_h_ = "";
pub const SDL_stdinc_h_ = "";
pub const SDL_config_h_ = "";
pub const SDL_platform_h_ = "";
pub const __AVAILABILITY_VERSIONS__ = "";
pub const __MAC_10_0 = @as(c_int, 1000);
pub const __MAC_10_1 = @as(c_int, 1010);
pub const __MAC_10_2 = @as(c_int, 1020);
pub const __MAC_10_3 = @as(c_int, 1030);
pub const __MAC_10_4 = @as(c_int, 1040);
pub const __MAC_10_5 = @as(c_int, 1050);
pub const __MAC_10_6 = @as(c_int, 1060);
pub const __MAC_10_7 = @as(c_int, 1070);
pub const __MAC_10_8 = @as(c_int, 1080);
pub const __MAC_10_9 = @as(c_int, 1090);
pub const __MAC_10_10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101000, .decimal);
pub const __MAC_10_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101002, .decimal);
pub const __MAC_10_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101003, .decimal);
pub const __MAC_10_11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101100, .decimal);
pub const __MAC_10_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101102, .decimal);
pub const __MAC_10_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101103, .decimal);
pub const __MAC_10_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101104, .decimal);
pub const __MAC_10_12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101200, .decimal);
pub const __MAC_10_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101201, .decimal);
pub const __MAC_10_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101202, .decimal);
pub const __MAC_10_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101204, .decimal);
pub const __MAC_10_13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101300, .decimal);
pub const __MAC_10_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101301, .decimal);
pub const __MAC_10_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101302, .decimal);
pub const __MAC_10_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101304, .decimal);
pub const __MAC_10_14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101400, .decimal);
pub const __MAC_10_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101401, .decimal);
pub const __MAC_10_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101404, .decimal);
pub const __MAC_10_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101405, .decimal);
pub const __MAC_10_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101406, .decimal);
pub const __MAC_10_15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101500, .decimal);
pub const __MAC_10_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101501, .decimal);
pub const __MAC_10_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101504, .decimal);
pub const __MAC_10_16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101600, .decimal);
pub const __MAC_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __MAC_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __MAC_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __MAC_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __MAC_11_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110500, .decimal);
pub const __MAC_11_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110600, .decimal);
pub const __MAC_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __MAC_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __MAC_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __MAC_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __MAC_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __MAC_12_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120500, .decimal);
pub const __MAC_12_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120600, .decimal);
pub const __MAC_12_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120700, .decimal);
pub const __MAC_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __MAC_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130100, .decimal);
pub const __MAC_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __MAC_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __MAC_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __MAC_13_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130500, .decimal);
pub const __MAC_13_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130600, .decimal);
pub const __MAC_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __MAC_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __MAC_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __MAC_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __MAC_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140400, .decimal);
pub const __MAC_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __IPHONE_2_0 = @as(c_int, 20000);
pub const __IPHONE_2_1 = @as(c_int, 20100);
pub const __IPHONE_2_2 = @as(c_int, 20200);
pub const __IPHONE_3_0 = @as(c_int, 30000);
pub const __IPHONE_3_1 = @as(c_int, 30100);
pub const __IPHONE_3_2 = @as(c_int, 30200);
pub const __IPHONE_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __IPHONE_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __IPHONE_4_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40200, .decimal);
pub const __IPHONE_4_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40300, .decimal);
pub const __IPHONE_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __IPHONE_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __IPHONE_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __IPHONE_6_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60100, .decimal);
pub const __IPHONE_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __IPHONE_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __IPHONE_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __IPHONE_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __IPHONE_8_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80200, .decimal);
pub const __IPHONE_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __IPHONE_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __IPHONE_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __IPHONE_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __IPHONE_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __IPHONE_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __IPHONE_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __IPHONE_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __IPHONE_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __IPHONE_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100300, .decimal);
pub const __IPHONE_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __IPHONE_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __IPHONE_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __IPHONE_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __IPHONE_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __IPHONE_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __IPHONE_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __IPHONE_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __IPHONE_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __IPHONE_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __IPHONE_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __IPHONE_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130100, .decimal);
pub const __IPHONE_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __IPHONE_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __IPHONE_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __IPHONE_13_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130500, .decimal);
pub const __IPHONE_13_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130600, .decimal);
pub const __IPHONE_13_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130700, .decimal);
pub const __IPHONE_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __IPHONE_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __IPHONE_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __IPHONE_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __IPHONE_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __IPHONE_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140400, .decimal);
pub const __IPHONE_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __IPHONE_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __IPHONE_14_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140800, .decimal);
pub const __IPHONE_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __IPHONE_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __IPHONE_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __IPHONE_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __IPHONE_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __IPHONE_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __IPHONE_15_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __IPHONE_15_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150700, .decimal);
pub const __IPHONE_15_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150800, .decimal);
pub const __IPHONE_16_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160000, .decimal);
pub const __IPHONE_16_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160100, .decimal);
pub const __IPHONE_16_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160200, .decimal);
pub const __IPHONE_16_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160300, .decimal);
pub const __IPHONE_16_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160400, .decimal);
pub const __IPHONE_16_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160500, .decimal);
pub const __IPHONE_16_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160600, .decimal);
pub const __IPHONE_16_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160700, .decimal);
pub const __IPHONE_17_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170000, .decimal);
pub const __IPHONE_17_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170100, .decimal);
pub const __IPHONE_17_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170200, .decimal);
pub const __IPHONE_17_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170300, .decimal);
pub const __IPHONE_17_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170400, .decimal);
pub const __IPHONE_17_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170500, .decimal);
pub const __WATCHOS_1_0 = @as(c_int, 10000);
pub const __WATCHOS_2_0 = @as(c_int, 20000);
pub const __WATCHOS_2_1 = @as(c_int, 20100);
pub const __WATCHOS_2_2 = @as(c_int, 20200);
pub const __WATCHOS_3_0 = @as(c_int, 30000);
pub const __WATCHOS_3_1 = @as(c_int, 30100);
pub const __WATCHOS_3_1_1 = @as(c_int, 30101);
pub const __WATCHOS_3_2 = @as(c_int, 30200);
pub const __WATCHOS_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __WATCHOS_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __WATCHOS_4_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40200, .decimal);
pub const __WATCHOS_4_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40300, .decimal);
pub const __WATCHOS_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __WATCHOS_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __WATCHOS_5_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50200, .decimal);
pub const __WATCHOS_5_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50300, .decimal);
pub const __WATCHOS_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __WATCHOS_6_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60100, .decimal);
pub const __WATCHOS_6_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60200, .decimal);
pub const __WATCHOS_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __WATCHOS_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __WATCHOS_7_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70200, .decimal);
pub const __WATCHOS_7_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70300, .decimal);
pub const __WATCHOS_7_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70400, .decimal);
pub const __WATCHOS_7_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70500, .decimal);
pub const __WATCHOS_7_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70600, .decimal);
pub const __WATCHOS_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __WATCHOS_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __WATCHOS_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __WATCHOS_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __WATCHOS_8_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80500, .decimal);
pub const __WATCHOS_8_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80600, .decimal);
pub const __WATCHOS_8_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80700, .decimal);
pub const __WATCHOS_8_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80800, .decimal);
pub const __WATCHOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __WATCHOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __WATCHOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __WATCHOS_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __WATCHOS_9_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90400, .decimal);
pub const __WATCHOS_9_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90500, .decimal);
pub const __WATCHOS_9_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90600, .decimal);
pub const __WATCHOS_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __WATCHOS_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __WATCHOS_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __WATCHOS_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100300, .decimal);
pub const __WATCHOS_10_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100400, .decimal);
pub const __WATCHOS_10_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100500, .decimal);
pub const __TVOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __TVOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __TVOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __TVOS_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __TVOS_10_0_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100001, .decimal);
pub const __TVOS_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __TVOS_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __TVOS_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __TVOS_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __TVOS_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __TVOS_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __TVOS_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __TVOS_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __TVOS_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __TVOS_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __TVOS_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __TVOS_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __TVOS_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __TVOS_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __TVOS_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __TVOS_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __TVOS_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __TVOS_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __TVOS_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __TVOS_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __TVOS_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __TVOS_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __TVOS_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __TVOS_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __TVOS_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __TVOS_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __TVOS_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __TVOS_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __TVOS_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __TVOS_15_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __TVOS_16_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160000, .decimal);
pub const __TVOS_16_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160100, .decimal);
pub const __TVOS_16_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160200, .decimal);
pub const __TVOS_16_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160300, .decimal);
pub const __TVOS_16_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160400, .decimal);
pub const __TVOS_16_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160500, .decimal);
pub const __TVOS_16_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160600, .decimal);
pub const __TVOS_17_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170000, .decimal);
pub const __TVOS_17_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170100, .decimal);
pub const __TVOS_17_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170200, .decimal);
pub const __TVOS_17_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170300, .decimal);
pub const __TVOS_17_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170400, .decimal);
pub const __TVOS_17_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170500, .decimal);
pub const __BRIDGEOS_2_0 = @as(c_int, 20000);
pub const __BRIDGEOS_3_0 = @as(c_int, 30000);
pub const __BRIDGEOS_3_1 = @as(c_int, 30100);
pub const __BRIDGEOS_3_4 = @as(c_int, 30400);
pub const __BRIDGEOS_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __BRIDGEOS_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __BRIDGEOS_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __BRIDGEOS_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __BRIDGEOS_5_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50300, .decimal);
pub const __BRIDGEOS_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __BRIDGEOS_6_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60200, .decimal);
pub const __BRIDGEOS_6_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60400, .decimal);
pub const __BRIDGEOS_6_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60500, .decimal);
pub const __BRIDGEOS_6_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60600, .decimal);
pub const __BRIDGEOS_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __BRIDGEOS_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __BRIDGEOS_7_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70200, .decimal);
pub const __BRIDGEOS_7_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70300, .decimal);
pub const __BRIDGEOS_7_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70400, .decimal);
pub const __BRIDGEOS_7_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70600, .decimal);
pub const __BRIDGEOS_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __BRIDGEOS_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __BRIDGEOS_8_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80200, .decimal);
pub const __BRIDGEOS_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __BRIDGEOS_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __BRIDGEOS_8_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80500, .decimal);
pub const __DRIVERKIT_19_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 190000, .decimal);
pub const __DRIVERKIT_20_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 200000, .decimal);
pub const __DRIVERKIT_21_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 210000, .decimal);
pub const __DRIVERKIT_22_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220000, .decimal);
pub const __DRIVERKIT_22_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220400, .decimal);
pub const __DRIVERKIT_22_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220500, .decimal);
pub const __DRIVERKIT_22_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220600, .decimal);
pub const __DRIVERKIT_23_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230000, .decimal);
pub const __DRIVERKIT_23_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230100, .decimal);
pub const __DRIVERKIT_23_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230200, .decimal);
pub const __DRIVERKIT_23_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230300, .decimal);
pub const __DRIVERKIT_23_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230400, .decimal);
pub const __DRIVERKIT_23_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230500, .decimal);
pub const __VISIONOS_1_0 = @as(c_int, 10000);
pub const __VISIONOS_1_1 = @as(c_int, 10100);
pub const __VISIONOS_1_2 = @as(c_int, 10200);
pub const MAC_OS_X_VERSION_10_0 = __MAC_10_0;
pub const MAC_OS_X_VERSION_10_1 = __MAC_10_1;
pub const MAC_OS_X_VERSION_10_2 = __MAC_10_2;
pub const MAC_OS_X_VERSION_10_3 = __MAC_10_3;
pub const MAC_OS_X_VERSION_10_4 = __MAC_10_4;
pub const MAC_OS_X_VERSION_10_5 = __MAC_10_5;
pub const MAC_OS_X_VERSION_10_6 = __MAC_10_6;
pub const MAC_OS_X_VERSION_10_7 = __MAC_10_7;
pub const MAC_OS_X_VERSION_10_8 = __MAC_10_8;
pub const MAC_OS_X_VERSION_10_9 = __MAC_10_9;
pub const MAC_OS_X_VERSION_10_10 = __MAC_10_10;
pub const MAC_OS_X_VERSION_10_10_2 = __MAC_10_10_2;
pub const MAC_OS_X_VERSION_10_10_3 = __MAC_10_10_3;
pub const MAC_OS_X_VERSION_10_11 = __MAC_10_11;
pub const MAC_OS_X_VERSION_10_11_2 = __MAC_10_11_2;
pub const MAC_OS_X_VERSION_10_11_3 = __MAC_10_11_3;
pub const MAC_OS_X_VERSION_10_11_4 = __MAC_10_11_4;
pub const MAC_OS_X_VERSION_10_12 = __MAC_10_12;
pub const MAC_OS_X_VERSION_10_12_1 = __MAC_10_12_1;
pub const MAC_OS_X_VERSION_10_12_2 = __MAC_10_12_2;
pub const MAC_OS_X_VERSION_10_12_4 = __MAC_10_12_4;
pub const MAC_OS_X_VERSION_10_13 = __MAC_10_13;
pub const MAC_OS_X_VERSION_10_13_1 = __MAC_10_13_1;
pub const MAC_OS_X_VERSION_10_13_2 = __MAC_10_13_2;
pub const MAC_OS_X_VERSION_10_13_4 = __MAC_10_13_4;
pub const MAC_OS_X_VERSION_10_14 = __MAC_10_14;
pub const MAC_OS_X_VERSION_10_14_1 = __MAC_10_14_1;
pub const MAC_OS_X_VERSION_10_14_4 = __MAC_10_14_4;
pub const MAC_OS_X_VERSION_10_14_5 = __MAC_10_14_5;
pub const MAC_OS_X_VERSION_10_14_6 = __MAC_10_14_6;
pub const MAC_OS_X_VERSION_10_15 = __MAC_10_15;
pub const MAC_OS_X_VERSION_10_15_1 = __MAC_10_15_1;
pub const MAC_OS_X_VERSION_10_15_4 = __MAC_10_15_4;
pub const MAC_OS_X_VERSION_10_16 = __MAC_10_16;
pub const MAC_OS_VERSION_11_0 = __MAC_11_0;
pub const MAC_OS_VERSION_11_1 = __MAC_11_1;
pub const MAC_OS_VERSION_11_3 = __MAC_11_3;
pub const MAC_OS_VERSION_11_4 = __MAC_11_4;
pub const MAC_OS_VERSION_11_5 = __MAC_11_5;
pub const MAC_OS_VERSION_11_6 = __MAC_11_6;
pub const MAC_OS_VERSION_12_0 = __MAC_12_0;
pub const MAC_OS_VERSION_12_1 = __MAC_12_1;
pub const MAC_OS_VERSION_12_2 = __MAC_12_2;
pub const MAC_OS_VERSION_12_3 = __MAC_12_3;
pub const MAC_OS_VERSION_12_4 = __MAC_12_4;
pub const MAC_OS_VERSION_12_5 = __MAC_12_5;
pub const MAC_OS_VERSION_12_6 = __MAC_12_6;
pub const MAC_OS_VERSION_12_7 = __MAC_12_7;
pub const MAC_OS_VERSION_13_0 = __MAC_13_0;
pub const MAC_OS_VERSION_13_1 = __MAC_13_1;
pub const MAC_OS_VERSION_13_2 = __MAC_13_2;
pub const MAC_OS_VERSION_13_3 = __MAC_13_3;
pub const MAC_OS_VERSION_13_4 = __MAC_13_4;
pub const MAC_OS_VERSION_13_5 = __MAC_13_5;
pub const MAC_OS_VERSION_13_6 = __MAC_13_6;
pub const MAC_OS_VERSION_14_0 = __MAC_14_0;
pub const MAC_OS_VERSION_14_1 = __MAC_14_1;
pub const MAC_OS_VERSION_14_2 = __MAC_14_2;
pub const MAC_OS_VERSION_14_3 = __MAC_14_3;
pub const MAC_OS_VERSION_14_4 = __MAC_14_4;
pub const MAC_OS_VERSION_14_5 = __MAC_14_5;
pub const __AVAILABILITYMACROS__ = "";
pub const MAC_OS_X_VERSION_MIN_REQUIRED = __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__;
pub const MAC_OS_X_VERSION_MAX_ALLOWED = MAC_OS_X_VERSION_MIN_REQUIRED;
pub const WEAK_IMPORT_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `weak_import`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityMacros.h:137:13
pub const DEPRECATED_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityMacros.h:149:17
pub const DEPRECATED_MSG_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityMacros.h:151:21
pub const UNAVAILABLE_ATTRIBUTE = @compileError("unable to translate macro: undefined identifier `unavailable`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityMacros.h:175:13
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER = "";
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED = DEPRECATED_ATTRIBUTE;
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER = DEPRECATED_ATTRIBUTE;
pub const __AVAILABILITY__ = "";
pub const __API_TO_BE_DEPRECATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_IOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACCATALYST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_WATCHOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_TVOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_DRIVERKIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_VISIONOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __AVAILABILITY_INTERNAL__ = "";
pub const __MAC_OS_X_VERSION_MIN_REQUIRED = __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__;
pub const __MAC_OS_X_VERSION_MAX_ALLOWED = __MAC_14_5;
pub const __AVAILABILITY_INTERNAL_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:160:9
pub const __AVAILABILITY_INTERNAL_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:163:17
pub const __AVAILABILITY_INTERNAL_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `unavailable`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:172:9
pub const __AVAILABILITY_INTERNAL_WEAK_IMPORT = @compileError("unable to translate macro: undefined identifier `weak_import`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:173:9
pub const __AVAILABILITY_INTERNAL_REGULAR = "";
pub const __AVAILABILITY_INTERNAL_LEGACY__ = "";
pub const __ENABLE_LEGACY_MAC_AVAILABILITY = @as(c_int, 1);
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2831:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2832:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2833:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2835:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2839:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2841:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2846:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2850:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2851:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2853:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2857:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2859:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2863:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2865:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2870:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2874:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2875:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2877:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2881:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2883:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2887:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2889:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2894:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2899:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2903:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2905:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2909:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2911:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2915:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2917:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2921:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2923:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2927:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2929:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2933:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2935:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2939:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2941:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2945:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2947:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2951:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2952:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2953:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2954:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2955:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2956:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2958:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2962:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2964:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2969:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2973:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2974:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2976:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2980:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2982:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2986:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2988:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2993:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2997:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:2998:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3000:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3004:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3006:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3010:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3012:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3017:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3021:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3022:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3024:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3028:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3030:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3034:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3036:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3040:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3042:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3046:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3048:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3052:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3054:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3058:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3060:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3064:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3066:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3070:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3071:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3072:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3073:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3074:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3075:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3077:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3081:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3083:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3088:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3092:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3093:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3095:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3099:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3101:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3105:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3107:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3112:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3116:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3117:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3119:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3123:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3125:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3129:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3131:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3136:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3140:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3141:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3143:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3147:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3149:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3153:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3155:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3159:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3161:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3165:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3167:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3171:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3173:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3177:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3179:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3183:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3184:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3185:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3186:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3187:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3188:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3190:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3194:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3196:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3201:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3205:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3206:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3208:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3212:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3214:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3218:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3220:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3225:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3229:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3230:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3232:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3236:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3238:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3242:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3244:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3249:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3253:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3254:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3256:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3260:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3262:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3266:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3268:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3272:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3274:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3278:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3280:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3284:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3286:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3290:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3291:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3292:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEPRECATED__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3293:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3294:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3295:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3296:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3298:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3302:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3304:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3309:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3313:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3314:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3316:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3320:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3322:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3326:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3328:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3333:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3337:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3338:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3340:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3344:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3346:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3350:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3352:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3357:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3361:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3363:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3367:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3369:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3373:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3375:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3379:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3381:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3385:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3387:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3391:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3392:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3393:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3394:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3395:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3396:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3398:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3402:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3404:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3409:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3413:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3414:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3416:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3420:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3422:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3426:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3428:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3433:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3437:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3438:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3440:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3444:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3446:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3450:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3452:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3457:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3461:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3462:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3464:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3468:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3470:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3474:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3476:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3480:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3482:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3486:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3487:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3488:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3489:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3490:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3491:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3493:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3497:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3499:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3504:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3508:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3509:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3511:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3515:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3517:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3521:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3523:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3528:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3532:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3533:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3535:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3539:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3541:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3545:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3547:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3552:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_13_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3556:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3557:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3559:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3563:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3565:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3569:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3571:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3575:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3576:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3577:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3578:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3579:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3580:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3582:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3586:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3588:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3593:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3597:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3598:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3600:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3604:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3606:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3610:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3612:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3617:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3621:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3622:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3624:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3628:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3630:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3634:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3636:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3641:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3645:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3646:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3648:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3652:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3654:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3658:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3659:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3660:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3661:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3662:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3663:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3665:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3669:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3671:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3676:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3680:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3681:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3683:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3687:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3689:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3693:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3695:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3700:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3704:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3705:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3707:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3711:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3713:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3717:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3719:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3724:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3728:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3729:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3730:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3732:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3736:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3737:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3738:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3739:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3741:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3745:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3746:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3747:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3749:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3753:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3755:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3760:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3764:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3765:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3767:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3771:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3773:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3777:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3779:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3784:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3788:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3789:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3791:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3795:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3797:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3801:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3803:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3808:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3812:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3814:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3818:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3820:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3824:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3826:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3830:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3832:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3836:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3838:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3842:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3844:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3848:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3850:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3854:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3856:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3860:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3862:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3867:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3871:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3872:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3873:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3874:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3875:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3876:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3878:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3882:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3884:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3888:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3889:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3891:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3895:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3897:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3901:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3903:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3908:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3912:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3913:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3915:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3919:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3921:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3925:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3927:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3932:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3936:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3937:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3938:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3939:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3941:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3945:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3946:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3948:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3952:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3954:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3958:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3960:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3965:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3969:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3970:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3972:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3976:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3978:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3982:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3984:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3989:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3993:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3994:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3995:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3996:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3997:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:3999:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4003:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4005:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4010:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4014:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4015:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4017:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4021:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4023:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4027:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4029:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4034:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4038:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4039:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4041:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4045:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4047:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4051:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4053:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4058:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4062:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4064:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4068:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4069:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4070:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4071:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4072:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4073:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4075:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4079:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4081:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4085:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4087:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4091:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4092:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4094:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4098:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4100:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4104:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4106:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4111:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4115:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4116:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4117:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4118:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4120:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4124:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4126:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4130:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4131:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4133:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4137:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4139:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4143:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4145:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4150:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4154:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4155:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4156:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4157:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4159:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4163:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4164:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4166:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4170:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4172:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4176:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4178:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4183:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4187:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4188:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4189:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4190:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4191:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4193:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4197:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4199:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4203:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4205:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4210:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4214:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4215:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4217:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4221:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4223:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4227:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4229:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4234:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4238:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4239:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4240:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4241:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4242:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4244:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4248:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4250:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4254:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4256:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4260:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4261:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4262:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4263:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4265:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4269:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4271:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4275:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4276:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4277:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4278:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4280:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4284:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4285:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4286:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4287:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4289:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4293:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4295:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4299:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4301:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4306:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4310:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4312:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4316:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4317:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4318:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4319:21
pub const __AVAILABILITY_INTERNAL__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4320:21
pub const __AVAILABILITY_INTERNAL__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4321:21
pub const __AVAILABILITY_INTERNAL__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4322:21
pub const __AVAILABILITY_INTERNAL__MAC_10_14_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4323:21
pub const __AVAILABILITY_INTERNAL__MAC_10_15 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4324:21
pub const __AVAILABILITY_INTERNAL__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4326:21
pub const __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4327:21
pub const __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4328:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4330:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4331:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4332:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4333:21
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4336:22
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION_DEP__IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4337:22
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION_DEP__IPHONE_COMPAT_VERSION_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternalLegacy.h:4338:22
pub const __API_AVAILABLE_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:180:12
pub const __API_DEPRECATED_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:181:12
pub const __API_UNAVAILABLE_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:182:12
pub const __API_AVAILABLE_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:183:12
pub const __API_DEPRECATED_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:184:12
pub const __API_UNAVAILABLE_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:185:12
pub const __API_AVAILABLE_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:186:12
pub const __API_DEPRECATED_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:187:12
pub const __API_UNAVAILABLE_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:188:12
pub const __API_AVAILABLE_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:189:12
pub const __API_DEPRECATED_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:190:12
pub const __API_UNAVAILABLE_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:191:12
pub const __API_AVAILABLE_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:195:12
pub const __API_DEPRECATED_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:196:12
pub const __API_UNAVAILABLE_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:197:12
pub const __API_AVAILABLE_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:198:12
pub const __API_DEPRECATED_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:199:12
pub const __API_UNAVAILABLE_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:200:12
pub const __API_AVAILABLE_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:204:12
pub const __API_DEPRECATED_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:205:12
pub const __API_UNAVAILABLE_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:206:12
pub const __API_AVAILABLE_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:207:12
pub const __API_DEPRECATED_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:208:12
pub const __API_UNAVAILABLE_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:209:12
pub const __API_AVAILABLE_PLATFORM_xros = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:210:12
pub const __API_DEPRECATED_PLATFORM_xros = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:211:12
pub const __API_UNAVAILABLE_PLATFORM_xros = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:212:12
pub const __API_APPLY_TO = @compileError("unable to translate macro: undefined identifier `any`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:219:11
pub inline fn __API_RANGE_STRINGIFY(x: anytype) @TypeOf(__API_RANGE_STRINGIFY2(x)) {
    _ = &x;
    return __API_RANGE_STRINGIFY2(x);
}
pub const __API_RANGE_STRINGIFY2 = @compileError("unable to translate C expr: unexpected token '#'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:221:11
pub const __API_A = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:235:13
pub inline fn __API_AVAILABLE0(arg0: anytype) @TypeOf(__API_A(arg0)) {
    _ = &arg0;
    return __API_A(arg0);
}
pub inline fn __API_AVAILABLE1(arg0: anytype, arg1: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_A(arg0) ++ __API_A(arg1);
}
pub inline fn __API_AVAILABLE2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2);
}
pub inline fn __API_AVAILABLE3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3);
}
pub inline fn __API_AVAILABLE4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4);
}
pub inline fn __API_AVAILABLE5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5);
}
pub inline fn __API_AVAILABLE6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6);
}
pub inline fn __API_AVAILABLE7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7);
}
pub inline fn __API_AVAILABLE8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8);
}
pub const __API_AVAILABLE_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:246:13
pub const __API_A_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:248:13
pub inline fn __API_AVAILABLE_BEGIN0(arg0: anytype) @TypeOf(__API_A_BEGIN(arg0)) {
    _ = &arg0;
    return __API_A_BEGIN(arg0);
}
pub inline fn __API_AVAILABLE_BEGIN1(arg0: anytype, arg1: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1);
}
pub inline fn __API_AVAILABLE_BEGIN2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2);
}
pub inline fn __API_AVAILABLE_BEGIN3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3);
}
pub inline fn __API_AVAILABLE_BEGIN4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4);
}
pub inline fn __API_AVAILABLE_BEGIN5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5);
}
pub inline fn __API_AVAILABLE_BEGIN6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6);
}
pub inline fn __API_AVAILABLE_BEGIN7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7);
}
pub inline fn __API_AVAILABLE_BEGIN8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8);
}
pub const __API_AVAILABLE_BEGIN_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:259:13
pub const __API_D = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:263:13
pub inline fn __API_DEPRECATED_MSG0(msg: anytype, arg0: anytype) @TypeOf(__API_D(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_D(msg, arg0);
}
pub inline fn __API_DEPRECATED_MSG1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1);
}
pub inline fn __API_DEPRECATED_MSG2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2);
}
pub inline fn __API_DEPRECATED_MSG3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3);
}
pub inline fn __API_DEPRECATED_MSG4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4);
}
pub inline fn __API_DEPRECATED_MSG5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5);
}
pub inline fn __API_DEPRECATED_MSG6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6);
}
pub inline fn __API_DEPRECATED_MSG7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7);
}
pub inline fn __API_DEPRECATED_MSG8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8);
}
pub const __API_DEPRECATED_MSG_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:274:13
pub const __API_D_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:276:13
pub inline fn __API_DEPRECATED_BEGIN0(msg: anytype, arg0: anytype) @TypeOf(__API_D_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_D_BEGIN(msg, arg0);
}
pub inline fn __API_DEPRECATED_BEGIN1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1);
}
pub inline fn __API_DEPRECATED_BEGIN2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2);
}
pub inline fn __API_DEPRECATED_BEGIN3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3);
}
pub inline fn __API_DEPRECATED_BEGIN4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4);
}
pub inline fn __API_DEPRECATED_BEGIN5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5);
}
pub inline fn __API_DEPRECATED_BEGIN6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6);
}
pub inline fn __API_DEPRECATED_BEGIN7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7);
}
pub inline fn __API_DEPRECATED_BEGIN8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8);
}
pub const __API_DEPRECATED_BEGIN_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:287:13
pub const __API_R = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:290:17
pub inline fn __API_DEPRECATED_REP0(msg: anytype, arg0: anytype) @TypeOf(__API_R(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_R(msg, arg0);
}
pub inline fn __API_DEPRECATED_REP1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1);
}
pub inline fn __API_DEPRECATED_REP2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2);
}
pub inline fn __API_DEPRECATED_REP3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3);
}
pub inline fn __API_DEPRECATED_REP4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4);
}
pub inline fn __API_DEPRECATED_REP5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5);
}
pub inline fn __API_DEPRECATED_REP6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6);
}
pub inline fn __API_DEPRECATED_REP7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6) ++ __API_R(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6) ++ __API_R(msg, arg7);
}
pub inline fn __API_DEPRECATED_REP8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6) ++ __API_R(msg, arg7) ++ __API_R(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_R(msg, arg0) ++ __API_R(msg, arg1) ++ __API_R(msg, arg2) ++ __API_R(msg, arg3) ++ __API_R(msg, arg4) ++ __API_R(msg, arg5) ++ __API_R(msg, arg6) ++ __API_R(msg, arg7) ++ __API_R(msg, arg8);
}
pub const __API_DEPRECATED_REP_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:304:13
pub const __API_R_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:307:17
pub inline fn __API_DEPRECATED_BEGIN_REP0(msg: anytype, arg0: anytype) @TypeOf(__API_R_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_R_BEGIN(msg, arg0);
}
pub inline fn __API_DEPRECATED_BEGIN_REP1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1);
}
pub inline fn __API_DEPRECATED_BEGIN_REP2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2);
}
pub inline fn __API_DEPRECATED_BEGIN_REP3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3);
}
pub inline fn __API_DEPRECATED_BEGIN_REP4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4);
}
pub inline fn __API_DEPRECATED_BEGIN_REP5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5);
}
pub inline fn __API_DEPRECATED_BEGIN_REP6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6);
}
pub inline fn __API_DEPRECATED_BEGIN_REP7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6) ++ __API_R_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6) ++ __API_R_BEGIN(msg, arg7);
}
pub inline fn __API_DEPRECATED_BEGIN_REP8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6) ++ __API_R_BEGIN(msg, arg7) ++ __API_R_BEGIN(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_R_BEGIN(msg, arg0) ++ __API_R_BEGIN(msg, arg1) ++ __API_R_BEGIN(msg, arg2) ++ __API_R_BEGIN(msg, arg3) ++ __API_R_BEGIN(msg, arg4) ++ __API_R_BEGIN(msg, arg5) ++ __API_R_BEGIN(msg, arg6) ++ __API_R_BEGIN(msg, arg7) ++ __API_R_BEGIN(msg, arg8);
}
pub const __API_DEPRECATED_BEGIN_REP_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:321:13
pub const __API_U = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:332:13
pub inline fn __API_UNAVAILABLE0(arg0: anytype) @TypeOf(__API_U(arg0)) {
    _ = &arg0;
    return __API_U(arg0);
}
pub inline fn __API_UNAVAILABLE1(arg0: anytype, arg1: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_U(arg0) ++ __API_U(arg1);
}
pub inline fn __API_UNAVAILABLE2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2);
}
pub inline fn __API_UNAVAILABLE3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3);
}
pub inline fn __API_UNAVAILABLE4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4);
}
pub inline fn __API_UNAVAILABLE5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5);
}
pub inline fn __API_UNAVAILABLE6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6);
}
pub inline fn __API_UNAVAILABLE7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7);
}
pub inline fn __API_UNAVAILABLE8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8);
}
pub const __API_UNAVAILABLE_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:343:13
pub const __API_U_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:345:13
pub inline fn __API_UNAVAILABLE_BEGIN0(arg0: anytype) @TypeOf(__API_U_BEGIN(arg0)) {
    _ = &arg0;
    return __API_U_BEGIN(arg0);
}
pub inline fn __API_UNAVAILABLE_BEGIN1(arg0: anytype, arg1: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1);
}
pub inline fn __API_UNAVAILABLE_BEGIN2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2);
}
pub inline fn __API_UNAVAILABLE_BEGIN3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3);
}
pub inline fn __API_UNAVAILABLE_BEGIN4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4);
}
pub inline fn __API_UNAVAILABLE_BEGIN5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5);
}
pub inline fn __API_UNAVAILABLE_BEGIN6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6);
}
pub inline fn __API_UNAVAILABLE_BEGIN7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7);
}
pub inline fn __API_UNAVAILABLE_BEGIN8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8);
}
pub const __API_UNAVAILABLE_BEGIN_GET_MACRO = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:356:13
pub const __swift_compiler_version_at_least = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:378:13
pub const __SPI_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:386:11
pub const __SPI_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:390:11
pub const __SPI_AVAILABLE_END = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityInternal.h:394:11
pub const __OSX_AVAILABLE_STARTING = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:213:17
pub const __OSX_AVAILABLE_BUT_DEPRECATED = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:214:17
pub const __OSX_AVAILABLE_BUT_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:216:17
pub const __OS_AVAILABILITY = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:239:13
pub const __OS_AVAILABILITY_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:240:13
pub const __OSX_EXTENSION_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx_app_extension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:257:13
pub const __IOS_EXTENSION_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `ios_app_extension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:258:13
pub inline fn __OS_EXTENSION_UNAVAILABLE(_msg: anytype) @TypeOf(__OSX_EXTENSION_UNAVAILABLE(_msg) ++ __IOS_EXTENSION_UNAVAILABLE(_msg)) {
    _ = &_msg;
    return __OSX_EXTENSION_UNAVAILABLE(_msg) ++ __IOS_EXTENSION_UNAVAILABLE(_msg);
}
pub const __OSX_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:275:13
pub const __OSX_AVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:276:13
pub const __OSX_DEPRECATED = @compileError("unable to translate macro: undefined identifier `macosx`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:277:13
pub const __IOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:301:13
pub const __IOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:303:15
pub const __IOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:305:13
pub const __IOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:306:13
pub const __TVOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:330:13
pub const __TVOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:332:15
pub const __TVOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:334:13
pub const __TVOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:335:13
pub const __WATCHOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:359:13
pub const __WATCHOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:361:15
pub const __WATCHOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:363:13
pub const __WATCHOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:364:13
pub const __SWIFT_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `swift`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:387:13
pub const __SWIFT_UNAVAILABLE_MSG = @compileError("unable to translate macro: undefined identifier `swift`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:388:13
pub const __API_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:431:13
pub const __API_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:433:13
pub const __API_AVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:434:13
pub const __API_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:452:13
pub const __API_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:453:13
pub const __API_DEPRECATED_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:455:13
pub const __API_DEPRECATED_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:456:13
pub const __API_DEPRECATED_WITH_REPLACEMENT_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:458:13
pub const __API_DEPRECATED_WITH_REPLACEMENT_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:459:13
pub const __API_UNAVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:469:13
pub const __API_UNAVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:471:13
pub const __API_UNAVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:472:13
pub const __SPI_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:545:11
pub const __SPI_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/Availability.h:549:11
pub const __AVAILABILITY_MACROS_USES_AVAILABILITY = @as(c_int, 1);
pub const __IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `__IPHONE_NA`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/AvailabilityMacros.h:213:9
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_1, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_3, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_4, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_13 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_13, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_8, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_9, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_10, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_10_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_10_3, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_10_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11_3, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_3 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_11_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_11_4, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_11_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_11_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12_1, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_1, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_1 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_2_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12_2, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_2_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_2 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_1, __MAC_10_12_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_4_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_12_4, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_4_AND_LATER_BUT_DEPRECATED = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_4, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_1, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_3, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_4, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_5, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_6, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_7, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_8, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_9, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_10_3, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_3, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_11_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_11_4, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_1, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_12_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_12_4 = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_12_2, __MAC_10_12_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_13_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_13, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_14_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_14, __IPHONE_COMPAT_VERSION);
pub const AVAILABLE_MAC_OS_X_VERSION_10_15_AND_LATER = __OSX_AVAILABLE_STARTING(__MAC_10_15, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_1, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_2, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_3, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_5, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_6, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_7, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_8_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_8, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_9_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_9, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_10_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_10, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_11_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_11, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_12_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_12, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_13_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_13, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const DEPRECATED_IN_MAC_OS_X_VERSION_10_14_4_AND_LATER = __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_10_0, __MAC_10_14_4, __IPHONE_COMPAT_VERSION, __IPHONE_COMPAT_VERSION);
pub const __TARGETCONDITIONALS__ = "";
pub const TARGET_OS_RTKIT = @as(c_int, 0);
pub const TARGET_RT_LITTLE_ENDIAN = @as(c_int, 1);
pub const TARGET_RT_BIG_ENDIAN = @as(c_int, 0);
pub const TARGET_RT_64_BIT = @as(c_int, 1);
pub const TARGET_RT_MAC_CFM = @as(c_int, 0);
pub const TARGET_RT_MAC_MACHO = @as(c_int, 1);
pub const TARGET_CPU_ARM64 = @as(c_int, 1);
pub const TARGET_OS_VISION = @as(c_int, 0);
pub const TARGET_CPU_PPC = @as(c_int, 0);
pub const TARGET_CPU_PPC64 = @as(c_int, 0);
pub const TARGET_CPU_68K = @as(c_int, 0);
pub const TARGET_CPU_X86 = @as(c_int, 0);
pub const TARGET_CPU_X86_64 = @as(c_int, 0);
pub const TARGET_CPU_ARM = @as(c_int, 0);
pub const TARGET_CPU_MIPS = @as(c_int, 0);
pub const TARGET_CPU_SPARC = @as(c_int, 0);
pub const TARGET_CPU_ALPHA = @as(c_int, 0);
pub const TARGET_ABI_USES_IOS_VALUES = !(TARGET_CPU_X86_64 != 0) or ((TARGET_OS_IPHONE != 0) and !(TARGET_OS_MACCATALYST != 0));
pub const __MACOSX__ = @as(c_int, 1);
pub const _begin_code_h = "";
pub const SDL_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:38:13
pub const SDL_UNUSED = @compileError("unable to translate macro: undefined identifier `unused`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:46:13
pub const DECLSPEC = @compileError("unable to translate macro: undefined identifier `visibility`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:68:12
pub const SDLCALL = "";
pub const SDL_INLINE = @compileError("unable to translate C expr: unexpected token '__inline__'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:120:9
pub const SDL_FORCE_INLINE = @compileError("unable to translate macro: undefined identifier `always_inline`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:141:9
pub const SDL_NORETURN = @compileError("unable to translate macro: undefined identifier `noreturn`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:149:9
pub const _HAS_FALLTHROUGH = @compileError("unable to translate macro: undefined identifier `__has_attribute`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:174:9
pub const SDL_FALLTHROUGH = @compileError("unable to translate macro: undefined identifier `__fallthrough__`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/begin_code.h:181:9
pub const SIZEOF_VOIDP = @as(c_int, 8);
pub const HAVE_GCC_ATOMICS = @as(c_int, 1);
pub const HAVE_LIBC = @as(c_int, 1);
pub const STDC_HEADERS = @as(c_int, 1);
pub const HAVE_ALLOCA_H = @as(c_int, 1);
pub const HAVE_CTYPE_H = @as(c_int, 1);
pub const HAVE_FLOAT_H = @as(c_int, 1);
pub const HAVE_ICONV_H = @as(c_int, 1);
pub const HAVE_INTTYPES_H = @as(c_int, 1);
pub const HAVE_LIMITS_H = @as(c_int, 1);
pub const HAVE_MATH_H = @as(c_int, 1);
pub const HAVE_MEMORY_H = @as(c_int, 1);
pub const HAVE_SIGNAL_H = @as(c_int, 1);
pub const HAVE_STDARG_H = @as(c_int, 1);
pub const HAVE_STDINT_H = @as(c_int, 1);
pub const HAVE_STDIO_H = @as(c_int, 1);
pub const HAVE_STDLIB_H = @as(c_int, 1);
pub const HAVE_STRINGS_H = @as(c_int, 1);
pub const HAVE_STRING_H = @as(c_int, 1);
pub const HAVE_SYS_TYPES_H = @as(c_int, 1);
pub const HAVE_WCHAR_H = @as(c_int, 1);
pub const HAVE_LIBUNWIND_H = @as(c_int, 1);
pub const HAVE_DLOPEN = @as(c_int, 1);
pub const HAVE_MALLOC = @as(c_int, 1);
pub const HAVE_CALLOC = @as(c_int, 1);
pub const HAVE_REALLOC = @as(c_int, 1);
pub const HAVE_FREE = @as(c_int, 1);
pub const HAVE_ALLOCA = @as(c_int, 1);
pub const HAVE_GETENV = @as(c_int, 1);
pub const HAVE_SETENV = @as(c_int, 1);
pub const HAVE_PUTENV = @as(c_int, 1);
pub const HAVE_UNSETENV = @as(c_int, 1);
pub const HAVE_QSORT = @as(c_int, 1);
pub const HAVE_BSEARCH = @as(c_int, 1);
pub const HAVE_ABS = @as(c_int, 1);
pub const HAVE_BCOPY = @as(c_int, 1);
pub const HAVE_MEMSET = @as(c_int, 1);
pub const HAVE_MEMCPY = @as(c_int, 1);
pub const HAVE_MEMMOVE = @as(c_int, 1);
pub const HAVE_MEMCMP = @as(c_int, 1);
pub const HAVE_WCSLEN = @as(c_int, 1);
pub const HAVE_WCSLCPY = @as(c_int, 1);
pub const HAVE_WCSLCAT = @as(c_int, 1);
pub const HAVE_WCSDUP = @as(c_int, 1);
pub const HAVE_WCSSTR = @as(c_int, 1);
pub const HAVE_WCSCMP = @as(c_int, 1);
pub const HAVE_WCSNCMP = @as(c_int, 1);
pub const HAVE_WCSCASECMP = @as(c_int, 1);
pub const HAVE_WCSNCASECMP = @as(c_int, 1);
pub const HAVE_STRLEN = @as(c_int, 1);
pub const HAVE_STRLCPY = @as(c_int, 1);
pub const HAVE_STRLCAT = @as(c_int, 1);
pub const HAVE_INDEX = @as(c_int, 1);
pub const HAVE_RINDEX = @as(c_int, 1);
pub const HAVE_STRCHR = @as(c_int, 1);
pub const HAVE_STRRCHR = @as(c_int, 1);
pub const HAVE_STRSTR = @as(c_int, 1);
pub const HAVE_STRTOK_R = @as(c_int, 1);
pub const HAVE_STRTOL = @as(c_int, 1);
pub const HAVE_STRTOUL = @as(c_int, 1);
pub const HAVE_STRTOLL = @as(c_int, 1);
pub const HAVE_STRTOULL = @as(c_int, 1);
pub const HAVE_STRTOD = @as(c_int, 1);
pub const HAVE_ATOI = @as(c_int, 1);
pub const HAVE_ATOF = @as(c_int, 1);
pub const HAVE_STRCMP = @as(c_int, 1);
pub const HAVE_STRNCMP = @as(c_int, 1);
pub const HAVE_STRCASECMP = @as(c_int, 1);
pub const HAVE_STRNCASECMP = @as(c_int, 1);
pub const HAVE_VSSCANF = @as(c_int, 1);
pub const HAVE_VSNPRINTF = @as(c_int, 1);
pub const HAVE_M_PI = "";
pub const HAVE_ACOS = @as(c_int, 1);
pub const HAVE_ACOSF = @as(c_int, 1);
pub const HAVE_ASIN = @as(c_int, 1);
pub const HAVE_ASINF = @as(c_int, 1);
pub const HAVE_ATAN = @as(c_int, 1);
pub const HAVE_ATANF = @as(c_int, 1);
pub const HAVE_ATAN2 = @as(c_int, 1);
pub const HAVE_ATAN2F = @as(c_int, 1);
pub const HAVE_CEIL = @as(c_int, 1);
pub const HAVE_CEILF = @as(c_int, 1);
pub const HAVE_COPYSIGN = @as(c_int, 1);
pub const HAVE_COPYSIGNF = @as(c_int, 1);
pub const HAVE_COS = @as(c_int, 1);
pub const HAVE_COSF = @as(c_int, 1);
pub const HAVE_EXP = @as(c_int, 1);
pub const HAVE_EXPF = @as(c_int, 1);
pub const HAVE_FABS = @as(c_int, 1);
pub const HAVE_FABSF = @as(c_int, 1);
pub const HAVE_FLOOR = @as(c_int, 1);
pub const HAVE_FLOORF = @as(c_int, 1);
pub const HAVE_FMOD = @as(c_int, 1);
pub const HAVE_FMODF = @as(c_int, 1);
pub const HAVE_LOG = @as(c_int, 1);
pub const HAVE_LOGF = @as(c_int, 1);
pub const HAVE_LOG10 = @as(c_int, 1);
pub const HAVE_LOG10F = @as(c_int, 1);
pub const HAVE_LROUND = @as(c_int, 1);
pub const HAVE_LROUNDF = @as(c_int, 1);
pub const HAVE_POW = @as(c_int, 1);
pub const HAVE_POWF = @as(c_int, 1);
pub const HAVE_ROUND = @as(c_int, 1);
pub const HAVE_ROUNDF = @as(c_int, 1);
pub const HAVE_SCALBN = @as(c_int, 1);
pub const HAVE_SCALBNF = @as(c_int, 1);
pub const HAVE_SIN = @as(c_int, 1);
pub const HAVE_SINF = @as(c_int, 1);
pub const HAVE_SQRT = @as(c_int, 1);
pub const HAVE_SQRTF = @as(c_int, 1);
pub const HAVE_TAN = @as(c_int, 1);
pub const HAVE_TANF = @as(c_int, 1);
pub const HAVE_TRUNC = @as(c_int, 1);
pub const HAVE_TRUNCF = @as(c_int, 1);
pub const HAVE_FSEEKO = @as(c_int, 1);
pub const HAVE_SIGACTION = @as(c_int, 1);
pub const HAVE_SA_SIGACTION = @as(c_int, 1);
pub const HAVE_SETJMP = @as(c_int, 1);
pub const HAVE_NANOSLEEP = @as(c_int, 1);
pub const HAVE_SYSCONF = @as(c_int, 1);
pub const HAVE_SYSCTLBYNAME = @as(c_int, 1);
pub const HAVE_MPROTECT = @as(c_int, 1);
pub const HAVE_ICONV = @as(c_int, 1);
pub const HAVE_PTHREAD_SETNAME_NP = @as(c_int, 1);
pub const HAVE_POLL = @as(c_int, 1);
pub const HAVE__EXIT = @as(c_int, 1);
pub const HAVE_O_CLOEXEC = @as(c_int, 1);
pub const SDL_AUDIO_DRIVER_COREAUDIO = @as(c_int, 1);
pub const SDL_AUDIO_DRIVER_DISK = @as(c_int, 1);
pub const SDL_AUDIO_DRIVER_DUMMY = @as(c_int, 1);
pub const SDL_JOYSTICK_IOKIT = @as(c_int, 1);
pub const SDL_JOYSTICK_HIDAPI = @as(c_int, 1);
pub const SDL_JOYSTICK_VIRTUAL = @as(c_int, 1);
pub const SDL_HAPTIC_IOKIT = @as(c_int, 1);
pub const SDL_SENSOR_DUMMY = @as(c_int, 1);
pub const SDL_LOADSO_DLOPEN = @as(c_int, 1);
pub const SDL_THREAD_PTHREAD = @as(c_int, 1);
pub const SDL_THREAD_PTHREAD_RECURSIVE_MUTEX = @as(c_int, 1);
pub const SDL_TIMER_UNIX = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_COCOA = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_DUMMY = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11 = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC = "/opt/X11/lib/libX11.6.dylib";
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT = "/opt/X11/lib/libXext.6.dylib";
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC_XCURSOR = "/opt/X11/lib/libXcursor.1.dylib";
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2 = "/opt/X11/lib/libXi.6.dylib";
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC_XFIXES = "/opt/X11/lib/libXfixes.3.dylib";
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR = "/opt/X11/lib/libXrandr.2.dylib";
pub const SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS = "/opt/X11/lib/libXss.1.dylib";
pub const SDL_VIDEO_DRIVER_X11_XCURSOR = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XDBE = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XINPUT2 = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XINPUT2_SUPPORTS_MULTITOUCH = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XFIXES = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XRANDR = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XSCRNSAVER = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_XSHAPE = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS = @as(c_int, 1);
pub const SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM = @as(c_int, 1);
pub const SDL_VIDEO_RENDER_OGL = @as(c_int, 1);
pub const SDL_VIDEO_RENDER_OGL_ES2 = @as(c_int, 1);
pub const SDL_VIDEO_RENDER_METAL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_ES2 = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_CGL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_EGL = @as(c_int, 1);
pub const SDL_VIDEO_OPENGL_GLX = @as(c_int, 1);
pub const SDL_VIDEO_VULKAN = @as(c_int, 1);
pub const SDL_VIDEO_METAL = @as(c_int, 1);
pub const SDL_POWER_MACOSX = @as(c_int, 1);
pub const SDL_FILESYSTEM_COCOA = @as(c_int, 1);
pub const DYNAPI_NEEDS_DLOPEN = @as(c_int, 1);
pub const _DARWIN_C_SOURCE = @as(c_int, 1);
pub const _SYS_TYPES_H_ = "";
pub const __SYS_APPLEAPIOPTS_H__ = "";
pub const __APPLE_API_STANDARD = "";
pub const __APPLE_API_STABLE = "";
pub const __APPLE_API_EVOLVING = "";
pub const __APPLE_API_UNSTABLE = "";
pub const __APPLE_API_PRIVATE = "";
pub const __APPLE_API_OBSOLETE = "";
pub const _BSD_MACHINE_ENDIAN_H_ = "";
pub const _ARM__ENDIAN_H_ = "";
pub const _QUAD_HIGHWORD = @as(c_int, 1);
pub const _QUAD_LOWWORD = @as(c_int, 0);
pub const __DARWIN_LITTLE_ENDIAN = @as(c_int, 1234);
pub const __DARWIN_BIG_ENDIAN = @as(c_int, 4321);
pub const __DARWIN_PDP_ENDIAN = @as(c_int, 3412);
pub const __DARWIN_BYTE_ORDER = __DARWIN_LITTLE_ENDIAN;
pub const LITTLE_ENDIAN = __DARWIN_LITTLE_ENDIAN;
pub const BIG_ENDIAN = __DARWIN_BIG_ENDIAN;
pub const PDP_ENDIAN = __DARWIN_PDP_ENDIAN;
pub const BYTE_ORDER = __DARWIN_BYTE_ORDER;
pub const _SYS__ENDIAN_H_ = "";
pub const _OS__OSBYTEORDER_H = "";
pub inline fn __DARWIN_OSSwapConstInt16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, ((@import("std").zig.c_translation.cast(__uint16_t, x) & @as(c_uint, 0xff00)) >> @as(c_int, 8)) | ((@import("std").zig.c_translation.cast(__uint16_t, x) & @as(c_uint, 0x00ff)) << @as(c_int, 8)));
}
pub inline fn __DARWIN_OSSwapConstInt32(x: anytype) __uint32_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint32_t, ((((@import("std").zig.c_translation.cast(__uint32_t, x) & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xff000000, .hex)) >> @as(c_int, 24)) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00ff0000, .hex)) >> @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @as(c_uint, 0x0000ff00)) << @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @as(c_uint, 0x000000ff)) << @as(c_int, 24)));
}
pub inline fn __DARWIN_OSSwapConstInt64(x: anytype) __uint64_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint64_t, ((((((((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0xff00000000000000)) >> @as(c_int, 56)) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00ff000000000000)) >> @as(c_int, 40))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x0000ff0000000000)) >> @as(c_int, 24))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x000000ff00000000)) >> @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00000000ff000000)) << @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x0000000000ff0000)) << @as(c_int, 24))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x000000000000ff00)) << @as(c_int, 40))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00000000000000ff)) << @as(c_int, 56)));
}
pub const __DARWIN_OS_INLINE = @compileError("unable to translate C expr: unexpected token 'static'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/libkern/_OSByteOrder.h:67:17
pub const _OS_OSBYTEORDERARM_H = "";
pub const _ARM_ARCH_H = "";
pub inline fn __DARWIN_OSSwapInt16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt16(x) else _OSSwapInt16(x));
}
pub inline fn __DARWIN_OSSwapInt32(x: anytype) @TypeOf(if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt32(x) else _OSSwapInt32(x)) {
    _ = &x;
    return if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt32(x) else _OSSwapInt32(x);
}
pub inline fn __DARWIN_OSSwapInt64(x: anytype) @TypeOf(if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt64(x) else _OSSwapInt64(x)) {
    _ = &x;
    return if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt64(x) else _OSSwapInt64(x);
}
pub inline fn ntohs(x: anytype) @TypeOf(__DARWIN_OSSwapInt16(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt16(x);
}
pub inline fn htons(x: anytype) @TypeOf(__DARWIN_OSSwapInt16(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt16(x);
}
pub inline fn ntohl(x: anytype) @TypeOf(__DARWIN_OSSwapInt32(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt32(x);
}
pub inline fn htonl(x: anytype) @TypeOf(__DARWIN_OSSwapInt32(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt32(x);
}
pub inline fn ntohll(x: anytype) @TypeOf(__DARWIN_OSSwapInt64(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt64(x);
}
pub inline fn htonll(x: anytype) @TypeOf(__DARWIN_OSSwapInt64(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt64(x);
}
pub const NTOHL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_endian.h:144:9
pub const NTOHS = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_endian.h:145:9
pub const NTOHLL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_endian.h:146:9
pub const HTONL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_endian.h:147:9
pub const HTONS = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_endian.h:148:9
pub const HTONLL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_endian.h:149:9
pub const _U_CHAR = "";
pub const _U_SHORT = "";
pub const _U_INT = "";
pub const _U_LONG = "";
pub const __DARWIN_UINT = "";
pub const _CADDR_T = "";
pub const _DEV_T = "";
pub const _BLKCNT_T = "";
pub const _BLKSIZE_T = "";
pub const _GID_T = "";
pub const _IN_ADDR_T = "";
pub const _IN_PORT_T = "";
pub const _INO_T = "";
pub const _INO64_T = "";
pub const _KEY_T = "";
pub const _MODE_T = "";
pub const _NLINK_T = "";
pub const _ID_T = "";
pub const _PID_T = "";
pub const _OFF_T = "";
pub const _UID_T = "";
pub inline fn major(x: anytype) i32 {
    _ = &x;
    return @import("std").zig.c_translation.cast(i32, (@import("std").zig.c_translation.cast(u_int32_t, x) >> @as(c_int, 24)) & @as(c_int, 0xff));
}
pub inline fn minor(x: anytype) i32 {
    _ = &x;
    return @import("std").zig.c_translation.cast(i32, x & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffffff, .hex));
}
pub inline fn makedev(x: anytype, y: anytype) dev_t {
    _ = &x;
    _ = &y;
    return @import("std").zig.c_translation.cast(dev_t, (x << @as(c_int, 24)) | y);
}
pub const _CLOCK_T = "";
pub const _SSIZE_T = "";
pub const _TIME_T = "";
pub const _USECONDS_T = "";
pub const _SUSECONDS_T = "";
pub const _RSIZE_T = "";
pub const _ERRNO_T = "";
pub const _FD_SET = "";
pub const __DARWIN_FD_SETSIZE = @as(c_int, 1024);
pub const __DARWIN_NBBY = @as(c_int, 8);
pub const __DARWIN_NFDBITS = @import("std").zig.c_translation.sizeof(__int32_t) * __DARWIN_NBBY;
pub inline fn __DARWIN_howmany(x: anytype, y: anytype) @TypeOf(if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) @import("std").zig.c_translation.MacroArithmetic.div(x, y) else @import("std").zig.c_translation.MacroArithmetic.div(x, y) + @as(c_int, 1)) {
    _ = &x;
    _ = &y;
    return if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) @import("std").zig.c_translation.MacroArithmetic.div(x, y) else @import("std").zig.c_translation.MacroArithmetic.div(x, y) + @as(c_int, 1);
}
pub inline fn __DARWIN_FD_SET(n: anytype, p: anytype) @TypeOf(__darwin_fd_set(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_set(n, p);
}
pub inline fn __DARWIN_FD_CLR(n: anytype, p: anytype) @TypeOf(__darwin_fd_clr(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_clr(n, p);
}
pub inline fn __DARWIN_FD_ISSET(n: anytype, p: anytype) @TypeOf(__darwin_fd_isset(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_isset(n, p);
}
pub const __DARWIN_FD_ZERO = @compileError("unable to translate macro: undefined identifier `__builtin_bzero`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_types/_fd_def.h:115:9
pub const __DARWIN_FD_COPY = @compileError("unable to translate C expr: unexpected token '*'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/_types/_fd_def.h:120:9
pub const NBBY = __DARWIN_NBBY;
pub const NFDBITS = __DARWIN_NFDBITS;
pub inline fn howmany(x: anytype, y: anytype) @TypeOf(__DARWIN_howmany(x, y)) {
    _ = &x;
    _ = &y;
    return __DARWIN_howmany(x, y);
}
pub const FD_SETSIZE = __DARWIN_FD_SETSIZE;
pub inline fn FD_SET(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_SET(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_SET(n, p);
}
pub inline fn FD_CLR(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_CLR(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_CLR(n, p);
}
pub inline fn FD_ZERO(p: anytype) @TypeOf(__DARWIN_FD_ZERO(p)) {
    _ = &p;
    return __DARWIN_FD_ZERO(p);
}
pub inline fn FD_ISSET(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_ISSET(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_ISSET(n, p);
}
pub inline fn FD_COPY(f: anytype, t: anytype) @TypeOf(__DARWIN_FD_COPY(f, t)) {
    _ = &f;
    _ = &t;
    return __DARWIN_FD_COPY(f, t);
}
pub const _PTHREAD_ATTR_T = "";
pub const _PTHREAD_COND_T = "";
pub const _PTHREAD_CONDATTR_T = "";
pub const _PTHREAD_MUTEX_T = "";
pub const _PTHREAD_MUTEXATTR_T = "";
pub const _PTHREAD_ONCE_T = "";
pub const _PTHREAD_RWLOCK_T = "";
pub const _PTHREAD_RWLOCKATTR_T = "";
pub const _PTHREAD_T = "";
pub const _PTHREAD_KEY_T = "";
pub const _FSBLKCNT_T = "";
pub const _FSFILCNT_T = "";
pub const _STDIO_H_ = "";
pub const __STDIO_H_ = "";
pub const __TYPES_H_ = "";
pub const __strfmonlike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/_types.h:31:9
pub const __strftimelike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/_types.h:33:9
pub const __DARWIN_WCHAR_MAX = __WCHAR_MAX__;
pub const __DARWIN_WCHAR_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffffff, .hex) - @as(c_int, 1);
pub const __DARWIN_WEOF = @import("std").zig.c_translation.cast(__darwin_wint_t, -@as(c_int, 1));
pub const _FORTIFY_SOURCE = @as(c_int, 2);
pub const _VA_LIST_T = "";
pub const _SYS_STDIO_H_ = "";
pub const RENAME_SECLUDE = @as(c_int, 0x00000001);
pub const RENAME_SWAP = @as(c_int, 0x00000002);
pub const RENAME_EXCL = @as(c_int, 0x00000004);
pub const RENAME_RESERVED1 = @as(c_int, 0x00000008);
pub const RENAME_NOFOLLOW_ANY = @as(c_int, 0x00000010);
pub const _FSTDIO = "";
pub const _SEEK_SET_H_ = "";
pub const SEEK_SET = @as(c_int, 0);
pub const SEEK_CUR = @as(c_int, 1);
pub const SEEK_END = @as(c_int, 2);
pub const SEEK_HOLE = @as(c_int, 3);
pub const SEEK_DATA = @as(c_int, 4);
pub const __SLBF = @as(c_int, 0x0001);
pub const __SNBF = @as(c_int, 0x0002);
pub const __SRD = @as(c_int, 0x0004);
pub const __SWR = @as(c_int, 0x0008);
pub const __SRW = @as(c_int, 0x0010);
pub const __SEOF = @as(c_int, 0x0020);
pub const __SERR = @as(c_int, 0x0040);
pub const __SMBF = @as(c_int, 0x0080);
pub const __SAPP = @as(c_int, 0x0100);
pub const __SSTR = @as(c_int, 0x0200);
pub const __SOPT = @as(c_int, 0x0400);
pub const __SNPT = @as(c_int, 0x0800);
pub const __SOFF = @as(c_int, 0x1000);
pub const __SMOD = @as(c_int, 0x2000);
pub const __SALC = @as(c_int, 0x4000);
pub const __SIGN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const _IOFBF = @as(c_int, 0);
pub const _IOLBF = @as(c_int, 1);
pub const _IONBF = @as(c_int, 2);
pub const BUFSIZ = @as(c_int, 1024);
pub const EOF = -@as(c_int, 1);
pub const FOPEN_MAX = @as(c_int, 20);
pub const FILENAME_MAX = @as(c_int, 1024);
pub const P_tmpdir = "/var/tmp/";
pub const L_tmpnam = @as(c_int, 1024);
pub const TMP_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 308915776, .decimal);
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdio.h:119:9: warning: macro 'stdin' contains a runtime value, translated to function
pub inline fn stdin() @TypeOf(__stdinp) {
    return __stdinp;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdio.h:120:9: warning: macro 'stdout' contains a runtime value, translated to function
pub inline fn stdout() @TypeOf(__stdoutp) {
    return __stdoutp;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdio.h:121:9: warning: macro 'stderr' contains a runtime value, translated to function
pub inline fn stderr() @TypeOf(__stderrp) {
    return __stderrp;
}
pub const L_ctermid = @as(c_int, 1024);
pub const _CTERMID_H_ = "";
pub const __sgetc = @compileError("TODO unary inc/dec expr");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdio.h:261:9
pub inline fn __sfeof(p: anytype) @TypeOf((p.*._flags & __SEOF) != @as(c_int, 0)) {
    _ = &p;
    return (p.*._flags & __SEOF) != @as(c_int, 0);
}
pub inline fn __sferror(p: anytype) @TypeOf((p.*._flags & __SERR) != @as(c_int, 0)) {
    _ = &p;
    return (p.*._flags & __SERR) != @as(c_int, 0);
}
pub const __sclearerr = @compileError("unable to translate C expr: expected ')' instead got '&='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdio.h:285:9
pub inline fn __sfileno(p: anytype) @TypeOf(p.*._file) {
    _ = &p;
    return p.*._file;
}
pub inline fn fropen(cookie: anytype, @"fn": anytype) @TypeOf(funopen(cookie, @"fn", @as(c_int, 0), @as(c_int, 0), @as(c_int, 0))) {
    _ = &cookie;
    _ = &@"fn";
    return funopen(cookie, @"fn", @as(c_int, 0), @as(c_int, 0), @as(c_int, 0));
}
pub inline fn fwopen(cookie: anytype, @"fn": anytype) @TypeOf(funopen(cookie, @as(c_int, 0), @"fn", @as(c_int, 0), @as(c_int, 0))) {
    _ = &cookie;
    _ = &@"fn";
    return funopen(cookie, @as(c_int, 0), @"fn", @as(c_int, 0), @as(c_int, 0));
}
pub inline fn feof_unlocked(p: anytype) @TypeOf(__sfeof(p)) {
    _ = &p;
    return __sfeof(p);
}
pub inline fn ferror_unlocked(p: anytype) @TypeOf(__sferror(p)) {
    _ = &p;
    return __sferror(p);
}
pub inline fn clearerr_unlocked(p: anytype) @TypeOf(__sclearerr(p)) {
    _ = &p;
    return __sclearerr(p);
}
pub inline fn fileno_unlocked(p: anytype) @TypeOf(__sfileno(p)) {
    _ = &p;
    return __sfileno(p);
}
pub const _SECURE__STDIO_H_ = "";
pub const _SECURE__COMMON_H_ = "";
pub const _USE_FORTIFY_LEVEL = @as(c_int, 2);
pub inline fn __darwin_obsz0(object: anytype) @TypeOf(__builtin_object_size(object, @as(c_int, 0))) {
    _ = &object;
    return __builtin_object_size(object, @as(c_int, 0));
}
pub inline fn __darwin_obsz(object: anytype) @TypeOf(__builtin_object_size(object, if (_USE_FORTIFY_LEVEL > @as(c_int, 1)) @as(c_int, 1) else @as(c_int, 0))) {
    _ = &object;
    return __builtin_object_size(object, if (_USE_FORTIFY_LEVEL > @as(c_int, 1)) @as(c_int, 1) else @as(c_int, 0));
}
pub const _STDLIB_H_ = "";
pub const _SYS_WAIT_H_ = "";
pub const _SYS_SIGNAL_H_ = "";
pub const __DARWIN_NSIG = @as(c_int, 32);
pub const NSIG = __DARWIN_NSIG;
pub const _BSD_MACHINE_SIGNAL_H_ = "";
pub const _ARM_SIGNAL_ = @as(c_int, 1);
pub const SIGHUP = @as(c_int, 1);
pub const SIGINT = @as(c_int, 2);
pub const SIGQUIT = @as(c_int, 3);
pub const SIGILL = @as(c_int, 4);
pub const SIGTRAP = @as(c_int, 5);
pub const SIGABRT = @as(c_int, 6);
pub const SIGIOT = SIGABRT;
pub const SIGEMT = @as(c_int, 7);
pub const SIGFPE = @as(c_int, 8);
pub const SIGKILL = @as(c_int, 9);
pub const SIGBUS = @as(c_int, 10);
pub const SIGSEGV = @as(c_int, 11);
pub const SIGSYS = @as(c_int, 12);
pub const SIGPIPE = @as(c_int, 13);
pub const SIGALRM = @as(c_int, 14);
pub const SIGTERM = @as(c_int, 15);
pub const SIGURG = @as(c_int, 16);
pub const SIGSTOP = @as(c_int, 17);
pub const SIGTSTP = @as(c_int, 18);
pub const SIGCONT = @as(c_int, 19);
pub const SIGCHLD = @as(c_int, 20);
pub const SIGTTIN = @as(c_int, 21);
pub const SIGTTOU = @as(c_int, 22);
pub const SIGIO = @as(c_int, 23);
pub const SIGXCPU = @as(c_int, 24);
pub const SIGXFSZ = @as(c_int, 25);
pub const SIGVTALRM = @as(c_int, 26);
pub const SIGPROF = @as(c_int, 27);
pub const SIGWINCH = @as(c_int, 28);
pub const SIGINFO = @as(c_int, 29);
pub const SIGUSR1 = @as(c_int, 30);
pub const SIGUSR2 = @as(c_int, 31);
pub const SIG_DFL = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/signal.h:131:9
pub const SIG_IGN = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/signal.h:132:9
pub const SIG_HOLD = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/signal.h:133:9
pub const SIG_ERR = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/signal.h:134:9
pub const _BSD_MACHINE__MCONTEXT_H_ = "";
pub const __ARM_MCONTEXT_H_ = "";
pub const _MACH_MACHINE__STRUCTS_H_ = "";
pub const _MACH_ARM__STRUCTS_H_ = "";
pub const _STRUCT_ARM_EXCEPTION_STATE = struct___darwin_arm_exception_state;
pub const _STRUCT_ARM_EXCEPTION_STATE64 = struct___darwin_arm_exception_state64;
pub const _STRUCT_ARM_THREAD_STATE = struct___darwin_arm_thread_state;
pub const __DARWIN_OPAQUE_ARM_THREAD_STATE64 = @as(c_int, 0);
pub const _STRUCT_ARM_THREAD_STATE64 = struct___darwin_arm_thread_state64;
pub inline fn __darwin_arm_thread_state64_get_pc(ts: anytype) @TypeOf(ts.__pc) {
    _ = &ts;
    return ts.__pc;
}
pub inline fn __darwin_arm_thread_state64_get_pc_fptr(ts: anytype) ?*anyopaque {
    _ = &ts;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ts.__pc));
}
pub const __darwin_arm_thread_state64_set_pc_fptr = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/mach/arm/_structs.h:406:9
pub inline fn __darwin_arm_thread_state64_get_lr(ts: anytype) @TypeOf(ts.__lr) {
    _ = &ts;
    return ts.__lr;
}
pub inline fn __darwin_arm_thread_state64_get_lr_fptr(ts: anytype) ?*anyopaque {
    _ = &ts;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ts.__lr));
}
pub const __darwin_arm_thread_state64_set_lr_fptr = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/mach/arm/_structs.h:415:9
pub inline fn __darwin_arm_thread_state64_get_sp(ts: anytype) @TypeOf(ts.__sp) {
    _ = &ts;
    return ts.__sp;
}
pub const __darwin_arm_thread_state64_set_sp = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/mach/arm/_structs.h:421:9
pub inline fn __darwin_arm_thread_state64_get_fp(ts: anytype) @TypeOf(ts.__fp) {
    _ = &ts;
    return ts.__fp;
}
pub const __darwin_arm_thread_state64_set_fp = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/mach/arm/_structs.h:427:9
pub const __darwin_arm_thread_state64_ptrauth_strip = @import("std").zig.c_translation.Macros.DISCARD;
pub const _STRUCT_ARM_VFP_STATE = struct___darwin_arm_vfp_state;
pub const _STRUCT_ARM_NEON_STATE64 = struct___darwin_arm_neon_state64;
pub const _STRUCT_ARM_NEON_STATE = struct___darwin_arm_neon_state;
pub const _STRUCT_ARM_PAGEIN_STATE = struct___arm_pagein_state;
pub const _STRUCT_ARM_LEGACY_DEBUG_STATE = struct___arm_legacy_debug_state;
pub const _STRUCT_ARM_DEBUG_STATE32 = struct___darwin_arm_debug_state32;
pub const _STRUCT_ARM_DEBUG_STATE64 = struct___darwin_arm_debug_state64;
pub const _STRUCT_ARM_CPMU_STATE64 = struct___darwin_arm_cpmu_state64;
pub const _STRUCT_MCONTEXT32 = struct___darwin_mcontext32;
pub const _STRUCT_MCONTEXT64 = struct___darwin_mcontext64;
pub const _MCONTEXT_T = "";
pub const _STRUCT_MCONTEXT = _STRUCT_MCONTEXT64;
pub const _STRUCT_SIGALTSTACK = struct___darwin_sigaltstack;
pub const _STRUCT_UCONTEXT = struct___darwin_ucontext;
pub const _SIGSET_T = "";
pub const SIGEV_NONE = @as(c_int, 0);
pub const SIGEV_SIGNAL = @as(c_int, 1);
pub const SIGEV_THREAD = @as(c_int, 3);
pub const ILL_NOOP = @as(c_int, 0);
pub const ILL_ILLOPC = @as(c_int, 1);
pub const ILL_ILLTRP = @as(c_int, 2);
pub const ILL_PRVOPC = @as(c_int, 3);
pub const ILL_ILLOPN = @as(c_int, 4);
pub const ILL_ILLADR = @as(c_int, 5);
pub const ILL_PRVREG = @as(c_int, 6);
pub const ILL_COPROC = @as(c_int, 7);
pub const ILL_BADSTK = @as(c_int, 8);
pub const FPE_NOOP = @as(c_int, 0);
pub const FPE_FLTDIV = @as(c_int, 1);
pub const FPE_FLTOVF = @as(c_int, 2);
pub const FPE_FLTUND = @as(c_int, 3);
pub const FPE_FLTRES = @as(c_int, 4);
pub const FPE_FLTINV = @as(c_int, 5);
pub const FPE_FLTSUB = @as(c_int, 6);
pub const FPE_INTDIV = @as(c_int, 7);
pub const FPE_INTOVF = @as(c_int, 8);
pub const SEGV_NOOP = @as(c_int, 0);
pub const SEGV_MAPERR = @as(c_int, 1);
pub const SEGV_ACCERR = @as(c_int, 2);
pub const BUS_NOOP = @as(c_int, 0);
pub const BUS_ADRALN = @as(c_int, 1);
pub const BUS_ADRERR = @as(c_int, 2);
pub const BUS_OBJERR = @as(c_int, 3);
pub const TRAP_BRKPT = @as(c_int, 1);
pub const TRAP_TRACE = @as(c_int, 2);
pub const CLD_NOOP = @as(c_int, 0);
pub const CLD_EXITED = @as(c_int, 1);
pub const CLD_KILLED = @as(c_int, 2);
pub const CLD_DUMPED = @as(c_int, 3);
pub const CLD_TRAPPED = @as(c_int, 4);
pub const CLD_STOPPED = @as(c_int, 5);
pub const CLD_CONTINUED = @as(c_int, 6);
pub const POLL_IN = @as(c_int, 1);
pub const POLL_OUT = @as(c_int, 2);
pub const POLL_MSG = @as(c_int, 3);
pub const POLL_ERR = @as(c_int, 4);
pub const POLL_PRI = @as(c_int, 5);
pub const POLL_HUP = @as(c_int, 6);
pub const sa_handler = __sigaction_u.__sa_handler;
pub const sa_sigaction = __sigaction_u.__sa_sigaction;
pub const SA_ONSTACK = @as(c_int, 0x0001);
pub const SA_RESTART = @as(c_int, 0x0002);
pub const SA_RESETHAND = @as(c_int, 0x0004);
pub const SA_NOCLDSTOP = @as(c_int, 0x0008);
pub const SA_NODEFER = @as(c_int, 0x0010);
pub const SA_NOCLDWAIT = @as(c_int, 0x0020);
pub const SA_SIGINFO = @as(c_int, 0x0040);
pub const SA_USERTRAMP = @as(c_int, 0x0100);
pub const SA_64REGSET = @as(c_int, 0x0200);
pub const SA_USERSPACE_MASK = (((((SA_ONSTACK | SA_RESTART) | SA_RESETHAND) | SA_NOCLDSTOP) | SA_NODEFER) | SA_NOCLDWAIT) | SA_SIGINFO;
pub const SIG_BLOCK = @as(c_int, 1);
pub const SIG_UNBLOCK = @as(c_int, 2);
pub const SIG_SETMASK = @as(c_int, 3);
pub const SI_USER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10001, .hex);
pub const SI_QUEUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10002, .hex);
pub const SI_TIMER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10003, .hex);
pub const SI_ASYNCIO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004, .hex);
pub const SI_MESGQ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10005, .hex);
pub const SS_ONSTACK = @as(c_int, 0x0001);
pub const SS_DISABLE = @as(c_int, 0x0004);
pub const MINSIGSTKSZ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const SIGSTKSZ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 131072, .decimal);
pub const SV_ONSTACK = SA_ONSTACK;
pub const SV_INTERRUPT = SA_RESTART;
pub const SV_RESETHAND = SA_RESETHAND;
pub const SV_NODEFER = SA_NODEFER;
pub const SV_NOCLDSTOP = SA_NOCLDSTOP;
pub const SV_SIGINFO = SA_SIGINFO;
pub const sv_onstack = @compileError("unable to translate macro: undefined identifier `sv_flags`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/signal.h:361:9
pub inline fn sigmask(m: anytype) @TypeOf(@as(c_int, 1) << (m - @as(c_int, 1))) {
    _ = &m;
    return @as(c_int, 1) << (m - @as(c_int, 1));
}
pub const BADSIG = SIG_ERR;
pub const _SYS_RESOURCE_H_ = "";
pub const _STRUCT_TIMEVAL = struct_timeval;
pub const PRIO_PROCESS = @as(c_int, 0);
pub const PRIO_PGRP = @as(c_int, 1);
pub const PRIO_USER = @as(c_int, 2);
pub const PRIO_DARWIN_THREAD = @as(c_int, 3);
pub const PRIO_DARWIN_PROCESS = @as(c_int, 4);
pub const PRIO_MIN = -@as(c_int, 20);
pub const PRIO_MAX = @as(c_int, 20);
pub const PRIO_DARWIN_BG = @as(c_int, 0x1000);
pub const PRIO_DARWIN_NONUI = @as(c_int, 0x1001);
pub const RUSAGE_SELF = @as(c_int, 0);
pub const RUSAGE_CHILDREN = -@as(c_int, 1);
pub const ru_first = @compileError("unable to translate macro: undefined identifier `ru_ixrss`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/resource.h:164:9
pub const ru_last = @compileError("unable to translate macro: undefined identifier `ru_nivcsw`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/resource.h:178:9
pub const RUSAGE_INFO_V0 = @as(c_int, 0);
pub const RUSAGE_INFO_V1 = @as(c_int, 1);
pub const RUSAGE_INFO_V2 = @as(c_int, 2);
pub const RUSAGE_INFO_V3 = @as(c_int, 3);
pub const RUSAGE_INFO_V4 = @as(c_int, 4);
pub const RUSAGE_INFO_V5 = @as(c_int, 5);
pub const RUSAGE_INFO_V6 = @as(c_int, 6);
pub const RUSAGE_INFO_CURRENT = RUSAGE_INFO_V6;
pub const RU_PROC_RUNS_RESLIDE = @as(c_int, 0x00000001);
pub const RLIM_INFINITY = (@import("std").zig.c_translation.cast(__uint64_t, @as(c_int, 1)) << @as(c_int, 63)) - @as(c_int, 1);
pub const RLIM_SAVED_MAX = RLIM_INFINITY;
pub const RLIM_SAVED_CUR = RLIM_INFINITY;
pub const RLIMIT_CPU = @as(c_int, 0);
pub const RLIMIT_FSIZE = @as(c_int, 1);
pub const RLIMIT_DATA = @as(c_int, 2);
pub const RLIMIT_STACK = @as(c_int, 3);
pub const RLIMIT_CORE = @as(c_int, 4);
pub const RLIMIT_AS = @as(c_int, 5);
pub const RLIMIT_RSS = RLIMIT_AS;
pub const RLIMIT_MEMLOCK = @as(c_int, 6);
pub const RLIMIT_NPROC = @as(c_int, 7);
pub const RLIMIT_NOFILE = @as(c_int, 8);
pub const RLIM_NLIMITS = @as(c_int, 9);
pub const _RLIMIT_POSIX_FLAG = @as(c_int, 0x1000);
pub const RLIMIT_WAKEUPS_MONITOR = @as(c_int, 0x1);
pub const RLIMIT_CPU_USAGE_MONITOR = @as(c_int, 0x2);
pub const RLIMIT_THREAD_CPULIMITS = @as(c_int, 0x3);
pub const RLIMIT_FOOTPRINT_INTERVAL = @as(c_int, 0x4);
pub const WAKEMON_ENABLE = @as(c_int, 0x01);
pub const WAKEMON_DISABLE = @as(c_int, 0x02);
pub const WAKEMON_GET_PARAMS = @as(c_int, 0x04);
pub const WAKEMON_SET_DEFAULTS = @as(c_int, 0x08);
pub const WAKEMON_MAKE_FATAL = @as(c_int, 0x10);
pub const CPUMON_MAKE_FATAL = @as(c_int, 0x1000);
pub const FOOTPRINT_INTERVAL_RESET = @as(c_int, 0x1);
pub const IOPOL_TYPE_DISK = @as(c_int, 0);
pub const IOPOL_TYPE_VFS_ATIME_UPDATES = @as(c_int, 2);
pub const IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES = @as(c_int, 3);
pub const IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME = @as(c_int, 4);
pub const IOPOL_TYPE_VFS_TRIGGER_RESOLVE = @as(c_int, 5);
pub const IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION = @as(c_int, 6);
pub const IOPOL_TYPE_VFS_IGNORE_PERMISSIONS = @as(c_int, 7);
pub const IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE = @as(c_int, 8);
pub const IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES = @as(c_int, 9);
pub const IOPOL_TYPE_VFS_DISALLOW_RW_FOR_O_EVTONLY = @as(c_int, 10);
pub const IOPOL_SCOPE_PROCESS = @as(c_int, 0);
pub const IOPOL_SCOPE_THREAD = @as(c_int, 1);
pub const IOPOL_SCOPE_DARWIN_BG = @as(c_int, 2);
pub const IOPOL_DEFAULT = @as(c_int, 0);
pub const IOPOL_IMPORTANT = @as(c_int, 1);
pub const IOPOL_PASSIVE = @as(c_int, 2);
pub const IOPOL_THROTTLE = @as(c_int, 3);
pub const IOPOL_UTILITY = @as(c_int, 4);
pub const IOPOL_STANDARD = @as(c_int, 5);
pub const IOPOL_APPLICATION = IOPOL_STANDARD;
pub const IOPOL_NORMAL = IOPOL_IMPORTANT;
pub const IOPOL_ATIME_UPDATES_DEFAULT = @as(c_int, 0);
pub const IOPOL_ATIME_UPDATES_OFF = @as(c_int, 1);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT = @as(c_int, 0);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_OFF = @as(c_int, 1);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_ON = @as(c_int, 2);
pub const IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME = @as(c_int, 1);
pub const IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_TRIGGER_RESOLVE_OFF = @as(c_int, 1);
pub const IOPOL_VFS_CONTENT_PROTECTION_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_CONTENT_PROTECTION_IGNORE = @as(c_int, 1);
pub const IOPOL_VFS_IGNORE_PERMISSIONS_OFF = @as(c_int, 0);
pub const IOPOL_VFS_IGNORE_PERMISSIONS_ON = @as(c_int, 1);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_OFF = @as(c_int, 0);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_ON = @as(c_int, 1);
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF = @as(c_int, 0);
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON = @as(c_int, 1);
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_ON = @as(c_int, 1);
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_ON = @as(c_int, 1);
pub const WNOHANG = @as(c_int, 0x00000001);
pub const WUNTRACED = @as(c_int, 0x00000002);
pub inline fn _W_INT(w: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]c_int, &w).*) {
    _ = &w;
    return @import("std").zig.c_translation.cast([*c]c_int, &w).*;
}
pub const WCOREFLAG = @as(c_int, 0o200);
pub inline fn _WSTATUS(x: anytype) @TypeOf(_W_INT(x) & @as(c_int, 0o177)) {
    _ = &x;
    return _W_INT(x) & @as(c_int, 0o177);
}
pub const _WSTOPPED = @as(c_int, 0o177);
pub inline fn WEXITSTATUS(x: anytype) @TypeOf((_W_INT(x) >> @as(c_int, 8)) & @as(c_int, 0x000000ff)) {
    _ = &x;
    return (_W_INT(x) >> @as(c_int, 8)) & @as(c_int, 0x000000ff);
}
pub inline fn WSTOPSIG(x: anytype) @TypeOf(_W_INT(x) >> @as(c_int, 8)) {
    _ = &x;
    return _W_INT(x) >> @as(c_int, 8);
}
pub inline fn WIFCONTINUED(x: anytype) @TypeOf((_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) == @as(c_int, 0x13))) {
    _ = &x;
    return (_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) == @as(c_int, 0x13));
}
pub inline fn WIFSTOPPED(x: anytype) @TypeOf((_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) != @as(c_int, 0x13))) {
    _ = &x;
    return (_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) != @as(c_int, 0x13));
}
pub inline fn WIFEXITED(x: anytype) @TypeOf(_WSTATUS(x) == @as(c_int, 0)) {
    _ = &x;
    return _WSTATUS(x) == @as(c_int, 0);
}
pub inline fn WIFSIGNALED(x: anytype) @TypeOf((_WSTATUS(x) != _WSTOPPED) and (_WSTATUS(x) != @as(c_int, 0))) {
    _ = &x;
    return (_WSTATUS(x) != _WSTOPPED) and (_WSTATUS(x) != @as(c_int, 0));
}
pub inline fn WTERMSIG(x: anytype) @TypeOf(_WSTATUS(x)) {
    _ = &x;
    return _WSTATUS(x);
}
pub inline fn WCOREDUMP(x: anytype) @TypeOf(_W_INT(x) & WCOREFLAG) {
    _ = &x;
    return _W_INT(x) & WCOREFLAG;
}
pub inline fn W_EXITCODE(ret: anytype, sig: anytype) @TypeOf((ret << @as(c_int, 8)) | sig) {
    _ = &ret;
    _ = &sig;
    return (ret << @as(c_int, 8)) | sig;
}
pub inline fn W_STOPCODE(sig: anytype) @TypeOf((sig << @as(c_int, 8)) | _WSTOPPED) {
    _ = &sig;
    return (sig << @as(c_int, 8)) | _WSTOPPED;
}
pub const WEXITED = @as(c_int, 0x00000004);
pub const WSTOPPED = @as(c_int, 0x00000008);
pub const WCONTINUED = @as(c_int, 0x00000010);
pub const WNOWAIT = @as(c_int, 0x00000020);
pub const WAIT_ANY = -@as(c_int, 1);
pub const WAIT_MYPGRP = @as(c_int, 0);
pub const w_termsig = @compileError("unable to translate macro: undefined identifier `w_T`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:231:9
pub const w_coredump = @compileError("unable to translate macro: undefined identifier `w_T`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:232:9
pub const w_retcode = @compileError("unable to translate macro: undefined identifier `w_T`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:233:9
pub const w_stopval = @compileError("unable to translate macro: undefined identifier `w_S`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:234:9
pub const w_stopsig = @compileError("unable to translate macro: undefined identifier `w_S`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/sys/wait.h:235:9
pub const _ALLOCA_H_ = "";
pub const __alloca = @compileError("unable to translate macro: undefined identifier `__builtin_alloca`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/alloca.h:40:9
pub const _CT_RUNE_T = "";
pub const _RUNE_T = "";
pub const EXIT_FAILURE = @as(c_int, 1);
pub const EXIT_SUCCESS = @as(c_int, 0);
pub const RAND_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffffff, .hex);
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:119:9: warning: macro 'MB_CUR_MAX' contains a runtime value, translated to function
pub inline fn MB_CUR_MAX() @TypeOf(__mb_cur_max) {
    return __mb_cur_max;
}
pub const _MALLOC_UNDERSCORE_MALLOC_H_ = "";
pub const _MALLOC_UNDERSCORE_MALLOC_TYPE_H_ = "";
pub const _MALLOC_UNDERSCORE_PTRCHECK_H_ = "";
pub const _MALLOC_TYPE_AVAILABILITY = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/malloc/_malloc_type.h:51:9
pub const _MALLOC_TYPED = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/malloc/_malloc_type.h:91:9
pub const __bsearch_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:277:9
pub const __sort_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/stdlib.h:310:9
pub const __need_rsize_t = "";
pub const __STDARG_H = "";
pub const __need___va_list = "";
pub const __need_va_list = "";
pub const __need_va_arg = "";
pub const __need___va_copy = "";
pub const __need_va_copy = "";
pub const __GNUC_VA_LIST = "";
pub const _VA_LIST = "";
pub const va_start = @compileError("unable to translate macro: undefined identifier `__builtin_va_start`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/__stdarg_va_arg.h:17:9
pub const va_end = @compileError("unable to translate macro: undefined identifier `__builtin_va_end`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/__stdarg_va_arg.h:19:9
pub const va_arg = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/__stdarg_va_arg.h:20:9
pub const __va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/__stdarg___va_copy.h:11:9
pub const va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/__stdarg_va_copy.h:11:9
pub const _STRING_H_ = "";
pub const _STRINGS_H_ = "";
pub const _SECURE__STRINGS_H_ = "";
pub const _SECURE__STRING_H_ = "";
pub const __HAS_FIXED_CHK_PROTOTYPES = @as(c_int, 1);
pub const _WCHAR_H_ = "";
pub const _MBSTATE_T = "";
pub const _TIME_H_ = "";
pub const _STRUCT_TIMESPEC = struct_timespec;
pub const CLOCKS_PER_SEC = @import("std").zig.c_translation.cast(clock_t, @import("std").zig.c_translation.promoteIntLiteral(c_int, 1000000, .decimal));
pub const __CLOCK_AVAILABILITY = __OSX_AVAILABLE(@as(f64, 10.12)) ++ __IOS_AVAILABLE(@as(f64, 10.0)) ++ __TVOS_AVAILABLE(@as(f64, 10.0)) ++ __WATCHOS_AVAILABLE(@as(f64, 3.0));
pub const CLOCK_REALTIME = _CLOCK_REALTIME;
pub const CLOCK_MONOTONIC = _CLOCK_MONOTONIC;
pub const CLOCK_MONOTONIC_RAW = _CLOCK_MONOTONIC_RAW;
pub const CLOCK_MONOTONIC_RAW_APPROX = _CLOCK_MONOTONIC_RAW_APPROX;
pub const CLOCK_UPTIME_RAW = _CLOCK_UPTIME_RAW;
pub const CLOCK_UPTIME_RAW_APPROX = _CLOCK_UPTIME_RAW_APPROX;
pub const CLOCK_PROCESS_CPUTIME_ID = _CLOCK_PROCESS_CPUTIME_ID;
pub const CLOCK_THREAD_CPUTIME_ID = _CLOCK_THREAD_CPUTIME_ID;
pub const TIME_UTC = @as(c_int, 1);
pub const __WCTYPE_H_ = "";
pub const ___WCTYPE_H_ = "";
pub const _WINT_T = "";
pub const _WCTYPE_T = "";
pub const WEOF = __DARWIN_WEOF;
pub const __DARWIN_WCTYPE_TOP_inline = __header_inline;
pub const _CTYPE_H_ = "";
pub const __CTYPE_H_ = "";
pub const _RUNETYPE_H_ = "";
pub const _CACHED_RUNES = @as(c_int, 1) << @as(c_int, 8);
pub const _CRMASK = ~(_CACHED_RUNES - @as(c_int, 1));
pub const _RUNE_MAGIC_A = "RuneMagA";
pub const _CTYPE_A = @as(c_long, 0x00000100);
pub const _CTYPE_C = @as(c_long, 0x00000200);
pub const _CTYPE_D = @as(c_long, 0x00000400);
pub const _CTYPE_G = @as(c_long, 0x00000800);
pub const _CTYPE_L = @as(c_long, 0x00001000);
pub const _CTYPE_P = @as(c_long, 0x00002000);
pub const _CTYPE_S = @as(c_long, 0x00004000);
pub const _CTYPE_U = @as(c_long, 0x00008000);
pub const _CTYPE_X = @as(c_long, 0x00010000);
pub const _CTYPE_B = @as(c_long, 0x00020000);
pub const _CTYPE_R = @as(c_long, 0x00040000);
pub const _CTYPE_I = @as(c_long, 0x00080000);
pub const _CTYPE_T = @as(c_long, 0x00100000);
pub const _CTYPE_Q = @as(c_long, 0x00200000);
pub const _CTYPE_SW0 = @as(c_long, 0x20000000);
pub const _CTYPE_SW1 = @as(c_long, 0x40000000);
pub const _CTYPE_SW2 = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0x80000000, .hex);
pub const _CTYPE_SW3 = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0xc0000000, .hex);
pub const _CTYPE_SWM = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0xe0000000, .hex);
pub const _CTYPE_SWS = @as(c_int, 30);
pub const __DARWIN_CTYPE_inline = __header_inline;
pub const __DARWIN_CTYPE_TOP_inline = __header_inline;
pub inline fn _tolower(c: anytype) @TypeOf(__tolower(c)) {
    _ = &c;
    return __tolower(c);
}
pub inline fn _toupper(c: anytype) @TypeOf(__toupper(c)) {
    _ = &c;
    return __toupper(c);
}
pub const __CLANG_INTTYPES_H = "";
pub const _INTTYPES_H_ = "";
pub const __PRI_8_LENGTH_MODIFIER__ = "hh";
pub const __PRI_64_LENGTH_MODIFIER__ = "ll";
pub const __SCN_64_LENGTH_MODIFIER__ = "ll";
pub const __PRI_MAX_LENGTH_MODIFIER__ = "j";
pub const __SCN_MAX_LENGTH_MODIFIER__ = "j";
pub const PRId8 = __PRI_8_LENGTH_MODIFIER__ ++ "d";
pub const PRIi8 = __PRI_8_LENGTH_MODIFIER__ ++ "i";
pub const PRIo8 = __PRI_8_LENGTH_MODIFIER__ ++ "o";
pub const PRIu8 = __PRI_8_LENGTH_MODIFIER__ ++ "u";
pub const PRIx8 = __PRI_8_LENGTH_MODIFIER__ ++ "x";
pub const PRIX8 = __PRI_8_LENGTH_MODIFIER__ ++ "X";
pub const PRId16 = "hd";
pub const PRIi16 = "hi";
pub const PRIo16 = "ho";
pub const PRIu16 = "hu";
pub const PRIx16 = "hx";
pub const PRIX16 = "hX";
pub const PRId32 = "d";
pub const PRIi32 = "i";
pub const PRIo32 = "o";
pub const PRIu32 = "u";
pub const PRIx32 = "x";
pub const PRIX32 = "X";
pub const PRId64 = __PRI_64_LENGTH_MODIFIER__ ++ "d";
pub const PRIi64 = __PRI_64_LENGTH_MODIFIER__ ++ "i";
pub const PRIo64 = __PRI_64_LENGTH_MODIFIER__ ++ "o";
pub const PRIu64 = __PRI_64_LENGTH_MODIFIER__ ++ "u";
pub const PRIx64 = __PRI_64_LENGTH_MODIFIER__ ++ "x";
pub const PRIX64 = __PRI_64_LENGTH_MODIFIER__ ++ "X";
pub const PRIdLEAST8 = PRId8;
pub const PRIiLEAST8 = PRIi8;
pub const PRIoLEAST8 = PRIo8;
pub const PRIuLEAST8 = PRIu8;
pub const PRIxLEAST8 = PRIx8;
pub const PRIXLEAST8 = PRIX8;
pub const PRIdLEAST16 = PRId16;
pub const PRIiLEAST16 = PRIi16;
pub const PRIoLEAST16 = PRIo16;
pub const PRIuLEAST16 = PRIu16;
pub const PRIxLEAST16 = PRIx16;
pub const PRIXLEAST16 = PRIX16;
pub const PRIdLEAST32 = PRId32;
pub const PRIiLEAST32 = PRIi32;
pub const PRIoLEAST32 = PRIo32;
pub const PRIuLEAST32 = PRIu32;
pub const PRIxLEAST32 = PRIx32;
pub const PRIXLEAST32 = PRIX32;
pub const PRIdLEAST64 = PRId64;
pub const PRIiLEAST64 = PRIi64;
pub const PRIoLEAST64 = PRIo64;
pub const PRIuLEAST64 = PRIu64;
pub const PRIxLEAST64 = PRIx64;
pub const PRIXLEAST64 = PRIX64;
pub const PRIdFAST8 = PRId8;
pub const PRIiFAST8 = PRIi8;
pub const PRIoFAST8 = PRIo8;
pub const PRIuFAST8 = PRIu8;
pub const PRIxFAST8 = PRIx8;
pub const PRIXFAST8 = PRIX8;
pub const PRIdFAST16 = PRId16;
pub const PRIiFAST16 = PRIi16;
pub const PRIoFAST16 = PRIo16;
pub const PRIuFAST16 = PRIu16;
pub const PRIxFAST16 = PRIx16;
pub const PRIXFAST16 = PRIX16;
pub const PRIdFAST32 = PRId32;
pub const PRIiFAST32 = PRIi32;
pub const PRIoFAST32 = PRIo32;
pub const PRIuFAST32 = PRIu32;
pub const PRIxFAST32 = PRIx32;
pub const PRIXFAST32 = PRIX32;
pub const PRIdFAST64 = PRId64;
pub const PRIiFAST64 = PRIi64;
pub const PRIoFAST64 = PRIo64;
pub const PRIuFAST64 = PRIu64;
pub const PRIxFAST64 = PRIx64;
pub const PRIXFAST64 = PRIX64;
pub const PRIdPTR = "ld";
pub const PRIiPTR = "li";
pub const PRIoPTR = "lo";
pub const PRIuPTR = "lu";
pub const PRIxPTR = "lx";
pub const PRIXPTR = "lX";
pub const PRIdMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "d";
pub const PRIiMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "i";
pub const PRIoMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "o";
pub const PRIuMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "u";
pub const PRIxMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "x";
pub const PRIXMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "X";
pub const SCNd8 = __PRI_8_LENGTH_MODIFIER__ ++ "d";
pub const SCNi8 = __PRI_8_LENGTH_MODIFIER__ ++ "i";
pub const SCNo8 = __PRI_8_LENGTH_MODIFIER__ ++ "o";
pub const SCNu8 = __PRI_8_LENGTH_MODIFIER__ ++ "u";
pub const SCNx8 = __PRI_8_LENGTH_MODIFIER__ ++ "x";
pub const SCNd16 = "hd";
pub const SCNi16 = "hi";
pub const SCNo16 = "ho";
pub const SCNu16 = "hu";
pub const SCNx16 = "hx";
pub const SCNd32 = "d";
pub const SCNi32 = "i";
pub const SCNo32 = "o";
pub const SCNu32 = "u";
pub const SCNx32 = "x";
pub const SCNd64 = __SCN_64_LENGTH_MODIFIER__ ++ "d";
pub const SCNi64 = __SCN_64_LENGTH_MODIFIER__ ++ "i";
pub const SCNo64 = __SCN_64_LENGTH_MODIFIER__ ++ "o";
pub const SCNu64 = __SCN_64_LENGTH_MODIFIER__ ++ "u";
pub const SCNx64 = __SCN_64_LENGTH_MODIFIER__ ++ "x";
pub const SCNdLEAST8 = SCNd8;
pub const SCNiLEAST8 = SCNi8;
pub const SCNoLEAST8 = SCNo8;
pub const SCNuLEAST8 = SCNu8;
pub const SCNxLEAST8 = SCNx8;
pub const SCNdLEAST16 = SCNd16;
pub const SCNiLEAST16 = SCNi16;
pub const SCNoLEAST16 = SCNo16;
pub const SCNuLEAST16 = SCNu16;
pub const SCNxLEAST16 = SCNx16;
pub const SCNdLEAST32 = SCNd32;
pub const SCNiLEAST32 = SCNi32;
pub const SCNoLEAST32 = SCNo32;
pub const SCNuLEAST32 = SCNu32;
pub const SCNxLEAST32 = SCNx32;
pub const SCNdLEAST64 = SCNd64;
pub const SCNiLEAST64 = SCNi64;
pub const SCNoLEAST64 = SCNo64;
pub const SCNuLEAST64 = SCNu64;
pub const SCNxLEAST64 = SCNx64;
pub const SCNdFAST8 = SCNd8;
pub const SCNiFAST8 = SCNi8;
pub const SCNoFAST8 = SCNo8;
pub const SCNuFAST8 = SCNu8;
pub const SCNxFAST8 = SCNx8;
pub const SCNdFAST16 = SCNd16;
pub const SCNiFAST16 = SCNi16;
pub const SCNoFAST16 = SCNo16;
pub const SCNuFAST16 = SCNu16;
pub const SCNxFAST16 = SCNx16;
pub const SCNdFAST32 = SCNd32;
pub const SCNiFAST32 = SCNi32;
pub const SCNoFAST32 = SCNo32;
pub const SCNuFAST32 = SCNu32;
pub const SCNxFAST32 = SCNx32;
pub const SCNdFAST64 = SCNd64;
pub const SCNiFAST64 = SCNi64;
pub const SCNoFAST64 = SCNo64;
pub const SCNuFAST64 = SCNu64;
pub const SCNxFAST64 = SCNx64;
pub const SCNdPTR = "ld";
pub const SCNiPTR = "li";
pub const SCNoPTR = "lo";
pub const SCNuPTR = "lu";
pub const SCNxPTR = "lx";
pub const SCNdMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "d";
pub const SCNiMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "i";
pub const SCNoMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "o";
pub const SCNuMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "u";
pub const SCNxMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "x";
pub const __MATH_H__ = "";
pub const __MATH__ = "";
pub const HUGE_VAL = @compileError("unable to translate macro: undefined identifier `__builtin_huge_val`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:58:15
pub const HUGE_VALF = __builtin_huge_valf();
pub const HUGE_VALL = @compileError("unable to translate macro: undefined identifier `__builtin_huge_vall`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:60:15
pub const NAN = __builtin_nanf("0x7fc00000");
pub const INFINITY = HUGE_VALF;
pub const FP_NAN = @as(c_int, 1);
pub const FP_INFINITE = @as(c_int, 2);
pub const FP_ZERO = @as(c_int, 3);
pub const FP_NORMAL = @as(c_int, 4);
pub const FP_SUBNORMAL = @as(c_int, 5);
pub const FP_SUPERNORMAL = @as(c_int, 6);
pub const FP_FAST_FMA = @as(c_int, 1);
pub const FP_FAST_FMAF = @as(c_int, 1);
pub const FP_FAST_FMAL = @as(c_int, 1);
pub const FP_ILOGB0 = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const FP_ILOGBNAN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const MATH_ERRNO = @as(c_int, 1);
pub const MATH_ERREXCEPT = @as(c_int, 2);
pub const math_errhandling = __math_errhandling();
pub const fpclassify = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:127:9
pub const isnormal = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:150:9
pub const isfinite = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:155:9
pub const isinf = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:160:9
pub const isnan = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:165:9
pub const signbit = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:170:9
pub const isgreater = @compileError("unable to translate macro: undefined identifier `__builtin_isgreater`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:544:9
pub const isgreaterequal = @compileError("unable to translate macro: undefined identifier `__builtin_isgreaterequal`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:545:9
pub const isless = @compileError("unable to translate macro: undefined identifier `__builtin_isless`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:546:9
pub const islessequal = @compileError("unable to translate macro: undefined identifier `__builtin_islessequal`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:547:9
pub const islessgreater = @compileError("unable to translate macro: undefined identifier `__builtin_islessgreater`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:548:9
pub const isunordered = @compileError("unable to translate macro: undefined identifier `__builtin_isunordered`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/math.h:549:9
pub const M_E = @as(f64, 2.71828182845904523536028747135266250);
pub const M_LOG2E = @as(f64, 1.44269504088896340735992468100189214);
pub const M_LOG10E = @as(f64, 0.434294481903251827651128918916605082);
pub const M_LN2 = @as(f64, 0.693147180559945309417232121458176568);
pub const M_LN10 = @as(f64, 2.30258509299404568401799145468436421);
pub const M_PI = @as(f64, 3.14159265358979323846264338327950288);
pub const M_PI_2 = @as(f64, 1.57079632679489661923132169163975144);
pub const M_PI_4 = @as(f64, 0.785398163397448309615660845819875721);
pub const M_1_PI = @as(f64, 0.318309886183790671537767526745028724);
pub const M_2_PI = @as(f64, 0.636619772367581343075535053490057448);
pub const M_2_SQRTPI = @as(f64, 1.12837916709551257389615890312154517);
pub const M_SQRT2 = @as(f64, 1.41421356237309504880168872420969808);
pub const M_SQRT1_2 = @as(f64, 0.707106781186547524400844362104849039);
pub const MAXFLOAT = @as(f32, 0x1.fffffep+127);
pub const FP_SNAN = FP_NAN;
pub const FP_QNAN = FP_NAN;
pub const HUGE = MAXFLOAT;
pub const X_TLOSS = @as(f64, 1.41484755040568800000e+16);
pub const DOMAIN = @as(c_int, 1);
pub const SING = @as(c_int, 2);
pub const OVERFLOW = @as(c_int, 3);
pub const UNDERFLOW = @as(c_int, 4);
pub const TLOSS = @as(c_int, 5);
pub const PLOSS = @as(c_int, 6);
pub const __CLANG_FLOAT_H = "";
pub const _FLOAT_H_ = "";
pub const __FLOAT_H = "";
pub const FLT_EVAL_METHOD = @compileError("unable to translate macro: undefined identifier `__FLT_EVAL_METHOD__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/float.h:75:9
pub const FLT_ROUNDS = @compileError("unable to translate macro: undefined identifier `__builtin_flt_rounds`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/float.h:76:9
pub const FLT_RADIX = __FLT_RADIX__;
pub const FLT_MANT_DIG = __FLT_MANT_DIG__;
pub const DBL_MANT_DIG = __DBL_MANT_DIG__;
pub const LDBL_MANT_DIG = __LDBL_MANT_DIG__;
pub const FLT_DIG = __FLT_DIG__;
pub const DBL_DIG = __DBL_DIG__;
pub const LDBL_DIG = __LDBL_DIG__;
pub const FLT_MIN_EXP = __FLT_MIN_EXP__;
pub const DBL_MIN_EXP = __DBL_MIN_EXP__;
pub const LDBL_MIN_EXP = __LDBL_MIN_EXP__;
pub const FLT_MIN_10_EXP = __FLT_MIN_10_EXP__;
pub const DBL_MIN_10_EXP = __DBL_MIN_10_EXP__;
pub const LDBL_MIN_10_EXP = __LDBL_MIN_10_EXP__;
pub const FLT_MAX_EXP = __FLT_MAX_EXP__;
pub const DBL_MAX_EXP = __DBL_MAX_EXP__;
pub const LDBL_MAX_EXP = __LDBL_MAX_EXP__;
pub const FLT_MAX_10_EXP = __FLT_MAX_10_EXP__;
pub const DBL_MAX_10_EXP = __DBL_MAX_10_EXP__;
pub const LDBL_MAX_10_EXP = __LDBL_MAX_10_EXP__;
pub const FLT_MAX = __FLT_MAX__;
pub const DBL_MAX = __DBL_MAX__;
pub const LDBL_MAX = __LDBL_MAX__;
pub const FLT_EPSILON = __FLT_EPSILON__;
pub const DBL_EPSILON = __DBL_EPSILON__;
pub const LDBL_EPSILON = __LDBL_EPSILON__;
pub const FLT_MIN = __FLT_MIN__;
pub const DBL_MIN = __DBL_MIN__;
pub const LDBL_MIN = __LDBL_MIN__;
pub const DECIMAL_DIG = __DECIMAL_DIG__;
pub const FLT_HAS_SUBNORM = @as(c_int, 1);
pub const DBL_HAS_SUBNORM = @as(c_int, 1);
pub const LDBL_HAS_SUBNORM = @as(c_int, 1);
pub const FLT_TRUE_MIN = __FLT_DENORM_MIN__;
pub const DBL_TRUE_MIN = __DBL_DENORM_MIN__;
pub const LDBL_TRUE_MIN = __LDBL_DENORM_MIN__;
pub const FLT_DECIMAL_DIG = __FLT_DECIMAL_DIG__;
pub const DBL_DECIMAL_DIG = __DBL_DECIMAL_DIG__;
pub const LDBL_DECIMAL_DIG = __LDBL_DECIMAL_DIG__;
pub const SDL_SIZE_MAX = SIZE_MAX;
pub inline fn _SDL_HAS_BUILTIN(x: anytype) @TypeOf(__has_builtin(x)) {
    _ = &x;
    return __has_builtin(x);
}
pub const SDL_arraysize = @compileError("unable to translate C expr: expected ')' instead got '['");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:138:9
pub inline fn SDL_TABLESIZE(table: anytype) @TypeOf(SDL_arraysize(table)) {
    _ = &table;
    return SDL_arraysize(table);
}
pub const SDL_STRINGIFY_ARG = @compileError("unable to translate C expr: unexpected token '#'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:146:9
pub const SDL_reinterpret_cast = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub const SDL_static_cast = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub const SDL_const_cast = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn SDL_FOURCC(A: anytype, B: anytype, C: anytype, D: anytype) @TypeOf((((SDL_static_cast(Uint32, SDL_static_cast(Uint8, A)) << @as(c_int, 0)) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, B)) << @as(c_int, 8))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, C)) << @as(c_int, 16))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, D)) << @as(c_int, 24))) {
    _ = &A;
    _ = &B;
    _ = &C;
    _ = &D;
    return (((SDL_static_cast(Uint32, SDL_static_cast(Uint8, A)) << @as(c_int, 0)) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, B)) << @as(c_int, 8))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, C)) << @as(c_int, 16))) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, D)) << @as(c_int, 24));
}
pub const SDL_MAX_SINT8 = @import("std").zig.c_translation.cast(Sint8, @as(c_int, 0x7F));
pub const SDL_MIN_SINT8 = @import("std").zig.c_translation.cast(Sint8, ~@as(c_int, 0x7F));
pub const SDL_MAX_UINT8 = @import("std").zig.c_translation.cast(Uint8, @as(c_int, 0xFF));
pub const SDL_MIN_UINT8 = @import("std").zig.c_translation.cast(Uint8, @as(c_int, 0x00));
pub const SDL_MAX_SINT16 = @import("std").zig.c_translation.cast(Sint16, @as(c_int, 0x7FFF));
pub const SDL_MIN_SINT16 = @import("std").zig.c_translation.cast(Sint16, ~@as(c_int, 0x7FFF));
pub const SDL_MAX_UINT16 = @import("std").zig.c_translation.cast(Uint16, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF, .hex));
pub const SDL_MIN_UINT16 = @import("std").zig.c_translation.cast(Uint16, @as(c_int, 0x0000));
pub const SDL_MAX_SINT32 = @import("std").zig.c_translation.cast(Sint32, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7FFFFFFF, .hex));
pub const SDL_MIN_SINT32 = @import("std").zig.c_translation.cast(Sint32, ~@import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7FFFFFFF, .hex));
pub const SDL_MAX_UINT32 = @import("std").zig.c_translation.cast(Uint32, @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xFFFFFFFF, .hex));
pub const SDL_MIN_UINT32 = @import("std").zig.c_translation.cast(Uint32, @as(c_int, 0x00000000));
pub const SDL_MAX_SINT64 = @import("std").zig.c_translation.cast(Sint64, @as(c_longlong, 0x7FFFFFFFFFFFFFFF));
pub const SDL_MIN_SINT64 = @import("std").zig.c_translation.cast(Sint64, ~@as(c_longlong, 0x7FFFFFFFFFFFFFFF));
pub const SDL_MAX_UINT64 = @import("std").zig.c_translation.cast(Uint64, @as(c_ulonglong, 0xFFFFFFFFFFFFFFFF));
pub const SDL_MIN_UINT64 = @import("std").zig.c_translation.cast(Uint64, @as(c_ulonglong, 0x0000000000000000));
pub const SDL_FLT_EPSILON = FLT_EPSILON;
pub const SDL_PRIs64 = "lld";
pub const SDL_PRIu64 = PRIu64;
pub const SDL_PRIx64 = PRIx64;
pub const SDL_PRIX64 = PRIX64;
pub const SDL_PRIs32 = PRId32;
pub const SDL_PRIu32 = PRIu32;
pub const SDL_PRIx32 = PRIx32;
pub const SDL_PRIX32 = PRIX32;
pub const SDL_IN_BYTECAP = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:358:9
pub const SDL_INOUT_Z_CAP = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:359:9
pub const SDL_OUT_Z_CAP = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:360:9
pub const SDL_OUT_CAP = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:361:9
pub const SDL_OUT_BYTECAP = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:362:9
pub const SDL_OUT_Z_BYTECAP = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:363:9
pub const SDL_PRINTF_FORMAT_STRING = "";
pub const SDL_SCANF_FORMAT_STRING = "";
pub const SDL_PRINTF_VARARG_FUNC = @compileError("unable to translate macro: undefined identifier `format`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:368:9
pub const SDL_SCANF_VARARG_FUNC = @compileError("unable to translate macro: undefined identifier `format`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:369:9
pub const SDL_COMPILE_TIME_ASSERT = @compileError("unable to translate C expr: unexpected token '_Static_assert'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:382:9
pub const SDL_stack_alloc = @compileError("unable to translate C expr: unexpected token ')'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:432:9
pub const SDL_stack_free = @compileError("unable to translate C expr: unexpected token ''");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:433:9
pub inline fn SDL_min(x: anytype, y: anytype) @TypeOf(if (x < y) x else y) {
    _ = &x;
    _ = &y;
    return if (x < y) x else y;
}
pub inline fn SDL_max(x: anytype, y: anytype) @TypeOf(if (x > y) x else y) {
    _ = &x;
    _ = &y;
    return if (x > y) x else y;
}
pub inline fn SDL_clamp(x: anytype, a: anytype, b: anytype) @TypeOf(if (x < a) a else if (x > b) b else x) {
    _ = &x;
    _ = &a;
    _ = &b;
    return if (x < a) a else if (x > b) b else x;
}
pub const SDL_zero = @compileError("unable to translate C expr: unexpected token '('");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:519:9
pub const SDL_zerop = @compileError("unable to translate C expr: unexpected token '*'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:520:9
pub const SDL_zeroa = @compileError("unable to translate C expr: unexpected token '('");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:521:9
pub const SDL_copyp = @compileError("unable to translate C expr: unexpected token '{'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_stdinc.h:523:9
pub const SDL_ICONV_ERROR = @import("std").zig.c_translation.cast(usize, -@as(c_int, 1));
pub const SDL_ICONV_E2BIG = @import("std").zig.c_translation.cast(usize, -@as(c_int, 2));
pub const SDL_ICONV_EILSEQ = @import("std").zig.c_translation.cast(usize, -@as(c_int, 3));
pub const SDL_ICONV_EINVAL = @import("std").zig.c_translation.cast(usize, -@as(c_int, 4));
pub inline fn SDL_iconv_utf8_locale(S: anytype) @TypeOf(SDL_iconv_string("", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1))) {
    _ = &S;
    return SDL_iconv_string("", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1));
}
pub inline fn SDL_iconv_utf8_ucs2(S: anytype) [*c]Uint16 {
    _ = &S;
    return @import("std").zig.c_translation.cast([*c]Uint16, SDL_iconv_string("UCS-2-INTERNAL", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1)));
}
pub inline fn SDL_iconv_utf8_ucs4(S: anytype) [*c]Uint32 {
    _ = &S;
    return @import("std").zig.c_translation.cast([*c]Uint32, SDL_iconv_string("UCS-4-INTERNAL", "UTF-8", S, SDL_strlen(S) + @as(c_int, 1)));
}
pub inline fn SDL_iconv_wchar_utf8(S: anytype) @TypeOf(SDL_iconv_string("UTF-8", "WCHAR_T", @import("std").zig.c_translation.cast([*c]u8, S), (SDL_wcslen(S) + @as(c_int, 1)) * @import("std").zig.c_translation.sizeof(wchar_t))) {
    _ = &S;
    return SDL_iconv_string("UTF-8", "WCHAR_T", @import("std").zig.c_translation.cast([*c]u8, S), (SDL_wcslen(S) + @as(c_int, 1)) * @import("std").zig.c_translation.sizeof(wchar_t));
}
pub const SDLMAIN_DECLSPEC = "";
pub const SDL_assert_h_ = "";
pub const SDL_ASSERT_LEVEL = @as(c_int, 2);
pub const SDL_TriggerBreakpoint = @compileError("unable to translate macro: undefined identifier `__builtin_debugtrap`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_assert.h:55:13
pub const SDL_FUNCTION = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_assert.h:73:12
pub const SDL_FILE = @compileError("unable to translate macro: undefined identifier `__FILE__`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_assert.h:79:9
pub const SDL_LINE = @compileError("unable to translate macro: undefined identifier `__LINE__`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_assert.h:80:9
pub const SDL_NULL_WHILE_LOOP_CONDITION = @as(c_int, 0);
pub const SDL_disabled_assert = @compileError("unable to translate C expr: unexpected token 'do'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_assert.h:105:9
pub const SDL_enabled_assert = @compileError("unable to translate macro: undefined identifier `sdl_assert_data`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_assert.h:151:9
pub inline fn SDL_assert(condition: anytype) @TypeOf(SDL_enabled_assert(condition)) {
    _ = &condition;
    return SDL_enabled_assert(condition);
}
pub inline fn SDL_assert_release(condition: anytype) @TypeOf(SDL_enabled_assert(condition)) {
    _ = &condition;
    return SDL_enabled_assert(condition);
}
pub inline fn SDL_assert_paranoid(condition: anytype) @TypeOf(SDL_disabled_assert(condition)) {
    _ = &condition;
    return SDL_disabled_assert(condition);
}
pub inline fn SDL_assert_always(condition: anytype) @TypeOf(SDL_enabled_assert(condition)) {
    _ = &condition;
    return SDL_enabled_assert(condition);
}
pub const SDL_assert_state = SDL_AssertState;
pub const SDL_assert_data = SDL_AssertData;
pub const SDL_atomic_h_ = "";
pub const SDL_CompilerBarrier = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_atomic.h:153:9
pub const SDL_MemoryBarrierRelease = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_atomic.h:190:9
pub const SDL_MemoryBarrierAcquire = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_atomic.h:191:9
pub const SDL_CPUPauseInstruction = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_atomic.h:244:13
pub inline fn SDL_AtomicIncRef(a: anytype) @TypeOf(SDL_AtomicAdd(a, @as(c_int, 1))) {
    _ = &a;
    return SDL_AtomicAdd(a, @as(c_int, 1));
}
pub inline fn SDL_AtomicDecRef(a: anytype) @TypeOf(SDL_AtomicAdd(a, -@as(c_int, 1)) == @as(c_int, 1)) {
    _ = &a;
    return SDL_AtomicAdd(a, -@as(c_int, 1)) == @as(c_int, 1);
}
pub const SDL_audio_h_ = "";
pub const SDL_error_h_ = "";
pub inline fn SDL_OutOfMemory() @TypeOf(SDL_Error(SDL_ENOMEM)) {
    return SDL_Error(SDL_ENOMEM);
}
pub inline fn SDL_Unsupported() @TypeOf(SDL_Error(SDL_UNSUPPORTED)) {
    return SDL_Error(SDL_UNSUPPORTED);
}
pub inline fn SDL_InvalidParamError(param: anytype) @TypeOf(SDL_SetError("Parameter '%s' is invalid", param)) {
    _ = &param;
    return SDL_SetError("Parameter '%s' is invalid", param);
}
pub const SDL_endian_h_ = "";
pub const SDL_LIL_ENDIAN = @as(c_int, 1234);
pub const SDL_BIG_ENDIAN = @as(c_int, 4321);
pub const SDL_BYTEORDER = SDL_LIL_ENDIAN;
pub const SDL_FLOATWORDORDER = SDL_BYTEORDER;
pub const HAS_BUILTIN_BSWAP16 = (_SDL_HAS_BUILTIN(__builtin_bswap16) != 0) or ((__GNUC__ > @as(c_int, 4)) or ((__GNUC__ == @as(c_int, 4)) and (__GNUC_MINOR__ >= @as(c_int, 8))));
pub const HAS_BUILTIN_BSWAP32 = (_SDL_HAS_BUILTIN(__builtin_bswap32) != 0) or ((__GNUC__ > @as(c_int, 4)) or ((__GNUC__ == @as(c_int, 4)) and (__GNUC_MINOR__ >= @as(c_int, 3))));
pub const HAS_BUILTIN_BSWAP64 = (_SDL_HAS_BUILTIN(__builtin_bswap64) != 0) or ((__GNUC__ > @as(c_int, 4)) or ((__GNUC__ == @as(c_int, 4)) and (__GNUC_MINOR__ >= @as(c_int, 3))));
pub const HAS_BROKEN_BSWAP = (__GNUC__ == @as(c_int, 2)) and (__GNUC_MINOR__ <= @as(c_int, 95));
pub inline fn SDL_Swap16(x: anytype) @TypeOf(__builtin_bswap16(x)) {
    _ = &x;
    return __builtin_bswap16(x);
}
pub inline fn SDL_Swap32(x: anytype) @TypeOf(__builtin_bswap32(x)) {
    _ = &x;
    return __builtin_bswap32(x);
}
pub inline fn SDL_Swap64(x: anytype) @TypeOf(__builtin_bswap64(x)) {
    _ = &x;
    return __builtin_bswap64(x);
}
pub inline fn SDL_SwapLE16(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapLE32(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapLE64(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapFloatLE(X: anytype) @TypeOf(X) {
    _ = &X;
    return X;
}
pub inline fn SDL_SwapBE16(X: anytype) @TypeOf(SDL_Swap16(X)) {
    _ = &X;
    return SDL_Swap16(X);
}
pub inline fn SDL_SwapBE32(X: anytype) @TypeOf(SDL_Swap32(X)) {
    _ = &X;
    return SDL_Swap32(X);
}
pub inline fn SDL_SwapBE64(X: anytype) @TypeOf(SDL_Swap64(X)) {
    _ = &X;
    return SDL_Swap64(X);
}
pub inline fn SDL_SwapFloatBE(X: anytype) @TypeOf(SDL_SwapFloat(X)) {
    _ = &X;
    return SDL_SwapFloat(X);
}
pub const SDL_mutex_h_ = "";
pub const SDL_MUTEX_TIMEDOUT = @as(c_int, 1);
pub const SDL_MUTEX_MAXWAIT = ~@import("std").zig.c_translation.cast(Uint32, @as(c_int, 0));
pub inline fn SDL_mutexP(m: anytype) @TypeOf(SDL_LockMutex(m)) {
    _ = &m;
    return SDL_LockMutex(m);
}
pub inline fn SDL_mutexV(m: anytype) @TypeOf(SDL_UnlockMutex(m)) {
    _ = &m;
    return SDL_UnlockMutex(m);
}
pub const SDL_thread_h_ = "";
pub const SDL_rwops_h_ = "";
pub const SDL_RWOPS_UNKNOWN = @as(c_uint, 0);
pub const SDL_RWOPS_WINFILE = @as(c_uint, 1);
pub const SDL_RWOPS_STDFILE = @as(c_uint, 2);
pub const SDL_RWOPS_JNIFILE = @as(c_uint, 3);
pub const SDL_RWOPS_MEMORY = @as(c_uint, 4);
pub const SDL_RWOPS_MEMORY_RO = @as(c_uint, 5);
pub const RW_SEEK_SET = @as(c_int, 0);
pub const RW_SEEK_CUR = @as(c_int, 1);
pub const RW_SEEK_END = @as(c_int, 2);
pub const SDL_AUDIO_MASK_BITSIZE = @as(c_int, 0xFF);
pub const SDL_AUDIO_MASK_DATATYPE = @as(c_int, 1) << @as(c_int, 8);
pub const SDL_AUDIO_MASK_ENDIAN = @as(c_int, 1) << @as(c_int, 12);
pub const SDL_AUDIO_MASK_SIGNED = @as(c_int, 1) << @as(c_int, 15);
pub inline fn SDL_AUDIO_BITSIZE(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_BITSIZE) {
    _ = &x;
    return x & SDL_AUDIO_MASK_BITSIZE;
}
pub inline fn SDL_AUDIO_ISFLOAT(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_DATATYPE) {
    _ = &x;
    return x & SDL_AUDIO_MASK_DATATYPE;
}
pub inline fn SDL_AUDIO_ISBIGENDIAN(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_ENDIAN) {
    _ = &x;
    return x & SDL_AUDIO_MASK_ENDIAN;
}
pub inline fn SDL_AUDIO_ISSIGNED(x: anytype) @TypeOf(x & SDL_AUDIO_MASK_SIGNED) {
    _ = &x;
    return x & SDL_AUDIO_MASK_SIGNED;
}
pub inline fn SDL_AUDIO_ISINT(x: anytype) @TypeOf(!(SDL_AUDIO_ISFLOAT(x) != 0)) {
    _ = &x;
    return !(SDL_AUDIO_ISFLOAT(x) != 0);
}
pub inline fn SDL_AUDIO_ISLITTLEENDIAN(x: anytype) @TypeOf(!(SDL_AUDIO_ISBIGENDIAN(x) != 0)) {
    _ = &x;
    return !(SDL_AUDIO_ISBIGENDIAN(x) != 0);
}
pub inline fn SDL_AUDIO_ISUNSIGNED(x: anytype) @TypeOf(!(SDL_AUDIO_ISSIGNED(x) != 0)) {
    _ = &x;
    return !(SDL_AUDIO_ISSIGNED(x) != 0);
}
pub const AUDIO_U8 = @as(c_int, 0x0008);
pub const AUDIO_S8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8008, .hex);
pub const AUDIO_U16LSB = @as(c_int, 0x0010);
pub const AUDIO_S16LSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8010, .hex);
pub const AUDIO_U16MSB = @as(c_int, 0x1010);
pub const AUDIO_S16MSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9010, .hex);
pub const AUDIO_U16 = AUDIO_U16LSB;
pub const AUDIO_S16 = AUDIO_S16LSB;
pub const AUDIO_S32LSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8020, .hex);
pub const AUDIO_S32MSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9020, .hex);
pub const AUDIO_S32 = AUDIO_S32LSB;
pub const AUDIO_F32LSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8120, .hex);
pub const AUDIO_F32MSB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x9120, .hex);
pub const AUDIO_F32 = AUDIO_F32LSB;
pub const AUDIO_U16SYS = AUDIO_U16LSB;
pub const AUDIO_S16SYS = AUDIO_S16LSB;
pub const AUDIO_S32SYS = AUDIO_S32LSB;
pub const AUDIO_F32SYS = AUDIO_F32LSB;
pub const SDL_AUDIO_ALLOW_FREQUENCY_CHANGE = @as(c_int, 0x00000001);
pub const SDL_AUDIO_ALLOW_FORMAT_CHANGE = @as(c_int, 0x00000002);
pub const SDL_AUDIO_ALLOW_CHANNELS_CHANGE = @as(c_int, 0x00000004);
pub const SDL_AUDIO_ALLOW_SAMPLES_CHANGE = @as(c_int, 0x00000008);
pub const SDL_AUDIO_ALLOW_ANY_CHANGE = ((SDL_AUDIO_ALLOW_FREQUENCY_CHANGE | SDL_AUDIO_ALLOW_FORMAT_CHANGE) | SDL_AUDIO_ALLOW_CHANNELS_CHANGE) | SDL_AUDIO_ALLOW_SAMPLES_CHANGE;
pub const SDL_AUDIOCVT_MAX_FILTERS = @as(c_int, 9);
pub const SDL_AUDIOCVT_PACKED = @compileError("unable to translate macro: undefined identifier `packed`");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_audio.h:226:9
pub inline fn SDL_LoadWAV(file: anytype, spec: anytype, audio_buf: anytype, audio_len: anytype) @TypeOf(SDL_LoadWAV_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1), spec, audio_buf, audio_len)) {
    _ = &file;
    _ = &spec;
    _ = &audio_buf;
    _ = &audio_len;
    return SDL_LoadWAV_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1), spec, audio_buf, audio_len);
}
pub const SDL_MIX_MAXVOLUME = @as(c_int, 128);
pub const SDL_clipboard_h_ = "";
pub const SDL_cpuinfo_h_ = "";
pub const __ARM_NEON_H = "";
pub const __ARM_BF16_H = "";
pub const __ai = @compileError("unable to translate macro: undefined identifier `__always_inline__`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_bf16.h:15:9
pub const __ARM_NEON_TYPES_H = "";
pub const splat_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:131:9
pub const splat_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:154:9
pub const splat_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:161:9
pub const splatq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:185:9
pub const splatq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:209:9
pub const splatq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:232:9
pub const splatq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:256:9
pub const splatq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:280:9
pub const splatq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:304:9
pub const splatq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:327:9
pub const splatq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:351:9
pub const splatq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:375:9
pub const splatq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:398:9
pub const splatq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:422:9
pub const splatq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:446:9
pub const splatq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:470:9
pub const splatq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:493:9
pub const splat_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:517:9
pub const splat_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:541:9
pub const splat_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:564:9
pub const splat_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:571:9
pub const splat_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:595:9
pub const splat_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:618:9
pub const splat_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:625:9
pub const splat_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:649:9
pub const splat_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:673:9
pub const splat_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:696:9
pub const splat_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:703:9
pub const splat_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:727:9
pub const splat_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:751:9
pub const splat_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:774:9
pub const splatq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:798:9
pub const splatq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:822:9
pub const splatq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:846:9
pub const splatq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:870:9
pub const splatq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:894:9
pub const splatq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:918:9
pub const splatq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:942:9
pub const splatq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:966:9
pub const splatq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:990:9
pub const splatq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1014:9
pub const splatq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1038:9
pub const splatq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1062:9
pub const splatq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1086:9
pub const splatq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1110:9
pub const splat_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1134:9
pub const splat_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1158:9
pub const splat_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1182:9
pub const splat_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1205:9
pub const splat_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1229:9
pub const splat_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1253:9
pub const splat_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1276:9
pub const splat_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1300:9
pub const splat_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1324:9
pub const splat_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1348:9
pub const splat_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:1371:9
pub const vcreate_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5270:9
pub const vcreate_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5276:9
pub const vcreate_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5282:9
pub const vcreate_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5288:9
pub const vcreate_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5294:9
pub const vcreate_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5300:9
pub const vcreate_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5306:9
pub const vcreate_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5312:9
pub const vcreate_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5318:9
pub const vcreate_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5324:9
pub const vcreate_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5330:9
pub const vcreate_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5336:9
pub const vcvtq_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5407:9
pub const vcvtq_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5425:9
pub const vcvt_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5443:9
pub const vcvt_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5461:9
pub const vcvtq_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5479:9
pub const vcvt_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5497:9
pub const vcvtq_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5515:9
pub const vcvt_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5533:9
pub const vdup_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_0`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5615:9
pub const vdup_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_2`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5633:9
pub const vdupq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_4`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5651:9
pub const vdupq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_6`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5669:9
pub const vdupq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_8`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5687:9
pub const vdupq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_10`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5705:9
pub const vdupq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_12`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5723:9
pub const vdupq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_14`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5740:9
pub const vdupq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_16`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5758:9
pub const vdupq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_18`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5776:9
pub const vdupq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_20`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5794:9
pub const vdupq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_22`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5812:9
pub const vdupq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_24`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5830:9
pub const vdupq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_26`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5847:9
pub const vdup_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_28`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5865:9
pub const vdup_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_30`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5883:9
pub const vdup_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_32`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5900:9
pub const vdup_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_33`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5907:9
pub const vdup_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_35`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5925:9
pub const vdup_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_37`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5943:9
pub const vdup_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_39`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5961:9
pub const vdup_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_41`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5979:9
pub const vdup_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_43`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:5996:9
pub const vdup_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_44`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6003:9
pub const vdupq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6171:9
pub const vdup_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6313:9
pub const vext_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6613:9
pub const vext_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6634:9
pub const vextq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6655:9
pub const vextq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6676:9
pub const vextq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6697:9
pub const vextq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6718:9
pub const vextq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6739:9
pub const vextq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6760:9
pub const vextq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6781:9
pub const vextq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6802:9
pub const vextq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6823:9
pub const vextq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6844:9
pub const vextq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6865:9
pub const vext_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6886:9
pub const vext_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6907:9
pub const vext_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6927:9
pub const vext_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6935:9
pub const vext_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6956:9
pub const vext_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6977:9
pub const vext_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:6998:9
pub const vext_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7018:9
pub const vext_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7026:9
pub const vget_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7282:9
pub const vget_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7305:9
pub const vgetq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7328:9
pub const vgetq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7351:9
pub const vgetq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7374:9
pub const vgetq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7397:9
pub const vgetq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7420:9
pub const vgetq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7443:9
pub const vgetq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7466:9
pub const vgetq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7489:9
pub const vgetq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7512:9
pub const vgetq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7535:9
pub const vgetq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7558:9
pub const vget_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7581:9
pub const vget_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7604:9
pub const vget_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7626:9
pub const vget_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7633:9
pub const vget_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7656:9
pub const vget_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7679:9
pub const vget_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7702:9
pub const vget_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7724:9
pub const vget_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:7731:9
pub const vld1_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8352:9
pub const vld1_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8367:9
pub const vld1q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8382:9
pub const vld1q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8397:9
pub const vld1q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8412:9
pub const vld1q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8427:9
pub const vld1q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8442:9
pub const vld1q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8457:9
pub const vld1q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8472:9
pub const vld1q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8487:9
pub const vld1q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8502:9
pub const vld1q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8517:9
pub const vld1q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8532:9
pub const vld1_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8547:9
pub const vld1_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8562:9
pub const vld1_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8576:9
pub const vld1_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8582:9
pub const vld1_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8597:9
pub const vld1_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8612:9
pub const vld1_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8627:9
pub const vld1_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8641:9
pub const vld1_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8647:9
pub const vld1_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8662:9
pub const vld1_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8677:9
pub const vld1q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8692:9
pub const vld1q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8707:9
pub const vld1q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8722:9
pub const vld1q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8737:9
pub const vld1q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8752:9
pub const vld1q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8767:9
pub const vld1q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8782:9
pub const vld1q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8797:9
pub const vld1q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8812:9
pub const vld1q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8827:9
pub const vld1q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8842:9
pub const vld1_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8857:9
pub const vld1_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8872:9
pub const vld1_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8886:9
pub const vld1_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8892:9
pub const vld1_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8907:9
pub const vld1_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8922:9
pub const vld1_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8937:9
pub const vld1_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8951:9
pub const vld1_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8957:9
pub const vld1_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8972:9
pub const vld1_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:8990:9
pub const vld1q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9008:9
pub const vld1q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9026:9
pub const vld1q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9044:9
pub const vld1q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9062:9
pub const vld1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9080:9
pub const vld1q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9098:9
pub const vld1q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9116:9
pub const vld1q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9134:9
pub const vld1q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9152:9
pub const vld1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9170:9
pub const vld1q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9188:9
pub const vld1_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9206:9
pub const vld1_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9224:9
pub const vld1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9241:9
pub const vld1_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9248:9
pub const vld1_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9266:9
pub const vld1_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9284:9
pub const vld1_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9302:9
pub const vld1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9319:9
pub const vld1_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9326:9
pub const vld1_p8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9344:9
pub const vld1_p16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9361:9
pub const vld1q_p8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9378:9
pub const vld1q_p16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9395:9
pub const vld1q_u8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9412:9
pub const vld1q_u32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9429:9
pub const vld1q_u64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9446:9
pub const vld1q_u16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9463:9
pub const vld1q_s8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9480:9
pub const vld1q_f32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9497:9
pub const vld1q_s32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9514:9
pub const vld1q_s64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9531:9
pub const vld1q_s16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9548:9
pub const vld1_u8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9565:9
pub const vld1_u32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9582:9
pub const vld1_u64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9598:9
pub const vld1_u16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9604:9
pub const vld1_s8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9621:9
pub const vld1_f32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9638:9
pub const vld1_s32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9655:9
pub const vld1_s64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9671:9
pub const vld1_s16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9677:9
pub const vld1_p8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9694:9
pub const vld1_p16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9712:9
pub const vld1q_p8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9730:9
pub const vld1q_p16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9748:9
pub const vld1q_u8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9766:9
pub const vld1q_u32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9784:9
pub const vld1q_u64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9802:9
pub const vld1q_u16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9820:9
pub const vld1q_s8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9838:9
pub const vld1q_f32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9856:9
pub const vld1q_s32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9874:9
pub const vld1q_s64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9892:9
pub const vld1q_s16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9910:9
pub const vld1_u8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9928:9
pub const vld1_u32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9946:9
pub const vld1_u64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9963:9
pub const vld1_u16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9969:9
pub const vld1_s8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:9987:9
pub const vld1_f32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10005:9
pub const vld1_s32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10023:9
pub const vld1_s64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10040:9
pub const vld1_s16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10046:9
pub const vld1_p8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10064:9
pub const vld1_p16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10083:9
pub const vld1q_p8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10102:9
pub const vld1q_p16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10121:9
pub const vld1q_u8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10140:9
pub const vld1q_u32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10159:9
pub const vld1q_u64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10178:9
pub const vld1q_u16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10197:9
pub const vld1q_s8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10216:9
pub const vld1q_f32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10235:9
pub const vld1q_s32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10254:9
pub const vld1q_s64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10273:9
pub const vld1q_s16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10292:9
pub const vld1_u8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10311:9
pub const vld1_u32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10330:9
pub const vld1_u64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10348:9
pub const vld1_u16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10354:9
pub const vld1_s8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10373:9
pub const vld1_f32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10392:9
pub const vld1_s32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10411:9
pub const vld1_s64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10429:9
pub const vld1_s16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10435:9
pub const vld2_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10454:9
pub const vld2_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10471:9
pub const vld2q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10488:9
pub const vld2q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10505:9
pub const vld2q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10522:9
pub const vld2q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10539:9
pub const vld2q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10556:9
pub const vld2q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10573:9
pub const vld2q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10590:9
pub const vld2q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10607:9
pub const vld2q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10624:9
pub const vld2_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10641:9
pub const vld2_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10658:9
pub const vld2_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10674:9
pub const vld2_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10680:9
pub const vld2_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10697:9
pub const vld2_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10714:9
pub const vld2_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10731:9
pub const vld2_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10747:9
pub const vld2_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10753:9
pub const vld2_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10770:9
pub const vld2_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10787:9
pub const vld2q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10804:9
pub const vld2q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10821:9
pub const vld2q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10838:9
pub const vld2q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10855:9
pub const vld2q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10872:9
pub const vld2q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10889:9
pub const vld2q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10906:9
pub const vld2q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10923:9
pub const vld2q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10940:9
pub const vld2q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10957:9
pub const vld2q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10974:9
pub const vld2_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:10991:9
pub const vld2_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11008:9
pub const vld2_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11024:9
pub const vld2_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11030:9
pub const vld2_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11047:9
pub const vld2_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11064:9
pub const vld2_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11081:9
pub const vld2_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11097:9
pub const vld2_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11103:9
pub const vld2_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11120:9
pub const vld2_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11142:9
pub const vld2q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11164:9
pub const vld2q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11186:9
pub const vld2q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11208:9
pub const vld2q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11230:9
pub const vld2q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11252:9
pub const vld2q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11274:9
pub const vld2_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11296:9
pub const vld2_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11318:9
pub const vld2_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11340:9
pub const vld2_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11362:9
pub const vld2_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11384:9
pub const vld2_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11406:9
pub const vld2_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11428:9
pub const vld3_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11450:9
pub const vld3_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11468:9
pub const vld3q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11486:9
pub const vld3q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11504:9
pub const vld3q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11522:9
pub const vld3q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11540:9
pub const vld3q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11558:9
pub const vld3q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11576:9
pub const vld3q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11594:9
pub const vld3q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11612:9
pub const vld3q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11630:9
pub const vld3_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11648:9
pub const vld3_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11666:9
pub const vld3_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11683:9
pub const vld3_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11689:9
pub const vld3_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11707:9
pub const vld3_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11725:9
pub const vld3_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11743:9
pub const vld3_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11760:9
pub const vld3_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11766:9
pub const vld3_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11784:9
pub const vld3_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11802:9
pub const vld3q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11820:9
pub const vld3q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11838:9
pub const vld3q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11856:9
pub const vld3q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11874:9
pub const vld3q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11892:9
pub const vld3q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11910:9
pub const vld3q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11928:9
pub const vld3q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11946:9
pub const vld3q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11964:9
pub const vld3q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:11982:9
pub const vld3q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12000:9
pub const vld3_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12018:9
pub const vld3_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12036:9
pub const vld3_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12053:9
pub const vld3_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12059:9
pub const vld3_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12077:9
pub const vld3_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12095:9
pub const vld3_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12113:9
pub const vld3_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12130:9
pub const vld3_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12136:9
pub const vld3_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12154:9
pub const vld3_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12178:9
pub const vld3q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12202:9
pub const vld3q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12226:9
pub const vld3q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12250:9
pub const vld3q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12274:9
pub const vld3q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12298:9
pub const vld3q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12322:9
pub const vld3_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12346:9
pub const vld3_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12370:9
pub const vld3_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12394:9
pub const vld3_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12418:9
pub const vld3_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12442:9
pub const vld3_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12466:9
pub const vld3_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12490:9
pub const vld4_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12514:9
pub const vld4_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12533:9
pub const vld4q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12552:9
pub const vld4q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12571:9
pub const vld4q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12590:9
pub const vld4q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12609:9
pub const vld4q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12628:9
pub const vld4q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12647:9
pub const vld4q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12666:9
pub const vld4q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12685:9
pub const vld4q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12704:9
pub const vld4_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12723:9
pub const vld4_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12742:9
pub const vld4_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12760:9
pub const vld4_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12766:9
pub const vld4_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12785:9
pub const vld4_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12804:9
pub const vld4_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12823:9
pub const vld4_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12841:9
pub const vld4_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12847:9
pub const vld4_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12866:9
pub const vld4_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12885:9
pub const vld4q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12904:9
pub const vld4q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12923:9
pub const vld4q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12942:9
pub const vld4q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12961:9
pub const vld4q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12980:9
pub const vld4q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:12999:9
pub const vld4q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13018:9
pub const vld4q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13037:9
pub const vld4q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13056:9
pub const vld4q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13075:9
pub const vld4q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13094:9
pub const vld4_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13113:9
pub const vld4_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13132:9
pub const vld4_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13150:9
pub const vld4_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13156:9
pub const vld4_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13175:9
pub const vld4_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13194:9
pub const vld4_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13213:9
pub const vld4_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13231:9
pub const vld4_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13237:9
pub const vld4_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13256:9
pub const vld4_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13282:9
pub const vld4q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13308:9
pub const vld4q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13334:9
pub const vld4q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13360:9
pub const vld4q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13386:9
pub const vld4q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13412:9
pub const vld4q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13438:9
pub const vld4_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13464:9
pub const vld4_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13490:9
pub const vld4_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13516:9
pub const vld4_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13542:9
pub const vld4_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13568:9
pub const vld4_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13594:9
pub const vld4_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:13620:9
pub const vmlaq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_46`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14374:9
pub const vmlaq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_48`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14398:9
pub const vmlaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_50`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14422:9
pub const vmlaq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_52`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14446:9
pub const vmlaq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_54`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14470:9
pub const vmla_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_56`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14494:9
pub const vmla_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_58`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14518:9
pub const vmla_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_60`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14542:9
pub const vmla_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_62`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14566:9
pub const vmla_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_64`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:14590:9
pub const vmlsq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_66`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15036:9
pub const vmlsq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_68`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15060:9
pub const vmlsq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_70`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15084:9
pub const vmlsq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_72`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15108:9
pub const vmlsq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_74`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15132:9
pub const vmls_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_76`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15156:9
pub const vmls_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_78`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15180:9
pub const vmls_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_80`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15204:9
pub const vmls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_82`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15228:9
pub const vmls_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_84`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15252:9
pub const vmovq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15596:9
pub const vmov_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:15738:9
pub const vmulq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_86`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16314:9
pub const vmulq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_88`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16335:9
pub const vmulq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_90`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16356:9
pub const vmulq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_92`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16377:9
pub const vmulq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_94`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16398:9
pub const vmul_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_96`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16419:9
pub const vmul_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_98`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16440:9
pub const vmul_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_100`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16461:9
pub const vmul_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_102`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16482:9
pub const vmul_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_104`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16503:9
pub const vmull_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_106`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16838:9
pub const vmull_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_108`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16859:9
pub const vmull_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_110`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16880:9
pub const vmull_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_112`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:16901:9
pub const vqdmlal_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_114`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:18991:9
pub const vqdmlal_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_116`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19015:9
pub const vqdmlsl_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_118`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19129:9
pub const vqdmlsl_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_120`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19153:9
pub const vqdmull_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_122`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19417:9
pub const vqdmull_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_124`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:19438:9
pub const vqrshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20186:9
pub const vqrshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20210:9
pub const vqrshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20234:9
pub const vqrshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20258:9
pub const vqrshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20282:9
pub const vqrshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20306:9
pub const vqrshrun_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20330:9
pub const vqrshrun_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20354:9
pub const vqrshrun_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20378:9
pub const vqshlq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20650:9
pub const vqshlq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20668:9
pub const vqshlq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20686:9
pub const vqshlq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20704:9
pub const vqshlq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20722:9
pub const vqshlq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20740:9
pub const vqshlq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20758:9
pub const vqshlq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20776:9
pub const vqshl_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20794:9
pub const vqshl_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20812:9
pub const vqshl_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20829:9
pub const vqshl_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20836:9
pub const vqshl_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20854:9
pub const vqshl_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20872:9
pub const vqshl_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20889:9
pub const vqshl_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20896:9
pub const vqshluq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20914:9
pub const vqshluq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20932:9
pub const vqshluq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20950:9
pub const vqshluq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20968:9
pub const vqshlu_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:20986:9
pub const vqshlu_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21004:9
pub const vqshlu_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21021:9
pub const vqshlu_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21028:9
pub const vqshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21046:9
pub const vqshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21070:9
pub const vqshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21094:9
pub const vqshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21118:9
pub const vqshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21142:9
pub const vqshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21166:9
pub const vqshrun_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21190:9
pub const vqshrun_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21214:9
pub const vqshrun_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:21238:9
pub const vrshrq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22768:9
pub const vrshrq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22786:9
pub const vrshrq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22804:9
pub const vrshrq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22822:9
pub const vrshrq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22840:9
pub const vrshrq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22858:9
pub const vrshrq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22876:9
pub const vrshrq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22894:9
pub const vrshr_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22912:9
pub const vrshr_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22930:9
pub const vrshr_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22947:9
pub const vrshr_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22954:9
pub const vrshr_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22972:9
pub const vrshr_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:22990:9
pub const vrshr_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23007:9
pub const vrshr_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23014:9
pub const vrshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23032:9
pub const vrshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23056:9
pub const vrshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23080:9
pub const vrshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23104:9
pub const vrshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23128:9
pub const vrshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23152:9
pub const vrsraq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23274:9
pub const vrsraq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23295:9
pub const vrsraq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23316:9
pub const vrsraq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23337:9
pub const vrsraq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23358:9
pub const vrsraq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23379:9
pub const vrsraq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23400:9
pub const vrsraq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23421:9
pub const vrsra_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23442:9
pub const vrsra_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23463:9
pub const vrsra_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23483:9
pub const vrsra_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23491:9
pub const vrsra_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23512:9
pub const vrsra_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23533:9
pub const vrsra_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23553:9
pub const vrsra_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23561:9
pub const vset_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23714:9
pub const vset_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23741:9
pub const vsetq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23768:9
pub const vsetq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23795:9
pub const vsetq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23822:9
pub const vsetq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23849:9
pub const vsetq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23876:9
pub const vsetq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23903:9
pub const vsetq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23930:9
pub const vsetq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23957:9
pub const vsetq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:23984:9
pub const vsetq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24011:9
pub const vsetq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24038:9
pub const vset_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24065:9
pub const vset_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24092:9
pub const vset_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24118:9
pub const vset_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24126:9
pub const vset_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24153:9
pub const vset_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24180:9
pub const vset_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24207:9
pub const vset_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24233:9
pub const vset_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24241:9
pub const vshlq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24516:9
pub const vshlq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24534:9
pub const vshlq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24552:9
pub const vshlq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24570:9
pub const vshlq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24588:9
pub const vshlq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24606:9
pub const vshlq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24624:9
pub const vshlq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24642:9
pub const vshl_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24660:9
pub const vshl_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24678:9
pub const vshl_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24695:9
pub const vshl_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24702:9
pub const vshl_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24720:9
pub const vshl_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24738:9
pub const vshl_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24755:9
pub const vshl_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24762:9
pub const vshll_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24780:9
pub const vshll_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24804:9
pub const vshll_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24828:9
pub const vshll_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24852:9
pub const vshll_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24876:9
pub const vshll_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24900:9
pub const vshrq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24924:9
pub const vshrq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24942:9
pub const vshrq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24960:9
pub const vshrq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24978:9
pub const vshrq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:24996:9
pub const vshrq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25014:9
pub const vshrq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25032:9
pub const vshrq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25050:9
pub const vshr_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25068:9
pub const vshr_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25086:9
pub const vshr_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25103:9
pub const vshr_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25110:9
pub const vshr_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25128:9
pub const vshr_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25146:9
pub const vshr_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25163:9
pub const vshr_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25170:9
pub const vshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25188:9
pub const vshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25212:9
pub const vshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25236:9
pub const vshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25260:9
pub const vshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25284:9
pub const vshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25308:9
pub const vsli_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25332:9
pub const vsli_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25353:9
pub const vsliq_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25374:9
pub const vsliq_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25395:9
pub const vsliq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25416:9
pub const vsliq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25437:9
pub const vsliq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25458:9
pub const vsliq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25479:9
pub const vsliq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25500:9
pub const vsliq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25521:9
pub const vsliq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25542:9
pub const vsliq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25563:9
pub const vsli_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25584:9
pub const vsli_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25605:9
pub const vsli_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25625:9
pub const vsli_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25633:9
pub const vsli_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25654:9
pub const vsli_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25675:9
pub const vsli_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25695:9
pub const vsli_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25703:9
pub const vsraq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25724:9
pub const vsraq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25745:9
pub const vsraq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25766:9
pub const vsraq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25787:9
pub const vsraq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25808:9
pub const vsraq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25829:9
pub const vsraq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25850:9
pub const vsraq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25871:9
pub const vsra_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25892:9
pub const vsra_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25913:9
pub const vsra_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25933:9
pub const vsra_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25941:9
pub const vsra_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25962:9
pub const vsra_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:25983:9
pub const vsra_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26003:9
pub const vsra_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26011:9
pub const vsri_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26032:9
pub const vsri_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26053:9
pub const vsriq_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26074:9
pub const vsriq_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26095:9
pub const vsriq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26116:9
pub const vsriq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26137:9
pub const vsriq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26158:9
pub const vsriq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26179:9
pub const vsriq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26200:9
pub const vsriq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26221:9
pub const vsriq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26242:9
pub const vsriq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26263:9
pub const vsri_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26284:9
pub const vsri_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26305:9
pub const vsri_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26325:9
pub const vsri_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26333:9
pub const vsri_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26354:9
pub const vsri_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26375:9
pub const vsri_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26395:9
pub const vsri_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26403:9
pub const vst1_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26424:9
pub const vst1_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26437:9
pub const vst1q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26450:9
pub const vst1q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26463:9
pub const vst1q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26476:9
pub const vst1q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26489:9
pub const vst1q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26502:9
pub const vst1q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26515:9
pub const vst1q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26528:9
pub const vst1q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26541:9
pub const vst1q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26554:9
pub const vst1q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26567:9
pub const vst1q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26580:9
pub const vst1_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26593:9
pub const vst1_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26606:9
pub const vst1_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26618:9
pub const vst1_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26623:9
pub const vst1_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26636:9
pub const vst1_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26649:9
pub const vst1_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26662:9
pub const vst1_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26674:9
pub const vst1_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26679:9
pub const vst1_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26692:9
pub const vst1_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26705:9
pub const vst1q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26718:9
pub const vst1q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26731:9
pub const vst1q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26744:9
pub const vst1q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26757:9
pub const vst1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26770:9
pub const vst1q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26783:9
pub const vst1q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26796:9
pub const vst1q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26809:9
pub const vst1q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26822:9
pub const vst1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26835:9
pub const vst1q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26848:9
pub const vst1_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26861:9
pub const vst1_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26874:9
pub const vst1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26886:9
pub const vst1_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26891:9
pub const vst1_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26904:9
pub const vst1_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26917:9
pub const vst1_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26930:9
pub const vst1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26942:9
pub const vst1_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26947:9
pub const vst1_p8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26960:9
pub const vst1_p16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26975:9
pub const vst1q_p8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:26990:9
pub const vst1q_p16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27005:9
pub const vst1q_u8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27020:9
pub const vst1q_u32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27035:9
pub const vst1q_u64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27050:9
pub const vst1q_u16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27065:9
pub const vst1q_s8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27080:9
pub const vst1q_f32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27095:9
pub const vst1q_s32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27110:9
pub const vst1q_s64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27125:9
pub const vst1q_s16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27140:9
pub const vst1_u8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27155:9
pub const vst1_u32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27170:9
pub const vst1_u64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27184:9
pub const vst1_u16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27189:9
pub const vst1_s8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27204:9
pub const vst1_f32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27219:9
pub const vst1_s32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27234:9
pub const vst1_s64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27248:9
pub const vst1_s16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27253:9
pub const vst1_p8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27268:9
pub const vst1_p16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27284:9
pub const vst1q_p8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27300:9
pub const vst1q_p16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27316:9
pub const vst1q_u8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27332:9
pub const vst1q_u32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27348:9
pub const vst1q_u64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27364:9
pub const vst1q_u16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27380:9
pub const vst1q_s8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27396:9
pub const vst1q_f32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27412:9
pub const vst1q_s32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27428:9
pub const vst1q_s64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27444:9
pub const vst1q_s16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27460:9
pub const vst1_u8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27476:9
pub const vst1_u32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27492:9
pub const vst1_u64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27507:9
pub const vst1_u16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27512:9
pub const vst1_s8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27528:9
pub const vst1_f32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27544:9
pub const vst1_s32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27560:9
pub const vst1_s64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27575:9
pub const vst1_s16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27580:9
pub const vst1_p8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27596:9
pub const vst1_p16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27613:9
pub const vst1q_p8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27630:9
pub const vst1q_p16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27647:9
pub const vst1q_u8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27664:9
pub const vst1q_u32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27681:9
pub const vst1q_u64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27698:9
pub const vst1q_u16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27715:9
pub const vst1q_s8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27732:9
pub const vst1q_f32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27749:9
pub const vst1q_s32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27766:9
pub const vst1q_s64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27783:9
pub const vst1q_s16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27800:9
pub const vst1_u8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27817:9
pub const vst1_u32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27834:9
pub const vst1_u64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27850:9
pub const vst1_u16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27855:9
pub const vst1_s8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27872:9
pub const vst1_f32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27889:9
pub const vst1_s32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27906:9
pub const vst1_s64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27922:9
pub const vst1_s16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27927:9
pub const vst2_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27944:9
pub const vst2_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27959:9
pub const vst2q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27974:9
pub const vst2q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:27989:9
pub const vst2q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28004:9
pub const vst2q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28019:9
pub const vst2q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28034:9
pub const vst2q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28049:9
pub const vst2q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28064:9
pub const vst2q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28079:9
pub const vst2q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28094:9
pub const vst2_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28109:9
pub const vst2_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28124:9
pub const vst2_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28138:9
pub const vst2_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28143:9
pub const vst2_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28158:9
pub const vst2_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28173:9
pub const vst2_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28188:9
pub const vst2_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28202:9
pub const vst2_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28207:9
pub const vst2_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28222:9
pub const vst2_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28237:9
pub const vst2q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28252:9
pub const vst2q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28267:9
pub const vst2q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28282:9
pub const vst2q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28297:9
pub const vst2q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28312:9
pub const vst2q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28327:9
pub const vst2_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28342:9
pub const vst2_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28357:9
pub const vst2_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28372:9
pub const vst2_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28387:9
pub const vst2_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28402:9
pub const vst2_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28417:9
pub const vst2_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28432:9
pub const vst3_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28447:9
pub const vst3_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28463:9
pub const vst3q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28479:9
pub const vst3q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28495:9
pub const vst3q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28511:9
pub const vst3q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28527:9
pub const vst3q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28543:9
pub const vst3q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28559:9
pub const vst3q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28575:9
pub const vst3q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28591:9
pub const vst3q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28607:9
pub const vst3_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28623:9
pub const vst3_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28639:9
pub const vst3_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28654:9
pub const vst3_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28659:9
pub const vst3_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28675:9
pub const vst3_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28691:9
pub const vst3_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28707:9
pub const vst3_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28722:9
pub const vst3_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28727:9
pub const vst3_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28743:9
pub const vst3_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28759:9
pub const vst3q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28775:9
pub const vst3q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28791:9
pub const vst3q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28807:9
pub const vst3q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28823:9
pub const vst3q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28839:9
pub const vst3q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28855:9
pub const vst3_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28871:9
pub const vst3_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28887:9
pub const vst3_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28903:9
pub const vst3_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28919:9
pub const vst3_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28935:9
pub const vst3_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28951:9
pub const vst3_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28967:9
pub const vst4_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:28983:9
pub const vst4_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29000:9
pub const vst4q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29017:9
pub const vst4q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29034:9
pub const vst4q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29051:9
pub const vst4q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29068:9
pub const vst4q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29085:9
pub const vst4q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29102:9
pub const vst4q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29119:9
pub const vst4q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29136:9
pub const vst4q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29153:9
pub const vst4_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29170:9
pub const vst4_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29187:9
pub const vst4_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29203:9
pub const vst4_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29208:9
pub const vst4_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29225:9
pub const vst4_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29242:9
pub const vst4_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29259:9
pub const vst4_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29275:9
pub const vst4_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29280:9
pub const vst4_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29297:9
pub const vst4_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29314:9
pub const vst4q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29331:9
pub const vst4q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29348:9
pub const vst4q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29365:9
pub const vst4q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29382:9
pub const vst4q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29399:9
pub const vst4q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29416:9
pub const vst4_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29433:9
pub const vst4_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29450:9
pub const vst4_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29467:9
pub const vst4_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29484:9
pub const vst4_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29501:9
pub const vst4_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29518:9
pub const vst4_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:29535:9
pub const splatq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31942:9
pub const splat_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31966:9
pub const splatq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:31990:9
pub const splat_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32014:9
pub const vbfdotq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_126`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32084:9
pub const vbfdot_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_128`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32112:9
pub const vbfdotq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_130`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32140:9
pub const vbfdot_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_132`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32168:9
pub const vcreate_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32281:9
pub const vduph_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32327:9
pub const vdupq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_137`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32344:9
pub const vdup_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_139`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32362:9
pub const vduph_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32380:9
pub const vdupq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_141`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32397:9
pub const vdup_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_143`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32415:9
pub const vgetq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32484:9
pub const vget_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32507:9
pub const vld1q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32551:9
pub const vld1_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32566:9
pub const vld1q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32581:9
pub const vld1_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32596:9
pub const vld1q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32611:9
pub const vld1_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32629:9
pub const vld1q_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32647:9
pub const vld1_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32664:9
pub const vld1q_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32681:9
pub const vld1_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32699:9
pub const vld1q_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32717:9
pub const vld1_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32736:9
pub const vld2q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32755:9
pub const vld2_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32772:9
pub const vld2q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32789:9
pub const vld2_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32806:9
pub const vld2q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32823:9
pub const vld2_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32845:9
pub const vld3q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32867:9
pub const vld3_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32885:9
pub const vld3q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32903:9
pub const vld3_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32921:9
pub const vld3q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32939:9
pub const vld3_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32963:9
pub const vld4q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:32987:9
pub const vld4_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33006:9
pub const vld4q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33025:9
pub const vld4_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33044:9
pub const vld4q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33063:9
pub const vld4_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33089:9
pub const vsetq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33115:9
pub const vset_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33142:9
pub const vst1q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33169:9
pub const vst1_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33182:9
pub const vst1q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33195:9
pub const vst1_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33208:9
pub const vst1q_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33221:9
pub const vst1_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33236:9
pub const vst1q_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33251:9
pub const vst1_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33267:9
pub const vst1q_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33283:9
pub const vst1_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33300:9
pub const vst2q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33317:9
pub const vst2_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33332:9
pub const vst2q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33347:9
pub const vst2_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33362:9
pub const vst3q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33377:9
pub const vst3_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33393:9
pub const vst3q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33409:9
pub const vst3_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33425:9
pub const vst4q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33441:9
pub const vst4_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33458:9
pub const vst4q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33475:9
pub const vst4_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33492:9
pub const vdotq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_145`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33601:9
pub const vdotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_147`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33629:9
pub const vdot_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_149`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33657:9
pub const vdot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_151`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:33685:9
pub const vcvtq_n_f16_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34379:9
pub const vcvtq_n_f16_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34397:9
pub const vcvt_n_f16_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34415:9
pub const vcvt_n_f16_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34433:9
pub const vcvtq_n_s16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34451:9
pub const vcvt_n_s16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34469:9
pub const vcvtq_n_u16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34487:9
pub const vcvt_n_u16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34505:9
pub const vextq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34843:9
pub const vext_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:34864:9
pub const vmulq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_153`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35069:9
pub const vmul_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_155`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35090:9
pub const vmulq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35111:9
pub const vmul_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35131:9
pub const vusdotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_157`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35628:9
pub const vusdot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_159`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35654:9
pub const vqrdmlahq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_161`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35790:9
pub const vqrdmlahq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_163`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35814:9
pub const vqrdmlah_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_165`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35838:9
pub const vqrdmlah_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_167`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35862:9
pub const vqrdmlshq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_169`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:35978:9
pub const vqrdmlshq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_171`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36002:9
pub const vqrdmlsh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_173`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36026:9
pub const vqrdmlsh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_175`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36050:9
pub const vcmla_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_177`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36188:9
pub const vcmlaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_179`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36216:9
pub const vcmla_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_181`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36244:9
pub const vcmlaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_183`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36272:9
pub const vcmla_rot180_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_185`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36346:9
pub const vcmlaq_rot180_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_187`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36374:9
pub const vcmla_rot180_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_189`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36402:9
pub const vcmlaq_rot180_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_191`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36430:9
pub const vcmla_rot270_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_193`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36504:9
pub const vcmlaq_rot270_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_195`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36532:9
pub const vcmla_rot270_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_197`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36560:9
pub const vcmlaq_rot270_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_199`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36588:9
pub const vcmla_rot90_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_201`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36662:9
pub const vcmlaq_rot90_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_203`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36690:9
pub const vcmla_rot90_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_205`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36718:9
pub const vcmlaq_rot90_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_207`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36746:9
pub const vcmla_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_209`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36888:9
pub const vcmlaq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_211`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36916:9
pub const vcmla_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_213`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36944:9
pub const vcmlaq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_215`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:36972:9
pub const vcmla_rot180_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_217`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37046:9
pub const vcmlaq_rot180_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_219`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37074:9
pub const vcmla_rot180_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_221`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37102:9
pub const vcmlaq_rot180_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_223`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37130:9
pub const vcmla_rot270_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_225`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37204:9
pub const vcmlaq_rot270_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_227`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37232:9
pub const vcmla_rot270_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_229`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37260:9
pub const vcmlaq_rot270_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_231`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37288:9
pub const vcmla_rot90_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_233`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37362:9
pub const vcmlaq_rot90_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_235`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37390:9
pub const vcmla_rot90_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_237`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37418:9
pub const vcmlaq_rot90_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_239`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:37446:9
pub const vld1q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39337:9
pub const vld1_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39352:9
pub const vld1q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39367:9
pub const vld1_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39382:9
pub const vld1q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39397:9
pub const vld1_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39415:9
pub const vld1q_f16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39433:9
pub const vld1_f16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39450:9
pub const vld1q_f16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39467:9
pub const vld1_f16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39485:9
pub const vld1q_f16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39503:9
pub const vld1_f16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39522:9
pub const vld2q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39541:9
pub const vld2_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39558:9
pub const vld2q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39575:9
pub const vld2_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39592:9
pub const vld2q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39609:9
pub const vld2_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39631:9
pub const vld3q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39653:9
pub const vld3_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39671:9
pub const vld3q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39689:9
pub const vld3_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39707:9
pub const vld3q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39725:9
pub const vld3_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39749:9
pub const vld4q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39773:9
pub const vld4_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39792:9
pub const vld4q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39811:9
pub const vld4_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39830:9
pub const vld4q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39849:9
pub const vld4_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39875:9
pub const vst1q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39901:9
pub const vst1_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39914:9
pub const vst1q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39927:9
pub const vst1_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39940:9
pub const vst1q_f16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39953:9
pub const vst1_f16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39968:9
pub const vst1q_f16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39983:9
pub const vst1_f16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:39999:9
pub const vst1q_f16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40015:9
pub const vst1_f16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40032:9
pub const vst2q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40049:9
pub const vst2_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40064:9
pub const vst2q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40079:9
pub const vst2_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40094:9
pub const vst3q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40109:9
pub const vst3_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40125:9
pub const vst3q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40141:9
pub const vst3_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40157:9
pub const vst4q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40173:9
pub const vst4_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40190:9
pub const vst4q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40207:9
pub const vst4_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:40224:9
pub const vcopyq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_257`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43823:9
pub const vcopyq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_259`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43844:9
pub const vcopyq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_261`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43865:9
pub const vcopyq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_263`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43886:9
pub const vcopyq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_265`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43907:9
pub const vcopyq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_267`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43927:9
pub const vcopyq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_269`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43948:9
pub const vcopyq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_271`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43969:9
pub const vcopyq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_273`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:43990:9
pub const vcopyq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_275`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44011:9
pub const vcopyq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_277`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44031:9
pub const vcopy_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_279`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44052:9
pub const vcopy_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_281`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44073:9
pub const vcopy_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_283`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44094:9
pub const vcopy_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_285`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44115:9
pub const vcopy_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_287`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44135:9
pub const vcopy_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_288`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44143:9
pub const vcopy_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_290`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44164:9
pub const vcopy_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_292`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44185:9
pub const vcopy_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_294`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44206:9
pub const vcopy_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_296`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44226:9
pub const vcopy_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_297`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44234:9
pub const vcopyq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_299`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44255:9
pub const vcopyq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_301`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44276:9
pub const vcopyq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_303`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44297:9
pub const vcopyq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_305`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44318:9
pub const vcopyq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_307`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44339:9
pub const vcopyq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_309`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44360:9
pub const vcopyq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_311`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44381:9
pub const vcopyq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_313`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44402:9
pub const vcopyq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_315`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44423:9
pub const vcopyq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_317`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44444:9
pub const vcopyq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_319`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44465:9
pub const vcopy_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_321`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44486:9
pub const vcopy_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_323`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44507:9
pub const vcopy_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_325`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44528:9
pub const vcopy_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_327`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44549:9
pub const vcopy_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_329`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44570:9
pub const vcopy_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_331`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44589:9
pub const vcopy_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_333`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44610:9
pub const vcopy_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_335`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44631:9
pub const vcopy_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_337`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44652:9
pub const vcopy_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_339`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44673:9
pub const vcopy_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_341`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44692:9
pub const vcreate_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44712:9
pub const vcreate_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44718:9
pub const vcvts_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44894:9
pub const vcvts_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44900:9
pub const vcvtq_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44907:9
pub const vcvtq_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44925:9
pub const vcvt_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44942:9
pub const vcvt_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44948:9
pub const vcvtd_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44954:9
pub const vcvtd_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44960:9
pub const vcvts_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44966:9
pub const vcvtq_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44973:9
pub const vcvt_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44990:9
pub const vcvtd_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:44996:9
pub const vcvts_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45002:9
pub const vcvtq_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45009:9
pub const vcvt_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45026:9
pub const vcvtd_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45032:9
pub const vdupb_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45448:9
pub const vduph_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45465:9
pub const vdupb_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45482:9
pub const vdups_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45499:9
pub const vdupd_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45515:9
pub const vduph_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45522:9
pub const vdupb_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45539:9
pub const vdupd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45555:9
pub const vdups_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45562:9
pub const vdups_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45579:9
pub const vdupd_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45595:9
pub const vduph_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45602:9
pub const vdup_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_343`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45618:9
pub const vdupq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_344`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45625:9
pub const vdupq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_346`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45642:9
pub const vdup_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_348`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45658:9
pub const vdupb_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45665:9
pub const vduph_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45682:9
pub const vdupb_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45699:9
pub const vdups_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45716:9
pub const vdupd_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45733:9
pub const vduph_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45750:9
pub const vdupb_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45767:9
pub const vdupd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45784:9
pub const vdups_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45801:9
pub const vdups_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45818:9
pub const vdupd_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45835:9
pub const vduph_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45852:9
pub const vdup_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_349`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45869:9
pub const vdup_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_351`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45887:9
pub const vdup_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_353`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45904:9
pub const vdupq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_355`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45922:9
pub const vdupq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_357`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45940:9
pub const vdupq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_359`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45958:9
pub const vdupq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_361`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45976:9
pub const vdupq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_363`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:45994:9
pub const vdupq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_365`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46012:9
pub const vdupq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_367`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46030:9
pub const vdupq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_369`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46048:9
pub const vdupq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_371`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46066:9
pub const vdupq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_373`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46084:9
pub const vdupq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_375`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46102:9
pub const vdupq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_377`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46120:9
pub const vdupq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_379`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46138:9
pub const vdupq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_381`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46156:9
pub const vdup_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_383`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46174:9
pub const vdup_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_385`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46192:9
pub const vdup_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_387`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46210:9
pub const vdup_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_389`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46227:9
pub const vdup_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_391`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46245:9
pub const vdup_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_393`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46263:9
pub const vdup_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_395`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46280:9
pub const vdup_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_397`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46298:9
pub const vdup_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_399`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46316:9
pub const vdup_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_401`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46334:9
pub const vdup_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_403`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46351:9
pub const vext_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46408:9
pub const vextq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46416:9
pub const vextq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46437:9
pub const vext_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46457:9
pub const vfmad_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46492:9
pub const vfmas_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46501:9
pub const vfmaq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46530:9
pub const vfmaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46561:9
pub const vfma_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46592:9
pub const vfma_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46601:9
pub const vfmad_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46633:9
pub const vfmas_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46662:9
pub const vfmaq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46691:9
pub const vfmaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46723:9
pub const vfma_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46755:9
pub const vfma_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46784:9
pub const vfmsd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_405`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46860:9
pub const vfmss_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_406`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46869:9
pub const vfmsq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_408`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46890:9
pub const vfmsq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_410`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46913:9
pub const vfms_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_412`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46936:9
pub const vfms_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_413`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46945:9
pub const vfmsd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_415`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46969:9
pub const vfmss_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_417`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:46990:9
pub const vfmsq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_419`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47011:9
pub const vfmsq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_421`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47035:9
pub const vfms_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_423`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47059:9
pub const vfms_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_425`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47080:9
pub const vget_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47194:9
pub const vgetq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47201:9
pub const vgetq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47224:9
pub const vget_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47246:9
pub const vld1_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47282:9
pub const vld1q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47288:9
pub const vld1q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47303:9
pub const vld1_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47317:9
pub const vld1_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47322:9
pub const vld1q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47328:9
pub const vld1q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47343:9
pub const vld1_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47357:9
pub const vld1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47362:9
pub const vld1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47369:9
pub const vld1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47387:9
pub const vld1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47404:9
pub const vld1_p64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47410:9
pub const vld1q_p64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47416:9
pub const vld1q_f64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47433:9
pub const vld1_f64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47449:9
pub const vld1_p64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47454:9
pub const vld1q_p64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47460:9
pub const vld1q_f64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47478:9
pub const vld1_f64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47495:9
pub const vld1_p64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47500:9
pub const vld1q_p64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47506:9
pub const vld1q_f64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47525:9
pub const vld1_f64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47543:9
pub const vld2_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47548:9
pub const vld2q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47554:9
pub const vld2q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47571:9
pub const vld2q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47588:9
pub const vld2q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47605:9
pub const vld2_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47621:9
pub const vld2_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47626:9
pub const vld2q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47632:9
pub const vld2q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47649:9
pub const vld2_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47665:9
pub const vld2_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47670:9
pub const vld2q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47677:9
pub const vld2q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47699:9
pub const vld2q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47721:9
pub const vld2q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47743:9
pub const vld2q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47765:9
pub const vld2q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47787:9
pub const vld2q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47809:9
pub const vld2_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47830:9
pub const vld2_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47836:9
pub const vld2_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47842:9
pub const vld3_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47848:9
pub const vld3q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47854:9
pub const vld3q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47872:9
pub const vld3q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47890:9
pub const vld3q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47908:9
pub const vld3_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47925:9
pub const vld3_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47930:9
pub const vld3q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47936:9
pub const vld3q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47954:9
pub const vld3_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47971:9
pub const vld3_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47976:9
pub const vld3q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:47983:9
pub const vld3q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48007:9
pub const vld3q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48031:9
pub const vld3q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48055:9
pub const vld3q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48079:9
pub const vld3q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48103:9
pub const vld3q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48127:9
pub const vld3_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48150:9
pub const vld3_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48156:9
pub const vld3_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48162:9
pub const vld4_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48168:9
pub const vld4q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48174:9
pub const vld4q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48193:9
pub const vld4q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48212:9
pub const vld4q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48231:9
pub const vld4_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48249:9
pub const vld4_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48254:9
pub const vld4q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48260:9
pub const vld4q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48279:9
pub const vld4_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48297:9
pub const vld4_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48302:9
pub const vld4q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48309:9
pub const vld4q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48335:9
pub const vld4q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48361:9
pub const vld4q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48387:9
pub const vld4q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48413:9
pub const vld4q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48439:9
pub const vld4q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48465:9
pub const vld4_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48490:9
pub const vld4_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48496:9
pub const vld4_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48502:9
pub const vldrq_p128 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:48508:9
pub const vmlaq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_427`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49121:9
pub const vmlaq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_429`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49145:9
pub const vmlaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_431`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49169:9
pub const vmlaq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_433`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49193:9
pub const vmlaq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_435`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49217:9
pub const vmla_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_437`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49241:9
pub const vmla_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_439`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49265:9
pub const vmla_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_441`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49289:9
pub const vmla_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_443`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49313:9
pub const vmla_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_445`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49337:9
pub const vmlal_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_447`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49361:9
pub const vmlal_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_449`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49385:9
pub const vmlal_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_451`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49409:9
pub const vmlal_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_453`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49433:9
pub const vmlal_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_455`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49457:9
pub const vmlal_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_457`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49481:9
pub const vmlal_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_459`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49505:9
pub const vmlal_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_461`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49529:9
pub const vmlal_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_463`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49553:9
pub const vmlal_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_465`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49577:9
pub const vmlal_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_467`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49601:9
pub const vmlal_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_469`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49625:9
pub const vmlsq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_471`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49672:9
pub const vmlsq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_473`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49696:9
pub const vmlsq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_475`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49720:9
pub const vmlsq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_477`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49744:9
pub const vmlsq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_479`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49768:9
pub const vmls_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_481`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49792:9
pub const vmls_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_483`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49816:9
pub const vmls_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_485`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49840:9
pub const vmls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_487`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49864:9
pub const vmls_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_489`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49888:9
pub const vmlsl_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_491`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49912:9
pub const vmlsl_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_493`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49936:9
pub const vmlsl_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_495`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49960:9
pub const vmlsl_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_497`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:49984:9
pub const vmlsl_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_499`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50008:9
pub const vmlsl_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_501`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50032:9
pub const vmlsl_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_503`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50056:9
pub const vmlsl_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_505`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50080:9
pub const vmlsl_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_507`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50104:9
pub const vmlsl_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_509`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50128:9
pub const vmlsl_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_511`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50152:9
pub const vmlsl_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_513`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50176:9
pub const vmuld_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_533`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50507:9
pub const vmuls_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_534`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50515:9
pub const vmul_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50533:9
pub const vmulq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_536`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50541:9
pub const vmuld_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_538`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50561:9
pub const vmuls_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_540`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50580:9
pub const vmul_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50599:9
pub const vmulq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_542`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50618:9
pub const vmulq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_544`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50639:9
pub const vmulq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_546`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50660:9
pub const vmulq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_548`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50681:9
pub const vmulq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_550`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50702:9
pub const vmulq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_552`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50723:9
pub const vmul_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_554`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50744:9
pub const vmul_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_556`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50765:9
pub const vmul_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_558`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50786:9
pub const vmul_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_560`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50807:9
pub const vmul_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_562`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50828:9
pub const vmull_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_564`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:50989:9
pub const vmull_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_566`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51010:9
pub const vmull_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_568`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51031:9
pub const vmull_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_570`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51052:9
pub const vmull_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_572`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51073:9
pub const vmull_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_574`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51094:9
pub const vmull_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_576`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51115:9
pub const vmull_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_578`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51136:9
pub const vmull_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_580`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51221:9
pub const vmull_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_582`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51242:9
pub const vmull_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_584`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51263:9
pub const vmull_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_586`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51284:9
pub const vmulxd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_588`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51385:9
pub const vmulxs_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_589`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51393:9
pub const vmulxq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_591`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51412:9
pub const vmulxq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_593`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51432:9
pub const vmulx_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_595`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51453:9
pub const vmulxd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_597`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51474:9
pub const vmulxs_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_599`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51493:9
pub const vmulxq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_601`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51512:9
pub const vmulxq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_603`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51533:9
pub const vmulx_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_605`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:51554:9
pub const vqdmlal_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_607`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52473:9
pub const vqdmlal_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_609`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52497:9
pub const vqdmlal_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_611`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52521:9
pub const vqdmlal_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_613`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52545:9
pub const vqdmlals_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52603:9
pub const vqdmlalh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52624:9
pub const vqdmlals_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52645:9
pub const vqdmlalh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52666:9
pub const vqdmlal_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_615`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52687:9
pub const vqdmlal_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_617`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52711:9
pub const vqdmlsl_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_619`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52781:9
pub const vqdmlsl_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_621`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52805:9
pub const vqdmlsl_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_623`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52829:9
pub const vqdmlsl_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_625`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52853:9
pub const vqdmlsls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52911:9
pub const vqdmlslh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52932:9
pub const vqdmlsls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52953:9
pub const vqdmlslh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52974:9
pub const vqdmlsl_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_627`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:52995:9
pub const vqdmlsl_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_629`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53019:9
pub const vqdmulhq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53053:9
pub const vqdmulhq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53074:9
pub const vqdmulh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53095:9
pub const vqdmulh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53116:9
pub const vqdmulhs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_631`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53137:9
pub const vqdmulhh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_633`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53156:9
pub const vqdmulhs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_635`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53175:9
pub const vqdmulhh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_637`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53194:9
pub const vqdmulhq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53213:9
pub const vqdmulhq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53234:9
pub const vqdmulh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53255:9
pub const vqdmulh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53276:9
pub const vqdmull_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_639`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53341:9
pub const vqdmull_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_641`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53362:9
pub const vqdmull_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_643`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53383:9
pub const vqdmull_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_645`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53404:9
pub const vqdmulls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_647`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53457:9
pub const vqdmullh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_649`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53476:9
pub const vqdmulls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_651`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53495:9
pub const vqdmullh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_653`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53514:9
pub const vqdmull_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_655`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53533:9
pub const vqdmull_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_657`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53554:9
pub const vqrdmulhq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53824:9
pub const vqrdmulhq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53845:9
pub const vqrdmulh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53866:9
pub const vqrdmulh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53887:9
pub const vqrdmulhs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_659`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53908:9
pub const vqrdmulhh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_661`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53927:9
pub const vqrdmulhs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_663`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53946:9
pub const vqrdmulhh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_665`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53965:9
pub const vqrdmulhq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:53984:9
pub const vqrdmulhq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54005:9
pub const vqrdmulh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54026:9
pub const vqrdmulh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54047:9
pub const vqrshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_667`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54108:9
pub const vqrshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_669`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54129:9
pub const vqrshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_671`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54150:9
pub const vqrshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_673`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54171:9
pub const vqrshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_675`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54192:9
pub const vqrshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_677`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54213:9
pub const vqrshrns_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54233:9
pub const vqrshrnd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54239:9
pub const vqrshrnh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54245:9
pub const vqrshrns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54251:9
pub const vqrshrnd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54257:9
pub const vqrshrnh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54263:9
pub const vqrshrun_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_679`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54270:9
pub const vqrshrun_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_681`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54291:9
pub const vqrshrun_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_683`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54312:9
pub const vqrshruns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54332:9
pub const vqrshrund_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54338:9
pub const vqrshrunh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54344:9
pub const vqshlb_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54390:9
pub const vqshls_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54396:9
pub const vqshld_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54402:9
pub const vqshlh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54408:9
pub const vqshlb_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54414:9
pub const vqshls_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54420:9
pub const vqshld_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54426:9
pub const vqshlh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54432:9
pub const vqshlub_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54438:9
pub const vqshlus_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54444:9
pub const vqshlud_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54450:9
pub const vqshluh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54456:9
pub const vqshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_685`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54463:9
pub const vqshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_687`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54484:9
pub const vqshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_689`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54505:9
pub const vqshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_691`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54526:9
pub const vqshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_693`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54547:9
pub const vqshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_695`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54568:9
pub const vqshrns_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54588:9
pub const vqshrnd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54594:9
pub const vqshrnh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54600:9
pub const vqshrns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54606:9
pub const vqshrnd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54612:9
pub const vqshrnh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54618:9
pub const vqshrun_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_697`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54625:9
pub const vqshrun_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_699`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54646:9
pub const vqshrun_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_701`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54667:9
pub const vqshruns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54687:9
pub const vqshrund_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54693:9
pub const vqshrunh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:54699:9
pub const vrshrd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57940:9
pub const vrshrd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57946:9
pub const vrshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_703`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57953:9
pub const vrshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_705`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57974:9
pub const vrshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_707`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:57995:9
pub const vrshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_709`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58016:9
pub const vrshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_711`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58037:9
pub const vrshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_713`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58058:9
pub const vrsrad_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58141:9
pub const vrsrad_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58148:9
pub const vset_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58263:9
pub const vsetq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58271:9
pub const vsetq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58298:9
pub const vset_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58324:9
pub const vshld_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58341:9
pub const vshld_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58347:9
pub const vshll_high_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret_715`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58354:9
pub const vshll_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_717`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58372:9
pub const vshll_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_719`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58390:9
pub const vshll_high_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret_721`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58408:9
pub const vshll_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_723`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58426:9
pub const vshll_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_725`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58444:9
pub const vshrd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58461:9
pub const vshrd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58467:9
pub const vshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_727`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58474:9
pub const vshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_729`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58495:9
pub const vshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_731`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58516:9
pub const vshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_733`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58537:9
pub const vshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_735`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58558:9
pub const vshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_737`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58579:9
pub const vslid_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58599:9
pub const vslid_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58606:9
pub const vsli_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58613:9
pub const vsliq_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58621:9
pub const vsrad_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58838:9
pub const vsrad_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58845:9
pub const vsrid_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58852:9
pub const vsrid_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58859:9
pub const vsri_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58866:9
pub const vsriq_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58874:9
pub const vst1_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58894:9
pub const vst1q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58899:9
pub const vst1q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58912:9
pub const vst1_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58924:9
pub const vst1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58928:9
pub const vst1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58933:9
pub const vst1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58946:9
pub const vst1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58958:9
pub const vst1_p64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58962:9
pub const vst1q_p64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58967:9
pub const vst1q_f64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58982:9
pub const vst1_f64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:58996:9
pub const vst1_p64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59000:9
pub const vst1q_p64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59005:9
pub const vst1q_f64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59021:9
pub const vst1_f64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59036:9
pub const vst1_p64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59040:9
pub const vst1q_p64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59045:9
pub const vst1q_f64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59062:9
pub const vst1_f64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59078:9
pub const vst2_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59082:9
pub const vst2q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59087:9
pub const vst2q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59102:9
pub const vst2q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59117:9
pub const vst2q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59132:9
pub const vst2_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59146:9
pub const vst2_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59150:9
pub const vst2q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59155:9
pub const vst2q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59170:9
pub const vst2q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59185:9
pub const vst2q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59200:9
pub const vst2q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59215:9
pub const vst2q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59230:9
pub const vst2q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59245:9
pub const vst2_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59259:9
pub const vst2_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59263:9
pub const vst2_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59267:9
pub const vst3_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59271:9
pub const vst3q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59276:9
pub const vst3q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59292:9
pub const vst3q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59308:9
pub const vst3q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59324:9
pub const vst3_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59339:9
pub const vst3_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59343:9
pub const vst3q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59348:9
pub const vst3q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59364:9
pub const vst3q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59380:9
pub const vst3q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59396:9
pub const vst3q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59412:9
pub const vst3q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59428:9
pub const vst3q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59444:9
pub const vst3_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59459:9
pub const vst3_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59463:9
pub const vst3_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59467:9
pub const vst4_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59471:9
pub const vst4q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59476:9
pub const vst4q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59493:9
pub const vst4q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59510:9
pub const vst4q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59527:9
pub const vst4_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59543:9
pub const vst4_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59547:9
pub const vst4q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59552:9
pub const vst4q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59569:9
pub const vst4q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59586:9
pub const vst4q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59603:9
pub const vst4q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59620:9
pub const vst4q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59637:9
pub const vst4q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59654:9
pub const vst4_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59670:9
pub const vst4_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59674:9
pub const vst4_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59678:9
pub const vstrq_p128 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:59682:9
pub const vcopyq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_739`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62537:9
pub const vcopy_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_741`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62558:9
pub const vcopyq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_743`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62579:9
pub const vcopy_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_745`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62600:9
pub const vdotq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_747`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62960:9
pub const vdotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_749`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:62988:9
pub const vdot_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_751`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63016:9
pub const vdot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_753`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63044:9
pub const vduph_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63290:9
pub const vduph_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63307:9
pub const vfmah_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63324:9
pub const vfmaq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63353:9
pub const vfma_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63385:9
pub const vfmah_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63417:9
pub const vfmaq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63446:9
pub const vfma_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63478:9
pub const vfmaq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63510:9
pub const vfma_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63533:9
pub const vfmsh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_755`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63556:9
pub const vfmsq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_757`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63577:9
pub const vfms_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_759`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63601:9
pub const vfmsh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_761`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63625:9
pub const vfmsq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_763`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63646:9
pub const vfms_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_765`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63670:9
pub const vfmsq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63694:9
pub const vfms_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63717:9
pub const vmaxnmvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63740:9
pub const vmaxnmv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63757:9
pub const vmaxvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63774:9
pub const vmaxv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63791:9
pub const vminnmvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63808:9
pub const vminnmv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63825:9
pub const vminvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63842:9
pub const vminv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63859:9
pub const vmulq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_767`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63876:9
pub const vmul_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_769`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63897:9
pub const vmulxh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63962:9
pub const vmulxq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_771`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:63981:9
pub const vmulx_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_773`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64002:9
pub const vmulxh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64023:9
pub const vmulxq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_775`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64042:9
pub const vmulx_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_777`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64063:9
pub const vmulxq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64084:9
pub const vmulx_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64104:9
pub const vsudotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_779`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64511:9
pub const vsudot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_781`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64537:9
pub const vusdotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_783`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64563:9
pub const vusdot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_785`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64589:9
pub const vldap1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64614:9
pub const vldap1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64621:9
pub const vldap1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64639:9
pub const vldap1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64657:9
pub const vldap1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64675:9
pub const vldap1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64692:9
pub const vldap1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64698:9
pub const vldap1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64704:9
pub const vstl1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64710:9
pub const vstl1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64715:9
pub const vstl1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64728:9
pub const vstl1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64741:9
pub const vstl1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64754:9
pub const vstl1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64766:9
pub const vstl1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64770:9
pub const vstl1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:64774:9
pub const vxarq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65155:9
pub const vsm3tt1aq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65230:9
pub const vsm3tt1bq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65254:9
pub const vsm3tt2aq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65278:9
pub const vsm3tt2bq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65302:9
pub const vqrdmlahs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_787`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65370:9
pub const vqrdmlahh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_789`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65391:9
pub const vqrdmlahs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_791`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65412:9
pub const vqrdmlahh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_793`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65433:9
pub const vqrdmlahq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_795`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65454:9
pub const vqrdmlahq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_797`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65478:9
pub const vqrdmlah_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_799`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65502:9
pub const vqrdmlah_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_801`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65526:9
pub const vqrdmlshs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_803`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65560:9
pub const vqrdmlshh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_805`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65581:9
pub const vqrdmlshs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_807`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65602:9
pub const vqrdmlshh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_809`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65623:9
pub const vqrdmlshq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_811`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65644:9
pub const vqrdmlshq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_813`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65668:9
pub const vqrdmlsh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_815`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65692:9
pub const vqrdmlsh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_817`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65716:9
pub const vcmla_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_819`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65801:9
pub const vcmlaq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_820`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65812:9
pub const vcmla_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_822`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65839:9
pub const vcmlaq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_824`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65864:9
pub const vcmla_rot180_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_826`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65919:9
pub const vcmlaq_rot180_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_827`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65930:9
pub const vcmla_rot180_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_829`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65957:9
pub const vcmlaq_rot180_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_831`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:65982:9
pub const vcmla_rot270_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_833`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66037:9
pub const vcmlaq_rot270_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_834`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66048:9
pub const vcmla_rot270_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_836`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66075:9
pub const vcmlaq_rot270_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_838`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66100:9
pub const vcmla_rot90_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_840`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66155:9
pub const vcmlaq_rot90_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_841`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66166:9
pub const vcmla_rot90_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_843`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66193:9
pub const vcmlaq_rot90_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_845`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:66218:9
pub const vget_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_847`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67206:9
pub const vgetq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_850`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67235:9
pub const vmlal_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_853`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67402:9
pub const vmlal_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_855`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67426:9
pub const vmlal_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_857`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67450:9
pub const vmlal_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_859`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67474:9
pub const vmlsl_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_861`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67724:9
pub const vmlsl_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_863`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67748:9
pub const vmlsl_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_865`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67772:9
pub const vmlsl_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_867`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67796:9
pub const vset_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_869`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67908:9
pub const vsetq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_871`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67934:9
pub const vbfmlalbq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_873`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67960:9
pub const vbfmlalbq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_875`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:67984:9
pub const vbfmlaltq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_877`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68008:9
pub const vbfmlaltq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_879`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68032:9
pub const vsudotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_881`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68088:9
pub const vsudot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_883`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68114:9
pub const vcopyq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_885`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68447:9
pub const vcopyq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_887`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68467:9
pub const vcopy_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_889`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68486:9
pub const vcopy_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_890`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68493:9
pub const vcopyq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_891`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68501:9
pub const vcopyq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_893`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68522:9
pub const vcopy_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_895`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68543:9
pub const vcopy_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_897`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68562:9
pub const vmulx_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_899`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68932:9
pub const vmulx_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_900`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68943:9
pub const vfmlalq_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_902`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68968:9
pub const vfmlal_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_904`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:68992:9
pub const vfmlalq_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_906`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69016:9
pub const vfmlal_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_908`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69040:9
pub const vfmlalq_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_910`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69064:9
pub const vfmlal_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_912`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69088:9
pub const vfmlalq_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_914`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69112:9
pub const vfmlal_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_916`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69136:9
pub const vfmlslq_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_918`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69160:9
pub const vfmlsl_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_920`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69184:9
pub const vfmlslq_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_922`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69208:9
pub const vfmlsl_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_924`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69232:9
pub const vfmlslq_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_926`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69256:9
pub const vfmlsl_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_928`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69280:9
pub const vfmlslq_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_930`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69304:9
pub const vfmlsl_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_932`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69328:9
pub const vmulh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_934`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69352:9
pub const vmulh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_936`");
// /nix/store/6wmv14h56vv8zc5769w6087ycbx8x17g-zig-0.13.0/lib/zig/include/arm_neon.h:69371:9
pub const SDL_CACHELINE_SIZE = @as(c_int, 128);
pub const SDL_events_h_ = "";
pub const SDL_video_h_ = "";
pub const SDL_pixels_h_ = "";
pub const SDL_ALPHA_OPAQUE = @as(c_int, 255);
pub const SDL_ALPHA_TRANSPARENT = @as(c_int, 0);
pub inline fn SDL_DEFINE_PIXELFOURCC(A: anytype, B: anytype, C: anytype, D: anytype) @TypeOf(SDL_FOURCC(A, B, C, D)) {
    _ = &A;
    _ = &B;
    _ = &C;
    _ = &D;
    return SDL_FOURCC(A, B, C, D);
}
pub inline fn SDL_DEFINE_PIXELFORMAT(@"type": anytype, order: anytype, layout: anytype, bits: anytype, bytes: anytype) @TypeOf((((((@as(c_int, 1) << @as(c_int, 28)) | (@"type" << @as(c_int, 24))) | (order << @as(c_int, 20))) | (layout << @as(c_int, 16))) | (bits << @as(c_int, 8))) | (bytes << @as(c_int, 0))) {
    _ = &@"type";
    _ = &order;
    _ = &layout;
    _ = &bits;
    _ = &bytes;
    return (((((@as(c_int, 1) << @as(c_int, 28)) | (@"type" << @as(c_int, 24))) | (order << @as(c_int, 20))) | (layout << @as(c_int, 16))) | (bits << @as(c_int, 8))) | (bytes << @as(c_int, 0));
}
pub inline fn SDL_PIXELFLAG(X: anytype) @TypeOf((X >> @as(c_int, 28)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 28)) & @as(c_int, 0x0F);
}
pub inline fn SDL_PIXELTYPE(X: anytype) @TypeOf((X >> @as(c_int, 24)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 24)) & @as(c_int, 0x0F);
}
pub inline fn SDL_PIXELORDER(X: anytype) @TypeOf((X >> @as(c_int, 20)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 20)) & @as(c_int, 0x0F);
}
pub inline fn SDL_PIXELLAYOUT(X: anytype) @TypeOf((X >> @as(c_int, 16)) & @as(c_int, 0x0F)) {
    _ = &X;
    return (X >> @as(c_int, 16)) & @as(c_int, 0x0F);
}
pub inline fn SDL_BITSPERPIXEL(X: anytype) @TypeOf((X >> @as(c_int, 8)) & @as(c_int, 0xFF)) {
    _ = &X;
    return (X >> @as(c_int, 8)) & @as(c_int, 0xFF);
}
pub inline fn SDL_BYTESPERPIXEL(X: anytype) @TypeOf(if (SDL_ISPIXELFORMAT_FOURCC(X)) if (((X == SDL_PIXELFORMAT_YUY2) or (X == SDL_PIXELFORMAT_UYVY)) or (X == SDL_PIXELFORMAT_YVYU)) @as(c_int, 2) else @as(c_int, 1) else (X >> @as(c_int, 0)) & @as(c_int, 0xFF)) {
    _ = &X;
    return if (SDL_ISPIXELFORMAT_FOURCC(X)) if (((X == SDL_PIXELFORMAT_YUY2) or (X == SDL_PIXELFORMAT_UYVY)) or (X == SDL_PIXELFORMAT_YVYU)) @as(c_int, 2) else @as(c_int, 1) else (X >> @as(c_int, 0)) & @as(c_int, 0xFF);
}
pub inline fn SDL_ISPIXELFORMAT_INDEXED(format: anytype) @TypeOf(!(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8))) {
    _ = &format;
    return !(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8));
}
pub inline fn SDL_ISPIXELFORMAT_PACKED(format: anytype) @TypeOf(!(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32))) {
    _ = &format;
    return !(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32));
}
pub inline fn SDL_ISPIXELFORMAT_ARRAY(format: anytype) @TypeOf(!(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU32)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32))) {
    _ = &format;
    return !(SDL_ISPIXELFORMAT_FOURCC(format) != 0) and (((((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU8) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU32)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16)) or (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32));
}
pub inline fn SDL_ISPIXELFORMAT_ALPHA(format: anytype) @TypeOf(((SDL_ISPIXELFORMAT_PACKED(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA))) or ((SDL_ISPIXELFORMAT_ARRAY(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_ARRAYORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_BGRA)))) {
    _ = &format;
    return ((SDL_ISPIXELFORMAT_PACKED(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA))) or ((SDL_ISPIXELFORMAT_ARRAY(format) != 0) and ((((SDL_PIXELORDER(format) == SDL_ARRAYORDER_ARGB) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_RGBA)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_ABGR)) or (SDL_PIXELORDER(format) == SDL_ARRAYORDER_BGRA)));
}
pub inline fn SDL_ISPIXELFORMAT_FOURCC(format: anytype) @TypeOf((format != 0) and (SDL_PIXELFLAG(format) != @as(c_int, 1))) {
    _ = &format;
    return (format != 0) and (SDL_PIXELFLAG(format) != @as(c_int, 1));
}
pub const SDL_Colour = SDL_Color;
pub const SDL_rect_h_ = "";
pub const SDL_surface_h_ = "";
pub const SDL_blendmode_h_ = "";
pub const SDL_SWSURFACE = @as(c_int, 0);
pub const SDL_PREALLOC = @as(c_int, 0x00000001);
pub const SDL_RLEACCEL = @as(c_int, 0x00000002);
pub const SDL_DONTFREE = @as(c_int, 0x00000004);
pub const SDL_SIMD_ALIGNED = @as(c_int, 0x00000008);
pub inline fn SDL_MUSTLOCK(S: anytype) @TypeOf((S.*.flags & SDL_RLEACCEL) != @as(c_int, 0)) {
    _ = &S;
    return (S.*.flags & SDL_RLEACCEL) != @as(c_int, 0);
}
pub inline fn SDL_LoadBMP(file: anytype) @TypeOf(SDL_LoadBMP_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1))) {
    _ = &file;
    return SDL_LoadBMP_RW(SDL_RWFromFile(file, "rb"), @as(c_int, 1));
}
pub inline fn SDL_SaveBMP(surface: anytype, file: anytype) @TypeOf(SDL_SaveBMP_RW(surface, SDL_RWFromFile(file, "wb"), @as(c_int, 1))) {
    _ = &surface;
    _ = &file;
    return SDL_SaveBMP_RW(surface, SDL_RWFromFile(file, "wb"), @as(c_int, 1));
}
pub const SDL_BlitSurface = SDL_UpperBlit;
pub const SDL_BlitScaled = SDL_UpperBlitScaled;
pub const SDL_WINDOWPOS_UNDEFINED_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x1FFF0000, .hex);
pub inline fn SDL_WINDOWPOS_UNDEFINED_DISPLAY(X: anytype) @TypeOf(SDL_WINDOWPOS_UNDEFINED_MASK | X) {
    _ = &X;
    return SDL_WINDOWPOS_UNDEFINED_MASK | X;
}
pub const SDL_WINDOWPOS_UNDEFINED = SDL_WINDOWPOS_UNDEFINED_DISPLAY(@as(c_int, 0));
pub inline fn SDL_WINDOWPOS_ISUNDEFINED(X: anytype) @TypeOf((X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_UNDEFINED_MASK) {
    _ = &X;
    return (X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_UNDEFINED_MASK;
}
pub const SDL_WINDOWPOS_CENTERED_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x2FFF0000, .hex);
pub inline fn SDL_WINDOWPOS_CENTERED_DISPLAY(X: anytype) @TypeOf(SDL_WINDOWPOS_CENTERED_MASK | X) {
    _ = &X;
    return SDL_WINDOWPOS_CENTERED_MASK | X;
}
pub const SDL_WINDOWPOS_CENTERED = SDL_WINDOWPOS_CENTERED_DISPLAY(@as(c_int, 0));
pub inline fn SDL_WINDOWPOS_ISCENTERED(X: anytype) @TypeOf((X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_CENTERED_MASK) {
    _ = &X;
    return (X & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFFFF0000, .hex)) == SDL_WINDOWPOS_CENTERED_MASK;
}
pub const SDL_keyboard_h_ = "";
pub const SDL_keycode_h_ = "";
pub const SDL_scancode_h_ = "";
pub const SDLK_SCANCODE_MASK = @as(c_int, 1) << @as(c_int, 30);
pub inline fn SDL_SCANCODE_TO_KEYCODE(X: anytype) @TypeOf(X | SDLK_SCANCODE_MASK) {
    _ = &X;
    return X | SDLK_SCANCODE_MASK;
}
pub const SDL_mouse_h_ = "";
pub inline fn SDL_BUTTON(X: anytype) @TypeOf(@as(c_int, 1) << (X - @as(c_int, 1))) {
    _ = &X;
    return @as(c_int, 1) << (X - @as(c_int, 1));
}
pub const SDL_BUTTON_LEFT = @as(c_int, 1);
pub const SDL_BUTTON_MIDDLE = @as(c_int, 2);
pub const SDL_BUTTON_RIGHT = @as(c_int, 3);
pub const SDL_BUTTON_X1 = @as(c_int, 4);
pub const SDL_BUTTON_X2 = @as(c_int, 5);
pub const SDL_BUTTON_LMASK = SDL_BUTTON(SDL_BUTTON_LEFT);
pub const SDL_BUTTON_MMASK = SDL_BUTTON(SDL_BUTTON_MIDDLE);
pub const SDL_BUTTON_RMASK = SDL_BUTTON(SDL_BUTTON_RIGHT);
pub const SDL_BUTTON_X1MASK = SDL_BUTTON(SDL_BUTTON_X1);
pub const SDL_BUTTON_X2MASK = SDL_BUTTON(SDL_BUTTON_X2);
pub const SDL_joystick_h_ = "";
pub const SDL_guid_h_ = "";
pub const SDL_IPHONE_MAX_GFORCE = @as(f64, 5.0);
pub const SDL_VIRTUAL_JOYSTICK_DESC_VERSION = @as(c_int, 1);
pub const SDL_JOYSTICK_AXIS_MAX = @as(c_int, 32767);
pub const SDL_JOYSTICK_AXIS_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const SDL_HAT_CENTERED = @as(c_int, 0x00);
pub const SDL_HAT_UP = @as(c_int, 0x01);
pub const SDL_HAT_RIGHT = @as(c_int, 0x02);
pub const SDL_HAT_DOWN = @as(c_int, 0x04);
pub const SDL_HAT_LEFT = @as(c_int, 0x08);
pub const SDL_HAT_RIGHTUP = SDL_HAT_RIGHT | SDL_HAT_UP;
pub const SDL_HAT_RIGHTDOWN = SDL_HAT_RIGHT | SDL_HAT_DOWN;
pub const SDL_HAT_LEFTUP = SDL_HAT_LEFT | SDL_HAT_UP;
pub const SDL_HAT_LEFTDOWN = SDL_HAT_LEFT | SDL_HAT_DOWN;
pub const SDL_gamecontroller_h_ = "";
pub const SDL_sensor_h_ = "";
pub const SDL_STANDARD_GRAVITY = @as(f32, 9.80665);
pub inline fn SDL_GameControllerAddMappingsFromFile(file: anytype) @TypeOf(SDL_GameControllerAddMappingsFromRW(SDL_RWFromFile(file, "rb"), @as(c_int, 1))) {
    _ = &file;
    return SDL_GameControllerAddMappingsFromRW(SDL_RWFromFile(file, "rb"), @as(c_int, 1));
}
pub const SDL_quit_h_ = "";
pub inline fn SDL_QuitRequested() @TypeOf(SDL_PeepEvents(NULL, @as(c_int, 0), SDL_PEEKEVENT, SDL_QUIT, SDL_QUIT) > @as(c_int, 0)) {
    return blk_1: {
        _ = SDL_PumpEvents();
        break :blk_1 SDL_PeepEvents(NULL, @as(c_int, 0), SDL_PEEKEVENT, SDL_QUIT, SDL_QUIT) > @as(c_int, 0);
    };
}
pub const SDL_gesture_h_ = "";
pub const SDL_touch_h_ = "";
pub const SDL_TOUCH_MOUSEID = @import("std").zig.c_translation.cast(Uint32, -@as(c_int, 1));
pub const SDL_MOUSE_TOUCHID = @import("std").zig.c_translation.cast(Sint64, -@as(c_int, 1));
pub const SDL_RELEASED = @as(c_int, 0);
pub const SDL_PRESSED = @as(c_int, 1);
pub const SDL_TEXTEDITINGEVENT_TEXT_SIZE = @as(c_int, 32);
pub const SDL_TEXTINPUTEVENT_TEXT_SIZE = @as(c_int, 32);
pub const SDL_QUERY = -@as(c_int, 1);
pub const SDL_IGNORE = @as(c_int, 0);
pub const SDL_DISABLE = @as(c_int, 0);
pub const SDL_ENABLE = @as(c_int, 1);
pub inline fn SDL_GetEventState(@"type": anytype) @TypeOf(SDL_EventState(@"type", SDL_QUERY)) {
    _ = &@"type";
    return SDL_EventState(@"type", SDL_QUERY);
}
pub const SDL_filesystem_h_ = "";
pub const SDL_haptic_h_ = "";
pub const SDL_HAPTIC_CONSTANT = @as(c_uint, 1) << @as(c_int, 0);
pub const SDL_HAPTIC_SINE = @as(c_uint, 1) << @as(c_int, 1);
pub const SDL_HAPTIC_LEFTRIGHT = @as(c_uint, 1) << @as(c_int, 2);
pub const SDL_HAPTIC_TRIANGLE = @as(c_uint, 1) << @as(c_int, 3);
pub const SDL_HAPTIC_SAWTOOTHUP = @as(c_uint, 1) << @as(c_int, 4);
pub const SDL_HAPTIC_SAWTOOTHDOWN = @as(c_uint, 1) << @as(c_int, 5);
pub const SDL_HAPTIC_RAMP = @as(c_uint, 1) << @as(c_int, 6);
pub const SDL_HAPTIC_SPRING = @as(c_uint, 1) << @as(c_int, 7);
pub const SDL_HAPTIC_DAMPER = @as(c_uint, 1) << @as(c_int, 8);
pub const SDL_HAPTIC_INERTIA = @as(c_uint, 1) << @as(c_int, 9);
pub const SDL_HAPTIC_FRICTION = @as(c_uint, 1) << @as(c_int, 10);
pub const SDL_HAPTIC_CUSTOM = @as(c_uint, 1) << @as(c_int, 11);
pub const SDL_HAPTIC_GAIN = @as(c_uint, 1) << @as(c_int, 12);
pub const SDL_HAPTIC_AUTOCENTER = @as(c_uint, 1) << @as(c_int, 13);
pub const SDL_HAPTIC_STATUS = @as(c_uint, 1) << @as(c_int, 14);
pub const SDL_HAPTIC_PAUSE = @as(c_uint, 1) << @as(c_int, 15);
pub const SDL_HAPTIC_POLAR = @as(c_int, 0);
pub const SDL_HAPTIC_CARTESIAN = @as(c_int, 1);
pub const SDL_HAPTIC_SPHERICAL = @as(c_int, 2);
pub const SDL_HAPTIC_STEERING_AXIS = @as(c_int, 3);
pub const SDL_HAPTIC_INFINITY = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const SDL_hidapi_h_ = "";
pub const SDL_hints_h_ = "";
pub const SDL_HINT_ACCELEROMETER_AS_JOYSTICK = "SDL_ACCELEROMETER_AS_JOYSTICK";
pub const SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED";
pub const SDL_HINT_ALLOW_TOPMOST = "SDL_ALLOW_TOPMOST";
pub const SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION = "SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION";
pub const SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION = "SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION";
pub const SDL_HINT_ANDROID_BLOCK_ON_PAUSE = "SDL_ANDROID_BLOCK_ON_PAUSE";
pub const SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO = "SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO";
pub const SDL_HINT_ANDROID_TRAP_BACK_BUTTON = "SDL_ANDROID_TRAP_BACK_BUTTON";
pub const SDL_HINT_APP_NAME = "SDL_APP_NAME";
pub const SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS";
pub const SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION";
pub const SDL_HINT_AUDIO_CATEGORY = "SDL_AUDIO_CATEGORY";
pub const SDL_HINT_AUDIO_DEVICE_APP_NAME = "SDL_AUDIO_DEVICE_APP_NAME";
pub const SDL_HINT_AUDIO_DEVICE_STREAM_NAME = "SDL_AUDIO_DEVICE_STREAM_NAME";
pub const SDL_HINT_AUDIO_DEVICE_STREAM_ROLE = "SDL_AUDIO_DEVICE_STREAM_ROLE";
pub const SDL_HINT_AUDIO_RESAMPLING_MODE = "SDL_AUDIO_RESAMPLING_MODE";
pub const SDL_HINT_AUTO_UPDATE_JOYSTICKS = "SDL_AUTO_UPDATE_JOYSTICKS";
pub const SDL_HINT_AUTO_UPDATE_SENSORS = "SDL_AUTO_UPDATE_SENSORS";
pub const SDL_HINT_BMP_SAVE_LEGACY_FORMAT = "SDL_BMP_SAVE_LEGACY_FORMAT";
pub const SDL_HINT_DISPLAY_USABLE_BOUNDS = "SDL_DISPLAY_USABLE_BOUNDS";
pub const SDL_HINT_EMSCRIPTEN_ASYNCIFY = "SDL_EMSCRIPTEN_ASYNCIFY";
pub const SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT";
pub const SDL_HINT_ENABLE_STEAM_CONTROLLERS = "SDL_ENABLE_STEAM_CONTROLLERS";
pub const SDL_HINT_EVENT_LOGGING = "SDL_EVENT_LOGGING";
pub const SDL_HINT_FORCE_RAISEWINDOW = "SDL_HINT_FORCE_RAISEWINDOW";
pub const SDL_HINT_FRAMEBUFFER_ACCELERATION = "SDL_FRAMEBUFFER_ACCELERATION";
pub const SDL_HINT_GAMECONTROLLERCONFIG = "SDL_GAMECONTROLLERCONFIG";
pub const SDL_HINT_GAMECONTROLLERCONFIG_FILE = "SDL_GAMECONTROLLERCONFIG_FILE";
pub const SDL_HINT_GAMECONTROLLERTYPE = "SDL_GAMECONTROLLERTYPE";
pub const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES = "SDL_GAMECONTROLLER_IGNORE_DEVICES";
pub const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT";
pub const SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS = "SDL_GAMECONTROLLER_USE_BUTTON_LABELS";
pub const SDL_HINT_GRAB_KEYBOARD = "SDL_GRAB_KEYBOARD";
pub const SDL_HINT_IDLE_TIMER_DISABLED = "SDL_IOS_IDLE_TIMER_DISABLED";
pub const SDL_HINT_IME_INTERNAL_EDITING = "SDL_IME_INTERNAL_EDITING";
pub const SDL_HINT_IME_SHOW_UI = "SDL_IME_SHOW_UI";
pub const SDL_HINT_IME_SUPPORT_EXTENDED_TEXT = "SDL_IME_SUPPORT_EXTENDED_TEXT";
pub const SDL_HINT_IOS_HIDE_HOME_INDICATOR = "SDL_IOS_HIDE_HOME_INDICATOR";
pub const SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS";
pub const SDL_HINT_JOYSTICK_HIDAPI = "SDL_JOYSTICK_HIDAPI";
pub const SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE = "SDL_JOYSTICK_HIDAPI_GAMECUBE";
pub const SDL_HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE = "SDL_JOYSTICK_GAMECUBE_RUMBLE_BRAKE";
pub const SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS = "SDL_JOYSTICK_HIDAPI_JOY_CONS";
pub const SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS";
pub const SDL_HINT_JOYSTICK_HIDAPI_LUNA = "SDL_JOYSTICK_HIDAPI_LUNA";
pub const SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC";
pub const SDL_HINT_JOYSTICK_HIDAPI_SHIELD = "SDL_JOYSTICK_HIDAPI_SHIELD";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS4 = "SDL_JOYSTICK_HIDAPI_PS4";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS5 = "SDL_JOYSTICK_HIDAPI_PS5";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE";
pub const SDL_HINT_JOYSTICK_HIDAPI_STADIA = "SDL_JOYSTICK_HIDAPI_STADIA";
pub const SDL_HINT_JOYSTICK_HIDAPI_STEAM = "SDL_JOYSTICK_HIDAPI_STEAM";
pub const SDL_HINT_JOYSTICK_HIDAPI_SWITCH = "SDL_JOYSTICK_HIDAPI_SWITCH";
pub const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED";
pub const SDL_HINT_JOYSTICK_HIDAPI_XBOX = "SDL_JOYSTICK_HIDAPI_XBOX";
pub const SDL_HINT_JOYSTICK_RAWINPUT = "SDL_JOYSTICK_RAWINPUT";
pub const SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT";
pub const SDL_HINT_JOYSTICK_ROG_CHAKRAM = "SDL_JOYSTICK_ROG_CHAKRAM";
pub const SDL_HINT_JOYSTICK_THREAD = "SDL_JOYSTICK_THREAD";
pub const SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER = "SDL_KMSDRM_REQUIRE_DRM_MASTER";
pub const SDL_HINT_JOYSTICK_DEVICE = "SDL_JOYSTICK_DEVICE";
pub const SDL_HINT_LINUX_DIGITAL_HATS = "SDL_LINUX_DIGITAL_HATS";
pub const SDL_HINT_LINUX_HAT_DEADZONES = "SDL_LINUX_HAT_DEADZONES";
pub const SDL_HINT_LINUX_JOYSTICK_CLASSIC = "SDL_LINUX_JOYSTICK_CLASSIC";
pub const SDL_HINT_LINUX_JOYSTICK_DEADZONES = "SDL_LINUX_JOYSTICK_DEADZONES";
pub const SDL_HINT_MAC_BACKGROUND_APP = "SDL_MAC_BACKGROUND_APP";
pub const SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK";
pub const SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH = "SDL_MAC_OPENGL_ASYNC_DISPATCH";
pub const SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS = "SDL_MOUSE_DOUBLE_CLICK_RADIUS";
pub const SDL_HINT_MOUSE_DOUBLE_CLICK_TIME = "SDL_MOUSE_DOUBLE_CLICK_TIME";
pub const SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH = "SDL_MOUSE_FOCUS_CLICKTHROUGH";
pub const SDL_HINT_MOUSE_NORMAL_SPEED_SCALE = "SDL_MOUSE_NORMAL_SPEED_SCALE";
pub const SDL_HINT_MOUSE_RELATIVE_MODE_CENTER = "SDL_MOUSE_RELATIVE_MODE_CENTER";
pub const SDL_HINT_MOUSE_RELATIVE_MODE_WARP = "SDL_MOUSE_RELATIVE_MODE_WARP";
pub const SDL_HINT_MOUSE_RELATIVE_SCALING = "SDL_MOUSE_RELATIVE_SCALING";
pub const SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE = "SDL_MOUSE_RELATIVE_SPEED_SCALE";
pub const SDL_HINT_MOUSE_RELATIVE_WARP_MOTION = "SDL_MOUSE_RELATIVE_WARP_MOTION";
pub const SDL_HINT_MOUSE_TOUCH_EVENTS = "SDL_MOUSE_TOUCH_EVENTS";
pub const SDL_HINT_MOUSE_AUTO_CAPTURE = "SDL_MOUSE_AUTO_CAPTURE";
pub const SDL_HINT_NO_SIGNAL_HANDLERS = "SDL_NO_SIGNAL_HANDLERS";
pub const SDL_HINT_OPENGL_ES_DRIVER = "SDL_OPENGL_ES_DRIVER";
pub const SDL_HINT_ORIENTATIONS = "SDL_IOS_ORIENTATIONS";
pub const SDL_HINT_POLL_SENTINEL = "SDL_POLL_SENTINEL";
pub const SDL_HINT_PREFERRED_LOCALES = "SDL_PREFERRED_LOCALES";
pub const SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION = "SDL_QTWAYLAND_CONTENT_ORIENTATION";
pub const SDL_HINT_QTWAYLAND_WINDOW_FLAGS = "SDL_QTWAYLAND_WINDOW_FLAGS";
pub const SDL_HINT_RENDER_BATCHING = "SDL_RENDER_BATCHING";
pub const SDL_HINT_RENDER_LINE_METHOD = "SDL_RENDER_LINE_METHOD";
pub const SDL_HINT_RENDER_DIRECT3D11_DEBUG = "SDL_RENDER_DIRECT3D11_DEBUG";
pub const SDL_HINT_RENDER_DIRECT3D_THREADSAFE = "SDL_RENDER_DIRECT3D_THREADSAFE";
pub const SDL_HINT_RENDER_DRIVER = "SDL_RENDER_DRIVER";
pub const SDL_HINT_RENDER_LOGICAL_SIZE_MODE = "SDL_RENDER_LOGICAL_SIZE_MODE";
pub const SDL_HINT_RENDER_OPENGL_SHADERS = "SDL_RENDER_OPENGL_SHADERS";
pub const SDL_HINT_RENDER_SCALE_QUALITY = "SDL_RENDER_SCALE_QUALITY";
pub const SDL_HINT_RENDER_VSYNC = "SDL_RENDER_VSYNC";
pub const SDL_HINT_RETURN_KEY_HIDES_IME = "SDL_RETURN_KEY_HIDES_IME";
pub const SDL_HINT_RPI_VIDEO_LAYER = "SDL_RPI_VIDEO_LAYER";
pub const SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME";
pub const SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL";
pub const SDL_HINT_THREAD_PRIORITY_POLICY = "SDL_THREAD_PRIORITY_POLICY";
pub const SDL_HINT_THREAD_STACK_SIZE = "SDL_THREAD_STACK_SIZE";
pub const SDL_HINT_TIMER_RESOLUTION = "SDL_TIMER_RESOLUTION";
pub const SDL_HINT_TOUCH_MOUSE_EVENTS = "SDL_TOUCH_MOUSE_EVENTS";
pub const SDL_HINT_VITA_TOUCH_MOUSE_DEVICE = "SDL_HINT_VITA_TOUCH_MOUSE_DEVICE";
pub const SDL_HINT_TV_REMOTE_AS_JOYSTICK = "SDL_TV_REMOTE_AS_JOYSTICK";
pub const SDL_HINT_VIDEO_ALLOW_SCREENSAVER = "SDL_VIDEO_ALLOW_SCREENSAVER";
pub const SDL_HINT_VIDEO_DOUBLE_BUFFER = "SDL_VIDEO_DOUBLE_BUFFER";
pub const SDL_HINT_VIDEO_EGL_ALLOW_TRANSPARENCY = "SDL_VIDEO_EGL_ALLOW_TRANSPARENCY";
pub const SDL_HINT_VIDEO_EXTERNAL_CONTEXT = "SDL_VIDEO_EXTERNAL_CONTEXT";
pub const SDL_HINT_VIDEO_HIGHDPI_DISABLED = "SDL_VIDEO_HIGHDPI_DISABLED";
pub const SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES = "SDL_VIDEO_MAC_FULLSCREEN_SPACES";
pub const SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS";
pub const SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR";
pub const SDL_HINT_VIDEO_WAYLAND_PREFER_LIBDECOR = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR";
pub const SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION = "SDL_VIDEO_WAYLAND_MODE_EMULATION";
pub const SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT = "SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT";
pub const SDL_HINT_VIDEO_FOREIGN_WINDOW_OPENGL = "SDL_VIDEO_FOREIGN_WINDOW_OPENGL";
pub const SDL_HINT_VIDEO_FOREIGN_WINDOW_VULKAN = "SDL_VIDEO_FOREIGN_WINDOW_VULKAN";
pub const SDL_HINT_VIDEO_WIN_D3DCOMPILER = "SDL_VIDEO_WIN_D3DCOMPILER";
pub const SDL_HINT_VIDEO_X11_FORCE_EGL = "SDL_VIDEO_X11_FORCE_EGL";
pub const SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR";
pub const SDL_HINT_VIDEO_X11_NET_WM_PING = "SDL_VIDEO_X11_NET_WM_PING";
pub const SDL_HINT_VIDEO_X11_WINDOW_VISUALID = "SDL_VIDEO_X11_WINDOW_VISUALID";
pub const SDL_HINT_VIDEO_X11_XINERAMA = "SDL_VIDEO_X11_XINERAMA";
pub const SDL_HINT_VIDEO_X11_XRANDR = "SDL_VIDEO_X11_XRANDR";
pub const SDL_HINT_VIDEO_X11_XVIDMODE = "SDL_VIDEO_X11_XVIDMODE";
pub const SDL_HINT_WAVE_FACT_CHUNK = "SDL_WAVE_FACT_CHUNK";
pub const SDL_HINT_WAVE_RIFF_CHUNK_SIZE = "SDL_WAVE_RIFF_CHUNK_SIZE";
pub const SDL_HINT_WAVE_TRUNCATION = "SDL_WAVE_TRUNCATION";
pub const SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING = "SDL_WINDOWS_DISABLE_THREAD_NAMING";
pub const SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP = "SDL_WINDOWS_ENABLE_MESSAGELOOP";
pub const SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS = "SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS";
pub const SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL";
pub const SDL_HINT_WINDOWS_INTRESOURCE_ICON = "SDL_WINDOWS_INTRESOURCE_ICON";
pub const SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL";
pub const SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 = "SDL_WINDOWS_NO_CLOSE_ON_ALT_F4";
pub const SDL_HINT_WINDOWS_USE_D3D9EX = "SDL_WINDOWS_USE_D3D9EX";
pub const SDL_HINT_WINDOWS_DPI_AWARENESS = "SDL_WINDOWS_DPI_AWARENESS";
pub const SDL_HINT_WINDOWS_DPI_SCALING = "SDL_WINDOWS_DPI_SCALING";
pub const SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN";
pub const SDL_HINT_WINDOW_NO_ACTIVATION_WHEN_SHOWN = "SDL_WINDOW_NO_ACTIVATION_WHEN_SHOWN";
pub const SDL_HINT_WINRT_HANDLE_BACK_BUTTON = "SDL_WINRT_HANDLE_BACK_BUTTON";
pub const SDL_HINT_WINRT_PRIVACY_POLICY_LABEL = "SDL_WINRT_PRIVACY_POLICY_LABEL";
pub const SDL_HINT_WINRT_PRIVACY_POLICY_URL = "SDL_WINRT_PRIVACY_POLICY_URL";
pub const SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT = "SDL_X11_FORCE_OVERRIDE_REDIRECT";
pub const SDL_HINT_XINPUT_ENABLED = "SDL_XINPUT_ENABLED";
pub const SDL_HINT_DIRECTINPUT_ENABLED = "SDL_DIRECTINPUT_ENABLED";
pub const SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING = "SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING";
pub const SDL_HINT_AUDIO_INCLUDE_MONITORS = "SDL_AUDIO_INCLUDE_MONITORS";
pub const SDL_HINT_X11_WINDOW_TYPE = "SDL_X11_WINDOW_TYPE";
pub const SDL_HINT_QUIT_ON_LAST_WINDOW_CLOSE = "SDL_QUIT_ON_LAST_WINDOW_CLOSE";
pub const SDL_HINT_VIDEODRIVER = "SDL_VIDEODRIVER";
pub const SDL_HINT_AUDIODRIVER = "SDL_AUDIODRIVER";
pub const SDL_HINT_KMSDRM_DEVICE_INDEX = "SDL_KMSDRM_DEVICE_INDEX";
pub const SDL_HINT_TRACKPAD_IS_TOUCH_ONLY = "SDL_TRACKPAD_IS_TOUCH_ONLY";
pub const SDL_loadso_h_ = "";
pub const SDL_log_h_ = "";
pub const SDL_MAX_LOG_MESSAGE = @as(c_int, 4096);
pub const SDL_messagebox_h_ = "";
pub const SDL_metal_h_ = "";
pub const SDL_power_h_ = "";
pub const SDL_render_h_ = "";
pub const SDL_shape_h_ = "";
pub const SDL_NONSHAPEABLE_WINDOW = -@as(c_int, 1);
pub const SDL_INVALID_SHAPE_ARGUMENT = -@as(c_int, 2);
pub const SDL_WINDOW_LACKS_SHAPE = -@as(c_int, 3);
pub inline fn SDL_SHAPEMODEALPHA(mode: anytype) @TypeOf(((mode == ShapeModeDefault) or (mode == ShapeModeBinarizeAlpha)) or (mode == ShapeModeReverseBinarizeAlpha)) {
    _ = &mode;
    return ((mode == ShapeModeDefault) or (mode == ShapeModeBinarizeAlpha)) or (mode == ShapeModeReverseBinarizeAlpha);
}
pub const SDL_system_h_ = "";
pub const SDL_timer_h_ = "";
pub inline fn SDL_TICKS_PASSED(A: anytype, B: anytype) @TypeOf(@import("std").zig.c_translation.cast(Sint32, B - A) <= @as(c_int, 0)) {
    _ = &A;
    _ = &B;
    return @import("std").zig.c_translation.cast(Sint32, B - A) <= @as(c_int, 0);
}
pub const SDL_version_h_ = "";
pub const SDL_MAJOR_VERSION = @as(c_int, 2);
pub const SDL_MINOR_VERSION = @as(c_int, 24);
pub const SDL_PATCHLEVEL = @as(c_int, 2);
pub const SDL_VERSION = @compileError("unable to translate C expr: unexpected token '{'");
// /nix/store/f68ch14kvflmbhhiqlfqzbgk7ig0y5lp-SDL2-2.24.2-dev/include/SDL2/SDL_version.h:79:9
pub inline fn SDL_VERSIONNUM(X: anytype, Y: anytype, Z: anytype) @TypeOf(((X * @as(c_int, 1000)) + (Y * @as(c_int, 100))) + Z) {
    _ = &X;
    _ = &Y;
    _ = &Z;
    return ((X * @as(c_int, 1000)) + (Y * @as(c_int, 100))) + Z;
}
pub const SDL_COMPILEDVERSION = SDL_VERSIONNUM(SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
pub inline fn SDL_VERSION_ATLEAST(X: anytype, Y: anytype, Z: anytype) @TypeOf(((SDL_MAJOR_VERSION >= X) and ((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION >= Y))) and (((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION > Y)) or (SDL_PATCHLEVEL >= Z))) {
    _ = &X;
    _ = &Y;
    _ = &Z;
    return ((SDL_MAJOR_VERSION >= X) and ((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION >= Y))) and (((SDL_MAJOR_VERSION > X) or (SDL_MINOR_VERSION > Y)) or (SDL_PATCHLEVEL >= Z));
}
pub const _SDL_locale_h = "";
pub const SDL_misc_h_ = "";
pub const SDL_INIT_TIMER = @as(c_uint, 0x00000001);
pub const SDL_INIT_AUDIO = @as(c_uint, 0x00000010);
pub const SDL_INIT_VIDEO = @as(c_uint, 0x00000020);
pub const SDL_INIT_JOYSTICK = @as(c_uint, 0x00000200);
pub const SDL_INIT_HAPTIC = @as(c_uint, 0x00001000);
pub const SDL_INIT_GAMECONTROLLER = @as(c_uint, 0x00002000);
pub const SDL_INIT_EVENTS = @as(c_uint, 0x00004000);
pub const SDL_INIT_SENSOR = @as(c_uint, 0x00008000);
pub const SDL_INIT_NOPARACHUTE = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00100000, .hex);
pub const SDL_INIT_EVERYTHING = ((((((SDL_INIT_TIMER | SDL_INIT_AUDIO) | SDL_INIT_VIDEO) | SDL_INIT_EVENTS) | SDL_INIT_JOYSTICK) | SDL_INIT_HAPTIC) | SDL_INIT_GAMECONTROLLER) | SDL_INIT_SENSOR;
pub const SDL_vulkan_h_ = "";
pub const NO_SDL_VULKAN_TYPEDEFS = "";
pub const GLFW_INCLUDE_VULKAN = "";
pub const _glfw3_h_ = "";
pub const APIENTRY = "";
pub const GLFW_APIENTRY_DEFINED = "";
pub const GL_GLEXT_LEGACY = "";
pub const __gl_h_ = "";
pub const __gltypes_h_ = "";
pub const _OpenGLAvailability_H = "";
pub const __OS_AVAILABILITY__ = "";
pub const API_TO_BE_DEPRECATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_TO_BE_DEPRECATED_MACOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_TO_BE_DEPRECATED_IOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_TO_BE_DEPRECATED_TVOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_TO_BE_DEPRECATED_WATCHOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_TO_BE_DEPRECATED_DRIVERKIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_TO_BE_DEPRECATED_VISIONOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const API_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:97:13
pub const API_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:98:13
pub const API_AVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:99:13
pub const API_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:118:13
pub const API_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:119:13
pub const API_DEPRECATED_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:121:13
pub const API_DEPRECATED_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:122:13
pub const API_DEPRECATED_WITH_REPLACEMENT_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:124:13
pub const API_DEPRECATED_WITH_REPLACEMENT_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:125:13
pub const API_UNAVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:136:13
pub const API_UNAVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:138:13
pub const API_UNAVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:139:13
pub const SPI_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:204:11
pub const SPI_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:208:11
pub const SPI_AVAILABLE_END = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:212:11
pub const SPI_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:216:11
pub const SPI_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/os/availability.h:220:11
pub const OPENGL_AVAILABLE = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/System/Library/Frameworks/OpenGL.framework/Headers/OpenGLAvailability.h:11:10
pub const OPENGL_DEPRECATED = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/System/Library/Frameworks/OpenGL.framework/Headers/OpenGLAvailability.h:12:10
pub const OPENGL_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/System/Library/Frameworks/OpenGL.framework/Headers/OpenGLAvailability.h:13:10
pub inline fn OPENGL_ENUM_AVAILABLE(from: anytype) @TypeOf(OPENGL_AVAILABLE(from)) {
    _ = &from;
    return OPENGL_AVAILABLE(from);
}
pub inline fn OPENGL_ENUM_DEPRECATED(from: anytype, to: anytype) @TypeOf(OPENGL_DEPRECATED(from, to)) {
    _ = &from;
    _ = &to;
    return OPENGL_DEPRECATED(from, to);
}
pub inline fn OPENGL_ENUM_DEPRECATED_MSG(from: anytype, to: anytype, msg: anytype) @TypeOf(OPENGL_DEPRECATED_MSG(from, to, msg)) {
    _ = &from;
    _ = &to;
    _ = &msg;
    return OPENGL_DEPRECATED_MSG(from, to, msg);
}
pub const GL_LOGIC_OP = GL_INDEX_LOGIC_OP;
pub const GL_TEXTURE_COMPONENTS = GL_TEXTURE_INTERNAL_FORMAT;
pub const GL_VERSION_1_1 = @as(c_int, 1);
pub const GL_VERSION_1_2 = @as(c_int, 1);
pub const GL_VERSION_1_3 = @as(c_int, 1);
pub const GL_VERSION_1_4 = @as(c_int, 1);
pub const GL_VERSION_1_5 = @as(c_int, 1);
pub const GL_VERSION_2_0 = @as(c_int, 1);
pub const GL_VERSION_2_1 = @as(c_int, 1);
pub const GL_ACCUM = @as(c_int, 0x0100);
pub const GL_LOAD = @as(c_int, 0x0101);
pub const GL_RETURN = @as(c_int, 0x0102);
pub const GL_MULT = @as(c_int, 0x0103);
pub const GL_ADD = @as(c_int, 0x0104);
pub const GL_NEVER = @as(c_int, 0x0200);
pub const GL_LESS = @as(c_int, 0x0201);
pub const GL_EQUAL = @as(c_int, 0x0202);
pub const GL_LEQUAL = @as(c_int, 0x0203);
pub const GL_GREATER = @as(c_int, 0x0204);
pub const GL_NOTEQUAL = @as(c_int, 0x0205);
pub const GL_GEQUAL = @as(c_int, 0x0206);
pub const GL_ALWAYS = @as(c_int, 0x0207);
pub const GL_CURRENT_BIT = @as(c_int, 0x00000001);
pub const GL_POINT_BIT = @as(c_int, 0x00000002);
pub const GL_LINE_BIT = @as(c_int, 0x00000004);
pub const GL_POLYGON_BIT = @as(c_int, 0x00000008);
pub const GL_POLYGON_STIPPLE_BIT = @as(c_int, 0x00000010);
pub const GL_PIXEL_MODE_BIT = @as(c_int, 0x00000020);
pub const GL_LIGHTING_BIT = @as(c_int, 0x00000040);
pub const GL_FOG_BIT = @as(c_int, 0x00000080);
pub const GL_DEPTH_BUFFER_BIT = @as(c_int, 0x00000100);
pub const GL_ACCUM_BUFFER_BIT = @as(c_int, 0x00000200);
pub const GL_STENCIL_BUFFER_BIT = @as(c_int, 0x00000400);
pub const GL_VIEWPORT_BIT = @as(c_int, 0x00000800);
pub const GL_TRANSFORM_BIT = @as(c_int, 0x00001000);
pub const GL_ENABLE_BIT = @as(c_int, 0x00002000);
pub const GL_COLOR_BUFFER_BIT = @as(c_int, 0x00004000);
pub const GL_HINT_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const GL_EVAL_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const GL_LIST_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const GL_TEXTURE_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const GL_SCISSOR_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const GL_ALL_ATTRIB_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x000fffff, .hex);
pub const GL_POINTS = @as(c_int, 0x0000);
pub const GL_LINES = @as(c_int, 0x0001);
pub const GL_LINE_LOOP = @as(c_int, 0x0002);
pub const GL_LINE_STRIP = @as(c_int, 0x0003);
pub const GL_TRIANGLES = @as(c_int, 0x0004);
pub const GL_TRIANGLE_STRIP = @as(c_int, 0x0005);
pub const GL_TRIANGLE_FAN = @as(c_int, 0x0006);
pub const GL_QUADS = @as(c_int, 0x0007);
pub const GL_QUAD_STRIP = @as(c_int, 0x0008);
pub const GL_POLYGON = @as(c_int, 0x0009);
pub const GL_ZERO = @as(c_int, 0);
pub const GL_ONE = @as(c_int, 1);
pub const GL_SRC_COLOR = @as(c_int, 0x0300);
pub const GL_ONE_MINUS_SRC_COLOR = @as(c_int, 0x0301);
pub const GL_SRC_ALPHA = @as(c_int, 0x0302);
pub const GL_ONE_MINUS_SRC_ALPHA = @as(c_int, 0x0303);
pub const GL_DST_ALPHA = @as(c_int, 0x0304);
pub const GL_ONE_MINUS_DST_ALPHA = @as(c_int, 0x0305);
pub const GL_DST_COLOR = @as(c_int, 0x0306);
pub const GL_ONE_MINUS_DST_COLOR = @as(c_int, 0x0307);
pub const GL_SRC_ALPHA_SATURATE = @as(c_int, 0x0308);
pub const GL_TRUE = @as(c_int, 1);
pub const GL_FALSE = @as(c_int, 0);
pub const GL_CLIP_PLANE0 = @as(c_int, 0x3000);
pub const GL_CLIP_PLANE1 = @as(c_int, 0x3001);
pub const GL_CLIP_PLANE2 = @as(c_int, 0x3002);
pub const GL_CLIP_PLANE3 = @as(c_int, 0x3003);
pub const GL_CLIP_PLANE4 = @as(c_int, 0x3004);
pub const GL_CLIP_PLANE5 = @as(c_int, 0x3005);
pub const GL_BYTE = @as(c_int, 0x1400);
pub const GL_UNSIGNED_BYTE = @as(c_int, 0x1401);
pub const GL_SHORT = @as(c_int, 0x1402);
pub const GL_UNSIGNED_SHORT = @as(c_int, 0x1403);
pub const GL_INT = @as(c_int, 0x1404);
pub const GL_UNSIGNED_INT = @as(c_int, 0x1405);
pub const GL_FLOAT = @as(c_int, 0x1406);
pub const GL_2_BYTES = @as(c_int, 0x1407);
pub const GL_3_BYTES = @as(c_int, 0x1408);
pub const GL_4_BYTES = @as(c_int, 0x1409);
pub const GL_DOUBLE = @as(c_int, 0x140A);
pub const GL_NONE = @as(c_int, 0);
pub const GL_FRONT_LEFT = @as(c_int, 0x0400);
pub const GL_FRONT_RIGHT = @as(c_int, 0x0401);
pub const GL_BACK_LEFT = @as(c_int, 0x0402);
pub const GL_BACK_RIGHT = @as(c_int, 0x0403);
pub const GL_FRONT = @as(c_int, 0x0404);
pub const GL_BACK = @as(c_int, 0x0405);
pub const GL_LEFT = @as(c_int, 0x0406);
pub const GL_RIGHT = @as(c_int, 0x0407);
pub const GL_FRONT_AND_BACK = @as(c_int, 0x0408);
pub const GL_AUX0 = @as(c_int, 0x0409);
pub const GL_AUX1 = @as(c_int, 0x040A);
pub const GL_AUX2 = @as(c_int, 0x040B);
pub const GL_AUX3 = @as(c_int, 0x040C);
pub const GL_NO_ERROR = @as(c_int, 0);
pub const GL_INVALID_ENUM = @as(c_int, 0x0500);
pub const GL_INVALID_VALUE = @as(c_int, 0x0501);
pub const GL_INVALID_OPERATION = @as(c_int, 0x0502);
pub const GL_STACK_OVERFLOW = @as(c_int, 0x0503);
pub const GL_STACK_UNDERFLOW = @as(c_int, 0x0504);
pub const GL_OUT_OF_MEMORY = @as(c_int, 0x0505);
pub const GL_2D = @as(c_int, 0x0600);
pub const GL_3D = @as(c_int, 0x0601);
pub const GL_3D_COLOR = @as(c_int, 0x0602);
pub const GL_3D_COLOR_TEXTURE = @as(c_int, 0x0603);
pub const GL_4D_COLOR_TEXTURE = @as(c_int, 0x0604);
pub const GL_PASS_THROUGH_TOKEN = @as(c_int, 0x0700);
pub const GL_POINT_TOKEN = @as(c_int, 0x0701);
pub const GL_LINE_TOKEN = @as(c_int, 0x0702);
pub const GL_POLYGON_TOKEN = @as(c_int, 0x0703);
pub const GL_BITMAP_TOKEN = @as(c_int, 0x0704);
pub const GL_DRAW_PIXEL_TOKEN = @as(c_int, 0x0705);
pub const GL_COPY_PIXEL_TOKEN = @as(c_int, 0x0706);
pub const GL_LINE_RESET_TOKEN = @as(c_int, 0x0707);
pub const GL_EXP = @as(c_int, 0x0800);
pub const GL_EXP2 = @as(c_int, 0x0801);
pub const GL_CW = @as(c_int, 0x0900);
pub const GL_CCW = @as(c_int, 0x0901);
pub const GL_COEFF = @as(c_int, 0x0A00);
pub const GL_ORDER = @as(c_int, 0x0A01);
pub const GL_DOMAIN = @as(c_int, 0x0A02);
pub const GL_CURRENT_COLOR = @as(c_int, 0x0B00);
pub const GL_CURRENT_INDEX = @as(c_int, 0x0B01);
pub const GL_CURRENT_NORMAL = @as(c_int, 0x0B02);
pub const GL_CURRENT_TEXTURE_COORDS = @as(c_int, 0x0B03);
pub const GL_CURRENT_RASTER_COLOR = @as(c_int, 0x0B04);
pub const GL_CURRENT_RASTER_INDEX = @as(c_int, 0x0B05);
pub const GL_CURRENT_RASTER_TEXTURE_COORDS = @as(c_int, 0x0B06);
pub const GL_CURRENT_RASTER_POSITION = @as(c_int, 0x0B07);
pub const GL_CURRENT_RASTER_POSITION_VALID = @as(c_int, 0x0B08);
pub const GL_CURRENT_RASTER_DISTANCE = @as(c_int, 0x0B09);
pub const GL_POINT_SMOOTH = @as(c_int, 0x0B10);
pub const GL_POINT_SIZE = @as(c_int, 0x0B11);
pub const GL_POINT_SIZE_RANGE = @as(c_int, 0x0B12);
pub const GL_POINT_SIZE_GRANULARITY = @as(c_int, 0x0B13);
pub const GL_LINE_SMOOTH = @as(c_int, 0x0B20);
pub const GL_LINE_WIDTH = @as(c_int, 0x0B21);
pub const GL_LINE_WIDTH_RANGE = @as(c_int, 0x0B22);
pub const GL_LINE_WIDTH_GRANULARITY = @as(c_int, 0x0B23);
pub const GL_LINE_STIPPLE = @as(c_int, 0x0B24);
pub const GL_LINE_STIPPLE_PATTERN = @as(c_int, 0x0B25);
pub const GL_LINE_STIPPLE_REPEAT = @as(c_int, 0x0B26);
pub const GL_LIST_MODE = @as(c_int, 0x0B30);
pub const GL_MAX_LIST_NESTING = @as(c_int, 0x0B31);
pub const GL_LIST_BASE = @as(c_int, 0x0B32);
pub const GL_LIST_INDEX = @as(c_int, 0x0B33);
pub const GL_POLYGON_MODE = @as(c_int, 0x0B40);
pub const GL_POLYGON_SMOOTH = @as(c_int, 0x0B41);
pub const GL_POLYGON_STIPPLE = @as(c_int, 0x0B42);
pub const GL_EDGE_FLAG = @as(c_int, 0x0B43);
pub const GL_CULL_FACE = @as(c_int, 0x0B44);
pub const GL_CULL_FACE_MODE = @as(c_int, 0x0B45);
pub const GL_FRONT_FACE = @as(c_int, 0x0B46);
pub const GL_LIGHTING = @as(c_int, 0x0B50);
pub const GL_LIGHT_MODEL_LOCAL_VIEWER = @as(c_int, 0x0B51);
pub const GL_LIGHT_MODEL_TWO_SIDE = @as(c_int, 0x0B52);
pub const GL_LIGHT_MODEL_AMBIENT = @as(c_int, 0x0B53);
pub const GL_SHADE_MODEL = @as(c_int, 0x0B54);
pub const GL_COLOR_MATERIAL_FACE = @as(c_int, 0x0B55);
pub const GL_COLOR_MATERIAL_PARAMETER = @as(c_int, 0x0B56);
pub const GL_COLOR_MATERIAL = @as(c_int, 0x0B57);
pub const GL_FOG = @as(c_int, 0x0B60);
pub const GL_FOG_INDEX = @as(c_int, 0x0B61);
pub const GL_FOG_DENSITY = @as(c_int, 0x0B62);
pub const GL_FOG_START = @as(c_int, 0x0B63);
pub const GL_FOG_END = @as(c_int, 0x0B64);
pub const GL_FOG_MODE = @as(c_int, 0x0B65);
pub const GL_FOG_COLOR = @as(c_int, 0x0B66);
pub const GL_DEPTH_RANGE = @as(c_int, 0x0B70);
pub const GL_DEPTH_TEST = @as(c_int, 0x0B71);
pub const GL_DEPTH_WRITEMASK = @as(c_int, 0x0B72);
pub const GL_DEPTH_CLEAR_VALUE = @as(c_int, 0x0B73);
pub const GL_DEPTH_FUNC = @as(c_int, 0x0B74);
pub const GL_ACCUM_CLEAR_VALUE = @as(c_int, 0x0B80);
pub const GL_STENCIL_TEST = @as(c_int, 0x0B90);
pub const GL_STENCIL_CLEAR_VALUE = @as(c_int, 0x0B91);
pub const GL_STENCIL_FUNC = @as(c_int, 0x0B92);
pub const GL_STENCIL_VALUE_MASK = @as(c_int, 0x0B93);
pub const GL_STENCIL_FAIL = @as(c_int, 0x0B94);
pub const GL_STENCIL_PASS_DEPTH_FAIL = @as(c_int, 0x0B95);
pub const GL_STENCIL_PASS_DEPTH_PASS = @as(c_int, 0x0B96);
pub const GL_STENCIL_REF = @as(c_int, 0x0B97);
pub const GL_STENCIL_WRITEMASK = @as(c_int, 0x0B98);
pub const GL_MATRIX_MODE = @as(c_int, 0x0BA0);
pub const GL_NORMALIZE = @as(c_int, 0x0BA1);
pub const GL_VIEWPORT = @as(c_int, 0x0BA2);
pub const GL_MODELVIEW_STACK_DEPTH = @as(c_int, 0x0BA3);
pub const GL_PROJECTION_STACK_DEPTH = @as(c_int, 0x0BA4);
pub const GL_TEXTURE_STACK_DEPTH = @as(c_int, 0x0BA5);
pub const GL_MODELVIEW_MATRIX = @as(c_int, 0x0BA6);
pub const GL_PROJECTION_MATRIX = @as(c_int, 0x0BA7);
pub const GL_TEXTURE_MATRIX = @as(c_int, 0x0BA8);
pub const GL_ATTRIB_STACK_DEPTH = @as(c_int, 0x0BB0);
pub const GL_CLIENT_ATTRIB_STACK_DEPTH = @as(c_int, 0x0BB1);
pub const GL_ALPHA_TEST = @as(c_int, 0x0BC0);
pub const GL_ALPHA_TEST_FUNC = @as(c_int, 0x0BC1);
pub const GL_ALPHA_TEST_REF = @as(c_int, 0x0BC2);
pub const GL_DITHER = @as(c_int, 0x0BD0);
pub const GL_BLEND_DST = @as(c_int, 0x0BE0);
pub const GL_BLEND_SRC = @as(c_int, 0x0BE1);
pub const GL_BLEND = @as(c_int, 0x0BE2);
pub const GL_LOGIC_OP_MODE = @as(c_int, 0x0BF0);
pub const GL_INDEX_LOGIC_OP = @as(c_int, 0x0BF1);
pub const GL_COLOR_LOGIC_OP = @as(c_int, 0x0BF2);
pub const GL_AUX_BUFFERS = @as(c_int, 0x0C00);
pub const GL_DRAW_BUFFER = @as(c_int, 0x0C01);
pub const GL_READ_BUFFER = @as(c_int, 0x0C02);
pub const GL_SCISSOR_BOX = @as(c_int, 0x0C10);
pub const GL_SCISSOR_TEST = @as(c_int, 0x0C11);
pub const GL_INDEX_CLEAR_VALUE = @as(c_int, 0x0C20);
pub const GL_INDEX_WRITEMASK = @as(c_int, 0x0C21);
pub const GL_COLOR_CLEAR_VALUE = @as(c_int, 0x0C22);
pub const GL_COLOR_WRITEMASK = @as(c_int, 0x0C23);
pub const GL_INDEX_MODE = @as(c_int, 0x0C30);
pub const GL_RGBA_MODE = @as(c_int, 0x0C31);
pub const GL_DOUBLEBUFFER = @as(c_int, 0x0C32);
pub const GL_STEREO = @as(c_int, 0x0C33);
pub const GL_RENDER_MODE = @as(c_int, 0x0C40);
pub const GL_PERSPECTIVE_CORRECTION_HINT = @as(c_int, 0x0C50);
pub const GL_POINT_SMOOTH_HINT = @as(c_int, 0x0C51);
pub const GL_LINE_SMOOTH_HINT = @as(c_int, 0x0C52);
pub const GL_POLYGON_SMOOTH_HINT = @as(c_int, 0x0C53);
pub const GL_FOG_HINT = @as(c_int, 0x0C54);
pub const GL_TEXTURE_GEN_S = @as(c_int, 0x0C60);
pub const GL_TEXTURE_GEN_T = @as(c_int, 0x0C61);
pub const GL_TEXTURE_GEN_R = @as(c_int, 0x0C62);
pub const GL_TEXTURE_GEN_Q = @as(c_int, 0x0C63);
pub const GL_PIXEL_MAP_I_TO_I = @as(c_int, 0x0C70);
pub const GL_PIXEL_MAP_S_TO_S = @as(c_int, 0x0C71);
pub const GL_PIXEL_MAP_I_TO_R = @as(c_int, 0x0C72);
pub const GL_PIXEL_MAP_I_TO_G = @as(c_int, 0x0C73);
pub const GL_PIXEL_MAP_I_TO_B = @as(c_int, 0x0C74);
pub const GL_PIXEL_MAP_I_TO_A = @as(c_int, 0x0C75);
pub const GL_PIXEL_MAP_R_TO_R = @as(c_int, 0x0C76);
pub const GL_PIXEL_MAP_G_TO_G = @as(c_int, 0x0C77);
pub const GL_PIXEL_MAP_B_TO_B = @as(c_int, 0x0C78);
pub const GL_PIXEL_MAP_A_TO_A = @as(c_int, 0x0C79);
pub const GL_PIXEL_MAP_I_TO_I_SIZE = @as(c_int, 0x0CB0);
pub const GL_PIXEL_MAP_S_TO_S_SIZE = @as(c_int, 0x0CB1);
pub const GL_PIXEL_MAP_I_TO_R_SIZE = @as(c_int, 0x0CB2);
pub const GL_PIXEL_MAP_I_TO_G_SIZE = @as(c_int, 0x0CB3);
pub const GL_PIXEL_MAP_I_TO_B_SIZE = @as(c_int, 0x0CB4);
pub const GL_PIXEL_MAP_I_TO_A_SIZE = @as(c_int, 0x0CB5);
pub const GL_PIXEL_MAP_R_TO_R_SIZE = @as(c_int, 0x0CB6);
pub const GL_PIXEL_MAP_G_TO_G_SIZE = @as(c_int, 0x0CB7);
pub const GL_PIXEL_MAP_B_TO_B_SIZE = @as(c_int, 0x0CB8);
pub const GL_PIXEL_MAP_A_TO_A_SIZE = @as(c_int, 0x0CB9);
pub const GL_UNPACK_SWAP_BYTES = @as(c_int, 0x0CF0);
pub const GL_UNPACK_LSB_FIRST = @as(c_int, 0x0CF1);
pub const GL_UNPACK_ROW_LENGTH = @as(c_int, 0x0CF2);
pub const GL_UNPACK_SKIP_ROWS = @as(c_int, 0x0CF3);
pub const GL_UNPACK_SKIP_PIXELS = @as(c_int, 0x0CF4);
pub const GL_UNPACK_ALIGNMENT = @as(c_int, 0x0CF5);
pub const GL_PACK_SWAP_BYTES = @as(c_int, 0x0D00);
pub const GL_PACK_LSB_FIRST = @as(c_int, 0x0D01);
pub const GL_PACK_ROW_LENGTH = @as(c_int, 0x0D02);
pub const GL_PACK_SKIP_ROWS = @as(c_int, 0x0D03);
pub const GL_PACK_SKIP_PIXELS = @as(c_int, 0x0D04);
pub const GL_PACK_ALIGNMENT = @as(c_int, 0x0D05);
pub const GL_MAP_COLOR = @as(c_int, 0x0D10);
pub const GL_MAP_STENCIL = @as(c_int, 0x0D11);
pub const GL_INDEX_SHIFT = @as(c_int, 0x0D12);
pub const GL_INDEX_OFFSET = @as(c_int, 0x0D13);
pub const GL_RED_SCALE = @as(c_int, 0x0D14);
pub const GL_RED_BIAS = @as(c_int, 0x0D15);
pub const GL_ZOOM_X = @as(c_int, 0x0D16);
pub const GL_ZOOM_Y = @as(c_int, 0x0D17);
pub const GL_GREEN_SCALE = @as(c_int, 0x0D18);
pub const GL_GREEN_BIAS = @as(c_int, 0x0D19);
pub const GL_BLUE_SCALE = @as(c_int, 0x0D1A);
pub const GL_BLUE_BIAS = @as(c_int, 0x0D1B);
pub const GL_ALPHA_SCALE = @as(c_int, 0x0D1C);
pub const GL_ALPHA_BIAS = @as(c_int, 0x0D1D);
pub const GL_DEPTH_SCALE = @as(c_int, 0x0D1E);
pub const GL_DEPTH_BIAS = @as(c_int, 0x0D1F);
pub const GL_MAX_EVAL_ORDER = @as(c_int, 0x0D30);
pub const GL_MAX_LIGHTS = @as(c_int, 0x0D31);
pub const GL_MAX_CLIP_PLANES = @as(c_int, 0x0D32);
pub const GL_MAX_TEXTURE_SIZE = @as(c_int, 0x0D33);
pub const GL_MAX_PIXEL_MAP_TABLE = @as(c_int, 0x0D34);
pub const GL_MAX_ATTRIB_STACK_DEPTH = @as(c_int, 0x0D35);
pub const GL_MAX_MODELVIEW_STACK_DEPTH = @as(c_int, 0x0D36);
pub const GL_MAX_NAME_STACK_DEPTH = @as(c_int, 0x0D37);
pub const GL_MAX_PROJECTION_STACK_DEPTH = @as(c_int, 0x0D38);
pub const GL_MAX_TEXTURE_STACK_DEPTH = @as(c_int, 0x0D39);
pub const GL_MAX_VIEWPORT_DIMS = @as(c_int, 0x0D3A);
pub const GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = @as(c_int, 0x0D3B);
pub const GL_SUBPIXEL_BITS = @as(c_int, 0x0D50);
pub const GL_INDEX_BITS = @as(c_int, 0x0D51);
pub const GL_RED_BITS = @as(c_int, 0x0D52);
pub const GL_GREEN_BITS = @as(c_int, 0x0D53);
pub const GL_BLUE_BITS = @as(c_int, 0x0D54);
pub const GL_ALPHA_BITS = @as(c_int, 0x0D55);
pub const GL_DEPTH_BITS = @as(c_int, 0x0D56);
pub const GL_STENCIL_BITS = @as(c_int, 0x0D57);
pub const GL_ACCUM_RED_BITS = @as(c_int, 0x0D58);
pub const GL_ACCUM_GREEN_BITS = @as(c_int, 0x0D59);
pub const GL_ACCUM_BLUE_BITS = @as(c_int, 0x0D5A);
pub const GL_ACCUM_ALPHA_BITS = @as(c_int, 0x0D5B);
pub const GL_NAME_STACK_DEPTH = @as(c_int, 0x0D70);
pub const GL_AUTO_NORMAL = @as(c_int, 0x0D80);
pub const GL_MAP1_COLOR_4 = @as(c_int, 0x0D90);
pub const GL_MAP1_INDEX = @as(c_int, 0x0D91);
pub const GL_MAP1_NORMAL = @as(c_int, 0x0D92);
pub const GL_MAP1_TEXTURE_COORD_1 = @as(c_int, 0x0D93);
pub const GL_MAP1_TEXTURE_COORD_2 = @as(c_int, 0x0D94);
pub const GL_MAP1_TEXTURE_COORD_3 = @as(c_int, 0x0D95);
pub const GL_MAP1_TEXTURE_COORD_4 = @as(c_int, 0x0D96);
pub const GL_MAP1_VERTEX_3 = @as(c_int, 0x0D97);
pub const GL_MAP1_VERTEX_4 = @as(c_int, 0x0D98);
pub const GL_MAP2_COLOR_4 = @as(c_int, 0x0DB0);
pub const GL_MAP2_INDEX = @as(c_int, 0x0DB1);
pub const GL_MAP2_NORMAL = @as(c_int, 0x0DB2);
pub const GL_MAP2_TEXTURE_COORD_1 = @as(c_int, 0x0DB3);
pub const GL_MAP2_TEXTURE_COORD_2 = @as(c_int, 0x0DB4);
pub const GL_MAP2_TEXTURE_COORD_3 = @as(c_int, 0x0DB5);
pub const GL_MAP2_TEXTURE_COORD_4 = @as(c_int, 0x0DB6);
pub const GL_MAP2_VERTEX_3 = @as(c_int, 0x0DB7);
pub const GL_MAP2_VERTEX_4 = @as(c_int, 0x0DB8);
pub const GL_MAP1_GRID_DOMAIN = @as(c_int, 0x0DD0);
pub const GL_MAP1_GRID_SEGMENTS = @as(c_int, 0x0DD1);
pub const GL_MAP2_GRID_DOMAIN = @as(c_int, 0x0DD2);
pub const GL_MAP2_GRID_SEGMENTS = @as(c_int, 0x0DD3);
pub const GL_TEXTURE_1D = @as(c_int, 0x0DE0);
pub const GL_TEXTURE_2D = @as(c_int, 0x0DE1);
pub const GL_FEEDBACK_BUFFER_POINTER = @as(c_int, 0x0DF0);
pub const GL_FEEDBACK_BUFFER_SIZE = @as(c_int, 0x0DF1);
pub const GL_FEEDBACK_BUFFER_TYPE = @as(c_int, 0x0DF2);
pub const GL_SELECTION_BUFFER_POINTER = @as(c_int, 0x0DF3);
pub const GL_SELECTION_BUFFER_SIZE = @as(c_int, 0x0DF4);
pub const GL_TEXTURE_WIDTH = @as(c_int, 0x1000);
pub const GL_TEXTURE_HEIGHT = @as(c_int, 0x1001);
pub const GL_TEXTURE_INTERNAL_FORMAT = @as(c_int, 0x1003);
pub const GL_TEXTURE_BORDER_COLOR = @as(c_int, 0x1004);
pub const GL_TEXTURE_BORDER = @as(c_int, 0x1005);
pub const GL_DONT_CARE = @as(c_int, 0x1100);
pub const GL_FASTEST = @as(c_int, 0x1101);
pub const GL_NICEST = @as(c_int, 0x1102);
pub const GL_LIGHT0 = @as(c_int, 0x4000);
pub const GL_LIGHT1 = @as(c_int, 0x4001);
pub const GL_LIGHT2 = @as(c_int, 0x4002);
pub const GL_LIGHT3 = @as(c_int, 0x4003);
pub const GL_LIGHT4 = @as(c_int, 0x4004);
pub const GL_LIGHT5 = @as(c_int, 0x4005);
pub const GL_LIGHT6 = @as(c_int, 0x4006);
pub const GL_LIGHT7 = @as(c_int, 0x4007);
pub const GL_AMBIENT = @as(c_int, 0x1200);
pub const GL_DIFFUSE = @as(c_int, 0x1201);
pub const GL_SPECULAR = @as(c_int, 0x1202);
pub const GL_POSITION = @as(c_int, 0x1203);
pub const GL_SPOT_DIRECTION = @as(c_int, 0x1204);
pub const GL_SPOT_EXPONENT = @as(c_int, 0x1205);
pub const GL_SPOT_CUTOFF = @as(c_int, 0x1206);
pub const GL_CONSTANT_ATTENUATION = @as(c_int, 0x1207);
pub const GL_LINEAR_ATTENUATION = @as(c_int, 0x1208);
pub const GL_QUADRATIC_ATTENUATION = @as(c_int, 0x1209);
pub const GL_COMPILE = @as(c_int, 0x1300);
pub const GL_COMPILE_AND_EXECUTE = @as(c_int, 0x1301);
pub const GL_CLEAR = @as(c_int, 0x1500);
pub const GL_AND = @as(c_int, 0x1501);
pub const GL_AND_REVERSE = @as(c_int, 0x1502);
pub const GL_COPY = @as(c_int, 0x1503);
pub const GL_AND_INVERTED = @as(c_int, 0x1504);
pub const GL_NOOP = @as(c_int, 0x1505);
pub const GL_XOR = @as(c_int, 0x1506);
pub const GL_OR = @as(c_int, 0x1507);
pub const GL_NOR = @as(c_int, 0x1508);
pub const GL_EQUIV = @as(c_int, 0x1509);
pub const GL_INVERT = @as(c_int, 0x150A);
pub const GL_OR_REVERSE = @as(c_int, 0x150B);
pub const GL_COPY_INVERTED = @as(c_int, 0x150C);
pub const GL_OR_INVERTED = @as(c_int, 0x150D);
pub const GL_NAND = @as(c_int, 0x150E);
pub const GL_SET = @as(c_int, 0x150F);
pub const GL_EMISSION = @as(c_int, 0x1600);
pub const GL_SHININESS = @as(c_int, 0x1601);
pub const GL_AMBIENT_AND_DIFFUSE = @as(c_int, 0x1602);
pub const GL_COLOR_INDEXES = @as(c_int, 0x1603);
pub const GL_MODELVIEW = @as(c_int, 0x1700);
pub const GL_PROJECTION = @as(c_int, 0x1701);
pub const GL_TEXTURE = @as(c_int, 0x1702);
pub const GL_COLOR = @as(c_int, 0x1800);
pub const GL_DEPTH = @as(c_int, 0x1801);
pub const GL_STENCIL = @as(c_int, 0x1802);
pub const GL_COLOR_INDEX = @as(c_int, 0x1900);
pub const GL_STENCIL_INDEX = @as(c_int, 0x1901);
pub const GL_DEPTH_COMPONENT = @as(c_int, 0x1902);
pub const GL_RED = @as(c_int, 0x1903);
pub const GL_GREEN = @as(c_int, 0x1904);
pub const GL_BLUE = @as(c_int, 0x1905);
pub const GL_ALPHA = @as(c_int, 0x1906);
pub const GL_RGB = @as(c_int, 0x1907);
pub const GL_RGBA = @as(c_int, 0x1908);
pub const GL_LUMINANCE = @as(c_int, 0x1909);
pub const GL_LUMINANCE_ALPHA = @as(c_int, 0x190A);
pub const GL_BITMAP = @as(c_int, 0x1A00);
pub const GL_POINT = @as(c_int, 0x1B00);
pub const GL_LINE = @as(c_int, 0x1B01);
pub const GL_FILL = @as(c_int, 0x1B02);
pub const GL_RENDER = @as(c_int, 0x1C00);
pub const GL_FEEDBACK = @as(c_int, 0x1C01);
pub const GL_SELECT = @as(c_int, 0x1C02);
pub const GL_FLAT = @as(c_int, 0x1D00);
pub const GL_SMOOTH = @as(c_int, 0x1D01);
pub const GL_KEEP = @as(c_int, 0x1E00);
pub const GL_REPLACE = @as(c_int, 0x1E01);
pub const GL_INCR = @as(c_int, 0x1E02);
pub const GL_DECR = @as(c_int, 0x1E03);
pub const GL_VENDOR = @as(c_int, 0x1F00);
pub const GL_RENDERER = @as(c_int, 0x1F01);
pub const GL_VERSION = @as(c_int, 0x1F02);
pub const GL_EXTENSIONS = @as(c_int, 0x1F03);
pub const GL_S = @as(c_int, 0x2000);
pub const GL_T = @as(c_int, 0x2001);
pub const GL_R = @as(c_int, 0x2002);
pub const GL_Q = @as(c_int, 0x2003);
pub const GL_MODULATE = @as(c_int, 0x2100);
pub const GL_DECAL = @as(c_int, 0x2101);
pub const GL_TEXTURE_ENV_MODE = @as(c_int, 0x2200);
pub const GL_TEXTURE_ENV_COLOR = @as(c_int, 0x2201);
pub const GL_TEXTURE_ENV = @as(c_int, 0x2300);
pub const GL_EYE_LINEAR = @as(c_int, 0x2400);
pub const GL_OBJECT_LINEAR = @as(c_int, 0x2401);
pub const GL_SPHERE_MAP = @as(c_int, 0x2402);
pub const GL_TEXTURE_GEN_MODE = @as(c_int, 0x2500);
pub const GL_OBJECT_PLANE = @as(c_int, 0x2501);
pub const GL_EYE_PLANE = @as(c_int, 0x2502);
pub const GL_NEAREST = @as(c_int, 0x2600);
pub const GL_LINEAR = @as(c_int, 0x2601);
pub const GL_NEAREST_MIPMAP_NEAREST = @as(c_int, 0x2700);
pub const GL_LINEAR_MIPMAP_NEAREST = @as(c_int, 0x2701);
pub const GL_NEAREST_MIPMAP_LINEAR = @as(c_int, 0x2702);
pub const GL_LINEAR_MIPMAP_LINEAR = @as(c_int, 0x2703);
pub const GL_TEXTURE_MAG_FILTER = @as(c_int, 0x2800);
pub const GL_TEXTURE_MIN_FILTER = @as(c_int, 0x2801);
pub const GL_TEXTURE_WRAP_S = @as(c_int, 0x2802);
pub const GL_TEXTURE_WRAP_T = @as(c_int, 0x2803);
pub const GL_CLAMP = @as(c_int, 0x2900);
pub const GL_REPEAT = @as(c_int, 0x2901);
pub const GL_CLIENT_PIXEL_STORE_BIT = @as(c_int, 0x00000001);
pub const GL_CLIENT_VERTEX_ARRAY_BIT = @as(c_int, 0x00000002);
pub const GL_CLIENT_ALL_ATTRIB_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffffffff, .hex);
pub const GL_POLYGON_OFFSET_FACTOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8038, .hex);
pub const GL_POLYGON_OFFSET_UNITS = @as(c_int, 0x2A00);
pub const GL_POLYGON_OFFSET_POINT = @as(c_int, 0x2A01);
pub const GL_POLYGON_OFFSET_LINE = @as(c_int, 0x2A02);
pub const GL_POLYGON_OFFSET_FILL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8037, .hex);
pub const GL_ALPHA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803B, .hex);
pub const GL_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803C, .hex);
pub const GL_ALPHA12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803D, .hex);
pub const GL_ALPHA16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803E, .hex);
pub const GL_LUMINANCE4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803F, .hex);
pub const GL_LUMINANCE8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8040, .hex);
pub const GL_LUMINANCE12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8041, .hex);
pub const GL_LUMINANCE16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8042, .hex);
pub const GL_LUMINANCE4_ALPHA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8043, .hex);
pub const GL_LUMINANCE6_ALPHA2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8044, .hex);
pub const GL_LUMINANCE8_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8045, .hex);
pub const GL_LUMINANCE12_ALPHA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8046, .hex);
pub const GL_LUMINANCE12_ALPHA12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8047, .hex);
pub const GL_LUMINANCE16_ALPHA16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8048, .hex);
pub const GL_INTENSITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8049, .hex);
pub const GL_INTENSITY4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804A, .hex);
pub const GL_INTENSITY8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804B, .hex);
pub const GL_INTENSITY12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804C, .hex);
pub const GL_INTENSITY16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804D, .hex);
pub const GL_R3_G3_B2 = @as(c_int, 0x2A10);
pub const GL_RGB4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x804F, .hex);
pub const GL_RGB5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8050, .hex);
pub const GL_RGB8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8051, .hex);
pub const GL_RGB10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8052, .hex);
pub const GL_RGB12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8053, .hex);
pub const GL_RGB16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8054, .hex);
pub const GL_RGBA2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8055, .hex);
pub const GL_RGBA4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8056, .hex);
pub const GL_RGB5_A1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8057, .hex);
pub const GL_RGBA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8058, .hex);
pub const GL_RGB10_A2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8059, .hex);
pub const GL_RGBA12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805A, .hex);
pub const GL_RGBA16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805B, .hex);
pub const GL_TEXTURE_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805C, .hex);
pub const GL_TEXTURE_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805D, .hex);
pub const GL_TEXTURE_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805E, .hex);
pub const GL_TEXTURE_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x805F, .hex);
pub const GL_TEXTURE_LUMINANCE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8060, .hex);
pub const GL_TEXTURE_INTENSITY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8061, .hex);
pub const GL_PROXY_TEXTURE_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8063, .hex);
pub const GL_PROXY_TEXTURE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8064, .hex);
pub const GL_TEXTURE_PRIORITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8066, .hex);
pub const GL_TEXTURE_RESIDENT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8067, .hex);
pub const GL_TEXTURE_BINDING_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8068, .hex);
pub const GL_TEXTURE_BINDING_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8069, .hex);
pub const GL_TEXTURE_BINDING_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806A, .hex);
pub const GL_VERTEX_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8074, .hex);
pub const GL_NORMAL_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8075, .hex);
pub const GL_COLOR_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8076, .hex);
pub const GL_INDEX_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8077, .hex);
pub const GL_TEXTURE_COORD_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8078, .hex);
pub const GL_EDGE_FLAG_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8079, .hex);
pub const GL_VERTEX_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807A, .hex);
pub const GL_VERTEX_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807B, .hex);
pub const GL_VERTEX_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807C, .hex);
pub const GL_NORMAL_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807E, .hex);
pub const GL_NORMAL_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x807F, .hex);
pub const GL_COLOR_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8081, .hex);
pub const GL_COLOR_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8082, .hex);
pub const GL_COLOR_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8083, .hex);
pub const GL_INDEX_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8085, .hex);
pub const GL_INDEX_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8086, .hex);
pub const GL_TEXTURE_COORD_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8088, .hex);
pub const GL_TEXTURE_COORD_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8089, .hex);
pub const GL_TEXTURE_COORD_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808A, .hex);
pub const GL_EDGE_FLAG_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808C, .hex);
pub const GL_VERTEX_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808E, .hex);
pub const GL_NORMAL_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x808F, .hex);
pub const GL_COLOR_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8090, .hex);
pub const GL_INDEX_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8091, .hex);
pub const GL_TEXTURE_COORD_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8092, .hex);
pub const GL_EDGE_FLAG_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8093, .hex);
pub const GL_V2F = @as(c_int, 0x2A20);
pub const GL_V3F = @as(c_int, 0x2A21);
pub const GL_C4UB_V2F = @as(c_int, 0x2A22);
pub const GL_C4UB_V3F = @as(c_int, 0x2A23);
pub const GL_C3F_V3F = @as(c_int, 0x2A24);
pub const GL_N3F_V3F = @as(c_int, 0x2A25);
pub const GL_C4F_N3F_V3F = @as(c_int, 0x2A26);
pub const GL_T2F_V3F = @as(c_int, 0x2A27);
pub const GL_T4F_V4F = @as(c_int, 0x2A28);
pub const GL_T2F_C4UB_V3F = @as(c_int, 0x2A29);
pub const GL_T2F_C3F_V3F = @as(c_int, 0x2A2A);
pub const GL_T2F_N3F_V3F = @as(c_int, 0x2A2B);
pub const GL_T2F_C4F_N3F_V3F = @as(c_int, 0x2A2C);
pub const GL_T4F_C4F_N3F_V4F = @as(c_int, 0x2A2D);
pub const GL_BGR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E0, .hex);
pub const GL_BGRA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E1, .hex);
pub const GL_CONSTANT_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8001, .hex);
pub const GL_ONE_MINUS_CONSTANT_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8002, .hex);
pub const GL_CONSTANT_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8003, .hex);
pub const GL_ONE_MINUS_CONSTANT_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8004, .hex);
pub const GL_BLEND_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8005, .hex);
pub const GL_FUNC_ADD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8006, .hex);
pub const GL_MIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8007, .hex);
pub const GL_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8008, .hex);
pub const GL_BLEND_EQUATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8009, .hex);
pub const GL_BLEND_EQUATION_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x883D, .hex);
pub const GL_FUNC_SUBTRACT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800A, .hex);
pub const GL_FUNC_REVERSE_SUBTRACT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800B, .hex);
pub const GL_COLOR_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B1, .hex);
pub const GL_COLOR_MATRIX_STACK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B2, .hex);
pub const GL_MAX_COLOR_MATRIX_STACK_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B3, .hex);
pub const GL_POST_COLOR_MATRIX_RED_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B4, .hex);
pub const GL_POST_COLOR_MATRIX_GREEN_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B5, .hex);
pub const GL_POST_COLOR_MATRIX_BLUE_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B6, .hex);
pub const GL_POST_COLOR_MATRIX_ALPHA_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B7, .hex);
pub const GL_POST_COLOR_MATRIX_RED_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B8, .hex);
pub const GL_POST_COLOR_MATRIX_GREEN_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80B9, .hex);
pub const GL_POST_COLOR_MATRIX_BLUE_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BA, .hex);
pub const GL_POST_COLOR_MATRIX_ALPHA_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80BB, .hex);
pub const GL_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D0, .hex);
pub const GL_POST_CONVOLUTION_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D1, .hex);
pub const GL_POST_COLOR_MATRIX_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D2, .hex);
pub const GL_PROXY_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D3, .hex);
pub const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D4, .hex);
pub const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D5, .hex);
pub const GL_COLOR_TABLE_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D6, .hex);
pub const GL_COLOR_TABLE_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D7, .hex);
pub const GL_COLOR_TABLE_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D8, .hex);
pub const GL_COLOR_TABLE_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80D9, .hex);
pub const GL_COLOR_TABLE_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DA, .hex);
pub const GL_COLOR_TABLE_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DB, .hex);
pub const GL_COLOR_TABLE_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DC, .hex);
pub const GL_COLOR_TABLE_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DD, .hex);
pub const GL_COLOR_TABLE_LUMINANCE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DE, .hex);
pub const GL_COLOR_TABLE_INTENSITY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80DF, .hex);
pub const GL_CONVOLUTION_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8010, .hex);
pub const GL_CONVOLUTION_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8011, .hex);
pub const GL_SEPARABLE_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8012, .hex);
pub const GL_CONVOLUTION_BORDER_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8013, .hex);
pub const GL_CONVOLUTION_FILTER_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8014, .hex);
pub const GL_CONVOLUTION_FILTER_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8015, .hex);
pub const GL_REDUCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8016, .hex);
pub const GL_CONVOLUTION_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8017, .hex);
pub const GL_CONVOLUTION_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8018, .hex);
pub const GL_CONVOLUTION_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8019, .hex);
pub const GL_MAX_CONVOLUTION_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801A, .hex);
pub const GL_MAX_CONVOLUTION_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801B, .hex);
pub const GL_POST_CONVOLUTION_RED_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801C, .hex);
pub const GL_POST_CONVOLUTION_GREEN_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801D, .hex);
pub const GL_POST_CONVOLUTION_BLUE_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801E, .hex);
pub const GL_POST_CONVOLUTION_ALPHA_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x801F, .hex);
pub const GL_POST_CONVOLUTION_RED_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8020, .hex);
pub const GL_POST_CONVOLUTION_GREEN_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8021, .hex);
pub const GL_POST_CONVOLUTION_BLUE_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8022, .hex);
pub const GL_POST_CONVOLUTION_ALPHA_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8023, .hex);
pub const GL_CONSTANT_BORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8151, .hex);
pub const GL_REPLICATE_BORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8153, .hex);
pub const GL_CONVOLUTION_BORDER_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8154, .hex);
pub const GL_MAX_ELEMENTS_VERTICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E8, .hex);
pub const GL_MAX_ELEMENTS_INDICES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80E9, .hex);
pub const GL_HISTOGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8024, .hex);
pub const GL_PROXY_HISTOGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8025, .hex);
pub const GL_HISTOGRAM_WIDTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8026, .hex);
pub const GL_HISTOGRAM_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8027, .hex);
pub const GL_HISTOGRAM_RED_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8028, .hex);
pub const GL_HISTOGRAM_GREEN_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8029, .hex);
pub const GL_HISTOGRAM_BLUE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802A, .hex);
pub const GL_HISTOGRAM_ALPHA_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802B, .hex);
pub const GL_HISTOGRAM_LUMINANCE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802C, .hex);
pub const GL_HISTOGRAM_SINK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802D, .hex);
pub const GL_MINMAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802E, .hex);
pub const GL_MINMAX_FORMAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x802F, .hex);
pub const GL_MINMAX_SINK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8030, .hex);
pub const GL_TABLE_TOO_LARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8031, .hex);
pub const GL_UNSIGNED_BYTE_3_3_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8032, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8033, .hex);
pub const GL_UNSIGNED_SHORT_5_5_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8034, .hex);
pub const GL_UNSIGNED_INT_8_8_8_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8035, .hex);
pub const GL_UNSIGNED_INT_10_10_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8036, .hex);
pub const GL_UNSIGNED_BYTE_2_3_3_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8362, .hex);
pub const GL_UNSIGNED_SHORT_5_6_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8363, .hex);
pub const GL_UNSIGNED_SHORT_5_6_5_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8364, .hex);
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8365, .hex);
pub const GL_UNSIGNED_SHORT_1_5_5_5_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8366, .hex);
pub const GL_UNSIGNED_INT_8_8_8_8_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8367, .hex);
pub const GL_UNSIGNED_INT_2_10_10_10_REV = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8368, .hex);
pub const GL_RESCALE_NORMAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x803A, .hex);
pub const GL_LIGHT_MODEL_COLOR_CONTROL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F8, .hex);
pub const GL_SINGLE_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81F9, .hex);
pub const GL_SEPARATE_SPECULAR_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81FA, .hex);
pub const GL_PACK_SKIP_IMAGES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806B, .hex);
pub const GL_PACK_IMAGE_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806C, .hex);
pub const GL_UNPACK_SKIP_IMAGES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806D, .hex);
pub const GL_UNPACK_IMAGE_HEIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806E, .hex);
pub const GL_TEXTURE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x806F, .hex);
pub const GL_PROXY_TEXTURE_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8070, .hex);
pub const GL_TEXTURE_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8071, .hex);
pub const GL_TEXTURE_WRAP_R = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8072, .hex);
pub const GL_MAX_3D_TEXTURE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8073, .hex);
pub const GL_CLAMP_TO_EDGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812F, .hex);
pub const GL_CLAMP_TO_BORDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x812D, .hex);
pub const GL_TEXTURE_MIN_LOD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813A, .hex);
pub const GL_TEXTURE_MAX_LOD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813B, .hex);
pub const GL_TEXTURE_BASE_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813C, .hex);
pub const GL_TEXTURE_MAX_LEVEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x813D, .hex);
pub const GL_SMOOTH_POINT_SIZE_RANGE = @as(c_int, 0x0B12);
pub const GL_SMOOTH_POINT_SIZE_GRANULARITY = @as(c_int, 0x0B13);
pub const GL_SMOOTH_LINE_WIDTH_RANGE = @as(c_int, 0x0B22);
pub const GL_SMOOTH_LINE_WIDTH_GRANULARITY = @as(c_int, 0x0B23);
pub const GL_ALIASED_POINT_SIZE_RANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x846D, .hex);
pub const GL_ALIASED_LINE_WIDTH_RANGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x846E, .hex);
pub const GL_TEXTURE0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C0, .hex);
pub const GL_TEXTURE1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C1, .hex);
pub const GL_TEXTURE2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C2, .hex);
pub const GL_TEXTURE3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C3, .hex);
pub const GL_TEXTURE4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C4, .hex);
pub const GL_TEXTURE5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C5, .hex);
pub const GL_TEXTURE6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C6, .hex);
pub const GL_TEXTURE7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C7, .hex);
pub const GL_TEXTURE8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C8, .hex);
pub const GL_TEXTURE9 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84C9, .hex);
pub const GL_TEXTURE10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CA, .hex);
pub const GL_TEXTURE11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CB, .hex);
pub const GL_TEXTURE12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CC, .hex);
pub const GL_TEXTURE13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CD, .hex);
pub const GL_TEXTURE14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CE, .hex);
pub const GL_TEXTURE15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84CF, .hex);
pub const GL_TEXTURE16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D0, .hex);
pub const GL_TEXTURE17 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D1, .hex);
pub const GL_TEXTURE18 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D2, .hex);
pub const GL_TEXTURE19 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D3, .hex);
pub const GL_TEXTURE20 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D4, .hex);
pub const GL_TEXTURE21 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D5, .hex);
pub const GL_TEXTURE22 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D6, .hex);
pub const GL_TEXTURE23 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D7, .hex);
pub const GL_TEXTURE24 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D8, .hex);
pub const GL_TEXTURE25 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84D9, .hex);
pub const GL_TEXTURE26 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DA, .hex);
pub const GL_TEXTURE27 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DB, .hex);
pub const GL_TEXTURE28 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DC, .hex);
pub const GL_TEXTURE29 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DD, .hex);
pub const GL_TEXTURE30 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DE, .hex);
pub const GL_TEXTURE31 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84DF, .hex);
pub const GL_ACTIVE_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E0, .hex);
pub const GL_CLIENT_ACTIVE_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E1, .hex);
pub const GL_MAX_TEXTURE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E2, .hex);
pub const GL_COMBINE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8570, .hex);
pub const GL_COMBINE_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8571, .hex);
pub const GL_COMBINE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8572, .hex);
pub const GL_RGB_SCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8573, .hex);
pub const GL_ADD_SIGNED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8574, .hex);
pub const GL_INTERPOLATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8575, .hex);
pub const GL_CONSTANT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8576, .hex);
pub const GL_PRIMARY_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8577, .hex);
pub const GL_PREVIOUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8578, .hex);
pub const GL_SUBTRACT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E7, .hex);
pub const GL_SRC0_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8580, .hex);
pub const GL_SRC1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8581, .hex);
pub const GL_SRC2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8582, .hex);
pub const GL_SRC0_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8588, .hex);
pub const GL_SRC1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SRC2_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858A, .hex);
pub const GL_SOURCE0_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8580, .hex);
pub const GL_SOURCE1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8581, .hex);
pub const GL_SOURCE2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8582, .hex);
pub const GL_SOURCE0_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8588, .hex);
pub const GL_SOURCE1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8589, .hex);
pub const GL_SOURCE2_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x858A, .hex);
pub const GL_OPERAND0_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8590, .hex);
pub const GL_OPERAND1_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8591, .hex);
pub const GL_OPERAND2_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8592, .hex);
pub const GL_OPERAND0_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8598, .hex);
pub const GL_OPERAND1_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8599, .hex);
pub const GL_OPERAND2_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x859A, .hex);
pub const GL_DOT3_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AE, .hex);
pub const GL_DOT3_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86AF, .hex);
pub const GL_TRANSPOSE_MODELVIEW_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E3, .hex);
pub const GL_TRANSPOSE_PROJECTION_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E4, .hex);
pub const GL_TRANSPOSE_TEXTURE_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E5, .hex);
pub const GL_TRANSPOSE_COLOR_MATRIX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E6, .hex);
pub const GL_NORMAL_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8511, .hex);
pub const GL_REFLECTION_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8512, .hex);
pub const GL_TEXTURE_CUBE_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8513, .hex);
pub const GL_TEXTURE_BINDING_CUBE_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8514, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8515, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8516, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8517, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8518, .hex);
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8519, .hex);
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851A, .hex);
pub const GL_PROXY_TEXTURE_CUBE_MAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851B, .hex);
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x851C, .hex);
pub const GL_COMPRESSED_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84E9, .hex);
pub const GL_COMPRESSED_LUMINANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EA, .hex);
pub const GL_COMPRESSED_LUMINANCE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EB, .hex);
pub const GL_COMPRESSED_INTENSITY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EC, .hex);
pub const GL_COMPRESSED_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84ED, .hex);
pub const GL_COMPRESSED_RGBA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EE, .hex);
pub const GL_TEXTURE_COMPRESSION_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84EF, .hex);
pub const GL_TEXTURE_COMPRESSED_IMAGE_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A0, .hex);
pub const GL_TEXTURE_COMPRESSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A1, .hex);
pub const GL_NUM_COMPRESSED_TEXTURE_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A2, .hex);
pub const GL_COMPRESSED_TEXTURE_FORMATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x86A3, .hex);
pub const GL_MULTISAMPLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809D, .hex);
pub const GL_SAMPLE_ALPHA_TO_COVERAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809E, .hex);
pub const GL_SAMPLE_ALPHA_TO_ONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x809F, .hex);
pub const GL_SAMPLE_COVERAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A0, .hex);
pub const GL_SAMPLE_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A8, .hex);
pub const GL_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80A9, .hex);
pub const GL_SAMPLE_COVERAGE_VALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AA, .hex);
pub const GL_SAMPLE_COVERAGE_INVERT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80AB, .hex);
pub const GL_MULTISAMPLE_BIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const GL_DEPTH_COMPONENT16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A5, .hex);
pub const GL_DEPTH_COMPONENT24 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A6, .hex);
pub const GL_DEPTH_COMPONENT32 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x81A7, .hex);
pub const GL_TEXTURE_DEPTH_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884A, .hex);
pub const GL_DEPTH_TEXTURE_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884B, .hex);
pub const GL_TEXTURE_COMPARE_MODE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884C, .hex);
pub const GL_TEXTURE_COMPARE_FUNC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884D, .hex);
pub const GL_COMPARE_R_TO_TEXTURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x884E, .hex);
pub const GL_QUERY_COUNTER_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8864, .hex);
pub const GL_CURRENT_QUERY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8865, .hex);
pub const GL_QUERY_RESULT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8866, .hex);
pub const GL_QUERY_RESULT_AVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8867, .hex);
pub const GL_SAMPLES_PASSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8914, .hex);
pub const GL_FOG_COORD_SRC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8450, .hex);
pub const GL_FOG_COORD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8451, .hex);
pub const GL_FRAGMENT_DEPTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8452, .hex);
pub const GL_CURRENT_FOG_COORD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8453, .hex);
pub const GL_FOG_COORD_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8454, .hex);
pub const GL_FOG_COORD_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8455, .hex);
pub const GL_FOG_COORD_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8456, .hex);
pub const GL_FOG_COORD_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8457, .hex);
pub const GL_FOG_COORDINATE_SOURCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8450, .hex);
pub const GL_FOG_COORDINATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8451, .hex);
pub const GL_CURRENT_FOG_COORDINATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8453, .hex);
pub const GL_FOG_COORDINATE_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8454, .hex);
pub const GL_FOG_COORDINATE_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8455, .hex);
pub const GL_FOG_COORDINATE_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8456, .hex);
pub const GL_FOG_COORDINATE_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8457, .hex);
pub const GL_COLOR_SUM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8458, .hex);
pub const GL_CURRENT_SECONDARY_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8459, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845A, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845B, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845C, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845D, .hex);
pub const GL_SECONDARY_COLOR_ARRAY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845E, .hex);
pub const GL_POINT_SIZE_MIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8126, .hex);
pub const GL_POINT_SIZE_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8127, .hex);
pub const GL_POINT_FADE_THRESHOLD_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8128, .hex);
pub const GL_POINT_DISTANCE_ATTENUATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8129, .hex);
pub const GL_BLEND_DST_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C8, .hex);
pub const GL_BLEND_SRC_RGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80C9, .hex);
pub const GL_BLEND_DST_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CA, .hex);
pub const GL_BLEND_SRC_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80CB, .hex);
pub const GL_GENERATE_MIPMAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8191, .hex);
pub const GL_GENERATE_MIPMAP_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8192, .hex);
pub const GL_INCR_WRAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8507, .hex);
pub const GL_DECR_WRAP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8508, .hex);
pub const GL_MIRRORED_REPEAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8370, .hex);
pub const GL_MAX_TEXTURE_LOD_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x84FD, .hex);
pub const GL_TEXTURE_FILTER_CONTROL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8500, .hex);
pub const GL_TEXTURE_LOD_BIAS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8501, .hex);
pub const GL_ARRAY_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8892, .hex);
pub const GL_ELEMENT_ARRAY_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8893, .hex);
pub const GL_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8894, .hex);
pub const GL_ELEMENT_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8895, .hex);
pub const GL_VERTEX_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8896, .hex);
pub const GL_NORMAL_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8897, .hex);
pub const GL_COLOR_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8898, .hex);
pub const GL_INDEX_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8899, .hex);
pub const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889A, .hex);
pub const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889B, .hex);
pub const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889C, .hex);
pub const GL_FOG_COORD_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889D, .hex);
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889E, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889F, .hex);
pub const GL_STREAM_DRAW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E0, .hex);
pub const GL_STREAM_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E1, .hex);
pub const GL_STREAM_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E2, .hex);
pub const GL_STATIC_DRAW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E4, .hex);
pub const GL_STATIC_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E5, .hex);
pub const GL_STATIC_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E6, .hex);
pub const GL_DYNAMIC_DRAW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E8, .hex);
pub const GL_DYNAMIC_READ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88E9, .hex);
pub const GL_DYNAMIC_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EA, .hex);
pub const GL_READ_ONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B8, .hex);
pub const GL_WRITE_ONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88B9, .hex);
pub const GL_READ_WRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BA, .hex);
pub const GL_BUFFER_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8764, .hex);
pub const GL_BUFFER_USAGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8765, .hex);
pub const GL_BUFFER_ACCESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BB, .hex);
pub const GL_BUFFER_MAPPED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BC, .hex);
pub const GL_BUFFER_MAP_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88BD, .hex);
pub const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x889D, .hex);
pub const GL_CURRENT_PROGRAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8D, .hex);
pub const GL_SHADER_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4F, .hex);
pub const GL_DELETE_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B80, .hex);
pub const GL_COMPILE_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B81, .hex);
pub const GL_LINK_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B82, .hex);
pub const GL_VALIDATE_STATUS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B83, .hex);
pub const GL_INFO_LOG_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B84, .hex);
pub const GL_ATTACHED_SHADERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B85, .hex);
pub const GL_ACTIVE_UNIFORMS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B86, .hex);
pub const GL_ACTIVE_UNIFORM_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B87, .hex);
pub const GL_SHADER_SOURCE_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B88, .hex);
pub const GL_FLOAT_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B50, .hex);
pub const GL_FLOAT_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B51, .hex);
pub const GL_FLOAT_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B52, .hex);
pub const GL_INT_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B53, .hex);
pub const GL_INT_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B54, .hex);
pub const GL_INT_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B55, .hex);
pub const GL_BOOL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B56, .hex);
pub const GL_BOOL_VEC2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B57, .hex);
pub const GL_BOOL_VEC3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B58, .hex);
pub const GL_BOOL_VEC4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B59, .hex);
pub const GL_FLOAT_MAT2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5A, .hex);
pub const GL_FLOAT_MAT3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5B, .hex);
pub const GL_FLOAT_MAT4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5C, .hex);
pub const GL_SAMPLER_1D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5D, .hex);
pub const GL_SAMPLER_2D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5E, .hex);
pub const GL_SAMPLER_3D = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B5F, .hex);
pub const GL_SAMPLER_CUBE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B60, .hex);
pub const GL_SAMPLER_1D_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B61, .hex);
pub const GL_SAMPLER_2D_SHADOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B62, .hex);
pub const GL_SHADING_LANGUAGE_VERSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8C, .hex);
pub const GL_VERTEX_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B31, .hex);
pub const GL_MAX_VERTEX_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4A, .hex);
pub const GL_MAX_VARYING_FLOATS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4B, .hex);
pub const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4C, .hex);
pub const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B4D, .hex);
pub const GL_ACTIVE_ATTRIBUTES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B89, .hex);
pub const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8A, .hex);
pub const GL_FRAGMENT_SHADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B30, .hex);
pub const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B49, .hex);
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B8B, .hex);
pub const GL_MAX_VERTEX_ATTRIBS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8869, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_ENABLED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8622, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8623, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_STRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8624, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8625, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x886A, .hex);
pub const GL_CURRENT_VERTEX_ATTRIB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8626, .hex);
pub const GL_VERTEX_ATTRIB_ARRAY_POINTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8645, .hex);
pub const GL_VERTEX_PROGRAM_POINT_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8642, .hex);
pub const GL_VERTEX_PROGRAM_TWO_SIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8643, .hex);
pub const GL_MAX_TEXTURE_COORDS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8871, .hex);
pub const GL_MAX_TEXTURE_IMAGE_UNITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8872, .hex);
pub const GL_MAX_DRAW_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8824, .hex);
pub const GL_DRAW_BUFFER0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8825, .hex);
pub const GL_DRAW_BUFFER1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8826, .hex);
pub const GL_DRAW_BUFFER2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8827, .hex);
pub const GL_DRAW_BUFFER3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8828, .hex);
pub const GL_DRAW_BUFFER4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8829, .hex);
pub const GL_DRAW_BUFFER5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882A, .hex);
pub const GL_DRAW_BUFFER6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882B, .hex);
pub const GL_DRAW_BUFFER7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882C, .hex);
pub const GL_DRAW_BUFFER8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882D, .hex);
pub const GL_DRAW_BUFFER9 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882E, .hex);
pub const GL_DRAW_BUFFER10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x882F, .hex);
pub const GL_DRAW_BUFFER11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8830, .hex);
pub const GL_DRAW_BUFFER12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8831, .hex);
pub const GL_DRAW_BUFFER13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8832, .hex);
pub const GL_DRAW_BUFFER14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8833, .hex);
pub const GL_DRAW_BUFFER15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8834, .hex);
pub const GL_POINT_SPRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8861, .hex);
pub const GL_COORD_REPLACE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8862, .hex);
pub const GL_POINT_SPRITE_COORD_ORIGIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA0, .hex);
pub const GL_LOWER_LEFT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA1, .hex);
pub const GL_UPPER_LEFT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA2, .hex);
pub const GL_STENCIL_BACK_FUNC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8800, .hex);
pub const GL_STENCIL_BACK_VALUE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA4, .hex);
pub const GL_STENCIL_BACK_REF = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA3, .hex);
pub const GL_STENCIL_BACK_FAIL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8801, .hex);
pub const GL_STENCIL_BACK_PASS_DEPTH_FAIL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8802, .hex);
pub const GL_STENCIL_BACK_PASS_DEPTH_PASS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8803, .hex);
pub const GL_STENCIL_BACK_WRITEMASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8CA5, .hex);
pub const GL_CURRENT_RASTER_SECONDARY_COLOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x845F, .hex);
pub const GL_PIXEL_PACK_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EB, .hex);
pub const GL_PIXEL_UNPACK_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EC, .hex);
pub const GL_PIXEL_PACK_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88ED, .hex);
pub const GL_PIXEL_UNPACK_BUFFER_BINDING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x88EF, .hex);
pub const GL_FLOAT_MAT2x3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B65, .hex);
pub const GL_FLOAT_MAT2x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B66, .hex);
pub const GL_FLOAT_MAT3x2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B67, .hex);
pub const GL_FLOAT_MAT3x4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B68, .hex);
pub const GL_FLOAT_MAT4x2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B69, .hex);
pub const GL_FLOAT_MAT4x3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8B6A, .hex);
pub const GL_SRGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C40, .hex);
pub const GL_SRGB8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C41, .hex);
pub const GL_SRGB_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C42, .hex);
pub const GL_SRGB8_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C43, .hex);
pub const GL_SLUMINANCE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C44, .hex);
pub const GL_SLUMINANCE8_ALPHA8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C45, .hex);
pub const GL_SLUMINANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C46, .hex);
pub const GL_SLUMINANCE8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C47, .hex);
pub const GL_COMPRESSED_SRGB = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C48, .hex);
pub const GL_COMPRESSED_SRGB_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C49, .hex);
pub const GL_COMPRESSED_SLUMINANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4A, .hex);
pub const GL_COMPRESSED_SLUMINANCE_ALPHA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8C4B, .hex);
pub const GLFWAPI = "";
pub const GLFW_VERSION_MAJOR = @as(c_int, 3);
pub const GLFW_VERSION_MINOR = @as(c_int, 3);
pub const GLFW_VERSION_REVISION = @as(c_int, 8);
pub const GLFW_TRUE = @as(c_int, 1);
pub const GLFW_FALSE = @as(c_int, 0);
pub const GLFW_RELEASE = @as(c_int, 0);
pub const GLFW_PRESS = @as(c_int, 1);
pub const GLFW_REPEAT = @as(c_int, 2);
pub const GLFW_HAT_CENTERED = @as(c_int, 0);
pub const GLFW_HAT_UP = @as(c_int, 1);
pub const GLFW_HAT_RIGHT = @as(c_int, 2);
pub const GLFW_HAT_DOWN = @as(c_int, 4);
pub const GLFW_HAT_LEFT = @as(c_int, 8);
pub const GLFW_HAT_RIGHT_UP = GLFW_HAT_RIGHT | GLFW_HAT_UP;
pub const GLFW_HAT_RIGHT_DOWN = GLFW_HAT_RIGHT | GLFW_HAT_DOWN;
pub const GLFW_HAT_LEFT_UP = GLFW_HAT_LEFT | GLFW_HAT_UP;
pub const GLFW_HAT_LEFT_DOWN = GLFW_HAT_LEFT | GLFW_HAT_DOWN;
pub const GLFW_KEY_UNKNOWN = -@as(c_int, 1);
pub const GLFW_KEY_SPACE = @as(c_int, 32);
pub const GLFW_KEY_APOSTROPHE = @as(c_int, 39);
pub const GLFW_KEY_COMMA = @as(c_int, 44);
pub const GLFW_KEY_MINUS = @as(c_int, 45);
pub const GLFW_KEY_PERIOD = @as(c_int, 46);
pub const GLFW_KEY_SLASH = @as(c_int, 47);
pub const GLFW_KEY_0 = @as(c_int, 48);
pub const GLFW_KEY_1 = @as(c_int, 49);
pub const GLFW_KEY_2 = @as(c_int, 50);
pub const GLFW_KEY_3 = @as(c_int, 51);
pub const GLFW_KEY_4 = @as(c_int, 52);
pub const GLFW_KEY_5 = @as(c_int, 53);
pub const GLFW_KEY_6 = @as(c_int, 54);
pub const GLFW_KEY_7 = @as(c_int, 55);
pub const GLFW_KEY_8 = @as(c_int, 56);
pub const GLFW_KEY_9 = @as(c_int, 57);
pub const GLFW_KEY_SEMICOLON = @as(c_int, 59);
pub const GLFW_KEY_EQUAL = @as(c_int, 61);
pub const GLFW_KEY_A = @as(c_int, 65);
pub const GLFW_KEY_B = @as(c_int, 66);
pub const GLFW_KEY_C = @as(c_int, 67);
pub const GLFW_KEY_D = @as(c_int, 68);
pub const GLFW_KEY_E = @as(c_int, 69);
pub const GLFW_KEY_F = @as(c_int, 70);
pub const GLFW_KEY_G = @as(c_int, 71);
pub const GLFW_KEY_H = @as(c_int, 72);
pub const GLFW_KEY_I = @as(c_int, 73);
pub const GLFW_KEY_J = @as(c_int, 74);
pub const GLFW_KEY_K = @as(c_int, 75);
pub const GLFW_KEY_L = @as(c_int, 76);
pub const GLFW_KEY_M = @as(c_int, 77);
pub const GLFW_KEY_N = @as(c_int, 78);
pub const GLFW_KEY_O = @as(c_int, 79);
pub const GLFW_KEY_P = @as(c_int, 80);
pub const GLFW_KEY_Q = @as(c_int, 81);
pub const GLFW_KEY_R = @as(c_int, 82);
pub const GLFW_KEY_S = @as(c_int, 83);
pub const GLFW_KEY_T = @as(c_int, 84);
pub const GLFW_KEY_U = @as(c_int, 85);
pub const GLFW_KEY_V = @as(c_int, 86);
pub const GLFW_KEY_W = @as(c_int, 87);
pub const GLFW_KEY_X = @as(c_int, 88);
pub const GLFW_KEY_Y = @as(c_int, 89);
pub const GLFW_KEY_Z = @as(c_int, 90);
pub const GLFW_KEY_LEFT_BRACKET = @as(c_int, 91);
pub const GLFW_KEY_BACKSLASH = @as(c_int, 92);
pub const GLFW_KEY_RIGHT_BRACKET = @as(c_int, 93);
pub const GLFW_KEY_GRAVE_ACCENT = @as(c_int, 96);
pub const GLFW_KEY_WORLD_1 = @as(c_int, 161);
pub const GLFW_KEY_WORLD_2 = @as(c_int, 162);
pub const GLFW_KEY_ESCAPE = @as(c_int, 256);
pub const GLFW_KEY_ENTER = @as(c_int, 257);
pub const GLFW_KEY_TAB = @as(c_int, 258);
pub const GLFW_KEY_BACKSPACE = @as(c_int, 259);
pub const GLFW_KEY_INSERT = @as(c_int, 260);
pub const GLFW_KEY_DELETE = @as(c_int, 261);
pub const GLFW_KEY_RIGHT = @as(c_int, 262);
pub const GLFW_KEY_LEFT = @as(c_int, 263);
pub const GLFW_KEY_DOWN = @as(c_int, 264);
pub const GLFW_KEY_UP = @as(c_int, 265);
pub const GLFW_KEY_PAGE_UP = @as(c_int, 266);
pub const GLFW_KEY_PAGE_DOWN = @as(c_int, 267);
pub const GLFW_KEY_HOME = @as(c_int, 268);
pub const GLFW_KEY_END = @as(c_int, 269);
pub const GLFW_KEY_CAPS_LOCK = @as(c_int, 280);
pub const GLFW_KEY_SCROLL_LOCK = @as(c_int, 281);
pub const GLFW_KEY_NUM_LOCK = @as(c_int, 282);
pub const GLFW_KEY_PRINT_SCREEN = @as(c_int, 283);
pub const GLFW_KEY_PAUSE = @as(c_int, 284);
pub const GLFW_KEY_F1 = @as(c_int, 290);
pub const GLFW_KEY_F2 = @as(c_int, 291);
pub const GLFW_KEY_F3 = @as(c_int, 292);
pub const GLFW_KEY_F4 = @as(c_int, 293);
pub const GLFW_KEY_F5 = @as(c_int, 294);
pub const GLFW_KEY_F6 = @as(c_int, 295);
pub const GLFW_KEY_F7 = @as(c_int, 296);
pub const GLFW_KEY_F8 = @as(c_int, 297);
pub const GLFW_KEY_F9 = @as(c_int, 298);
pub const GLFW_KEY_F10 = @as(c_int, 299);
pub const GLFW_KEY_F11 = @as(c_int, 300);
pub const GLFW_KEY_F12 = @as(c_int, 301);
pub const GLFW_KEY_F13 = @as(c_int, 302);
pub const GLFW_KEY_F14 = @as(c_int, 303);
pub const GLFW_KEY_F15 = @as(c_int, 304);
pub const GLFW_KEY_F16 = @as(c_int, 305);
pub const GLFW_KEY_F17 = @as(c_int, 306);
pub const GLFW_KEY_F18 = @as(c_int, 307);
pub const GLFW_KEY_F19 = @as(c_int, 308);
pub const GLFW_KEY_F20 = @as(c_int, 309);
pub const GLFW_KEY_F21 = @as(c_int, 310);
pub const GLFW_KEY_F22 = @as(c_int, 311);
pub const GLFW_KEY_F23 = @as(c_int, 312);
pub const GLFW_KEY_F24 = @as(c_int, 313);
pub const GLFW_KEY_F25 = @as(c_int, 314);
pub const GLFW_KEY_KP_0 = @as(c_int, 320);
pub const GLFW_KEY_KP_1 = @as(c_int, 321);
pub const GLFW_KEY_KP_2 = @as(c_int, 322);
pub const GLFW_KEY_KP_3 = @as(c_int, 323);
pub const GLFW_KEY_KP_4 = @as(c_int, 324);
pub const GLFW_KEY_KP_5 = @as(c_int, 325);
pub const GLFW_KEY_KP_6 = @as(c_int, 326);
pub const GLFW_KEY_KP_7 = @as(c_int, 327);
pub const GLFW_KEY_KP_8 = @as(c_int, 328);
pub const GLFW_KEY_KP_9 = @as(c_int, 329);
pub const GLFW_KEY_KP_DECIMAL = @as(c_int, 330);
pub const GLFW_KEY_KP_DIVIDE = @as(c_int, 331);
pub const GLFW_KEY_KP_MULTIPLY = @as(c_int, 332);
pub const GLFW_KEY_KP_SUBTRACT = @as(c_int, 333);
pub const GLFW_KEY_KP_ADD = @as(c_int, 334);
pub const GLFW_KEY_KP_ENTER = @as(c_int, 335);
pub const GLFW_KEY_KP_EQUAL = @as(c_int, 336);
pub const GLFW_KEY_LEFT_SHIFT = @as(c_int, 340);
pub const GLFW_KEY_LEFT_CONTROL = @as(c_int, 341);
pub const GLFW_KEY_LEFT_ALT = @as(c_int, 342);
pub const GLFW_KEY_LEFT_SUPER = @as(c_int, 343);
pub const GLFW_KEY_RIGHT_SHIFT = @as(c_int, 344);
pub const GLFW_KEY_RIGHT_CONTROL = @as(c_int, 345);
pub const GLFW_KEY_RIGHT_ALT = @as(c_int, 346);
pub const GLFW_KEY_RIGHT_SUPER = @as(c_int, 347);
pub const GLFW_KEY_MENU = @as(c_int, 348);
pub const GLFW_KEY_LAST = GLFW_KEY_MENU;
pub const GLFW_MOD_SHIFT = @as(c_int, 0x0001);
pub const GLFW_MOD_CONTROL = @as(c_int, 0x0002);
pub const GLFW_MOD_ALT = @as(c_int, 0x0004);
pub const GLFW_MOD_SUPER = @as(c_int, 0x0008);
pub const GLFW_MOD_CAPS_LOCK = @as(c_int, 0x0010);
pub const GLFW_MOD_NUM_LOCK = @as(c_int, 0x0020);
pub const GLFW_MOUSE_BUTTON_1 = @as(c_int, 0);
pub const GLFW_MOUSE_BUTTON_2 = @as(c_int, 1);
pub const GLFW_MOUSE_BUTTON_3 = @as(c_int, 2);
pub const GLFW_MOUSE_BUTTON_4 = @as(c_int, 3);
pub const GLFW_MOUSE_BUTTON_5 = @as(c_int, 4);
pub const GLFW_MOUSE_BUTTON_6 = @as(c_int, 5);
pub const GLFW_MOUSE_BUTTON_7 = @as(c_int, 6);
pub const GLFW_MOUSE_BUTTON_8 = @as(c_int, 7);
pub const GLFW_MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_8;
pub const GLFW_MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_1;
pub const GLFW_MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_2;
pub const GLFW_MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_3;
pub const GLFW_JOYSTICK_1 = @as(c_int, 0);
pub const GLFW_JOYSTICK_2 = @as(c_int, 1);
pub const GLFW_JOYSTICK_3 = @as(c_int, 2);
pub const GLFW_JOYSTICK_4 = @as(c_int, 3);
pub const GLFW_JOYSTICK_5 = @as(c_int, 4);
pub const GLFW_JOYSTICK_6 = @as(c_int, 5);
pub const GLFW_JOYSTICK_7 = @as(c_int, 6);
pub const GLFW_JOYSTICK_8 = @as(c_int, 7);
pub const GLFW_JOYSTICK_9 = @as(c_int, 8);
pub const GLFW_JOYSTICK_10 = @as(c_int, 9);
pub const GLFW_JOYSTICK_11 = @as(c_int, 10);
pub const GLFW_JOYSTICK_12 = @as(c_int, 11);
pub const GLFW_JOYSTICK_13 = @as(c_int, 12);
pub const GLFW_JOYSTICK_14 = @as(c_int, 13);
pub const GLFW_JOYSTICK_15 = @as(c_int, 14);
pub const GLFW_JOYSTICK_16 = @as(c_int, 15);
pub const GLFW_JOYSTICK_LAST = GLFW_JOYSTICK_16;
pub const GLFW_GAMEPAD_BUTTON_A = @as(c_int, 0);
pub const GLFW_GAMEPAD_BUTTON_B = @as(c_int, 1);
pub const GLFW_GAMEPAD_BUTTON_X = @as(c_int, 2);
pub const GLFW_GAMEPAD_BUTTON_Y = @as(c_int, 3);
pub const GLFW_GAMEPAD_BUTTON_LEFT_BUMPER = @as(c_int, 4);
pub const GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER = @as(c_int, 5);
pub const GLFW_GAMEPAD_BUTTON_BACK = @as(c_int, 6);
pub const GLFW_GAMEPAD_BUTTON_START = @as(c_int, 7);
pub const GLFW_GAMEPAD_BUTTON_GUIDE = @as(c_int, 8);
pub const GLFW_GAMEPAD_BUTTON_LEFT_THUMB = @as(c_int, 9);
pub const GLFW_GAMEPAD_BUTTON_RIGHT_THUMB = @as(c_int, 10);
pub const GLFW_GAMEPAD_BUTTON_DPAD_UP = @as(c_int, 11);
pub const GLFW_GAMEPAD_BUTTON_DPAD_RIGHT = @as(c_int, 12);
pub const GLFW_GAMEPAD_BUTTON_DPAD_DOWN = @as(c_int, 13);
pub const GLFW_GAMEPAD_BUTTON_DPAD_LEFT = @as(c_int, 14);
pub const GLFW_GAMEPAD_BUTTON_LAST = GLFW_GAMEPAD_BUTTON_DPAD_LEFT;
pub const GLFW_GAMEPAD_BUTTON_CROSS = GLFW_GAMEPAD_BUTTON_A;
pub const GLFW_GAMEPAD_BUTTON_CIRCLE = GLFW_GAMEPAD_BUTTON_B;
pub const GLFW_GAMEPAD_BUTTON_SQUARE = GLFW_GAMEPAD_BUTTON_X;
pub const GLFW_GAMEPAD_BUTTON_TRIANGLE = GLFW_GAMEPAD_BUTTON_Y;
pub const GLFW_GAMEPAD_AXIS_LEFT_X = @as(c_int, 0);
pub const GLFW_GAMEPAD_AXIS_LEFT_Y = @as(c_int, 1);
pub const GLFW_GAMEPAD_AXIS_RIGHT_X = @as(c_int, 2);
pub const GLFW_GAMEPAD_AXIS_RIGHT_Y = @as(c_int, 3);
pub const GLFW_GAMEPAD_AXIS_LEFT_TRIGGER = @as(c_int, 4);
pub const GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER = @as(c_int, 5);
pub const GLFW_GAMEPAD_AXIS_LAST = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER;
pub const GLFW_NO_ERROR = @as(c_int, 0);
pub const GLFW_NOT_INITIALIZED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010001, .hex);
pub const GLFW_NO_CURRENT_CONTEXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010002, .hex);
pub const GLFW_INVALID_ENUM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010003, .hex);
pub const GLFW_INVALID_VALUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010004, .hex);
pub const GLFW_OUT_OF_MEMORY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010005, .hex);
pub const GLFW_API_UNAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010006, .hex);
pub const GLFW_VERSION_UNAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010007, .hex);
pub const GLFW_PLATFORM_ERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010008, .hex);
pub const GLFW_FORMAT_UNAVAILABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010009, .hex);
pub const GLFW_NO_WINDOW_CONTEXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0001000A, .hex);
pub const GLFW_FOCUSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020001, .hex);
pub const GLFW_ICONIFIED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020002, .hex);
pub const GLFW_RESIZABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020003, .hex);
pub const GLFW_VISIBLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020004, .hex);
pub const GLFW_DECORATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020005, .hex);
pub const GLFW_AUTO_ICONIFY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020006, .hex);
pub const GLFW_FLOATING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020007, .hex);
pub const GLFW_MAXIMIZED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020008, .hex);
pub const GLFW_CENTER_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020009, .hex);
pub const GLFW_TRANSPARENT_FRAMEBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002000A, .hex);
pub const GLFW_HOVERED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002000B, .hex);
pub const GLFW_FOCUS_ON_SHOW = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002000C, .hex);
pub const GLFW_RED_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021001, .hex);
pub const GLFW_GREEN_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021002, .hex);
pub const GLFW_BLUE_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021003, .hex);
pub const GLFW_ALPHA_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021004, .hex);
pub const GLFW_DEPTH_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021005, .hex);
pub const GLFW_STENCIL_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021006, .hex);
pub const GLFW_ACCUM_RED_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021007, .hex);
pub const GLFW_ACCUM_GREEN_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021008, .hex);
pub const GLFW_ACCUM_BLUE_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021009, .hex);
pub const GLFW_ACCUM_ALPHA_BITS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002100A, .hex);
pub const GLFW_AUX_BUFFERS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002100B, .hex);
pub const GLFW_STEREO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002100C, .hex);
pub const GLFW_SAMPLES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002100D, .hex);
pub const GLFW_SRGB_CAPABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002100E, .hex);
pub const GLFW_REFRESH_RATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002100F, .hex);
pub const GLFW_DOUBLEBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00021010, .hex);
pub const GLFW_CLIENT_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022001, .hex);
pub const GLFW_CONTEXT_VERSION_MAJOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022002, .hex);
pub const GLFW_CONTEXT_VERSION_MINOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022003, .hex);
pub const GLFW_CONTEXT_REVISION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022004, .hex);
pub const GLFW_CONTEXT_ROBUSTNESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022005, .hex);
pub const GLFW_OPENGL_FORWARD_COMPAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022006, .hex);
pub const GLFW_OPENGL_DEBUG_CONTEXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022007, .hex);
pub const GLFW_OPENGL_PROFILE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022008, .hex);
pub const GLFW_CONTEXT_RELEASE_BEHAVIOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00022009, .hex);
pub const GLFW_CONTEXT_NO_ERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002200A, .hex);
pub const GLFW_CONTEXT_CREATION_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002200B, .hex);
pub const GLFW_SCALE_TO_MONITOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0002200C, .hex);
pub const GLFW_COCOA_RETINA_FRAMEBUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00023001, .hex);
pub const GLFW_COCOA_FRAME_NAME = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00023002, .hex);
pub const GLFW_COCOA_GRAPHICS_SWITCHING = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00023003, .hex);
pub const GLFW_X11_CLASS_NAME = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00024001, .hex);
pub const GLFW_X11_INSTANCE_NAME = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00024002, .hex);
pub const GLFW_NO_API = @as(c_int, 0);
pub const GLFW_OPENGL_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00030001, .hex);
pub const GLFW_OPENGL_ES_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00030002, .hex);
pub const GLFW_NO_ROBUSTNESS = @as(c_int, 0);
pub const GLFW_NO_RESET_NOTIFICATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00031001, .hex);
pub const GLFW_LOSE_CONTEXT_ON_RESET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00031002, .hex);
pub const GLFW_OPENGL_ANY_PROFILE = @as(c_int, 0);
pub const GLFW_OPENGL_CORE_PROFILE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00032001, .hex);
pub const GLFW_OPENGL_COMPAT_PROFILE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00032002, .hex);
pub const GLFW_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00033001, .hex);
pub const GLFW_STICKY_KEYS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00033002, .hex);
pub const GLFW_STICKY_MOUSE_BUTTONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00033003, .hex);
pub const GLFW_LOCK_KEY_MODS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00033004, .hex);
pub const GLFW_RAW_MOUSE_MOTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00033005, .hex);
pub const GLFW_CURSOR_NORMAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00034001, .hex);
pub const GLFW_CURSOR_HIDDEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00034002, .hex);
pub const GLFW_CURSOR_DISABLED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00034003, .hex);
pub const GLFW_ANY_RELEASE_BEHAVIOR = @as(c_int, 0);
pub const GLFW_RELEASE_BEHAVIOR_FLUSH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00035001, .hex);
pub const GLFW_RELEASE_BEHAVIOR_NONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00035002, .hex);
pub const GLFW_NATIVE_CONTEXT_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036001, .hex);
pub const GLFW_EGL_CONTEXT_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036002, .hex);
pub const GLFW_OSMESA_CONTEXT_API = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036003, .hex);
pub const GLFW_ARROW_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036001, .hex);
pub const GLFW_IBEAM_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036002, .hex);
pub const GLFW_CROSSHAIR_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036003, .hex);
pub const GLFW_HAND_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036004, .hex);
pub const GLFW_HRESIZE_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036005, .hex);
pub const GLFW_VRESIZE_CURSOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00036006, .hex);
pub const GLFW_CONNECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040001, .hex);
pub const GLFW_DISCONNECTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040002, .hex);
pub const GLFW_JOYSTICK_HAT_BUTTONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00050001, .hex);
pub const GLFW_COCOA_CHDIR_RESOURCES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00051001, .hex);
pub const GLFW_COCOA_MENUBAR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00051002, .hex);
pub const GLFW_DONT_CARE = -@as(c_int, 1);
pub const GLAPIENTRY = "";
pub const GLFW_GLAPIENTRY_DEFINED = "";
pub const __darwin_pthread_handler_rec = struct___darwin_pthread_handler_rec;
pub const _opaque_pthread_attr_t = struct__opaque_pthread_attr_t;
pub const _opaque_pthread_cond_t = struct__opaque_pthread_cond_t;
pub const _opaque_pthread_condattr_t = struct__opaque_pthread_condattr_t;
pub const _opaque_pthread_mutex_t = struct__opaque_pthread_mutex_t;
pub const _opaque_pthread_mutexattr_t = struct__opaque_pthread_mutexattr_t;
pub const _opaque_pthread_once_t = struct__opaque_pthread_once_t;
pub const _opaque_pthread_rwlock_t = struct__opaque_pthread_rwlock_t;
pub const _opaque_pthread_rwlockattr_t = struct__opaque_pthread_rwlockattr_t;
pub const _opaque_pthread_t = struct__opaque_pthread_t;
pub const VkBuffer_T = struct_VkBuffer_T;
pub const VkImage_T = struct_VkImage_T;
pub const VkInstance_T = struct_VkInstance_T;
pub const VkPhysicalDevice_T = struct_VkPhysicalDevice_T;
pub const VkDevice_T = struct_VkDevice_T;
pub const VkQueue_T = struct_VkQueue_T;
pub const VkSemaphore_T = struct_VkSemaphore_T;
pub const VkCommandBuffer_T = struct_VkCommandBuffer_T;
pub const VkFence_T = struct_VkFence_T;
pub const VkDeviceMemory_T = struct_VkDeviceMemory_T;
pub const VkEvent_T = struct_VkEvent_T;
pub const VkQueryPool_T = struct_VkQueryPool_T;
pub const VkBufferView_T = struct_VkBufferView_T;
pub const VkImageView_T = struct_VkImageView_T;
pub const VkShaderModule_T = struct_VkShaderModule_T;
pub const VkPipelineCache_T = struct_VkPipelineCache_T;
pub const VkPipelineLayout_T = struct_VkPipelineLayout_T;
pub const VkPipeline_T = struct_VkPipeline_T;
pub const VkRenderPass_T = struct_VkRenderPass_T;
pub const VkDescriptorSetLayout_T = struct_VkDescriptorSetLayout_T;
pub const VkSampler_T = struct_VkSampler_T;
pub const VkDescriptorSet_T = struct_VkDescriptorSet_T;
pub const VkDescriptorPool_T = struct_VkDescriptorPool_T;
pub const VkFramebuffer_T = struct_VkFramebuffer_T;
pub const VkCommandPool_T = struct_VkCommandPool_T;
pub const VkSamplerYcbcrConversion_T = struct_VkSamplerYcbcrConversion_T;
pub const VkDescriptorUpdateTemplate_T = struct_VkDescriptorUpdateTemplate_T;
pub const VkPrivateDataSlot_T = struct_VkPrivateDataSlot_T;
pub const VkSurfaceKHR_T = struct_VkSurfaceKHR_T;
pub const VkSwapchainKHR_T = struct_VkSwapchainKHR_T;
pub const VkDisplayKHR_T = struct_VkDisplayKHR_T;
pub const VkDisplayModeKHR_T = struct_VkDisplayModeKHR_T;
pub const VkVideoSessionKHR_T = struct_VkVideoSessionKHR_T;
pub const VkVideoSessionParametersKHR_T = struct_VkVideoSessionParametersKHR_T;
pub const VkDeferredOperationKHR_T = struct_VkDeferredOperationKHR_T;
pub const VkDebugReportCallbackEXT_T = struct_VkDebugReportCallbackEXT_T;
pub const VkCuModuleNVX_T = struct_VkCuModuleNVX_T;
pub const VkCuFunctionNVX_T = struct_VkCuFunctionNVX_T;
pub const VkDebugUtilsMessengerEXT_T = struct_VkDebugUtilsMessengerEXT_T;
pub const VkValidationCacheEXT_T = struct_VkValidationCacheEXT_T;
pub const VkAccelerationStructureNV_T = struct_VkAccelerationStructureNV_T;
pub const VkPerformanceConfigurationINTEL_T = struct_VkPerformanceConfigurationINTEL_T;
pub const VkIndirectCommandsLayoutNV_T = struct_VkIndirectCommandsLayoutNV_T;
pub const VkCudaModuleNV_T = struct_VkCudaModuleNV_T;
pub const VkCudaFunctionNV_T = struct_VkCudaFunctionNV_T;
pub const VkAccelerationStructureKHR_T = struct_VkAccelerationStructureKHR_T;
pub const VkMicromapEXT_T = struct_VkMicromapEXT_T;
pub const VkOpticalFlowSessionNV_T = struct_VkOpticalFlowSessionNV_T;
pub const VkShaderEXT_T = struct_VkShaderEXT_T;
pub const _OSUnalignedU16 = struct__OSUnalignedU16;
pub const _OSUnalignedU32 = struct__OSUnalignedU32;
pub const _OSUnalignedU64 = struct__OSUnalignedU64;
pub const __sbuf = struct___sbuf;
pub const __sFILEX = struct___sFILEX;
pub const __sFILE = struct___sFILE;
pub const __darwin_arm_exception_state = struct___darwin_arm_exception_state;
pub const __darwin_arm_exception_state64 = struct___darwin_arm_exception_state64;
pub const __darwin_arm_thread_state = struct___darwin_arm_thread_state;
pub const __darwin_arm_thread_state64 = struct___darwin_arm_thread_state64;
pub const __darwin_arm_vfp_state = struct___darwin_arm_vfp_state;
pub const __darwin_arm_neon_state64 = struct___darwin_arm_neon_state64;
pub const __darwin_arm_neon_state = struct___darwin_arm_neon_state;
pub const __arm_pagein_state = struct___arm_pagein_state;
pub const __arm_legacy_debug_state = struct___arm_legacy_debug_state;
pub const __darwin_arm_debug_state32 = struct___darwin_arm_debug_state32;
pub const __darwin_arm_debug_state64 = struct___darwin_arm_debug_state64;
pub const __darwin_arm_cpmu_state64 = struct___darwin_arm_cpmu_state64;
pub const __darwin_mcontext32 = struct___darwin_mcontext32;
pub const __darwin_mcontext64 = struct___darwin_mcontext64;
pub const __darwin_sigaltstack = struct___darwin_sigaltstack;
pub const __darwin_ucontext = struct___darwin_ucontext;
pub const sigval = union_sigval;
pub const sigevent = struct_sigevent;
pub const __siginfo = struct___siginfo;
pub const __sigaction_u = union___sigaction_u;
pub const __sigaction = struct___sigaction;
pub const sigaction = struct_sigaction;
pub const sigvec = struct_sigvec;
pub const sigstack = struct_sigstack;
pub const timeval = struct_timeval;
pub const rusage = struct_rusage;
pub const rusage_info_v0 = struct_rusage_info_v0;
pub const rusage_info_v1 = struct_rusage_info_v1;
pub const rusage_info_v2 = struct_rusage_info_v2;
pub const rusage_info_v3 = struct_rusage_info_v3;
pub const rusage_info_v4 = struct_rusage_info_v4;
pub const rusage_info_v5 = struct_rusage_info_v5;
pub const rusage_info_v6 = struct_rusage_info_v6;
pub const rlimit = struct_rlimit;
pub const proc_rlimit_control_wakeupmon = struct_proc_rlimit_control_wakeupmon;
pub const _malloc_zone_t = struct__malloc_zone_t;
pub const timespec = struct_timespec;
pub const tm = struct_tm;
pub const __float2 = struct___float2;
pub const __double2 = struct___double2;
pub const exception = struct_exception;
pub const _SDL_iconv_t = struct__SDL_iconv_t;
pub const SDL_semaphore = struct_SDL_semaphore;
pub const _SDL_AudioStream = struct__SDL_AudioStream;
pub const _SDL_Joystick = struct__SDL_Joystick;
pub const _SDL_Sensor = struct__SDL_Sensor;
pub const _SDL_GameController = struct__SDL_GameController;
pub const _SDL_Haptic = struct__SDL_Haptic;
pub const SDL_hid_device_ = struct_SDL_hid_device_;
pub const __GLsync = struct___GLsync;
